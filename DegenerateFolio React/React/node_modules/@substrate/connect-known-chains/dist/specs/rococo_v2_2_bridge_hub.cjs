"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/specs/rococo_v2_2_bridge_hub.ts
var rococo_v2_2_bridge_hub_exports = {};
__export(rococo_v2_2_bridge_hub_exports, {
  chainSpec: () => chainSpec
});
module.exports = __toCommonJS(rococo_v2_2_bridge_hub_exports);
var chainSpec = `{
  "name": "Rococo BridgeHub",
  "id": "bridge-hub-rococo",
  "chainType": "Live",
  "bootNodes": [
    "/dns/rococo-bridge-hub-collator-node-0.parity-testnet.parity.io/tcp/30333/p2p/12D3KooWJCFBJmFF65xz5xHeZQRSCf35BxfSEB3RHQFoLza28LWU",
    "/dns/rococo-bridge-hub-collator-node-1.parity-testnet.parity.io/tcp/30333/p2p/12D3KooWJzLd8skcAgA24EcJey7aJAhYctfUxWGjSP5Usk9wbpPZ"
  ],
  "properties": {
    "ss58Format": 42,
    "tokenDecimals": 12,
    "tokenSymbol": "ROC"
  },
  "relay_chain": "rococo_v2_2",
  "para_id": 1013,
  "codeSubstitutes": {},
  "genesis": {
    "stateRootHash": "0xf6271625eea4a9c823a71549895b90c39b3cb5795d77de94721a59fbd34a25a6"
  }
}
`;
//# sourceMappingURL=rococo_v2_2_bridge_hub.cjs.map