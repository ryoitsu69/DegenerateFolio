{"ast":null,"code":"import { Color } from \"@pixi/core\";\nimport { generateFillStyle } from \"./generateFillStyle.mjs\";\nfunction drawGlyph(canvas, context, metrics, x, y, resolution, style) {\n  const char = metrics.text,\n    fontProperties = metrics.fontProperties;\n  context.translate(x, y), context.scale(resolution, resolution);\n  const tx = style.strokeThickness / 2,\n    ty = -(style.strokeThickness / 2);\n  if (context.font = style.toFontString(), context.lineWidth = style.strokeThickness, context.textBaseline = style.textBaseline, context.lineJoin = style.lineJoin, context.miterLimit = style.miterLimit, context.fillStyle = generateFillStyle(canvas, context, style, resolution, [char], metrics), context.strokeStyle = style.stroke, style.dropShadow) {\n    const dropShadowColor = style.dropShadowColor,\n      dropShadowBlur = style.dropShadowBlur * resolution,\n      dropShadowDistance = style.dropShadowDistance * resolution;\n    context.shadowColor = Color.shared.setValue(dropShadowColor).setAlpha(style.dropShadowAlpha).toRgbaString(), context.shadowBlur = dropShadowBlur, context.shadowOffsetX = Math.cos(style.dropShadowAngle) * dropShadowDistance, context.shadowOffsetY = Math.sin(style.dropShadowAngle) * dropShadowDistance;\n  } else context.shadowColor = \"black\", context.shadowBlur = 0, context.shadowOffsetX = 0, context.shadowOffsetY = 0;\n  style.stroke && style.strokeThickness && context.strokeText(char, tx, ty + metrics.lineHeight - fontProperties.descent), style.fill && context.fillText(char, tx, ty + metrics.lineHeight - fontProperties.descent), context.setTransform(1, 0, 0, 1, 0, 0), context.fillStyle = \"rgba(0, 0, 0, 0)\";\n}\nexport { drawGlyph };","map":{"version":3,"names":["drawGlyph","canvas","context","metrics","x","y","resolution","style","char","text","fontProperties","translate","scale","tx","strokeThickness","ty","font","toFontString","lineWidth","textBaseline","lineJoin","miterLimit","fillStyle","generateFillStyle","strokeStyle","stroke","dropShadow","dropShadowColor","dropShadowBlur","dropShadowDistance","shadowColor","Color","shared","setValue","setAlpha","dropShadowAlpha","toRgbaString","shadowBlur","shadowOffsetX","Math","cos","dropShadowAngle","shadowOffsetY","sin","strokeText","lineHeight","descent","fill","fillText","setTransform"],"sources":["/home/ryoitsu/node_modules/@pixi/text-bitmap/src/utils/drawGlyph.ts"],"sourcesContent":["import { Color } from '@pixi/core';\nimport { generateFillStyle } from './generateFillStyle';\n\nimport type { ICanvas, ICanvasRenderingContext2D } from '@pixi/core';\nimport type { TextMetrics, TextStyle } from '@pixi/text';\n\n// TODO: Prevent code duplication b/w drawGlyph & Text#updateText\n\n/**\n * Draws the glyph `metrics.text` on the given canvas.\n *\n * Ignored because not directly exposed.\n * @ignore\n * @param {PIXI.ICanvas} canvas\n * @param {PIXI.ICanvasRenderingContext2D} context\n * @param {TextMetrics} metrics\n * @param {number} x\n * @param {number} y\n * @param {number} resolution\n * @param {TextStyle} style\n */\nexport function drawGlyph(\n    canvas: ICanvas,\n    context: ICanvasRenderingContext2D,\n    metrics: TextMetrics,\n    x: number,\n    y: number,\n    resolution: number,\n    style: TextStyle\n): void\n{\n    const char = metrics.text;\n    const fontProperties = metrics.fontProperties;\n\n    context.translate(x, y);\n    context.scale(resolution, resolution);\n\n    const tx = style.strokeThickness / 2;\n    const ty = -(style.strokeThickness / 2);\n\n    context.font = style.toFontString();\n    context.lineWidth = style.strokeThickness;\n    context.textBaseline = style.textBaseline;\n    context.lineJoin = style.lineJoin;\n    context.miterLimit = style.miterLimit;\n\n    // set canvas text styles\n    context.fillStyle = generateFillStyle(canvas, context, style, resolution, [char], metrics);\n    context.strokeStyle = style.stroke as string;\n\n    if (style.dropShadow)\n    {\n        const dropShadowColor = style.dropShadowColor;\n        const dropShadowBlur = style.dropShadowBlur * resolution;\n        const dropShadowDistance = style.dropShadowDistance * resolution;\n\n        context.shadowColor = Color.shared\n            .setValue(dropShadowColor)\n            .setAlpha(style.dropShadowAlpha)\n            .toRgbaString();\n        context.shadowBlur = dropShadowBlur;\n        context.shadowOffsetX = Math.cos(style.dropShadowAngle) * dropShadowDistance;\n        context.shadowOffsetY = Math.sin(style.dropShadowAngle) * dropShadowDistance;\n    }\n    else\n    {\n        context.shadowColor = 'black';\n        context.shadowBlur = 0;\n        context.shadowOffsetX = 0;\n        context.shadowOffsetY = 0;\n    }\n\n    if (style.stroke && style.strokeThickness)\n    {\n        context.strokeText(char, tx, ty + metrics.lineHeight - fontProperties.descent);\n    }\n    if (style.fill)\n    {\n        context.fillText(char, tx, ty + metrics.lineHeight - fontProperties.descent);\n    }\n\n    context.setTransform(1, 0, 0, 1, 0, 0); // defaults needed for older browsers (e.g. Opera 29)\n\n    context.fillStyle = 'rgba(0, 0, 0, 0)';\n}\n"],"mappings":";;AAqBO,SAASA,UACZC,MAAA,EACAC,OAAA,EACAC,OAAA,EACAC,CAAA,EACAC,CAAA,EACAC,UAAA,EACAC,KAAA,EAEJ;EACI,MAAMC,IAAA,GAAOL,OAAA,CAAQM,IAAA;IACfC,cAAA,GAAiBP,OAAA,CAAQO,cAAA;EAE/BR,OAAA,CAAQS,SAAA,CAAUP,CAAA,EAAGC,CAAC,GACtBH,OAAA,CAAQU,KAAA,CAAMN,UAAA,EAAYA,UAAU;EAEpC,MAAMO,EAAA,GAAKN,KAAA,CAAMO,eAAA,GAAkB;IAC7BC,EAAA,GAAK,EAAER,KAAA,CAAMO,eAAA,GAAkB;EAYrC,IAVAZ,OAAA,CAAQc,IAAA,GAAOT,KAAA,CAAMU,YAAA,CAAa,GAClCf,OAAA,CAAQgB,SAAA,GAAYX,KAAA,CAAMO,eAAA,EAC1BZ,OAAA,CAAQiB,YAAA,GAAeZ,KAAA,CAAMY,YAAA,EAC7BjB,OAAA,CAAQkB,QAAA,GAAWb,KAAA,CAAMa,QAAA,EACzBlB,OAAA,CAAQmB,UAAA,GAAad,KAAA,CAAMc,UAAA,EAG3BnB,OAAA,CAAQoB,SAAA,GAAYC,iBAAA,CAAkBtB,MAAA,EAAQC,OAAA,EAASK,KAAA,EAAOD,UAAA,EAAY,CAACE,IAAI,GAAGL,OAAO,GACzFD,OAAA,CAAQsB,WAAA,GAAcjB,KAAA,CAAMkB,MAAA,EAExBlB,KAAA,CAAMmB,UAAA,EACV;IACU,MAAAC,eAAA,GAAkBpB,KAAA,CAAMoB,eAAA;MACxBC,cAAA,GAAiBrB,KAAA,CAAMqB,cAAA,GAAiBtB,UAAA;MACxCuB,kBAAA,GAAqBtB,KAAA,CAAMsB,kBAAA,GAAqBvB,UAAA;IAEtDJ,OAAA,CAAQ4B,WAAA,GAAcC,KAAA,CAAMC,MAAA,CACvBC,QAAA,CAASN,eAAe,EACxBO,QAAA,CAAS3B,KAAA,CAAM4B,eAAe,EAC9BC,YAAA,CAAa,GAClBlC,OAAA,CAAQmC,UAAA,GAAaT,cAAA,EACrB1B,OAAA,CAAQoC,aAAA,GAAgBC,IAAA,CAAKC,GAAA,CAAIjC,KAAA,CAAMkC,eAAe,IAAIZ,kBAAA,EAC1D3B,OAAA,CAAQwC,aAAA,GAAgBH,IAAA,CAAKI,GAAA,CAAIpC,KAAA,CAAMkC,eAAe,IAAIZ,kBAAA;EAC9D,OAGY3B,OAAA,CAAA4B,WAAA,GAAc,SACtB5B,OAAA,CAAQmC,UAAA,GAAa,GACrBnC,OAAA,CAAQoC,aAAA,GAAgB,GACxBpC,OAAA,CAAQwC,aAAA,GAAgB;EAGxBnC,KAAA,CAAMkB,MAAA,IAAUlB,KAAA,CAAMO,eAAA,IAEtBZ,OAAA,CAAQ0C,UAAA,CAAWpC,IAAA,EAAMK,EAAA,EAAIE,EAAA,GAAKZ,OAAA,CAAQ0C,UAAA,GAAanC,cAAA,CAAeoC,OAAO,GAE7EvC,KAAA,CAAMwC,IAAA,IAEN7C,OAAA,CAAQ8C,QAAA,CAASxC,IAAA,EAAMK,EAAA,EAAIE,EAAA,GAAKZ,OAAA,CAAQ0C,UAAA,GAAanC,cAAA,CAAeoC,OAAO,GAG/E5C,OAAA,CAAQ+C,YAAA,CAAa,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAErC/C,OAAA,CAAQoB,SAAA,GAAY;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}