{"ast":null,"code":"import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { firstMemo, memo } from '../util/index.js';\nfunction extractsIds(stashId, queuedKeys, nextKeys) {\n  const sessionIds = (queuedKeys.find(_ref => {\n    let [currentId] = _ref;\n    return currentId.eq(stashId);\n  }) || [undefined, []])[1];\n  const nextSessionIds = nextKeys.unwrapOr([]);\n  return {\n    nextSessionIds: Array.isArray(nextSessionIds) ? nextSessionIds : [...nextSessionIds.values()],\n    sessionIds: Array.isArray(sessionIds) ? sessionIds : [...sessionIds.values()]\n  };\n}\nexport const keys = /*#__PURE__*/firstMemo((api, stashId) => api.derive.staking.keysMulti([stashId]));\nexport function keysMulti(instanceId, api) {\n  return memo(instanceId, stashIds => stashIds.length ? api.query.session.queuedKeys().pipe(switchMap(queuedKeys => {\n    var _api$consts$session;\n    return combineLatest([of(queuedKeys), (_api$consts$session = api.consts['session']) !== null && _api$consts$session !== void 0 && _api$consts$session['dedupKeyPrefix'] ? api.query.session.nextKeys.multi(stashIds.map(s => [api.consts['session']['dedupKeyPrefix'], s])) : combineLatest(stashIds.map(s => api.query.session.nextKeys(s)))]);\n  }), map(_ref2 => {\n    let [queuedKeys, nextKeys] = _ref2;\n    return stashIds.map((stashId, index) => extractsIds(stashId, queuedKeys, nextKeys[index]));\n  })) : of([]));\n}","map":{"version":3,"names":["combineLatest","map","of","switchMap","firstMemo","memo","extractsIds","stashId","queuedKeys","nextKeys","sessionIds","find","_ref","currentId","eq","undefined","nextSessionIds","unwrapOr","Array","isArray","values","keys","api","derive","staking","keysMulti","instanceId","stashIds","length","query","session","pipe","_api$consts$session","consts","multi","s","_ref2","index"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/staking/keys.js"],"sourcesContent":["import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { firstMemo, memo } from '../util/index.js';\nfunction extractsIds(stashId, queuedKeys, nextKeys) {\n    const sessionIds = (queuedKeys.find(([currentId]) => currentId.eq(stashId)) || [undefined, []])[1];\n    const nextSessionIds = nextKeys.unwrapOr([]);\n    return {\n        nextSessionIds: Array.isArray(nextSessionIds)\n            ? nextSessionIds\n            : [...nextSessionIds.values()],\n        sessionIds: Array.isArray(sessionIds)\n            ? sessionIds\n            : [...sessionIds.values()]\n    };\n}\nexport const keys = /*#__PURE__*/ firstMemo((api, stashId) => api.derive.staking.keysMulti([stashId]));\nexport function keysMulti(instanceId, api) {\n    return memo(instanceId, (stashIds) => stashIds.length\n        ? api.query.session.queuedKeys().pipe(switchMap((queuedKeys) => combineLatest([\n            of(queuedKeys),\n            api.consts['session']?.['dedupKeyPrefix']\n                ? api.query.session.nextKeys.multi(stashIds.map((s) => [api.consts['session']['dedupKeyPrefix'], s]))\n                : combineLatest(stashIds.map((s) => api.query.session.nextKeys(s)))\n        ])), map(([queuedKeys, nextKeys]) => stashIds.map((stashId, index) => extractsIds(stashId, queuedKeys, nextKeys[index]))))\n        : of([]));\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,GAAG,EAAEC,EAAE,EAAEC,SAAS,QAAQ,MAAM;AACxD,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,SAASC,WAAWA,CAACC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,EAAE;EAChD,MAAMC,UAAU,GAAG,CAACF,UAAU,CAACG,IAAI,CAACC,IAAA;IAAA,IAAC,CAACC,SAAS,CAAC,GAAAD,IAAA;IAAA,OAAKC,SAAS,CAACC,EAAE,CAACP,OAAO,CAAC;EAAA,EAAC,IAAI,CAACQ,SAAS,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAClG,MAAMC,cAAc,GAAGP,QAAQ,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAC5C,OAAO;IACHD,cAAc,EAAEE,KAAK,CAACC,OAAO,CAACH,cAAc,CAAC,GACvCA,cAAc,GACd,CAAC,GAAGA,cAAc,CAACI,MAAM,CAAC,CAAC,CAAC;IAClCV,UAAU,EAAEQ,KAAK,CAACC,OAAO,CAACT,UAAU,CAAC,GAC/BA,UAAU,GACV,CAAC,GAAGA,UAAU,CAACU,MAAM,CAAC,CAAC;EACjC,CAAC;AACL;AACA,OAAO,MAAMC,IAAI,GAAG,aAAcjB,SAAS,CAAC,CAACkB,GAAG,EAAEf,OAAO,KAAKe,GAAG,CAACC,MAAM,CAACC,OAAO,CAACC,SAAS,CAAC,CAAClB,OAAO,CAAC,CAAC,CAAC;AACtG,OAAO,SAASkB,SAASA,CAACC,UAAU,EAAEJ,GAAG,EAAE;EACvC,OAAOjB,IAAI,CAACqB,UAAU,EAAGC,QAAQ,IAAKA,QAAQ,CAACC,MAAM,GAC/CN,GAAG,CAACO,KAAK,CAACC,OAAO,CAACtB,UAAU,CAAC,CAAC,CAACuB,IAAI,CAAC5B,SAAS,CAAEK,UAAU;IAAA,IAAAwB,mBAAA;IAAA,OAAKhC,aAAa,CAAC,CAC1EE,EAAE,CAACM,UAAU,CAAC,EACd,CAAAwB,mBAAA,GAAAV,GAAG,CAACW,MAAM,CAAC,SAAS,CAAC,cAAAD,mBAAA,eAArBA,mBAAA,CAAwB,gBAAgB,CAAC,GACnCV,GAAG,CAACO,KAAK,CAACC,OAAO,CAACrB,QAAQ,CAACyB,KAAK,CAACP,QAAQ,CAAC1B,GAAG,CAAEkC,CAAC,IAAK,CAACb,GAAG,CAACW,MAAM,CAAC,SAAS,CAAC,CAAC,gBAAgB,CAAC,EAAEE,CAAC,CAAC,CAAC,CAAC,GACnGnC,aAAa,CAAC2B,QAAQ,CAAC1B,GAAG,CAAEkC,CAAC,IAAKb,GAAG,CAACO,KAAK,CAACC,OAAO,CAACrB,QAAQ,CAAC0B,CAAC,CAAC,CAAC,CAAC,CAC1E,CAAC;EAAA,EAAC,EAAElC,GAAG,CAACmC,KAAA;IAAA,IAAC,CAAC5B,UAAU,EAAEC,QAAQ,CAAC,GAAA2B,KAAA;IAAA,OAAKT,QAAQ,CAAC1B,GAAG,CAAC,CAACM,OAAO,EAAE8B,KAAK,KAAK/B,WAAW,CAACC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,CAAC4B,KAAK,CAAC,CAAC,CAAC;EAAA,EAAC,CAAC,GACxHnC,EAAE,CAAC,EAAE,CAAC,CAAC;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}