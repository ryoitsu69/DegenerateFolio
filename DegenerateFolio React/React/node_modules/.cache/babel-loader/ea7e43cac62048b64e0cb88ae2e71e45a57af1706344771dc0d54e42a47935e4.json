{"ast":null,"code":"import { Struct } from '@polkadot/types-codec';\n/**\n * @name GenericBlock\n * @description\n * A block encoded with header and extrinsics\n */\nexport class GenericBlock extends Struct {\n  constructor(registry, value) {\n    super(registry, {\n      header: 'Header',\n      // eslint-disable-next-line sort-keys\n      extrinsics: 'Vec<Extrinsic>'\n    }, value);\n  }\n  /**\n   * @description Encodes a content [[Hash]] for the block\n   */\n  get contentHash() {\n    return this.registry.hash(this.toU8a());\n  }\n  /**\n   * @description The [[Extrinsic]] contained in the block\n   */\n  get extrinsics() {\n    return this.getT('extrinsics');\n  }\n  /**\n   * @description Block/header [[Hash]]\n   */\n  get hash() {\n    return this.header.hash;\n  }\n  /**\n   * @description The [[Header]] of the block\n   */\n  get header() {\n    return this.getT('header');\n  }\n}","map":{"version":3,"names":["Struct","GenericBlock","constructor","registry","value","header","extrinsics","contentHash","hash","toU8a","getT"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/generic/Block.js"],"sourcesContent":["import { Struct } from '@polkadot/types-codec';\n/**\n * @name GenericBlock\n * @description\n * A block encoded with header and extrinsics\n */\nexport class GenericBlock extends Struct {\n    constructor(registry, value) {\n        super(registry, {\n            header: 'Header',\n            // eslint-disable-next-line sort-keys\n            extrinsics: 'Vec<Extrinsic>'\n        }, value);\n    }\n    /**\n     * @description Encodes a content [[Hash]] for the block\n     */\n    get contentHash() {\n        return this.registry.hash(this.toU8a());\n    }\n    /**\n     * @description The [[Extrinsic]] contained in the block\n     */\n    get extrinsics() {\n        return this.getT('extrinsics');\n    }\n    /**\n     * @description Block/header [[Hash]]\n     */\n    get hash() {\n        return this.header.hash;\n    }\n    /**\n     * @description The [[Header]] of the block\n     */\n    get header() {\n        return this.getT('header');\n    }\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,SAASD,MAAM,CAAC;EACrCE,WAAWA,CAACC,QAAQ,EAAEC,KAAK,EAAE;IACzB,KAAK,CAACD,QAAQ,EAAE;MACZE,MAAM,EAAE,QAAQ;MAChB;MACAC,UAAU,EAAE;IAChB,CAAC,EAAEF,KAAK,CAAC;EACb;EACA;AACJ;AACA;EACI,IAAIG,WAAWA,CAAA,EAAG;IACd,OAAO,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAAC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3C;EACA;AACJ;AACA;EACI,IAAIH,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACI,IAAI,CAAC,YAAY,CAAC;EAClC;EACA;AACJ;AACA;EACI,IAAIF,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACH,MAAM,CAACG,IAAI;EAC3B;EACA;AACJ;AACA;EACI,IAAIH,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAACK,IAAI,CAAC,QAAQ,CAAC;EAC9B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}