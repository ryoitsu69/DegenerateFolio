{"ast":null,"code":"export const rpc = {\n  generateProof: {\n    description: 'Generate MMR proof for the given block numbers.',\n    params: [{\n      name: 'blockNumbers',\n      type: 'Vec<u64>'\n    }, {\n      isOptional: true,\n      name: 'bestKnownBlockNumber',\n      type: 'u64'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'at',\n      type: 'BlockHash'\n    }],\n    type: 'MmrLeafBatchProof'\n  },\n  root: {\n    description: 'Get the MMR root hash for the current best block.',\n    params: [{\n      isHistoric: true,\n      isOptional: true,\n      name: 'at',\n      type: 'BlockHash'\n    }],\n    type: 'MmrHash'\n  },\n  verifyProof: {\n    description: 'Verify an MMR proof',\n    params: [{\n      name: 'proof',\n      type: 'MmrLeafBatchProof'\n    }],\n    type: 'bool'\n  },\n  verifyProofStateless: {\n    description: 'Verify an MMR proof statelessly given an mmr_root',\n    params: [{\n      name: 'root',\n      type: 'MmrHash'\n    }, {\n      name: 'proof',\n      type: 'MmrLeafBatchProof'\n    }],\n    type: 'bool'\n  }\n};","map":{"version":3,"names":["rpc","generateProof","description","params","name","type","isOptional","isHistoric","root","verifyProof","verifyProofStateless"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/interfaces/mmr/rpc.js"],"sourcesContent":["export const rpc = {\n    generateProof: {\n        description: 'Generate MMR proof for the given block numbers.',\n        params: [\n            {\n                name: 'blockNumbers',\n                type: 'Vec<u64>'\n            },\n            {\n                isOptional: true,\n                name: 'bestKnownBlockNumber',\n                type: 'u64'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'MmrLeafBatchProof'\n    },\n    root: {\n        description: 'Get the MMR root hash for the current best block.',\n        params: [\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'MmrHash'\n    },\n    verifyProof: {\n        description: 'Verify an MMR proof',\n        params: [\n            {\n                name: 'proof',\n                type: 'MmrLeafBatchProof'\n            }\n        ],\n        type: 'bool'\n    },\n    verifyProofStateless: {\n        description: 'Verify an MMR proof statelessly given an mmr_root',\n        params: [\n            {\n                name: 'root',\n                type: 'MmrHash'\n            },\n            {\n                name: 'proof',\n                type: 'MmrLeafBatchProof'\n            }\n        ],\n        type: 'bool'\n    }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,GAAG,GAAG;EACfC,aAAa,EAAE;IACXC,WAAW,EAAE,iDAAiD;IAC9DC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,cAAc;MACpBC,IAAI,EAAE;IACV,CAAC,EACD;MACIC,UAAU,EAAE,IAAI;MAChBF,IAAI,EAAE,sBAAsB;MAC5BC,IAAI,EAAE;IACV,CAAC,EACD;MACIE,UAAU,EAAE,IAAI;MAChBD,UAAU,EAAE,IAAI;MAChBF,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDG,IAAI,EAAE;IACFN,WAAW,EAAE,mDAAmD;IAChEC,MAAM,EAAE,CACJ;MACII,UAAU,EAAE,IAAI;MAChBD,UAAU,EAAE,IAAI;MAChBF,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDI,WAAW,EAAE;IACTP,WAAW,EAAE,qBAAqB;IAClCC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDK,oBAAoB,EAAE;IAClBR,WAAW,EAAE,mDAAmD;IAChEC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE;IACV,CAAC,EACD;MACID,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}