{"ast":null,"code":"import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nimport { filterBountiesProposals } from './helpers/filterBountyProposals.js';\nfunction parseResult([maybeBounties, maybeDescriptions, ids, bountyProposals]) {\n  const bounties = [];\n  maybeBounties.forEach((bounty, index) => {\n    if (bounty.isSome) {\n      bounties.push({\n        bounty: bounty.unwrap(),\n        description: maybeDescriptions[index].unwrapOrDefault().toUtf8(),\n        index: ids[index],\n        proposals: bountyProposals.filter(bountyProposal => bountyProposal.proposal && ids[index].eq(bountyProposal.proposal.args[0]))\n      });\n    }\n  });\n  return bounties;\n}\nexport function bounties(instanceId, api) {\n  const bountyBase = api.query.bounties || api.query.treasury;\n  return memo(instanceId, () => bountyBase.bounties ? combineLatest([bountyBase.bountyCount(), api.query.council ? api.query.council.proposalCount() : of(0)]).pipe(switchMap(() => combineLatest([bountyBase.bounties.keys(), api.derive.council ? api.derive.council.proposals() : of([])])), switchMap(([keys, proposals]) => {\n    const ids = keys.map(({\n      args: [id]\n    }) => id);\n    return combineLatest([bountyBase.bounties.multi(ids), bountyBase.bountyDescriptions.multi(ids), of(ids), of(filterBountiesProposals(api, proposals))]);\n  }), map(parseResult)) : of(parseResult([[], [], [], []])));\n}","map":{"version":3,"names":["combineLatest","map","of","switchMap","memo","filterBountiesProposals","parseResult","maybeBounties","maybeDescriptions","ids","bountyProposals","bounties","forEach","bounty","index","isSome","push","unwrap","description","unwrapOrDefault","toUtf8","proposals","filter","bountyProposal","proposal","eq","args","instanceId","api","bountyBase","query","treasury","bountyCount","council","proposalCount","pipe","keys","derive","id","multi","bountyDescriptions"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/bounties/bounties.js"],"sourcesContent":["import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nimport { filterBountiesProposals } from './helpers/filterBountyProposals.js';\nfunction parseResult([maybeBounties, maybeDescriptions, ids, bountyProposals]) {\n    const bounties = [];\n    maybeBounties.forEach((bounty, index) => {\n        if (bounty.isSome) {\n            bounties.push({\n                bounty: bounty.unwrap(),\n                description: maybeDescriptions[index].unwrapOrDefault().toUtf8(),\n                index: ids[index],\n                proposals: bountyProposals.filter((bountyProposal) => bountyProposal.proposal && ids[index].eq(bountyProposal.proposal.args[0]))\n            });\n        }\n    });\n    return bounties;\n}\nexport function bounties(instanceId, api) {\n    const bountyBase = api.query.bounties || api.query.treasury;\n    return memo(instanceId, () => bountyBase.bounties\n        ? combineLatest([\n            bountyBase.bountyCount(),\n            api.query.council\n                ? api.query.council.proposalCount()\n                : of(0)\n        ]).pipe(switchMap(() => combineLatest([\n            bountyBase.bounties.keys(),\n            api.derive.council\n                ? api.derive.council.proposals()\n                : of([])\n        ])), switchMap(([keys, proposals]) => {\n            const ids = keys.map(({ args: [id] }) => id);\n            return combineLatest([\n                bountyBase.bounties.multi(ids),\n                bountyBase.bountyDescriptions.multi(ids),\n                of(ids),\n                of(filterBountiesProposals(api, proposals))\n            ]);\n        }), map(parseResult))\n        : of(parseResult([[], [], [], []])));\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,GAAG,EAAEC,EAAE,EAAEC,SAAS,QAAQ,MAAM;AACxD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,uBAAuB,QAAQ,oCAAoC;AAC5E,SAASC,WAAWA,CAAC,CAACC,aAAa,EAAEC,iBAAiB,EAAEC,GAAG,EAAEC,eAAe,CAAC,EAAE;EAC3E,MAAMC,QAAQ,GAAG,EAAE;EACnBJ,aAAa,CAACK,OAAO,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;IACrC,IAAID,MAAM,CAACE,MAAM,EAAE;MACfJ,QAAQ,CAACK,IAAI,CAAC;QACVH,MAAM,EAAEA,MAAM,CAACI,MAAM,CAAC,CAAC;QACvBC,WAAW,EAAEV,iBAAiB,CAACM,KAAK,CAAC,CAACK,eAAe,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;QAChEN,KAAK,EAAEL,GAAG,CAACK,KAAK,CAAC;QACjBO,SAAS,EAAEX,eAAe,CAACY,MAAM,CAAEC,cAAc,IAAKA,cAAc,CAACC,QAAQ,IAAIf,GAAG,CAACK,KAAK,CAAC,CAACW,EAAE,CAACF,cAAc,CAACC,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;MACnI,CAAC,CAAC;IACN;EACJ,CAAC,CAAC;EACF,OAAOf,QAAQ;AACnB;AACA,OAAO,SAASA,QAAQA,CAACgB,UAAU,EAAEC,GAAG,EAAE;EACtC,MAAMC,UAAU,GAAGD,GAAG,CAACE,KAAK,CAACnB,QAAQ,IAAIiB,GAAG,CAACE,KAAK,CAACC,QAAQ;EAC3D,OAAO3B,IAAI,CAACuB,UAAU,EAAE,MAAME,UAAU,CAAClB,QAAQ,GAC3CX,aAAa,CAAC,CACZ6B,UAAU,CAACG,WAAW,CAAC,CAAC,EACxBJ,GAAG,CAACE,KAAK,CAACG,OAAO,GACXL,GAAG,CAACE,KAAK,CAACG,OAAO,CAACC,aAAa,CAAC,CAAC,GACjChC,EAAE,CAAC,CAAC,CAAC,CACd,CAAC,CAACiC,IAAI,CAAChC,SAAS,CAAC,MAAMH,aAAa,CAAC,CAClC6B,UAAU,CAAClB,QAAQ,CAACyB,IAAI,CAAC,CAAC,EAC1BR,GAAG,CAACS,MAAM,CAACJ,OAAO,GACZL,GAAG,CAACS,MAAM,CAACJ,OAAO,CAACZ,SAAS,CAAC,CAAC,GAC9BnB,EAAE,CAAC,EAAE,CAAC,CACf,CAAC,CAAC,EAAEC,SAAS,CAAC,CAAC,CAACiC,IAAI,EAAEf,SAAS,CAAC,KAAK;IAClC,MAAMZ,GAAG,GAAG2B,IAAI,CAACnC,GAAG,CAAC,CAAC;MAAEyB,IAAI,EAAE,CAACY,EAAE;IAAE,CAAC,KAAKA,EAAE,CAAC;IAC5C,OAAOtC,aAAa,CAAC,CACjB6B,UAAU,CAAClB,QAAQ,CAAC4B,KAAK,CAAC9B,GAAG,CAAC,EAC9BoB,UAAU,CAACW,kBAAkB,CAACD,KAAK,CAAC9B,GAAG,CAAC,EACxCP,EAAE,CAACO,GAAG,CAAC,EACPP,EAAE,CAACG,uBAAuB,CAACuB,GAAG,EAAEP,SAAS,CAAC,CAAC,CAC9C,CAAC;EACN,CAAC,CAAC,EAAEpB,GAAG,CAACK,WAAW,CAAC,CAAC,GACnBJ,EAAE,CAACI,WAAW,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}