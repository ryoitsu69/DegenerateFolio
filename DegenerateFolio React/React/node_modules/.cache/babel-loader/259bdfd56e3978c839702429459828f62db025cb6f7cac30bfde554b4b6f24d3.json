{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isBlockNumberOrTag = exports.isBlockTag = exports.isBlockNumber = void 0;\nconst web3_types_1 = require(\"web3-types\");\nconst numbers_js_1 = require(\"./numbers.js\");\nconst isBlockNumber = value => (0, numbers_js_1.isUInt)(value);\nexports.isBlockNumber = isBlockNumber;\n/**\n * Returns true if the given blockNumber is 'latest', 'pending', 'earliest, 'safe' or 'finalized'\n */\nconst isBlockTag = value => Object.values(web3_types_1.BlockTags).includes(value);\nexports.isBlockTag = isBlockTag;\n/**\n * Returns true if given value is valid hex string and not negative, or is a valid BlockTag\n */\nconst isBlockNumberOrTag = value => (0, exports.isBlockTag)(value) || (0, exports.isBlockNumber)(value);\nexports.isBlockNumberOrTag = isBlockNumberOrTag;","map":{"version":3,"names":["web3_types_1","require","numbers_js_1","isBlockNumber","value","isUInt","exports","isBlockTag","Object","values","BlockTags","includes","isBlockNumberOrTag"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/web3-validator/src/validation/block.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { BlockTags } from 'web3-types';\nimport { isUInt } from './numbers.js';\n\nexport const isBlockNumber = (value: string | number | bigint): boolean => isUInt(value);\n\n/**\n * Returns true if the given blockNumber is 'latest', 'pending', 'earliest, 'safe' or 'finalized'\n */\nexport const isBlockTag = (value: string) => Object.values(BlockTags).includes(value as BlockTags);\n\n/**\n * Returns true if given value is valid hex string and not negative, or is a valid BlockTag\n */\nexport const isBlockNumberOrTag = (value: string | number | bigint) =>\n\tisBlockTag(value as string) || isBlockNumber(value);\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAiBA,MAAAA,YAAA,GAAAC,OAAA;AACA,MAAAC,YAAA,GAAAD,OAAA;AAEO,MAAME,aAAa,GAAIC,KAA+B,IAAc,IAAAF,YAAA,CAAAG,MAAM,EAACD,KAAK,CAAC;AAA3EE,OAAA,CAAAH,aAAa,GAAAA,aAAA;AAE1B;;;AAGO,MAAMI,UAAU,GAAIH,KAAa,IAAKI,MAAM,CAACC,MAAM,CAACT,YAAA,CAAAU,SAAS,CAAC,CAACC,QAAQ,CAACP,KAAkB,CAAC;AAArFE,OAAA,CAAAC,UAAU,GAAAA,UAAA;AAEvB;;;AAGO,MAAMK,kBAAkB,GAAIR,KAA+B,IACjE,IAAAE,OAAA,CAAAC,UAAU,EAACH,KAAe,CAAC,IAAI,IAAAE,OAAA,CAAAH,aAAa,EAACC,KAAK,CAAC;AADvCE,OAAA,CAAAM,kBAAkB,GAAAA,kBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}