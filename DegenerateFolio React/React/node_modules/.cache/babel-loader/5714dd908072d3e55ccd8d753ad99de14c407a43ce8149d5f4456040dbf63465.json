{"ast":null,"code":"import { compactAddLength, isU8a, stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from '../blake2/asU8a.js';\nconst HDKD = compactAddLength(stringToU8a('Ed25519HDKD'));\nexport function ed25519DeriveHard(seed, chainCode) {\n  if (!isU8a(chainCode) || chainCode.length !== 32) {\n    throw new Error('Invalid chainCode passed to derive');\n  }\n  return blake2AsU8a(u8aConcat(HDKD, seed, chainCode));\n}","map":{"version":3,"names":["compactAddLength","isU8a","stringToU8a","u8aConcat","blake2AsU8a","HDKD","ed25519DeriveHard","seed","chainCode","length","Error"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/ed25519/deriveHard.js"],"sourcesContent":["import { compactAddLength, isU8a, stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from '../blake2/asU8a.js';\nconst HDKD = compactAddLength(stringToU8a('Ed25519HDKD'));\nexport function ed25519DeriveHard(seed, chainCode) {\n    if (!isU8a(chainCode) || chainCode.length !== 32) {\n        throw new Error('Invalid chainCode passed to derive');\n    }\n    return blake2AsU8a(u8aConcat(HDKD, seed, chainCode));\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,KAAK,EAAEC,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AAChF,SAASC,WAAW,QAAQ,oBAAoB;AAChD,MAAMC,IAAI,GAAGL,gBAAgB,CAACE,WAAW,CAAC,aAAa,CAAC,CAAC;AACzD,OAAO,SAASI,iBAAiBA,CAACC,IAAI,EAAEC,SAAS,EAAE;EAC/C,IAAI,CAACP,KAAK,CAACO,SAAS,CAAC,IAAIA,SAAS,CAACC,MAAM,KAAK,EAAE,EAAE;IAC9C,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;EACzD;EACA,OAAON,WAAW,CAACD,SAAS,CAACE,IAAI,EAAEE,IAAI,EAAEC,SAAS,CAAC,CAAC;AACxD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}