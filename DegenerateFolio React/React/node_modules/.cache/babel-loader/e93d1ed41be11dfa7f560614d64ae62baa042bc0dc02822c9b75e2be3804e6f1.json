{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SignatureDescriptor_Data_Multi = exports.SignatureDescriptor_Data_Single = exports.SignatureDescriptor_Data = exports.SignatureDescriptor = exports.SignatureDescriptors = exports.signModeToJSON = exports.signModeFromJSON = exports.SignMode = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst multisig_1 = require(\"../../../crypto/multisig/v1beta1/multisig\");\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"cosmos.tx.signing.v1beta1\";\n/**\n * SignMode represents a signing mode with its own security guarantees.\n *\n * This enum should be considered a registry of all known sign modes\n * in the Cosmos ecosystem. Apps are not expected to support all known\n * sign modes. Apps that would like to support custom  sign modes are\n * encouraged to open a small PR against this file to add a new case\n * to this SignMode enum describing their sign mode so that different\n * apps have a consistent version of this enum.\n */\nvar SignMode;\n(function (SignMode) {\n  /**\n   * SIGN_MODE_UNSPECIFIED - SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be\n   * rejected.\n   */\n  SignMode[SignMode[\"SIGN_MODE_UNSPECIFIED\"] = 0] = \"SIGN_MODE_UNSPECIFIED\";\n  /**\n   * SIGN_MODE_DIRECT - SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is\n   * verified with raw bytes from Tx.\n   */\n  SignMode[SignMode[\"SIGN_MODE_DIRECT\"] = 1] = \"SIGN_MODE_DIRECT\";\n  /**\n   * SIGN_MODE_TEXTUAL - SIGN_MODE_TEXTUAL is a future signing mode that will verify some\n   * human-readable textual representation on top of the binary representation\n   * from SIGN_MODE_DIRECT. It is currently not supported.\n   */\n  SignMode[SignMode[\"SIGN_MODE_TEXTUAL\"] = 2] = \"SIGN_MODE_TEXTUAL\";\n  /**\n   * SIGN_MODE_DIRECT_AUX - SIGN_MODE_DIRECT_AUX specifies a signing mode which uses\n   * SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not\n   * require signers signing over other signers' `signer_info`. It also allows\n   * for adding Tips in transactions.\n   *\n   * Since: cosmos-sdk 0.46\n   */\n  SignMode[SignMode[\"SIGN_MODE_DIRECT_AUX\"] = 3] = \"SIGN_MODE_DIRECT_AUX\";\n  /**\n   * SIGN_MODE_LEGACY_AMINO_JSON - SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses\n   * Amino JSON and will be removed in the future.\n   */\n  SignMode[SignMode[\"SIGN_MODE_LEGACY_AMINO_JSON\"] = 127] = \"SIGN_MODE_LEGACY_AMINO_JSON\";\n  /**\n   * SIGN_MODE_EIP_191 - SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos\n   * SDK. Ref: https://eips.ethereum.org/EIPS/eip-191\n   *\n   * Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,\n   * but is not implemented on the SDK by default. To enable EIP-191, you need\n   * to pass a custom `TxConfig` that has an implementation of\n   * `SignModeHandler` for EIP-191. The SDK may decide to fully support\n   * EIP-191 in the future.\n   *\n   * Since: cosmos-sdk 0.45.2\n   */\n  SignMode[SignMode[\"SIGN_MODE_EIP_191\"] = 191] = \"SIGN_MODE_EIP_191\";\n  SignMode[SignMode[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignMode || (exports.SignMode = SignMode = {}));\nfunction signModeFromJSON(object) {\n  switch (object) {\n    case 0:\n    case \"SIGN_MODE_UNSPECIFIED\":\n      return SignMode.SIGN_MODE_UNSPECIFIED;\n    case 1:\n    case \"SIGN_MODE_DIRECT\":\n      return SignMode.SIGN_MODE_DIRECT;\n    case 2:\n    case \"SIGN_MODE_TEXTUAL\":\n      return SignMode.SIGN_MODE_TEXTUAL;\n    case 3:\n    case \"SIGN_MODE_DIRECT_AUX\":\n      return SignMode.SIGN_MODE_DIRECT_AUX;\n    case 127:\n    case \"SIGN_MODE_LEGACY_AMINO_JSON\":\n      return SignMode.SIGN_MODE_LEGACY_AMINO_JSON;\n    case 191:\n    case \"SIGN_MODE_EIP_191\":\n      return SignMode.SIGN_MODE_EIP_191;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return SignMode.UNRECOGNIZED;\n  }\n}\nexports.signModeFromJSON = signModeFromJSON;\nfunction signModeToJSON(object) {\n  switch (object) {\n    case SignMode.SIGN_MODE_UNSPECIFIED:\n      return \"SIGN_MODE_UNSPECIFIED\";\n    case SignMode.SIGN_MODE_DIRECT:\n      return \"SIGN_MODE_DIRECT\";\n    case SignMode.SIGN_MODE_TEXTUAL:\n      return \"SIGN_MODE_TEXTUAL\";\n    case SignMode.SIGN_MODE_DIRECT_AUX:\n      return \"SIGN_MODE_DIRECT_AUX\";\n    case SignMode.SIGN_MODE_LEGACY_AMINO_JSON:\n      return \"SIGN_MODE_LEGACY_AMINO_JSON\";\n    case SignMode.SIGN_MODE_EIP_191:\n      return \"SIGN_MODE_EIP_191\";\n    case SignMode.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\nexports.signModeToJSON = signModeToJSON;\nfunction createBaseSignatureDescriptors() {\n  return {\n    signatures: []\n  };\n}\nexports.SignatureDescriptors = {\n  typeUrl: \"/cosmos.tx.signing.v1beta1.SignatureDescriptors\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    for (const v of message.signatures) {\n      exports.SignatureDescriptor.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptors();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signatures.push(exports.SignatureDescriptor.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseSignatureDescriptors();\n    if (Array.isArray(object?.signatures)) obj.signatures = object.signatures.map(e => exports.SignatureDescriptor.fromJSON(e));\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? exports.SignatureDescriptor.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseSignatureDescriptors();\n    message.signatures = object.signatures?.map(e => exports.SignatureDescriptor.fromPartial(e)) || [];\n    return message;\n  }\n};\nfunction createBaseSignatureDescriptor() {\n  return {\n    publicKey: undefined,\n    data: undefined,\n    sequence: BigInt(0)\n  };\n}\nexports.SignatureDescriptor = {\n  typeUrl: \"/cosmos.tx.signing.v1beta1.SignatureDescriptor\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.publicKey !== undefined) {\n      any_1.Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.data !== undefined) {\n      exports.SignatureDescriptor_Data.encode(message.data, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.sequence !== BigInt(0)) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.publicKey = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.data = exports.SignatureDescriptor_Data.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseSignatureDescriptor();\n    if ((0, helpers_1.isSet)(object.publicKey)) obj.publicKey = any_1.Any.fromJSON(object.publicKey);\n    if ((0, helpers_1.isSet)(object.data)) obj.data = exports.SignatureDescriptor_Data.fromJSON(object.data);\n    if ((0, helpers_1.isSet)(object.sequence)) obj.sequence = BigInt(object.sequence.toString());\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.publicKey !== undefined && (obj.publicKey = message.publicKey ? any_1.Any.toJSON(message.publicKey) : undefined);\n    message.data !== undefined && (obj.data = message.data ? exports.SignatureDescriptor_Data.toJSON(message.data) : undefined);\n    message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseSignatureDescriptor();\n    if (object.publicKey !== undefined && object.publicKey !== null) {\n      message.publicKey = any_1.Any.fromPartial(object.publicKey);\n    }\n    if (object.data !== undefined && object.data !== null) {\n      message.data = exports.SignatureDescriptor_Data.fromPartial(object.data);\n    }\n    if (object.sequence !== undefined && object.sequence !== null) {\n      message.sequence = BigInt(object.sequence.toString());\n    }\n    return message;\n  }\n};\nfunction createBaseSignatureDescriptor_Data() {\n  return {\n    single: undefined,\n    multi: undefined\n  };\n}\nexports.SignatureDescriptor_Data = {\n  typeUrl: \"/cosmos.tx.signing.v1beta1.Data\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.single !== undefined) {\n      exports.SignatureDescriptor_Data_Single.encode(message.single, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.multi !== undefined) {\n      exports.SignatureDescriptor_Data_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor_Data();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.single = exports.SignatureDescriptor_Data_Single.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.multi = exports.SignatureDescriptor_Data_Multi.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseSignatureDescriptor_Data();\n    if ((0, helpers_1.isSet)(object.single)) obj.single = exports.SignatureDescriptor_Data_Single.fromJSON(object.single);\n    if ((0, helpers_1.isSet)(object.multi)) obj.multi = exports.SignatureDescriptor_Data_Multi.fromJSON(object.multi);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.single !== undefined && (obj.single = message.single ? exports.SignatureDescriptor_Data_Single.toJSON(message.single) : undefined);\n    message.multi !== undefined && (obj.multi = message.multi ? exports.SignatureDescriptor_Data_Multi.toJSON(message.multi) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseSignatureDescriptor_Data();\n    if (object.single !== undefined && object.single !== null) {\n      message.single = exports.SignatureDescriptor_Data_Single.fromPartial(object.single);\n    }\n    if (object.multi !== undefined && object.multi !== null) {\n      message.multi = exports.SignatureDescriptor_Data_Multi.fromPartial(object.multi);\n    }\n    return message;\n  }\n};\nfunction createBaseSignatureDescriptor_Data_Single() {\n  return {\n    mode: 0,\n    signature: new Uint8Array()\n  };\n}\nexports.SignatureDescriptor_Data_Single = {\n  typeUrl: \"/cosmos.tx.signing.v1beta1.Single\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.mode !== 0) {\n      writer.uint32(8).int32(message.mode);\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(18).bytes(message.signature);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor_Data_Single();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.mode = reader.int32();\n          break;\n        case 2:\n          message.signature = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseSignatureDescriptor_Data_Single();\n    if ((0, helpers_1.isSet)(object.mode)) obj.mode = signModeFromJSON(object.mode);\n    if ((0, helpers_1.isSet)(object.signature)) obj.signature = (0, helpers_1.bytesFromBase64)(object.signature);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.mode !== undefined && (obj.mode = signModeToJSON(message.mode));\n    message.signature !== undefined && (obj.signature = (0, helpers_1.base64FromBytes)(message.signature !== undefined ? message.signature : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseSignatureDescriptor_Data_Single();\n    message.mode = object.mode ?? 0;\n    message.signature = object.signature ?? new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseSignatureDescriptor_Data_Multi() {\n  return {\n    bitarray: undefined,\n    signatures: []\n  };\n}\nexports.SignatureDescriptor_Data_Multi = {\n  typeUrl: \"/cosmos.tx.signing.v1beta1.Multi\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.bitarray !== undefined) {\n      multisig_1.CompactBitArray.encode(message.bitarray, writer.uint32(10).fork()).ldelim();\n    }\n    for (const v of message.signatures) {\n      exports.SignatureDescriptor_Data.encode(v, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor_Data_Multi();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bitarray = multisig_1.CompactBitArray.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signatures.push(exports.SignatureDescriptor_Data.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseSignatureDescriptor_Data_Multi();\n    if ((0, helpers_1.isSet)(object.bitarray)) obj.bitarray = multisig_1.CompactBitArray.fromJSON(object.bitarray);\n    if (Array.isArray(object?.signatures)) obj.signatures = object.signatures.map(e => exports.SignatureDescriptor_Data.fromJSON(e));\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.bitarray !== undefined && (obj.bitarray = message.bitarray ? multisig_1.CompactBitArray.toJSON(message.bitarray) : undefined);\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? exports.SignatureDescriptor_Data.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseSignatureDescriptor_Data_Multi();\n    if (object.bitarray !== undefined && object.bitarray !== null) {\n      message.bitarray = multisig_1.CompactBitArray.fromPartial(object.bitarray);\n    }\n    message.signatures = object.signatures?.map(e => exports.SignatureDescriptor_Data.fromPartial(e)) || [];\n    return message;\n  }\n};","map":{"version":3,"names":["multisig_1","require","any_1","binary_1","helpers_1","exports","protobufPackage","SignMode","signModeFromJSON","object","SIGN_MODE_UNSPECIFIED","SIGN_MODE_DIRECT","SIGN_MODE_TEXTUAL","SIGN_MODE_DIRECT_AUX","SIGN_MODE_LEGACY_AMINO_JSON","SIGN_MODE_EIP_191","UNRECOGNIZED","signModeToJSON","createBaseSignatureDescriptors","signatures","SignatureDescriptors","typeUrl","encode","message","writer","BinaryWriter","create","v","SignatureDescriptor","uint32","fork","ldelim","decode","input","length","reader","BinaryReader","end","undefined","len","pos","tag","push","skipType","fromJSON","obj","Array","isArray","map","e","toJSON","fromPartial","createBaseSignatureDescriptor","publicKey","data","sequence","BigInt","Any","SignatureDescriptor_Data","uint64","isSet","toString","createBaseSignatureDescriptor_Data","single","multi","SignatureDescriptor_Data_Single","SignatureDescriptor_Data_Multi","createBaseSignatureDescriptor_Data_Single","mode","signature","Uint8Array","int32","bytes","bytesFromBase64","base64FromBytes","createBaseSignatureDescriptor_Data_Multi","bitarray","CompactBitArray"],"sources":["../../../../../src/cosmos/tx/signing/v1beta1/signing.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}