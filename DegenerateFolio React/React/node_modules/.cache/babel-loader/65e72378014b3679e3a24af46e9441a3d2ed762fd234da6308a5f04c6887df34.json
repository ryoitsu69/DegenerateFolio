{"ast":null,"code":"import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { isFunction, objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { calcVotes, getImageHash, getStatus } from './util.js';\nfunction votesPrev(api, referendumId) {\n  return api.query.democracy['votersFor'](referendumId).pipe(switchMap(votersFor => combineLatest([of(votersFor), votersFor.length ? api.query.democracy['voteOf'].multi(votersFor.map(accountId => [referendumId, accountId])) : of([]), api.derive.balances.votingBalances(votersFor)])), map(_ref => {\n    let [votersFor, votes, balances] = _ref;\n    return votersFor.map((accountId, index) => ({\n      accountId,\n      balance: balances[index].votingBalance || api.registry.createType('Balance'),\n      isDelegating: false,\n      vote: votes[index] || api.registry.createType('Vote')\n    }));\n  }));\n}\nfunction extractVotes(mapped, referendumId) {\n  return mapped.filter(_ref2 => {\n    let [, voting] = _ref2;\n    return voting.isDirect;\n  }).map(_ref3 => {\n    let [accountId, voting] = _ref3;\n    return [accountId, voting.asDirect.votes.filter(_ref4 => {\n      let [idx] = _ref4;\n      return idx.eq(referendumId);\n    })];\n  }).filter(_ref5 => {\n    let [, directVotes] = _ref5;\n    return !!directVotes.length;\n  }).reduce((result, _ref6) => {\n    let [accountId, votes] = _ref6;\n    return (\n      // FIXME We are ignoring split votes\n      votes.reduce((result, _ref7) => {\n        let [, vote] = _ref7;\n        if (vote.isStandard) {\n          result.push(objectSpread({\n            accountId,\n            isDelegating: false\n          }, vote.asStandard));\n        }\n        return result;\n      }, result)\n    );\n  }, []);\n}\nfunction votesCurr(api, referendumId) {\n  return api.query.democracy.votingOf.entries().pipe(map(allVoting => {\n    const mapped = allVoting.map(_ref8 => {\n      let [{\n        args: [accountId]\n      }, voting] = _ref8;\n      return [accountId, voting];\n    });\n    const votes = extractVotes(mapped, referendumId);\n    const delegations = mapped.filter(_ref9 => {\n      let [, voting] = _ref9;\n      return voting.isDelegating;\n    }).map(_ref10 => {\n      let [accountId, voting] = _ref10;\n      return [accountId, voting.asDelegating];\n    });\n    // add delegations\n    delegations.forEach(_ref11 => {\n      let [accountId, {\n        balance,\n        conviction,\n        target\n      }] = _ref11;\n      // Are we delegating to a delegator\n      const toDelegator = delegations.find(_ref12 => {\n        let [accountId] = _ref12;\n        return accountId.eq(target);\n      });\n      const to = votes.find(_ref13 => {\n        let {\n          accountId\n        } = _ref13;\n        return accountId.eq(toDelegator ? toDelegator[0] : target);\n      });\n      // this delegation has a target\n      if (to) {\n        votes.push({\n          accountId,\n          balance,\n          isDelegating: true,\n          vote: api.registry.createType('Vote', {\n            aye: to.vote.isAye,\n            conviction\n          })\n        });\n      }\n    });\n    return votes;\n  }));\n}\nexport function _referendumVotes(instanceId, api) {\n  return memo(instanceId, referendum => combineLatest([api.derive.democracy.sqrtElectorate(), isFunction(api.query.democracy.votingOf) ? votesCurr(api, referendum.index) : votesPrev(api, referendum.index)]).pipe(map(_ref14 => {\n    let [sqrtElectorate, votes] = _ref14;\n    return calcVotes(sqrtElectorate, referendum, votes);\n  })));\n}\nexport function _referendumsVotes(instanceId, api) {\n  return memo(instanceId, referendums => referendums.length ? combineLatest(referendums.map(referendum => api.derive.democracy._referendumVotes(referendum))) : of([]));\n}\nexport function _referendumInfo(instanceId, api) {\n  return memo(instanceId, (index, info) => {\n    const status = getStatus(info);\n    return status ? api.derive.democracy.preimage(status.proposal || status.proposalHash).pipe(map(image => ({\n      image,\n      imageHash: getImageHash(status),\n      index: api.registry.createType('ReferendumIndex', index),\n      status\n    }))) : of(null);\n  });\n}\nexport function referendumsInfo(instanceId, api) {\n  return memo(instanceId, ids => ids.length ? api.query.democracy.referendumInfoOf.multi(ids).pipe(switchMap(infos => combineLatest(ids.map((id, index) => api.derive.democracy._referendumInfo(id, infos[index])))), map(infos => infos.filter(r => !!r))) : of([]));\n}","map":{"version":3,"names":["combineLatest","map","of","switchMap","isFunction","objectSpread","memo","calcVotes","getImageHash","getStatus","votesPrev","api","referendumId","query","democracy","pipe","votersFor","length","multi","accountId","derive","balances","votingBalances","_ref","votes","index","balance","votingBalance","registry","createType","isDelegating","vote","extractVotes","mapped","filter","_ref2","voting","isDirect","_ref3","asDirect","_ref4","idx","eq","_ref5","directVotes","reduce","result","_ref6","_ref7","isStandard","push","asStandard","votesCurr","votingOf","entries","allVoting","_ref8","args","delegations","_ref9","_ref10","asDelegating","forEach","_ref11","conviction","target","toDelegator","find","_ref12","to","_ref13","aye","isAye","_referendumVotes","instanceId","referendum","sqrtElectorate","_ref14","_referendumsVotes","referendums","_referendumInfo","info","status","preimage","proposal","proposalHash","image","imageHash","referendumsInfo","ids","referendumInfoOf","infos","id","r"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/democracy/referendumsInfo.js"],"sourcesContent":["import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { isFunction, objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { calcVotes, getImageHash, getStatus } from './util.js';\nfunction votesPrev(api, referendumId) {\n    return api.query.democracy['votersFor'](referendumId).pipe(switchMap((votersFor) => combineLatest([\n        of(votersFor),\n        votersFor.length\n            ? api.query.democracy['voteOf'].multi(votersFor.map((accountId) => [referendumId, accountId]))\n            : of([]),\n        api.derive.balances.votingBalances(votersFor)\n    ])), map(([votersFor, votes, balances]) => votersFor.map((accountId, index) => ({\n        accountId,\n        balance: balances[index].votingBalance || api.registry.createType('Balance'),\n        isDelegating: false,\n        vote: votes[index] || api.registry.createType('Vote')\n    }))));\n}\nfunction extractVotes(mapped, referendumId) {\n    return mapped\n        .filter(([, voting]) => voting.isDirect)\n        .map(([accountId, voting]) => [\n        accountId,\n        voting.asDirect.votes.filter(([idx]) => idx.eq(referendumId))\n    ])\n        .filter(([, directVotes]) => !!directVotes.length)\n        .reduce((result, [accountId, votes]) => \n    // FIXME We are ignoring split votes\n    votes.reduce((result, [, vote]) => {\n        if (vote.isStandard) {\n            result.push(objectSpread({\n                accountId,\n                isDelegating: false\n            }, vote.asStandard));\n        }\n        return result;\n    }, result), []);\n}\nfunction votesCurr(api, referendumId) {\n    return api.query.democracy.votingOf.entries().pipe(map((allVoting) => {\n        const mapped = allVoting.map(([{ args: [accountId] }, voting]) => [accountId, voting]);\n        const votes = extractVotes(mapped, referendumId);\n        const delegations = mapped\n            .filter(([, voting]) => voting.isDelegating)\n            .map(([accountId, voting]) => [accountId, voting.asDelegating]);\n        // add delegations\n        delegations.forEach(([accountId, { balance, conviction, target }]) => {\n            // Are we delegating to a delegator\n            const toDelegator = delegations.find(([accountId]) => accountId.eq(target));\n            const to = votes.find(({ accountId }) => accountId.eq(toDelegator ? toDelegator[0] : target));\n            // this delegation has a target\n            if (to) {\n                votes.push({\n                    accountId,\n                    balance,\n                    isDelegating: true,\n                    vote: api.registry.createType('Vote', { aye: to.vote.isAye, conviction })\n                });\n            }\n        });\n        return votes;\n    }));\n}\nexport function _referendumVotes(instanceId, api) {\n    return memo(instanceId, (referendum) => combineLatest([\n        api.derive.democracy.sqrtElectorate(),\n        isFunction(api.query.democracy.votingOf)\n            ? votesCurr(api, referendum.index)\n            : votesPrev(api, referendum.index)\n    ]).pipe(map(([sqrtElectorate, votes]) => calcVotes(sqrtElectorate, referendum, votes))));\n}\nexport function _referendumsVotes(instanceId, api) {\n    return memo(instanceId, (referendums) => referendums.length\n        ? combineLatest(referendums.map((referendum) => api.derive.democracy._referendumVotes(referendum)))\n        : of([]));\n}\nexport function _referendumInfo(instanceId, api) {\n    return memo(instanceId, (index, info) => {\n        const status = getStatus(info);\n        return status\n            ? api.derive.democracy.preimage(status.proposal ||\n                status.proposalHash).pipe(map((image) => ({\n                image,\n                imageHash: getImageHash(status),\n                index: api.registry.createType('ReferendumIndex', index),\n                status\n            })))\n            : of(null);\n    });\n}\nexport function referendumsInfo(instanceId, api) {\n    return memo(instanceId, (ids) => ids.length\n        ? api.query.democracy.referendumInfoOf.multi(ids).pipe(switchMap((infos) => combineLatest(ids.map((id, index) => api.derive.democracy._referendumInfo(id, infos[index])))), map((infos) => infos.filter((r) => !!r)))\n        : of([]));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}