{"ast":null,"code":"\"use strict\";\n\nfunction mapFormatToGlType(gl) {\n  return {\n    // 8-bit formats\n    r8unorm: gl.UNSIGNED_BYTE,\n    r8snorm: gl.BYTE,\n    r8uint: gl.UNSIGNED_BYTE,\n    r8sint: gl.BYTE,\n    // 16-bit formats\n    r16uint: gl.UNSIGNED_SHORT,\n    r16sint: gl.SHORT,\n    r16float: gl.HALF_FLOAT,\n    rg8unorm: gl.UNSIGNED_BYTE,\n    rg8snorm: gl.BYTE,\n    rg8uint: gl.UNSIGNED_BYTE,\n    rg8sint: gl.BYTE,\n    // 32-bit formats\n    r32uint: gl.UNSIGNED_INT,\n    r32sint: gl.INT,\n    r32float: gl.FLOAT,\n    rg16uint: gl.UNSIGNED_SHORT,\n    rg16sint: gl.SHORT,\n    rg16float: gl.HALF_FLOAT,\n    rgba8unorm: gl.UNSIGNED_BYTE,\n    \"rgba8unorm-srgb\": gl.UNSIGNED_BYTE,\n    // Packed 32-bit formats\n    rgba8snorm: gl.BYTE,\n    rgba8uint: gl.UNSIGNED_BYTE,\n    rgba8sint: gl.BYTE,\n    bgra8unorm: gl.UNSIGNED_BYTE,\n    \"bgra8unorm-srgb\": gl.UNSIGNED_BYTE,\n    rgb9e5ufloat: gl.UNSIGNED_INT_5_9_9_9_REV,\n    rgb10a2unorm: gl.UNSIGNED_INT_2_10_10_10_REV,\n    rg11b10ufloat: gl.UNSIGNED_INT_10F_11F_11F_REV,\n    // 64-bit formats\n    rg32uint: gl.UNSIGNED_INT,\n    rg32sint: gl.INT,\n    rg32float: gl.FLOAT,\n    rgba16uint: gl.UNSIGNED_SHORT,\n    rgba16sint: gl.SHORT,\n    rgba16float: gl.HALF_FLOAT,\n    // 128-bit formats\n    rgba32uint: gl.UNSIGNED_INT,\n    rgba32sint: gl.INT,\n    rgba32float: gl.FLOAT,\n    // Depth/stencil formats\n    stencil8: gl.UNSIGNED_BYTE,\n    depth16unorm: gl.UNSIGNED_SHORT,\n    depth24plus: gl.UNSIGNED_INT,\n    \"depth24plus-stencil8\": gl.UNSIGNED_INT_24_8,\n    depth32float: gl.FLOAT,\n    \"depth32float-stencil8\": gl.FLOAT_32_UNSIGNED_INT_24_8_REV\n  };\n}\nexport { mapFormatToGlType };","map":{"version":3,"names":["mapFormatToGlType","gl","r8unorm","UNSIGNED_BYTE","r8snorm","BYTE","r8uint","r8sint","r16uint","UNSIGNED_SHORT","r16sint","SHORT","r16float","HALF_FLOAT","rg8unorm","rg8snorm","rg8uint","rg8sint","r32uint","UNSIGNED_INT","r32sint","INT","r32float","FLOAT","rg16uint","rg16sint","rg16float","rgba8unorm","rgba8snorm","rgba8uint","rgba8sint","bgra8unorm","rgb9e5ufloat","UNSIGNED_INT_5_9_9_9_REV","rgb10a2unorm","UNSIGNED_INT_2_10_10_10_REV","rg11b10ufloat","UNSIGNED_INT_10F_11F_11F_REV","rg32uint","rg32sint","rg32float","rgba16uint","rgba16sint","rgba16float","rgba32uint","rgba32sint","rgba32float","stencil8","depth16unorm","depth24plus","UNSIGNED_INT_24_8","depth32float","FLOAT_32_UNSIGNED_INT_24_8_REV"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/renderers/gl/texture/utils/mapFormatToGlType.ts"],"sourcesContent":["import type { GlRenderingContext } from '../../context/GlRenderingContext';\n\n/**\n * Returns a lookup table that maps each type-format pair to a compatible internal format.\n * @function mapTypeAndFormatToInternalFormat\n * @private\n * @param {WebGLRenderingContext} gl - The rendering context.\n * @returns Lookup table.\n */\nexport function mapFormatToGlType(gl: GlRenderingContext): Record<string, number>\n{\n    return {\n        // 8-bit formats\n        r8unorm: gl.UNSIGNED_BYTE,\n        r8snorm: gl.BYTE,\n        r8uint: gl.UNSIGNED_BYTE,\n        r8sint: gl.BYTE,\n\n        // 16-bit formats\n        r16uint: gl.UNSIGNED_SHORT,\n        r16sint: gl.SHORT,\n        r16float: gl.HALF_FLOAT,\n        rg8unorm: gl.UNSIGNED_BYTE,\n        rg8snorm: gl.BYTE,\n        rg8uint: gl.UNSIGNED_BYTE,\n        rg8sint: gl.BYTE,\n\n        // 32-bit formats\n        r32uint: gl.UNSIGNED_INT,\n        r32sint: gl.INT,\n        r32float: gl.FLOAT,\n        rg16uint: gl.UNSIGNED_SHORT,\n        rg16sint: gl.SHORT,\n        rg16float: gl.HALF_FLOAT,\n        rgba8unorm: gl.UNSIGNED_BYTE,\n        'rgba8unorm-srgb': gl.UNSIGNED_BYTE,\n\n        // Packed 32-bit formats\n        rgba8snorm: gl.BYTE,\n        rgba8uint: gl.UNSIGNED_BYTE,\n        rgba8sint: gl.BYTE,\n        bgra8unorm: gl.UNSIGNED_BYTE,\n        'bgra8unorm-srgb': gl.UNSIGNED_BYTE,\n        rgb9e5ufloat: gl.UNSIGNED_INT_5_9_9_9_REV,\n        rgb10a2unorm: gl.UNSIGNED_INT_2_10_10_10_REV,\n        rg11b10ufloat: gl.UNSIGNED_INT_10F_11F_11F_REV,\n\n        // 64-bit formats\n        rg32uint: gl.UNSIGNED_INT,\n        rg32sint: gl.INT,\n        rg32float: gl.FLOAT,\n        rgba16uint: gl.UNSIGNED_SHORT,\n        rgba16sint: gl.SHORT,\n        rgba16float: gl.HALF_FLOAT,\n\n        // 128-bit formats\n        rgba32uint: gl.UNSIGNED_INT,\n        rgba32sint: gl.INT,\n        rgba32float: gl.FLOAT,\n\n        // Depth/stencil formats\n        stencil8: gl.UNSIGNED_BYTE,\n        depth16unorm: gl.UNSIGNED_SHORT,\n        depth24plus: gl.UNSIGNED_INT,\n        'depth24plus-stencil8': gl.UNSIGNED_INT_24_8,\n        depth32float: gl.FLOAT,\n        'depth32float-stencil8': gl.FLOAT_32_UNSIGNED_INT_24_8_REV,\n\n    };\n}\n"],"mappings":";;AASO,SAASA,kBAAkBC,EAClC;EACW;IAAA;IAEHC,OAAA,EAASD,EAAG,CAAAE,aAAA;IACZC,OAAA,EAASH,EAAG,CAAAI,IAAA;IACZC,MAAA,EAAQL,EAAG,CAAAE,aAAA;IACXI,MAAA,EAAQN,EAAG,CAAAI,IAAA;IAAA;IAGXG,OAAA,EAASP,EAAG,CAAAQ,cAAA;IACZC,OAAA,EAAST,EAAG,CAAAU,KAAA;IACZC,QAAA,EAAUX,EAAG,CAAAY,UAAA;IACbC,QAAA,EAAUb,EAAG,CAAAE,aAAA;IACbY,QAAA,EAAUd,EAAG,CAAAI,IAAA;IACbW,OAAA,EAASf,EAAG,CAAAE,aAAA;IACZc,OAAA,EAAShB,EAAG,CAAAI,IAAA;IAAA;IAGZa,OAAA,EAASjB,EAAG,CAAAkB,YAAA;IACZC,OAAA,EAASnB,EAAG,CAAAoB,GAAA;IACZC,QAAA,EAAUrB,EAAG,CAAAsB,KAAA;IACbC,QAAA,EAAUvB,EAAG,CAAAQ,cAAA;IACbgB,QAAA,EAAUxB,EAAG,CAAAU,KAAA;IACbe,SAAA,EAAWzB,EAAG,CAAAY,UAAA;IACdc,UAAA,EAAY1B,EAAG,CAAAE,aAAA;IACf,mBAAmBF,EAAG,CAAAE,aAAA;IAAA;IAGtByB,UAAA,EAAY3B,EAAG,CAAAI,IAAA;IACfwB,SAAA,EAAW5B,EAAG,CAAAE,aAAA;IACd2B,SAAA,EAAW7B,EAAG,CAAAI,IAAA;IACd0B,UAAA,EAAY9B,EAAG,CAAAE,aAAA;IACf,mBAAmBF,EAAG,CAAAE,aAAA;IACtB6B,YAAA,EAAc/B,EAAG,CAAAgC,wBAAA;IACjBC,YAAA,EAAcjC,EAAG,CAAAkC,2BAAA;IACjBC,aAAA,EAAenC,EAAG,CAAAoC,4BAAA;IAAA;IAGlBC,QAAA,EAAUrC,EAAG,CAAAkB,YAAA;IACboB,QAAA,EAAUtC,EAAG,CAAAoB,GAAA;IACbmB,SAAA,EAAWvC,EAAG,CAAAsB,KAAA;IACdkB,UAAA,EAAYxC,EAAG,CAAAQ,cAAA;IACfiC,UAAA,EAAYzC,EAAG,CAAAU,KAAA;IACfgC,WAAA,EAAa1C,EAAG,CAAAY,UAAA;IAAA;IAGhB+B,UAAA,EAAY3C,EAAG,CAAAkB,YAAA;IACf0B,UAAA,EAAY5C,EAAG,CAAAoB,GAAA;IACfyB,WAAA,EAAa7C,EAAG,CAAAsB,KAAA;IAAA;IAGhBwB,QAAA,EAAU9C,EAAG,CAAAE,aAAA;IACb6C,YAAA,EAAc/C,EAAG,CAAAQ,cAAA;IACjBwC,WAAA,EAAahD,EAAG,CAAAkB,YAAA;IAChB,wBAAwBlB,EAAG,CAAAiD,iBAAA;IAC3BC,YAAA,EAAclD,EAAG,CAAAsB,KAAA;IACjB,yBAAyBtB,EAAG,CAAAmD;EAAA,CAEhC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}