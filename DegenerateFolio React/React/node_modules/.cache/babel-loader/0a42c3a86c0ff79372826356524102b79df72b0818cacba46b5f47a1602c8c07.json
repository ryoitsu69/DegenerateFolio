{"ast":null,"code":"import { ExtensionType } from '../extensions/Extensions.mjs';\nimport { PrepareUpload } from './PrepareUpload.mjs';\n\"use strict\";\nclass PrepareSystem extends PrepareUpload {\n  /** Destroys the plugin, don't use after this. */\n  destroy() {\n    clearTimeout(this.timeout);\n    this.renderer = null;\n    this.queue = null;\n    this.resolves = null;\n  }\n}\n/** @ignore */\nPrepareSystem.extension = {\n  type: [ExtensionType.WebGLSystem, ExtensionType.WebGPUSystem],\n  name: \"prepare\"\n};\nexport { PrepareSystem };","map":{"version":3,"names":["PrepareSystem","PrepareUpload","destroy","clearTimeout","timeout","renderer","queue","resolves","extension","type","ExtensionType","WebGLSystem","WebGPUSystem","name"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/prepare/PrepareSystem.ts"],"sourcesContent":["import { ExtensionType } from '../extensions/Extensions';\nimport { PrepareUpload } from './PrepareUpload';\n\nimport type { System } from '../rendering/renderers/shared/system/System';\n\n/**\n * The prepare system provides renderer-specific plugins for pre-rendering DisplayObjects. This is useful for\n * asynchronously preparing and uploading to the GPU assets, textures, graphics waiting to be displayed.\n *\n * Do not instantiate this plugin directly. It is available from the `renderer.prepare` property.\n * @example\n * import 'pixi.js/prepare';\n * import { Application, Graphics } from 'pixi.js';\n *\n * // Create a new application (prepare will be auto-added to renderer)\n * const app = new Application();\n * await app.init();\n * document.body.appendChild(app.view);\n *\n * // Don't start rendering right away\n * app.stop();\n *\n * // Create a display object\n * const rect = new Graphics()\n *     .beginFill(0x00ff00)\n *     .drawRect(40, 40, 200, 200);\n *\n * // Add to the stage\n * app.stage.addChild(rect);\n *\n * // Don't start rendering until the graphic is uploaded to the GPU\n * app.renderer.prepare.upload(app.stage, () => {\n *     app.start();\n * });\n * @memberof rendering\n */\nexport class PrepareSystem extends PrepareUpload implements System\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLSystem,\n            ExtensionType.WebGPUSystem,\n        ],\n        name: 'prepare',\n    } as const;\n\n    /** Destroys the plugin, don't use after this. */\n    public destroy(): void\n    {\n        clearTimeout(this.timeout);\n        this.renderer = null;\n        this.queue = null;\n        this.resolves = null;\n    }\n}\n"],"mappings":";;;AAoCO,MAAMA,aAAA,SAAsBC,aACnC;EAAA;EAWWC,OACPA,CAAA;IACIC,YAAA,CAAa,KAAKC,OAAO;IACzB,KAAKC,QAAW;IAChB,KAAKC,KAAQ;IACb,KAAKC,QAAW;EAAA;AAExB;AAAA;AAnBaP,aAAA,CAGKQ,SAAY;EACtBC,IAAM,GACFC,aAAc,CAAAC,WAAA,EACdD,aAAc,CAAAE,YAAA,CAClB;EACAC,IAAM;AACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}