{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines common conditions for use with\n * {@link webdriver.WebDriver#wait WebDriver wait}.\n *\n * Sample usage:\n *\n *     driver.get('http://www.google.com/ncr');\n *\n *     var query = driver.wait(until.elementLocated(By.name('q')));\n *     query.sendKeys('webdriver\\n');\n *\n *     driver.wait(until.titleIs('webdriver - Google Search'));\n *\n * To define a custom condition, simply call WebDriver.wait with a function\n * that will eventually return a truthy-value (neither null, undefined, false,\n * 0, or the empty string):\n *\n *     driver.wait(function() {\n *       return driver.getTitle().then(function(title) {\n *         return title === 'webdriver - Google Search';\n *       });\n *     }, 1000);\n */\n\n'use strict';\n\nconst by = require('./by');\nconst error = require('./error');\nconst webdriver = require('./webdriver'),\n  Condition = webdriver.Condition,\n  WebElementCondition = webdriver.WebElementCondition;\n\n/**\n * Creates a condition that will wait until the input driver is able to switch\n * to the designated frame. The target frame may be specified as\n *\n * 1. a numeric index into\n *     [window.frames](https://developer.mozilla.org/en-US/docs/Web/API/Window.frames)\n *     for the currently selected frame.\n * 2. a {@link ./webdriver.WebElement}, which must reference a FRAME or IFRAME\n *     element on the current page.\n * 3. a locator which may be used to first locate a FRAME or IFRAME on the\n *     current page before attempting to switch to it.\n *\n * Upon successful resolution of this condition, the driver will be left\n * focused on the new frame.\n *\n * @param {!(number|./webdriver.WebElement|By|\n *           function(!./webdriver.WebDriver): !./webdriver.WebElement)} frame\n *     The frame identifier.\n * @return {!Condition<boolean>} A new condition.\n */\nfunction ableToSwitchToFrame(frame) {\n  let condition;\n  if (typeof frame === 'number' || frame instanceof webdriver.WebElement) {\n    condition = driver => attemptToSwitchFrames(driver, frame);\n  } else {\n    condition = function (driver) {\n      let locator = /** @type {!(By|Function)} */frame;\n      return driver.findElements(locator).then(function (els) {\n        if (els.length) {\n          return attemptToSwitchFrames(driver, els[0]);\n        }\n      });\n    };\n  }\n  return new Condition('to be able to switch to frame', condition);\n  function attemptToSwitchFrames(driver, frame) {\n    return driver.switchTo().frame(frame).then(function () {\n      return true;\n    }, function (e) {\n      if (!(e instanceof error.NoSuchFrameError)) {\n        throw e;\n      }\n    });\n  }\n}\n\n/**\n * Creates a condition that waits for an alert to be opened. Upon success, the\n * returned promise will be fulfilled with the handle for the opened alert.\n *\n * @return {!Condition<!./webdriver.Alert>} The new condition.\n */\nfunction alertIsPresent() {\n  return new Condition('for alert to be present', function (driver) {\n    return driver.switchTo().alert().catch(function (e) {\n      if (!(e instanceof error.NoSuchAlertError ||\n      // XXX: Workaround for GeckoDriver error `TypeError: can't convert null\n      // to object`. For more details, see\n      // https://github.com/SeleniumHQ/selenium/pull/2137\n      e instanceof error.WebDriverError && e.message === `can't convert null to object`)) {\n        throw e;\n      }\n    });\n  });\n}\n\n/**\n * Creates a condition that will wait for the current page's title to match the\n * given value.\n *\n * @param {string} title The expected page title.\n * @return {!Condition<boolean>} The new condition.\n */\nfunction titleIs(title) {\n  return new Condition('for title to be ' + JSON.stringify(title), function (driver) {\n    return driver.getTitle().then(function (t) {\n      return t === title;\n    });\n  });\n}\n\n/**\n * Creates a condition that will wait for the current page's title to contain\n * the given substring.\n *\n * @param {string} substr The substring that should be present in the page\n *     title.\n * @return {!Condition<boolean>} The new condition.\n */\nfunction titleContains(substr) {\n  return new Condition('for title to contain ' + JSON.stringify(substr), function (driver) {\n    return driver.getTitle().then(function (title) {\n      return title.indexOf(substr) !== -1;\n    });\n  });\n}\n\n/**\n * Creates a condition that will wait for the current page's title to match the\n * given regular expression.\n *\n * @param {!RegExp} regex The regular expression to test against.\n * @return {!Condition<boolean>} The new condition.\n */\nfunction titleMatches(regex) {\n  return new Condition('for title to match ' + regex, function (driver) {\n    return driver.getTitle().then(function (title) {\n      return regex.test(title);\n    });\n  });\n}\n\n/**\n * Creates a condition that will wait for the current page's url to match the\n * given value.\n *\n * @param {string} url The expected page url.\n * @return {!Condition<boolean>} The new condition.\n */\nfunction urlIs(url) {\n  return new Condition('for URL to be ' + JSON.stringify(url), function (driver) {\n    return driver.getCurrentUrl().then(function (u) {\n      return u === url;\n    });\n  });\n}\n\n/**\n * Creates a condition that will wait for the current page's url to contain\n * the given substring.\n *\n * @param {string} substrUrl The substring that should be present in the current\n *     URL.\n * @return {!Condition<boolean>} The new condition.\n */\nfunction urlContains(substrUrl) {\n  return new Condition('for URL to contain ' + JSON.stringify(substrUrl), function (driver) {\n    return driver.getCurrentUrl().then(function (url) {\n      return url && url.includes(substrUrl);\n    });\n  });\n}\n\n/**\n * Creates a condition that will wait for the current page's url to match the\n * given regular expression.\n *\n * @param {!RegExp} regex The regular expression to test against.\n * @return {!Condition<boolean>} The new condition.\n */\nfunction urlMatches(regex) {\n  return new Condition('for URL to match ' + regex, function (driver) {\n    return driver.getCurrentUrl().then(function (url) {\n      return regex.test(url);\n    });\n  });\n}\n\n/**\n * Creates a condition that will loop until an element is\n * {@link ./webdriver.WebDriver#findElement found} with the given locator.\n *\n * @param {!(By|Function)} locator The locator to use.\n * @return {!WebElementCondition} The new condition.\n */\nfunction elementLocated(locator) {\n  locator = by.checkedLocator(locator);\n  let locatorStr = typeof locator === 'function' ? 'by function()' : locator + '';\n  return new WebElementCondition('for element to be located ' + locatorStr, function (driver) {\n    return driver.findElements(locator).then(function (elements) {\n      return elements[0];\n    });\n  });\n}\n\n/**\n * Creates a condition that will loop until at least one element is\n * {@link ./webdriver.WebDriver#findElement found} with the given locator.\n *\n * @param {!(By|Function)} locator The locator to use.\n * @return {!Condition<!Array<!./webdriver.WebElement>>} The new\n *     condition.\n */\nfunction elementsLocated(locator) {\n  locator = by.checkedLocator(locator);\n  let locatorStr = typeof locator === 'function' ? 'by function()' : locator + '';\n  return new Condition('for at least one element to be located ' + locatorStr, function (driver) {\n    return driver.findElements(locator).then(function (elements) {\n      return elements.length > 0 ? elements : null;\n    });\n  });\n}\n\n/**\n * Creates a condition that will wait for the given element to become stale. An\n * element is considered stale once it is removed from the DOM, or a new page\n * has loaded.\n *\n * @param {!./webdriver.WebElement} element The element that should become stale.\n * @return {!Condition<boolean>} The new condition.\n */\nfunction stalenessOf(element) {\n  return new Condition('element to become stale', function () {\n    return element.getTagName().then(function () {\n      return false;\n    }, function (e) {\n      if (e instanceof error.StaleElementReferenceError) {\n        return true;\n      }\n      throw e;\n    });\n  });\n}\n\n/**\n * Creates a condition that will wait for the given element to become visible.\n *\n * @param {!./webdriver.WebElement} element The element to test.\n * @return {!WebElementCondition} The new condition.\n * @see ./webdriver.WebDriver#isDisplayed\n */\nfunction elementIsVisible(element) {\n  return new WebElementCondition('until element is visible', function () {\n    return element.isDisplayed().then(v => v ? element : null);\n  });\n}\n\n/**\n * Creates a condition that will wait for the given element to be in the DOM,\n * yet not visible to the user.\n *\n * @param {!./webdriver.WebElement} element The element to test.\n * @return {!WebElementCondition} The new condition.\n * @see ./webdriver.WebDriver#isDisplayed\n */\nfunction elementIsNotVisible(element) {\n  return new WebElementCondition('until element is not visible', function () {\n    return element.isDisplayed().then(v => v ? null : element);\n  });\n}\n\n/**\n * Creates a condition that will wait for the given element to be enabled.\n *\n * @param {!./webdriver.WebElement} element The element to test.\n * @return {!WebElementCondition} The new condition.\n * @see webdriver.WebDriver#isEnabled\n */\nfunction elementIsEnabled(element) {\n  return new WebElementCondition('until element is enabled', function () {\n    return element.isEnabled().then(v => v ? element : null);\n  });\n}\n\n/**\n * Creates a condition that will wait for the given element to be disabled.\n *\n * @param {!./webdriver.WebElement} element The element to test.\n * @return {!WebElementCondition} The new condition.\n * @see webdriver.WebDriver#isEnabled\n */\nfunction elementIsDisabled(element) {\n  return new WebElementCondition('until element is disabled', function () {\n    return element.isEnabled().then(v => v ? null : element);\n  });\n}\n\n/**\n * Creates a condition that will wait for the given element to be selected.\n * @param {!./webdriver.WebElement} element The element to test.\n * @return {!WebElementCondition} The new condition.\n * @see webdriver.WebDriver#isSelected\n */\nfunction elementIsSelected(element) {\n  return new WebElementCondition('until element is selected', function () {\n    return element.isSelected().then(v => v ? element : null);\n  });\n}\n\n/**\n * Creates a condition that will wait for the given element to be deselected.\n *\n * @param {!./webdriver.WebElement} element The element to test.\n * @return {!WebElementCondition} The new condition.\n * @see webdriver.WebDriver#isSelected\n */\nfunction elementIsNotSelected(element) {\n  return new WebElementCondition('until element is not selected', function () {\n    return element.isSelected().then(v => v ? null : element);\n  });\n}\n\n/**\n * Creates a condition that will wait for the given element's\n * {@link webdriver.WebDriver#getText visible text} to match the given\n * {@code text} exactly.\n *\n * @param {!./webdriver.WebElement} element The element to test.\n * @param {string} text The expected text.\n * @return {!WebElementCondition} The new condition.\n * @see webdriver.WebDriver#getText\n */\nfunction elementTextIs(element, text) {\n  return new WebElementCondition('until element text is', function () {\n    return element.getText().then(t => t === text ? element : null);\n  });\n}\n\n/**\n * Creates a condition that will wait for the given element's\n * {@link webdriver.WebDriver#getText visible text} to contain the given\n * substring.\n *\n * @param {!./webdriver.WebElement} element The element to test.\n * @param {string} substr The substring to search for.\n * @return {!WebElementCondition} The new condition.\n * @see webdriver.WebDriver#getText\n */\nfunction elementTextContains(element, substr) {\n  return new WebElementCondition('until element text contains', function () {\n    return element.getText().then(t => t.indexOf(substr) != -1 ? element : null);\n  });\n}\n\n/**\n * Creates a condition that will wait for the given element's\n * {@link webdriver.WebDriver#getText visible text} to match a regular\n * expression.\n *\n * @param {!./webdriver.WebElement} element The element to test.\n * @param {!RegExp} regex The regular expression to test against.\n * @return {!WebElementCondition} The new condition.\n * @see webdriver.WebDriver#getText\n */\nfunction elementTextMatches(element, regex) {\n  return new WebElementCondition('until element text matches', function () {\n    return element.getText().then(t => regex.test(t) ? element : null);\n  });\n}\n\n// PUBLIC API\n\nmodule.exports = {\n  elementTextMatches,\n  elementTextContains,\n  elementTextIs,\n  elementIsNotSelected,\n  elementIsSelected,\n  elementIsDisabled,\n  ableToSwitchToFrame,\n  elementIsEnabled,\n  elementIsNotVisible,\n  elementIsVisible,\n  stalenessOf,\n  elementsLocated,\n  elementLocated,\n  urlMatches,\n  urlContains,\n  urlIs,\n  titleMatches,\n  titleContains,\n  alertIsPresent,\n  titleIs\n};","map":{"version":3,"names":["by","require","error","webdriver","Condition","WebElementCondition","ableToSwitchToFrame","frame","condition","WebElement","driver","attemptToSwitchFrames","locator","findElements","then","els","length","switchTo","e","NoSuchFrameError","alertIsPresent","alert","catch","NoSuchAlertError","WebDriverError","message","titleIs","title","JSON","stringify","getTitle","t","titleContains","substr","indexOf","titleMatches","regex","test","urlIs","url","getCurrentUrl","u","urlContains","substrUrl","includes","urlMatches","elementLocated","checkedLocator","locatorStr","elements","elementsLocated","stalenessOf","element","getTagName","StaleElementReferenceError","elementIsVisible","isDisplayed","v","elementIsNotVisible","elementIsEnabled","isEnabled","elementIsDisabled","elementIsSelected","isSelected","elementIsNotSelected","elementTextIs","text","getText","elementTextContains","elementTextMatches","module","exports"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/selenium-webdriver/lib/until.js"],"sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines common conditions for use with\n * {@link webdriver.WebDriver#wait WebDriver wait}.\n *\n * Sample usage:\n *\n *     driver.get('http://www.google.com/ncr');\n *\n *     var query = driver.wait(until.elementLocated(By.name('q')));\n *     query.sendKeys('webdriver\\n');\n *\n *     driver.wait(until.titleIs('webdriver - Google Search'));\n *\n * To define a custom condition, simply call WebDriver.wait with a function\n * that will eventually return a truthy-value (neither null, undefined, false,\n * 0, or the empty string):\n *\n *     driver.wait(function() {\n *       return driver.getTitle().then(function(title) {\n *         return title === 'webdriver - Google Search';\n *       });\n *     }, 1000);\n */\n\n'use strict'\n\nconst by = require('./by')\nconst error = require('./error')\nconst webdriver = require('./webdriver'),\n  Condition = webdriver.Condition,\n  WebElementCondition = webdriver.WebElementCondition\n\n/**\n * Creates a condition that will wait until the input driver is able to switch\n * to the designated frame. The target frame may be specified as\n *\n * 1. a numeric index into\n *     [window.frames](https://developer.mozilla.org/en-US/docs/Web/API/Window.frames)\n *     for the currently selected frame.\n * 2. a {@link ./webdriver.WebElement}, which must reference a FRAME or IFRAME\n *     element on the current page.\n * 3. a locator which may be used to first locate a FRAME or IFRAME on the\n *     current page before attempting to switch to it.\n *\n * Upon successful resolution of this condition, the driver will be left\n * focused on the new frame.\n *\n * @param {!(number|./webdriver.WebElement|By|\n *           function(!./webdriver.WebDriver): !./webdriver.WebElement)} frame\n *     The frame identifier.\n * @return {!Condition<boolean>} A new condition.\n */\nfunction ableToSwitchToFrame(frame) {\n  let condition\n  if (typeof frame === 'number' || frame instanceof webdriver.WebElement) {\n    condition = (driver) => attemptToSwitchFrames(driver, frame)\n  } else {\n    condition = function (driver) {\n      let locator = /** @type {!(By|Function)} */ (frame)\n      return driver.findElements(locator).then(function (els) {\n        if (els.length) {\n          return attemptToSwitchFrames(driver, els[0])\n        }\n      })\n    }\n  }\n\n  return new Condition('to be able to switch to frame', condition)\n\n  function attemptToSwitchFrames(driver, frame) {\n    return driver\n      .switchTo()\n      .frame(frame)\n      .then(\n        function () {\n          return true\n        },\n        function (e) {\n          if (!(e instanceof error.NoSuchFrameError)) {\n            throw e\n          }\n        },\n      )\n  }\n}\n\n/**\n * Creates a condition that waits for an alert to be opened. Upon success, the\n * returned promise will be fulfilled with the handle for the opened alert.\n *\n * @return {!Condition<!./webdriver.Alert>} The new condition.\n */\nfunction alertIsPresent() {\n  return new Condition('for alert to be present', function (driver) {\n    return driver\n      .switchTo()\n      .alert()\n      .catch(function (e) {\n        if (\n          !(\n            e instanceof error.NoSuchAlertError ||\n            // XXX: Workaround for GeckoDriver error `TypeError: can't convert null\n            // to object`. For more details, see\n            // https://github.com/SeleniumHQ/selenium/pull/2137\n            (e instanceof error.WebDriverError && e.message === `can't convert null to object`)\n          )\n        ) {\n          throw e\n        }\n      })\n  })\n}\n\n/**\n * Creates a condition that will wait for the current page's title to match the\n * given value.\n *\n * @param {string} title The expected page title.\n * @return {!Condition<boolean>} The new condition.\n */\nfunction titleIs(title) {\n  return new Condition('for title to be ' + JSON.stringify(title), function (driver) {\n    return driver.getTitle().then(function (t) {\n      return t === title\n    })\n  })\n}\n\n/**\n * Creates a condition that will wait for the current page's title to contain\n * the given substring.\n *\n * @param {string} substr The substring that should be present in the page\n *     title.\n * @return {!Condition<boolean>} The new condition.\n */\nfunction titleContains(substr) {\n  return new Condition('for title to contain ' + JSON.stringify(substr), function (driver) {\n    return driver.getTitle().then(function (title) {\n      return title.indexOf(substr) !== -1\n    })\n  })\n}\n\n/**\n * Creates a condition that will wait for the current page's title to match the\n * given regular expression.\n *\n * @param {!RegExp} regex The regular expression to test against.\n * @return {!Condition<boolean>} The new condition.\n */\nfunction titleMatches(regex) {\n  return new Condition('for title to match ' + regex, function (driver) {\n    return driver.getTitle().then(function (title) {\n      return regex.test(title)\n    })\n  })\n}\n\n/**\n * Creates a condition that will wait for the current page's url to match the\n * given value.\n *\n * @param {string} url The expected page url.\n * @return {!Condition<boolean>} The new condition.\n */\nfunction urlIs(url) {\n  return new Condition('for URL to be ' + JSON.stringify(url), function (driver) {\n    return driver.getCurrentUrl().then(function (u) {\n      return u === url\n    })\n  })\n}\n\n/**\n * Creates a condition that will wait for the current page's url to contain\n * the given substring.\n *\n * @param {string} substrUrl The substring that should be present in the current\n *     URL.\n * @return {!Condition<boolean>} The new condition.\n */\nfunction urlContains(substrUrl) {\n  return new Condition('for URL to contain ' + JSON.stringify(substrUrl), function (driver) {\n    return driver.getCurrentUrl().then(function (url) {\n      return url && url.includes(substrUrl)\n    })\n  })\n}\n\n/**\n * Creates a condition that will wait for the current page's url to match the\n * given regular expression.\n *\n * @param {!RegExp} regex The regular expression to test against.\n * @return {!Condition<boolean>} The new condition.\n */\nfunction urlMatches(regex) {\n  return new Condition('for URL to match ' + regex, function (driver) {\n    return driver.getCurrentUrl().then(function (url) {\n      return regex.test(url)\n    })\n  })\n}\n\n/**\n * Creates a condition that will loop until an element is\n * {@link ./webdriver.WebDriver#findElement found} with the given locator.\n *\n * @param {!(By|Function)} locator The locator to use.\n * @return {!WebElementCondition} The new condition.\n */\nfunction elementLocated(locator) {\n  locator = by.checkedLocator(locator)\n  let locatorStr = typeof locator === 'function' ? 'by function()' : locator + ''\n  return new WebElementCondition('for element to be located ' + locatorStr, function (driver) {\n    return driver.findElements(locator).then(function (elements) {\n      return elements[0]\n    })\n  })\n}\n\n/**\n * Creates a condition that will loop until at least one element is\n * {@link ./webdriver.WebDriver#findElement found} with the given locator.\n *\n * @param {!(By|Function)} locator The locator to use.\n * @return {!Condition<!Array<!./webdriver.WebElement>>} The new\n *     condition.\n */\nfunction elementsLocated(locator) {\n  locator = by.checkedLocator(locator)\n  let locatorStr = typeof locator === 'function' ? 'by function()' : locator + ''\n  return new Condition('for at least one element to be located ' + locatorStr, function (driver) {\n    return driver.findElements(locator).then(function (elements) {\n      return elements.length > 0 ? elements : null\n    })\n  })\n}\n\n/**\n * Creates a condition that will wait for the given element to become stale. An\n * element is considered stale once it is removed from the DOM, or a new page\n * has loaded.\n *\n * @param {!./webdriver.WebElement} element The element that should become stale.\n * @return {!Condition<boolean>} The new condition.\n */\nfunction stalenessOf(element) {\n  return new Condition('element to become stale', function () {\n    return element.getTagName().then(\n      function () {\n        return false\n      },\n      function (e) {\n        if (e instanceof error.StaleElementReferenceError) {\n          return true\n        }\n        throw e\n      },\n    )\n  })\n}\n\n/**\n * Creates a condition that will wait for the given element to become visible.\n *\n * @param {!./webdriver.WebElement} element The element to test.\n * @return {!WebElementCondition} The new condition.\n * @see ./webdriver.WebDriver#isDisplayed\n */\nfunction elementIsVisible(element) {\n  return new WebElementCondition('until element is visible', function () {\n    return element.isDisplayed().then((v) => (v ? element : null))\n  })\n}\n\n/**\n * Creates a condition that will wait for the given element to be in the DOM,\n * yet not visible to the user.\n *\n * @param {!./webdriver.WebElement} element The element to test.\n * @return {!WebElementCondition} The new condition.\n * @see ./webdriver.WebDriver#isDisplayed\n */\nfunction elementIsNotVisible(element) {\n  return new WebElementCondition('until element is not visible', function () {\n    return element.isDisplayed().then((v) => (v ? null : element))\n  })\n}\n\n/**\n * Creates a condition that will wait for the given element to be enabled.\n *\n * @param {!./webdriver.WebElement} element The element to test.\n * @return {!WebElementCondition} The new condition.\n * @see webdriver.WebDriver#isEnabled\n */\nfunction elementIsEnabled(element) {\n  return new WebElementCondition('until element is enabled', function () {\n    return element.isEnabled().then((v) => (v ? element : null))\n  })\n}\n\n/**\n * Creates a condition that will wait for the given element to be disabled.\n *\n * @param {!./webdriver.WebElement} element The element to test.\n * @return {!WebElementCondition} The new condition.\n * @see webdriver.WebDriver#isEnabled\n */\nfunction elementIsDisabled(element) {\n  return new WebElementCondition('until element is disabled', function () {\n    return element.isEnabled().then((v) => (v ? null : element))\n  })\n}\n\n/**\n * Creates a condition that will wait for the given element to be selected.\n * @param {!./webdriver.WebElement} element The element to test.\n * @return {!WebElementCondition} The new condition.\n * @see webdriver.WebDriver#isSelected\n */\nfunction elementIsSelected(element) {\n  return new WebElementCondition('until element is selected', function () {\n    return element.isSelected().then((v) => (v ? element : null))\n  })\n}\n\n/**\n * Creates a condition that will wait for the given element to be deselected.\n *\n * @param {!./webdriver.WebElement} element The element to test.\n * @return {!WebElementCondition} The new condition.\n * @see webdriver.WebDriver#isSelected\n */\nfunction elementIsNotSelected(element) {\n  return new WebElementCondition('until element is not selected', function () {\n    return element.isSelected().then((v) => (v ? null : element))\n  })\n}\n\n/**\n * Creates a condition that will wait for the given element's\n * {@link webdriver.WebDriver#getText visible text} to match the given\n * {@code text} exactly.\n *\n * @param {!./webdriver.WebElement} element The element to test.\n * @param {string} text The expected text.\n * @return {!WebElementCondition} The new condition.\n * @see webdriver.WebDriver#getText\n */\nfunction elementTextIs(element, text) {\n  return new WebElementCondition('until element text is', function () {\n    return element.getText().then((t) => (t === text ? element : null))\n  })\n}\n\n/**\n * Creates a condition that will wait for the given element's\n * {@link webdriver.WebDriver#getText visible text} to contain the given\n * substring.\n *\n * @param {!./webdriver.WebElement} element The element to test.\n * @param {string} substr The substring to search for.\n * @return {!WebElementCondition} The new condition.\n * @see webdriver.WebDriver#getText\n */\nfunction elementTextContains(element, substr) {\n  return new WebElementCondition('until element text contains', function () {\n    return element.getText().then((t) => (t.indexOf(substr) != -1 ? element : null))\n  })\n}\n\n/**\n * Creates a condition that will wait for the given element's\n * {@link webdriver.WebDriver#getText visible text} to match a regular\n * expression.\n *\n * @param {!./webdriver.WebElement} element The element to test.\n * @param {!RegExp} regex The regular expression to test against.\n * @return {!WebElementCondition} The new condition.\n * @see webdriver.WebDriver#getText\n */\nfunction elementTextMatches(element, regex) {\n  return new WebElementCondition('until element text matches', function () {\n    return element.getText().then((t) => (regex.test(t) ? element : null))\n  })\n}\n\n// PUBLIC API\n\nmodule.exports = {\n  elementTextMatches,\n  elementTextContains,\n  elementTextIs,\n  elementIsNotSelected,\n  elementIsSelected,\n  elementIsDisabled,\n  ableToSwitchToFrame,\n  elementIsEnabled,\n  elementIsNotVisible,\n  elementIsVisible,\n  stalenessOf,\n  elementsLocated,\n  elementLocated,\n  urlMatches,\n  urlContains,\n  urlIs,\n  titleMatches,\n  titleContains,\n  alertIsPresent,\n  titleIs,\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}