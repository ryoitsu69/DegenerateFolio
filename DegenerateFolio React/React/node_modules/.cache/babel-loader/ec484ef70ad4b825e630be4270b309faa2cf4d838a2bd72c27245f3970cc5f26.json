{"ast":null,"code":"import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nfunction withProgressField(field) {\n  return (instanceId, api) => memo(instanceId, () => api.derive.session.progress().pipe(map(info => info[field])));\n}\nfunction createDerive(api, info, _ref) {\n  let [currentSlot, epochIndex, epochOrGenesisStartSlot, activeEraStartSessionIndex] = _ref;\n  const epochStartSlot = epochIndex.mul(info.sessionLength).iadd(epochOrGenesisStartSlot);\n  const sessionProgress = currentSlot.sub(epochStartSlot);\n  const eraProgress = info.currentIndex.sub(activeEraStartSessionIndex).imul(info.sessionLength).iadd(sessionProgress);\n  return objectSpread({\n    eraProgress: api.registry.createType('BlockNumber', eraProgress),\n    sessionProgress: api.registry.createType('BlockNumber', sessionProgress)\n  }, info);\n}\nfunction queryAura(api) {\n  return api.derive.session.info().pipe(map(info => objectSpread({\n    eraProgress: api.registry.createType('BlockNumber'),\n    sessionProgress: api.registry.createType('BlockNumber')\n  }, info)));\n}\nfunction queryBabe(api) {\n  return api.derive.session.info().pipe(switchMap(info => {\n    var _api$query$staking;\n    return combineLatest([of(info),\n    // we may have no staking, but have babe (permissioned)\n    (_api$query$staking = api.query.staking) !== null && _api$query$staking !== void 0 && _api$query$staking.erasStartSessionIndex ? api.queryMulti([api.query.babe.currentSlot, api.query.babe.epochIndex, api.query.babe.genesisSlot, [api.query.staking.erasStartSessionIndex, info.activeEra]]) : api.queryMulti([api.query.babe.currentSlot, api.query.babe.epochIndex, api.query.babe.genesisSlot])]);\n  }), map(_ref2 => {\n    let [info, [currentSlot, epochIndex, genesisSlot, optStartIndex]] = _ref2;\n    return [info, [currentSlot, epochIndex, genesisSlot, optStartIndex && optStartIndex.isSome ? optStartIndex.unwrap() : api.registry.createType('SessionIndex', 1)]];\n  }));\n}\n/**\n * @description Retrieves all the session and era query and calculates specific values on it as the length of the session and eras\n */\nexport function progress(instanceId, api) {\n  return memo(instanceId, () => api.query.babe ? queryBabe(api).pipe(map(_ref3 => {\n    let [info, slots] = _ref3;\n    return createDerive(api, info, slots);\n  })) : queryAura(api));\n}\nexport const eraLength = /*#__PURE__*/withProgressField('eraLength');\nexport const eraProgress = /*#__PURE__*/withProgressField('eraProgress');\nexport const sessionProgress = /*#__PURE__*/withProgressField('sessionProgress');","map":{"version":3,"names":["combineLatest","map","of","switchMap","objectSpread","memo","withProgressField","field","instanceId","api","derive","session","progress","pipe","info","createDerive","_ref","currentSlot","epochIndex","epochOrGenesisStartSlot","activeEraStartSessionIndex","epochStartSlot","mul","sessionLength","iadd","sessionProgress","sub","eraProgress","currentIndex","imul","registry","createType","queryAura","queryBabe","_api$query$staking","query","staking","erasStartSessionIndex","queryMulti","babe","genesisSlot","activeEra","_ref2","optStartIndex","isSome","unwrap","_ref3","slots","eraLength"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/session/progress.js"],"sourcesContent":["import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nfunction withProgressField(field) {\n    return (instanceId, api) => memo(instanceId, () => api.derive.session.progress().pipe(map((info) => info[field])));\n}\nfunction createDerive(api, info, [currentSlot, epochIndex, epochOrGenesisStartSlot, activeEraStartSessionIndex]) {\n    const epochStartSlot = epochIndex.mul(info.sessionLength).iadd(epochOrGenesisStartSlot);\n    const sessionProgress = currentSlot.sub(epochStartSlot);\n    const eraProgress = info.currentIndex.sub(activeEraStartSessionIndex).imul(info.sessionLength).iadd(sessionProgress);\n    return objectSpread({\n        eraProgress: api.registry.createType('BlockNumber', eraProgress),\n        sessionProgress: api.registry.createType('BlockNumber', sessionProgress)\n    }, info);\n}\nfunction queryAura(api) {\n    return api.derive.session.info().pipe(map((info) => objectSpread({\n        eraProgress: api.registry.createType('BlockNumber'),\n        sessionProgress: api.registry.createType('BlockNumber')\n    }, info)));\n}\nfunction queryBabe(api) {\n    return api.derive.session.info().pipe(switchMap((info) => combineLatest([\n        of(info),\n        // we may have no staking, but have babe (permissioned)\n        api.query.staking?.erasStartSessionIndex\n            ? api.queryMulti([\n                api.query.babe.currentSlot,\n                api.query.babe.epochIndex,\n                api.query.babe.genesisSlot,\n                [api.query.staking.erasStartSessionIndex, info.activeEra]\n            ])\n            : api.queryMulti([\n                api.query.babe.currentSlot,\n                api.query.babe.epochIndex,\n                api.query.babe.genesisSlot\n            ])\n    ])), map(([info, [currentSlot, epochIndex, genesisSlot, optStartIndex]]) => [\n        info, [currentSlot, epochIndex, genesisSlot, optStartIndex && optStartIndex.isSome ? optStartIndex.unwrap() : api.registry.createType('SessionIndex', 1)]\n    ]));\n}\n/**\n * @description Retrieves all the session and era query and calculates specific values on it as the length of the session and eras\n */\nexport function progress(instanceId, api) {\n    return memo(instanceId, () => api.query.babe\n        ? queryBabe(api).pipe(map(([info, slots]) => createDerive(api, info, slots)))\n        : queryAura(api));\n}\nexport const eraLength = /*#__PURE__*/ withProgressField('eraLength');\nexport const eraProgress = /*#__PURE__*/ withProgressField('eraProgress');\nexport const sessionProgress = /*#__PURE__*/ withProgressField('sessionProgress');\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}