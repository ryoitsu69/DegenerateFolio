{"ast":null,"code":"const NUMBER_REGEX = new RegExp('(\\\\d+?)(?=(\\\\d{3})+(?!\\\\d)|$)', 'g');\n/**\n * @name formatDecimal\n * @description Formats a number into string format with thousand separators\n */\nexport function formatDecimal(value, separator = ',') {\n  // We can do this by adjusting the regx, however for the sake of clarity\n  // we rather strip and re-add the negative sign in the output\n  const isNegative = value[0].startsWith('-');\n  const matched = isNegative ? value.substring(1).match(NUMBER_REGEX) : value.match(NUMBER_REGEX);\n  return matched ? `${isNegative ? '-' : ''}${matched.join(separator)}` : value;\n}","map":{"version":3,"names":["NUMBER_REGEX","RegExp","formatDecimal","value","separator","isNegative","startsWith","matched","substring","match","join"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util/format/formatDecimal.js"],"sourcesContent":["const NUMBER_REGEX = new RegExp('(\\\\d+?)(?=(\\\\d{3})+(?!\\\\d)|$)', 'g');\n/**\n * @name formatDecimal\n * @description Formats a number into string format with thousand separators\n */\nexport function formatDecimal(value, separator = ',') {\n    // We can do this by adjusting the regx, however for the sake of clarity\n    // we rather strip and re-add the negative sign in the output\n    const isNegative = value[0].startsWith('-');\n    const matched = isNegative\n        ? value.substring(1).match(NUMBER_REGEX)\n        : value.match(NUMBER_REGEX);\n    return matched\n        ? `${isNegative ? '-' : ''}${matched.join(separator)}`\n        : value;\n}\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,IAAIC,MAAM,CAAC,+BAA+B,EAAE,GAAG,CAAC;AACrE;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAACC,KAAK,EAAEC,SAAS,GAAG,GAAG,EAAE;EAClD;EACA;EACA,MAAMC,UAAU,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACG,UAAU,CAAC,GAAG,CAAC;EAC3C,MAAMC,OAAO,GAAGF,UAAU,GACpBF,KAAK,CAACK,SAAS,CAAC,CAAC,CAAC,CAACC,KAAK,CAACT,YAAY,CAAC,GACtCG,KAAK,CAACM,KAAK,CAACT,YAAY,CAAC;EAC/B,OAAOO,OAAO,GACP,GAAEF,UAAU,GAAG,GAAG,GAAG,EAAG,GAAEE,OAAO,CAACG,IAAI,CAACN,SAAS,CAAE,EAAC,GACpDD,KAAK;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}