{"ast":null,"code":"\"use strict\";\n\nconst convertToList = (input, transform, forceTransform = false) => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n  if (!transform) {\n    return input;\n  }\n  return input.map(item => {\n    if (typeof item === \"string\" || forceTransform) {\n      return transform(item);\n    }\n    return item;\n  });\n};\nexport { convertToList };","map":{"version":3,"names":["convertToList","input","transform","forceTransform","Array","isArray","map","item"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/assets/utils/convertToList.ts"],"sourcesContent":["export const convertToList = <T>(\n    input: string | T | (string | T)[],\n    transform?: (input: string) => T,\n    forceTransform = false\n): T[] =>\n{\n    if (!Array.isArray(input))\n    {\n        input = [input as T];\n    }\n\n    if (!transform)\n    {\n        return input as T[];\n    }\n\n    return (input as (string | T)[]).map((item): T =>\n    {\n        if (typeof item === 'string' || forceTransform)\n        {\n            return transform(item as string);\n        }\n\n        return item as T;\n    });\n};\n"],"mappings":";;AAAO,MAAMA,aAAgB,GAAAA,CACzBC,KACA,EAAAC,SAAA,EACAC,cAAA,GAAiB,KAErB;EACI,IAAI,CAACC,KAAA,CAAMC,OAAQ,CAAAJ,KAAK,CACxB;IACIA,KAAA,GAAQ,CAACA,KAAU;EAAA;EAGvB,IAAI,CAACC,SACL;IACW,OAAAD,KAAA;EAAA;EAGH,OAAAA,KAAA,CAAyBK,GAAI,CAACC,IACtC;IACQ,WAAOA,IAAS,iBAAYJ,cAChC;MACI,OAAOD,SAAA,CAAUK,IAAc;IAAA;IAG5B,OAAAA,IAAA;EAAA,CACV;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}