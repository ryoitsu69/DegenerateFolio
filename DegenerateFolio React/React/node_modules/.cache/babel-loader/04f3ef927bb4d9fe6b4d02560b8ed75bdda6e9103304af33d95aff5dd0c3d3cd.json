{"ast":null,"code":"const warnings = {};\nfunction deprecation(version, message, ignoreDepth = 3) {\n  if (warnings[message]) return;\n  let stack = new Error().stack;\n  typeof stack > \"u\" ? console.warn(\"PixiJS Deprecation Warning: \", `${message}\nDeprecated since v${version}`) : (stack = stack.split(`\n`).splice(ignoreDepth).join(`\n`), console.groupCollapsed ? (console.groupCollapsed(\"%cPixiJS Deprecation Warning: %c%s\", \"color:#614108;background:#fffbe6\", \"font-weight:normal;color:#614108;background:#fffbe6\", `${message}\nDeprecated since v${version}`), console.warn(stack), console.groupEnd()) : (console.warn(\"PixiJS Deprecation Warning: \", `${message}\nDeprecated since v${version}`), console.warn(stack))), warnings[message] = !0;\n}\nexport { deprecation };","map":{"version":3,"names":["warnings","deprecation","version","message","ignoreDepth","stack","Error","console","warn","split","splice","join","groupCollapsed","groupEnd"],"sources":["/home/ryoitsu/node_modules/@pixi/utils/src/logging/deprecation.ts"],"sourcesContent":["import type { Dict } from '../types';\n\n// A map of warning messages already fired\nconst warnings: Dict<boolean> = {};\n\n/**\n * Helper for warning developers about deprecated features & settings.\n * A stack track for warnings is given; useful for tracking-down where\n * deprecated methods/properties/classes are being used within the code.\n * @memberof PIXI.utils\n * @function deprecation\n * @param {string} version - The version where the feature became deprecated\n * @param {string} message - Message should include what is deprecated, where, and the new solution\n * @param {number} [ignoreDepth=3] - The number of steps to ignore at the top of the error stack\n *        this is mostly to ignore internal deprecation calls.\n */\nexport function deprecation(version: string, message: string, ignoreDepth = 3): void\n{\n    // Ignore duplicat\n    if (warnings[message])\n    {\n        return;\n    }\n\n    /* eslint-disable no-console */\n    let stack = new Error().stack;\n\n    // Handle IE < 10 and Safari < 6\n    if (typeof stack === 'undefined')\n    {\n        console.warn('PixiJS Deprecation Warning: ', `${message}\\nDeprecated since v${version}`);\n    }\n    else\n    {\n        // chop off the stack trace which includes PixiJS internal calls\n        stack = stack.split('\\n').splice(ignoreDepth).join('\\n');\n\n        if (console.groupCollapsed)\n        {\n            console.groupCollapsed(\n                '%cPixiJS Deprecation Warning: %c%s',\n                'color:#614108;background:#fffbe6',\n                'font-weight:normal;color:#614108;background:#fffbe6',\n                `${message}\\nDeprecated since v${version}`\n            );\n            console.warn(stack);\n            console.groupEnd();\n        }\n        else\n        {\n            console.warn('PixiJS Deprecation Warning: ', `${message}\\nDeprecated since v${version}`);\n            console.warn(stack);\n        }\n    }\n    /* eslint-enable no-console */\n\n    warnings[message] = true;\n}\n"],"mappings":"AAGA,MAAMA,QAAA,GAA0B;AAazB,SAASC,YAAYC,OAAA,EAAiBC,OAAA,EAAiBC,WAAA,GAAc,GAC5E;EAEI,IAAIJ,QAAA,CAASG,OAAO,GAEhB;EAIA,IAAAE,KAAA,GAAQ,IAAIC,KAAA,CAAQ,EAAAD,KAAA;EAGpB,OAAOA,KAAA,GAAU,MAEjBE,OAAA,CAAQC,IAAA,CAAK,gCAAgC,GAAGL,OAAO;AAAA,oBAAuBD,OAAO,EAAE,KAKvFG,KAAA,GAAQA,KAAA,CAAMI,KAAA,CAAM;AAAA,CAAI,EAAEC,MAAA,CAAON,WAAW,EAAEO,IAAA,CAAK;AAAA,CAAI,GAEnDJ,OAAA,CAAQK,cAAA,IAERL,OAAA,CAAQK,cAAA,CACJ,sCACA,oCACA,uDACA,GAAGT,OAAO;AAAA,oBAAuBD,OAAO,EAE5C,GAAAK,OAAA,CAAQC,IAAA,CAAKH,KAAK,GAClBE,OAAA,CAAQM,QAAA,OAIRN,OAAA,CAAQC,IAAA,CAAK,gCAAgC,GAAGL,OAAO;AAAA,oBAAuBD,OAAO,EAAE,GACvFK,OAAA,CAAQC,IAAA,CAAKH,KAAK,KAK1BL,QAAA,CAASG,OAAO,IAAI;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}