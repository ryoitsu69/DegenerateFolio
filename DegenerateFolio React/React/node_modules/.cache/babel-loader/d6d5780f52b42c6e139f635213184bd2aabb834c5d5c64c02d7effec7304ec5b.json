{"ast":null,"code":"export const rpc = {\n  accountNextIndex: {\n    alias: ['account_nextIndex'],\n    description: 'Retrieves the next accountIndex as available on the node',\n    params: [{\n      name: 'accountId',\n      type: 'AccountId'\n    }],\n    type: 'Index'\n  },\n  addLogFilter: {\n    description: 'Adds the supplied directives to the current log filter',\n    isUnsafe: true,\n    params: [{\n      name: 'directives',\n      type: 'Text'\n    }],\n    type: 'Null'\n  },\n  addReservedPeer: {\n    description: 'Adds a reserved peer',\n    isUnsafe: true,\n    params: [{\n      name: 'peer',\n      type: 'Text'\n    }],\n    type: 'Text'\n  },\n  chain: {\n    description: 'Retrieves the chain',\n    params: [],\n    type: 'Text'\n  },\n  chainType: {\n    description: 'Retrieves the chain type',\n    params: [],\n    type: 'ChainType'\n  },\n  dryRun: {\n    alias: ['system_dryRunAt'],\n    description: 'Dry run an extrinsic at a given block',\n    isUnsafe: true,\n    params: [{\n      name: 'extrinsic',\n      type: 'Bytes'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'at',\n      type: 'BlockHash'\n    }],\n    type: 'ApplyExtrinsicResult'\n  },\n  health: {\n    description: 'Return health status of the node',\n    noErrorLog: true,\n    params: [],\n    type: 'Health'\n  },\n  localListenAddresses: {\n    description: 'The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example',\n    params: [],\n    type: 'Vec<Text>'\n  },\n  localPeerId: {\n    description: 'Returns the base58-encoded PeerId of the node',\n    params: [],\n    type: 'Text'\n  },\n  name: {\n    description: 'Retrieves the node name',\n    params: [],\n    type: 'Text'\n  },\n  networkState: {\n    alias: ['system_unstable_networkState'],\n    description: 'Returns current state of the network',\n    isUnsafe: true,\n    params: [],\n    type: 'NetworkState'\n  },\n  nodeRoles: {\n    description: 'Returns the roles the node is running as',\n    params: [],\n    type: 'Vec<NodeRole>'\n  },\n  peers: {\n    description: 'Returns the currently connected peers',\n    isUnsafe: true,\n    params: [],\n    type: 'Vec<PeerInfo>'\n  },\n  properties: {\n    description: 'Get a custom set of properties as a JSON object, defined in the chain spec',\n    params: [],\n    type: 'ChainProperties'\n  },\n  removeReservedPeer: {\n    description: 'Remove a reserved peer',\n    isUnsafe: true,\n    params: [{\n      name: 'peerId',\n      type: 'Text'\n    }],\n    type: 'Text'\n  },\n  reservedPeers: {\n    description: 'Returns the list of reserved peers',\n    params: [],\n    type: 'Vec<Text>'\n  },\n  resetLogFilter: {\n    description: 'Resets the log filter to Substrate defaults',\n    isUnsafe: true,\n    params: [],\n    type: 'Null'\n  },\n  syncState: {\n    description: 'Returns the state of the syncing of the node',\n    params: [],\n    type: 'SyncState'\n  },\n  version: {\n    description: 'Retrieves the version of the node',\n    params: [],\n    type: 'Text'\n  }\n};","map":{"version":3,"names":["rpc","accountNextIndex","alias","description","params","name","type","addLogFilter","isUnsafe","addReservedPeer","chain","chainType","dryRun","isHistoric","isOptional","health","noErrorLog","localListenAddresses","localPeerId","networkState","nodeRoles","peers","properties","removeReservedPeer","reservedPeers","resetLogFilter","syncState","version"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/interfaces/system/rpc.js"],"sourcesContent":["export const rpc = {\n    accountNextIndex: {\n        alias: ['account_nextIndex'],\n        description: 'Retrieves the next accountIndex as available on the node',\n        params: [\n            {\n                name: 'accountId',\n                type: 'AccountId'\n            }\n        ],\n        type: 'Index'\n    },\n    addLogFilter: {\n        description: 'Adds the supplied directives to the current log filter',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'directives',\n                type: 'Text'\n            }\n        ],\n        type: 'Null'\n    },\n    addReservedPeer: {\n        description: 'Adds a reserved peer',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'peer',\n                type: 'Text'\n            }\n        ],\n        type: 'Text'\n    },\n    chain: {\n        description: 'Retrieves the chain',\n        params: [],\n        type: 'Text'\n    },\n    chainType: {\n        description: 'Retrieves the chain type',\n        params: [],\n        type: 'ChainType'\n    },\n    dryRun: {\n        alias: ['system_dryRunAt'],\n        description: 'Dry run an extrinsic at a given block',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'extrinsic',\n                type: 'Bytes'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'ApplyExtrinsicResult'\n    },\n    health: {\n        description: 'Return health status of the node',\n        noErrorLog: true,\n        params: [],\n        type: 'Health'\n    },\n    localListenAddresses: {\n        description: 'The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example',\n        params: [],\n        type: 'Vec<Text>'\n    },\n    localPeerId: {\n        description: 'Returns the base58-encoded PeerId of the node',\n        params: [],\n        type: 'Text'\n    },\n    name: {\n        description: 'Retrieves the node name',\n        params: [],\n        type: 'Text'\n    },\n    networkState: {\n        alias: ['system_unstable_networkState'],\n        description: 'Returns current state of the network',\n        isUnsafe: true,\n        params: [],\n        type: 'NetworkState'\n    },\n    nodeRoles: {\n        description: 'Returns the roles the node is running as',\n        params: [],\n        type: 'Vec<NodeRole>'\n    },\n    peers: {\n        description: 'Returns the currently connected peers',\n        isUnsafe: true,\n        params: [],\n        type: 'Vec<PeerInfo>'\n    },\n    properties: {\n        description: 'Get a custom set of properties as a JSON object, defined in the chain spec',\n        params: [],\n        type: 'ChainProperties'\n    },\n    removeReservedPeer: {\n        description: 'Remove a reserved peer',\n        isUnsafe: true,\n        params: [\n            {\n                name: 'peerId',\n                type: 'Text'\n            }\n        ],\n        type: 'Text'\n    },\n    reservedPeers: {\n        description: 'Returns the list of reserved peers',\n        params: [],\n        type: 'Vec<Text>'\n    },\n    resetLogFilter: {\n        description: 'Resets the log filter to Substrate defaults',\n        isUnsafe: true,\n        params: [],\n        type: 'Null'\n    },\n    syncState: {\n        description: 'Returns the state of the syncing of the node',\n        params: [],\n        type: 'SyncState'\n    },\n    version: {\n        description: 'Retrieves the version of the node',\n        params: [],\n        type: 'Text'\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}