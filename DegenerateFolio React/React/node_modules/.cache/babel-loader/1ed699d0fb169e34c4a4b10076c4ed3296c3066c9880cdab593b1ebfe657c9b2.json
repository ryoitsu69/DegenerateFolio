{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isSupportSubscriptions = exports.isSupportedProvider = exports.isLegacySendAsyncProvider = exports.isLegacySendProvider = exports.isEIP1193Provider = exports.isLegacyRequestProvider = exports.isMetaMaskProvider = exports.isWeb3Provider = void 0;\nconst web3_types_1 = require(\"web3-types\");\nconst isWeb3Provider = provider => web3_types_1.Web3BaseProvider.isWeb3Provider(provider);\nexports.isWeb3Provider = isWeb3Provider;\nconst isMetaMaskProvider = provider => typeof provider !== 'string' && 'request' in provider && provider.request.constructor.name === 'AsyncFunction' && 'isMetaMask' in provider && provider.isMetaMask;\nexports.isMetaMaskProvider = isMetaMaskProvider;\nconst isLegacyRequestProvider = provider => typeof provider !== 'string' && 'request' in provider && provider.request.constructor.name === 'Function';\nexports.isLegacyRequestProvider = isLegacyRequestProvider;\nconst isEIP1193Provider = provider => typeof provider !== 'string' && 'request' in provider && provider.request.constructor.name === 'AsyncFunction';\nexports.isEIP1193Provider = isEIP1193Provider;\nconst isLegacySendProvider = provider => typeof provider !== 'string' && 'send' in provider;\nexports.isLegacySendProvider = isLegacySendProvider;\nconst isLegacySendAsyncProvider = provider => typeof provider !== 'string' && 'sendAsync' in provider;\nexports.isLegacySendAsyncProvider = isLegacySendAsyncProvider;\nconst isSupportedProvider = provider => provider && ((0, exports.isWeb3Provider)(provider) || (0, exports.isEIP1193Provider)(provider) || (0, exports.isLegacyRequestProvider)(provider) || (0, exports.isLegacySendAsyncProvider)(provider) || (0, exports.isLegacySendProvider)(provider));\nexports.isSupportedProvider = isSupportedProvider;\nconst isSupportSubscriptions = provider => {\n  if (provider && 'supportsSubscriptions' in provider) {\n    return provider.supportsSubscriptions();\n  }\n  if (provider && typeof provider !== 'string' && 'on' in provider) {\n    return true;\n  }\n  return false;\n};\nexports.isSupportSubscriptions = isSupportSubscriptions;","map":{"version":3,"names":["web3_types_1","require","isWeb3Provider","provider","Web3BaseProvider","exports","isMetaMaskProvider","request","constructor","name","isMetaMask","isLegacyRequestProvider","isEIP1193Provider","isLegacySendProvider","isLegacySendAsyncProvider","isSupportedProvider","isSupportSubscriptions","supportsSubscriptions"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/web3-core/src/utils.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tEIP1193Provider,\n\tLegacyRequestProvider,\n\tLegacySendAsyncProvider,\n\tLegacySendProvider,\n\tSupportedProviders,\n\tWeb3APISpec,\n\tWeb3BaseProvider,\n\tMetaMaskProvider,\n} from 'web3-types';\n\nexport const isWeb3Provider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is Web3BaseProvider<API> => Web3BaseProvider.isWeb3Provider(provider);\n\nexport const isMetaMaskProvider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is MetaMaskProvider<API> =>\n typeof provider !== 'string' &&\n'request' in provider &&\nprovider.request.constructor.name === 'AsyncFunction' && 'isMetaMask' in provider && provider.isMetaMask;\n\n\nexport const isLegacyRequestProvider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is LegacyRequestProvider =>\n\ttypeof provider !== 'string' &&\n\t'request' in provider &&\n\tprovider.request.constructor.name === 'Function';\n\nexport const isEIP1193Provider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is EIP1193Provider<API> =>\n\ttypeof provider !== 'string' &&\n\t'request' in provider &&\n\tprovider.request.constructor.name === 'AsyncFunction';\n\nexport const isLegacySendProvider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is LegacySendProvider => typeof provider !== 'string' && 'send' in provider;\n\nexport const isLegacySendAsyncProvider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is LegacySendAsyncProvider => typeof provider !== 'string' && 'sendAsync' in provider;\n\nexport const isSupportedProvider = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): provider is SupportedProviders<API> => \n\tprovider &&\n\t(isWeb3Provider(provider) ||\n\t\tisEIP1193Provider(provider) ||\n\t\tisLegacyRequestProvider(provider) ||\n\t\tisLegacySendAsyncProvider(provider) ||\n\t\tisLegacySendProvider(provider));\nexport const isSupportSubscriptions = <API extends Web3APISpec>(\n\tprovider: SupportedProviders<API>,\n): boolean => {\n\tif (provider && 'supportsSubscriptions' in provider) {\n\t\treturn provider.supportsSubscriptions();\n\t}\n\n\tif (provider && typeof provider !== 'string' && 'on' in provider) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAiBA,MAAAA,YAAA,GAAAC,OAAA;AAWO,MAAMC,cAAc,GAC1BC,QAAiC,IACMH,YAAA,CAAAI,gBAAgB,CAACF,cAAc,CAACC,QAAQ,CAAC;AAFpEE,OAAA,CAAAH,cAAc,GAAAA,cAAA;AAIpB,MAAMI,kBAAkB,GAC9BH,QAAiC,IAEjC,OAAOA,QAAQ,KAAK,QAAQ,IAC7B,SAAS,IAAIA,QAAQ,IACrBA,QAAQ,CAACI,OAAO,CAACC,WAAW,CAACC,IAAI,KAAK,eAAe,IAAI,YAAY,IAAIN,QAAQ,IAAIA,QAAQ,CAACO,UAAU;AAL3FL,OAAA,CAAAC,kBAAkB,GAAAA,kBAAA;AAQxB,MAAMK,uBAAuB,GACnCR,QAAiC,IAEjC,OAAOA,QAAQ,KAAK,QAAQ,IAC5B,SAAS,IAAIA,QAAQ,IACrBA,QAAQ,CAACI,OAAO,CAACC,WAAW,CAACC,IAAI,KAAK,UAAU;AALpCJ,OAAA,CAAAM,uBAAuB,GAAAA,uBAAA;AAO7B,MAAMC,iBAAiB,GAC7BT,QAAiC,IAEjC,OAAOA,QAAQ,KAAK,QAAQ,IAC5B,SAAS,IAAIA,QAAQ,IACrBA,QAAQ,CAACI,OAAO,CAACC,WAAW,CAACC,IAAI,KAAK,eAAe;AALzCJ,OAAA,CAAAO,iBAAiB,GAAAA,iBAAA;AAOvB,MAAMC,oBAAoB,GAChCV,QAAiC,IACG,OAAOA,QAAQ,KAAK,QAAQ,IAAI,MAAM,IAAIA,QAAQ;AAF1EE,OAAA,CAAAQ,oBAAoB,GAAAA,oBAAA;AAI1B,MAAMC,yBAAyB,GACrCX,QAAiC,IACQ,OAAOA,QAAQ,KAAK,QAAQ,IAAI,WAAW,IAAIA,QAAQ;AAFpFE,OAAA,CAAAS,yBAAyB,GAAAA,yBAAA;AAI/B,MAAMC,mBAAmB,GAC/BZ,QAAiC,IAEjCA,QAAQ,KACP,IAAAE,OAAA,CAAAH,cAAc,EAACC,QAAQ,CAAC,IACxB,IAAAE,OAAA,CAAAO,iBAAiB,EAACT,QAAQ,CAAC,IAC3B,IAAAE,OAAA,CAAAM,uBAAuB,EAACR,QAAQ,CAAC,IACjC,IAAAE,OAAA,CAAAS,yBAAyB,EAACX,QAAQ,CAAC,IACnC,IAAAE,OAAA,CAAAQ,oBAAoB,EAACV,QAAQ,CAAC,CAAC;AARpBE,OAAA,CAAAU,mBAAmB,GAAAA,mBAAA;AASzB,MAAMC,sBAAsB,GAClCb,QAAiC,IACrB;EACZ,IAAIA,QAAQ,IAAI,uBAAuB,IAAIA,QAAQ,EAAE;IACpD,OAAOA,QAAQ,CAACc,qBAAqB,EAAE;;EAGxC,IAAId,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAAI,IAAI,IAAIA,QAAQ,EAAE;IACjE,OAAO,IAAI;;EAGZ,OAAO,KAAK;AACb,CAAC;AAZYE,OAAA,CAAAW,sBAAsB,GAAAA,sBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}