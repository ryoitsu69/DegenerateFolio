{"ast":null,"code":"import { Buffer } from '../../renderers/shared/buffer/Buffer.mjs';\nimport { BufferUsage } from '../../renderers/shared/buffer/const.mjs';\nimport { Geometry } from '../../renderers/shared/geometry/Geometry.mjs';\n\"use strict\";\nconst placeHolderBufferData = new Float32Array(1);\nconst placeHolderIndexData = new Uint32Array(1);\nclass BatchGeometry extends Geometry {\n  constructor() {\n    const vertexSize = 6;\n    const attributeBuffer = new Buffer({\n      data: placeHolderBufferData,\n      label: \"attribute-batch-buffer\",\n      usage: BufferUsage.VERTEX | BufferUsage.COPY_DST,\n      shrinkToFit: false\n    });\n    const indexBuffer = new Buffer({\n      data: placeHolderIndexData,\n      label: \"index-batch-buffer\",\n      usage: BufferUsage.INDEX | BufferUsage.COPY_DST,\n      // | BufferUsage.STATIC,\n      shrinkToFit: false\n    });\n    const stride = vertexSize * 4;\n    super({\n      attributes: {\n        aPosition: {\n          buffer: attributeBuffer,\n          format: \"float32x2\",\n          stride,\n          offset: 0,\n          location: 1\n        },\n        aUV: {\n          buffer: attributeBuffer,\n          format: \"float32x2\",\n          stride,\n          offset: 2 * 4,\n          location: 3\n        },\n        aColor: {\n          buffer: attributeBuffer,\n          format: \"unorm8x4\",\n          stride,\n          offset: 4 * 4,\n          location: 0\n        },\n        aTextureIdAndRound: {\n          buffer: attributeBuffer,\n          format: \"uint16x2\",\n          stride,\n          offset: 5 * 4,\n          location: 2\n        }\n      },\n      indexBuffer\n    });\n  }\n}\nexport { BatchGeometry };","map":{"version":3,"names":["placeHolderBufferData","Float32Array","placeHolderIndexData","Uint32Array","BatchGeometry","Geometry","constructor","vertexSize","attributeBuffer","Buffer","data","label","usage","BufferUsage","VERTEX","COPY_DST","shrinkToFit","indexBuffer","INDEX","stride","attributes","aPosition","buffer","format","offset","location","aUV","aColor","aTextureIdAndRound"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/batcher/gpu/BatchGeometry.ts"],"sourcesContent":["import { Buffer } from '../../renderers/shared/buffer/Buffer';\nimport { BufferUsage } from '../../renderers/shared/buffer/const';\nimport { Geometry } from '../../renderers/shared/geometry/Geometry';\n\nconst placeHolderBufferData = new Float32Array(1);\nconst placeHolderIndexData = new Uint32Array(1);\n\nexport class BatchGeometry extends Geometry\n{\n    constructor()\n    {\n        const vertexSize = 6;\n\n        const attributeBuffer = new Buffer({\n            data: placeHolderBufferData,\n            label: 'attribute-batch-buffer',\n            usage: BufferUsage.VERTEX | BufferUsage.COPY_DST,\n            shrinkToFit: false,\n        });\n\n        const indexBuffer = new Buffer({\n            data: placeHolderIndexData,\n            label: 'index-batch-buffer',\n            usage: BufferUsage.INDEX | BufferUsage.COPY_DST, // | BufferUsage.STATIC,\n            shrinkToFit: false,\n        });\n\n        const stride = vertexSize * 4;\n\n        super({\n            attributes: {\n                aPosition: {\n                    buffer: attributeBuffer,\n                    format: 'float32x2',\n                    stride,\n                    offset: 0,\n                    location: 1,\n                },\n                aUV: {\n                    buffer: attributeBuffer,\n                    format: 'float32x2',\n                    stride,\n                    offset: 2 * 4,\n                    location: 3,\n                },\n                aColor: {\n                    buffer: attributeBuffer,\n                    format: 'unorm8x4',\n                    stride,\n                    offset: 4 * 4,\n                    location: 0,\n                },\n                aTextureIdAndRound: {\n                    buffer: attributeBuffer,\n                    format: 'uint16x2',\n                    stride,\n                    offset: 5 * 4,\n                    location: 2,\n                },\n            },\n            indexBuffer\n        });\n    }\n}\n\n"],"mappings":";;;;AAIA,MAAMA,qBAAA,GAAwB,IAAIC,YAAA,CAAa,CAAC;AAChD,MAAMC,oBAAA,GAAuB,IAAIC,WAAA,CAAY,CAAC;AAEvC,MAAMC,aAAA,SAAsBC,QACnC;EACIC,WACAA,CAAA;IACI,MAAMC,UAAa;IAEb,MAAAC,eAAA,GAAkB,IAAIC,MAAO;MAC/BC,IAAM,EAAAV,qBAAA;MACNW,KAAO;MACPC,KAAA,EAAOC,WAAY,CAAAC,MAAA,GAASD,WAAY,CAAAE,QAAA;MACxCC,WAAa;IAAA,CAChB;IAEK,MAAAC,WAAA,GAAc,IAAIR,MAAO;MAC3BC,IAAM,EAAAR,oBAAA;MACNS,KAAO;MACPC,KAAA,EAAOC,WAAY,CAAAK,KAAA,GAAQL,WAAY,CAAAE,QAAA;MAAA;MACvCC,WAAa;IAAA,CAChB;IAED,MAAMG,MAAA,GAASZ,UAAa;IAEtB;MACFa,UAAY;QACRC,SAAW;UACPC,MAAQ,EAAAd,eAAA;UACRe,MAAQ;UACRJ,MAAA;UACAK,MAAQ;UACRC,QAAU;QAAA,CACd;QACAC,GAAK;UACDJ,MAAQ,EAAAd,eAAA;UACRe,MAAQ;UACRJ,MAAA;UACAK,MAAA,EAAQ,CAAI;UACZC,QAAU;QAAA,CACd;QACAE,MAAQ;UACJL,MAAQ,EAAAd,eAAA;UACRe,MAAQ;UACRJ,MAAA;UACAK,MAAA,EAAQ,CAAI;UACZC,QAAU;QAAA,CACd;QACAG,kBAAoB;UAChBN,MAAQ,EAAAd,eAAA;UACRe,MAAQ;UACRJ,MAAA;UACAK,MAAA,EAAQ,CAAI;UACZC,QAAU;QAAA;MACd,CACJ;MACAR;IAAA,CACH;EAAA;AAET","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}