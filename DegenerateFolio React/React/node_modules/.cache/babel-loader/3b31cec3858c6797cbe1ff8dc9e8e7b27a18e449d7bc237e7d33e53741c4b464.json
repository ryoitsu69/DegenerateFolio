{"ast":null,"code":"import fetch from 'node-fetch';\nimport { Result } from \"../helpers/result.js\";\nimport { NodeApi } from \"./ext/node.js\";\nimport { AccountApi } from \"./ext/account.js\";\nimport { TransactionApi } from \"./ext/transactions.js\";\nimport { EventApi } from \"./ext/events.js\";\nimport { TableApi } from \"./ext/table.js\";\nimport { ModuleApi } from \"./ext/modules.js\";\nimport { CoinApi } from \"./ext/coins.js\";\nimport { TokenApi } from \"./ext/tokens.js\";\nimport { GasAPI } from \"./ext/gas.js\";\nimport { BlocksAPI } from \"./ext/blocks.js\";\nexport class Aptos {\n  gas = {\n    max_gas_amount: 2000,\n    gas_unit_price: 1,\n    gas_currency_code: \"XUS\"\n  };\n  lastRequest = null;\n  constructor(url = \"\", gas = {}) {\n    this.url = url;\n    Object.assign(this.gas, gas);\n  }\n  _0x(s) {\n    return s.startsWith('0x') ? s : `0x${s}`;\n  }\n  async _exec(link = '/', query = null, options = {\n    method: \"GET\"\n  }, resultType = \"json\") {\n    let queryArray = [];\n    if (query && typeof query === \"object\") {\n      for (let key in query) {\n        if (query[key] !== null) queryArray.push(`${key}=${query[key]}`);\n      }\n      link += `?${queryArray.join(\"&\")}`;\n    }\n    this.lastRequest = `${this.url}${link.startsWith('/') ? link : '/' + link}`;\n    const response = await fetch(this.lastRequest, options);\n    const contentType = response.headers.get('Content-Type');\n    const result = await (contentType === 'application/json' ? response.json() : response.text());\n    if (response.status > 202) {\n      return new Result(false, result.message ? result.message : result.toString(), result);\n    }\n    return new Result(true, \"ok\", typeof result === \"string\" ? JSON.parse(result) : result);\n  }\n  getLastRequest() {\n    return this.lastRequest;\n  }\n  async sleep(timeMs) {\n    return new Promise(resolve => {\n      setTimeout(resolve, timeMs);\n    });\n  }\n  moveStructTagToParam(moveStructTag) {\n    let genericTypeParamsString = \"\";\n    if (moveStructTag.generic_type_params.length > 0) {\n      genericTypeParamsString = `<${moveStructTag.generic_type_params.join(\",\")}>`;\n    }\n    return `${moveStructTag.address}::${moveStructTag.module}::${moveStructTag.name}${genericTypeParamsString}`;\n  }\n  async state() {\n    return this._exec();\n  }\n}\nAptos.use = (...obj) => Object.assign(Aptos.prototype, ...obj);\nObject.assign(Aptos.prototype, NodeApi, AccountApi, TransactionApi, EventApi, TableApi, ModuleApi, CoinApi, TokenApi, GasAPI, BlocksAPI);\nexport const aptos = (...args) => new Aptos(...args);","map":{"version":3,"names":["fetch","Result","NodeApi","AccountApi","TransactionApi","EventApi","TableApi","ModuleApi","CoinApi","TokenApi","GasAPI","BlocksAPI","Aptos","gas","max_gas_amount","gas_unit_price","gas_currency_code","lastRequest","constructor","url","Object","assign","_0x","s","startsWith","_exec","link","query","options","method","resultType","queryArray","key","push","join","response","contentType","headers","get","result","json","text","status","message","toString","JSON","parse","getLastRequest","sleep","timeMs","Promise","resolve","setTimeout","moveStructTagToParam","moveStructTag","genericTypeParamsString","generic_type_params","length","address","module","name","state","use","obj","prototype","aptos","args"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/aptos-api-master/src/api/index.js"],"sourcesContent":["import fetch from 'node-fetch';\nimport {Result} from \"../helpers/result.js\"\nimport {NodeApi} from \"./ext/node.js\";\nimport {AccountApi} from \"./ext/account.js\";\nimport {TransactionApi} from \"./ext/transactions.js\";\nimport {EventApi} from \"./ext/events.js\";\nimport {TableApi} from \"./ext/table.js\";\nimport {ModuleApi} from \"./ext/modules.js\";\nimport {CoinApi} from \"./ext/coins.js\";\nimport {TokenApi} from \"./ext/tokens.js\";\nimport {GasAPI} from \"./ext/gas.js\";\nimport {BlocksAPI} from \"./ext/blocks.js\";\n\nexport class Aptos {\n    gas = {\n        max_gas_amount: 2000,\n        gas_unit_price: 1,\n        gas_currency_code: \"XUS\",\n    }\n    lastRequest = null\n\n    constructor(url = \"\", gas = {}) {\n        this.url = url\n        Object.assign(this.gas, gas)\n    }\n\n    _0x(s){\n        return s.startsWith('0x') ? s : `0x${s}`\n    }\n\n    async _exec(link = '/', query = null, options = {method: \"GET\"}, resultType = \"json\"){\n        let queryArray = []\n\n        if (query && typeof query === \"object\") {\n            for (let key in query) {\n                if (query[key] !== null) queryArray.push(`${key}=${query[key]}`)\n            }\n            link += `?${queryArray.join(\"&\")}`\n        }\n\n        this.lastRequest = `${this.url}${link.startsWith('/') ? link : '/'+link}`\n\n        const response = await fetch(this.lastRequest, options)\n        const contentType = response.headers.get('Content-Type')\n        const result = await (contentType === 'application/json' ? response.json() : response.text())\n\n        if (response.status > 202) {\n            return new Result(false, result.message ? result.message : result.toString(), result)\n        }\n\n        return new Result(true, \"ok\", typeof result === \"string\" ? JSON.parse(result) : result)\n    }\n\n    getLastRequest(){\n        return this.lastRequest\n    }\n\n    async sleep(timeMs) {\n        return new Promise((resolve) => {\n            setTimeout(resolve, timeMs)\n        })\n    }\n\n    moveStructTagToParam(moveStructTag){\n        let genericTypeParamsString = \"\"\n        if (moveStructTag.generic_type_params.length > 0) {\n            genericTypeParamsString = `<${moveStructTag.generic_type_params.join(\",\")}>`\n        }\n        return `${moveStructTag.address}::${moveStructTag.module}::${moveStructTag.name}${genericTypeParamsString}`\n    }\n\n    async state(){\n        return this._exec()\n    }\n}\n\nAptos.use = (...obj) => Object.assign(Aptos.prototype, ...obj)\n\nObject.assign(Aptos.prototype,\n    NodeApi,\n    AccountApi,\n    TransactionApi,\n    EventApi,\n    TableApi,\n    ModuleApi,\n    CoinApi,\n    TokenApi,\n    GasAPI,\n    BlocksAPI\n)\n\nexport const aptos = (...args) => new Aptos(...args)"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}