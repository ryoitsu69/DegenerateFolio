{"ast":null,"code":"import { hexToU8a } from '@polkadot/util';\nimport { createPair } from './pair/index.js';\nimport { Keyring } from './keyring.js';\nexport const PAIRSSR25519 = [{\n  p: '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d',\n  s: '0x98319d4ff8a9508c4bb0cf0b5a78d760a0b2082c02775e6e82370816fedfff48925a225d97aa00682d6a59b95b18780c10d7032336e88f3442b42361f4a66011',\n  // nosemgrep\n  seed: 'Alice',\n  type: 'sr25519'\n}, {\n  p: '0xbe5ddb1579b72e84524fc29e78609e3caf42e85aa118ebfe0b0ad404b5bdd25f',\n  s: '0xe8da6c9d810e020f5e3c7f5af2dea314cbeaa0d72bc6421e92c0808a0c584a6046ab28e97c3ffc77fe12b5a4d37e8cd4afbfebbf2391ffc7cb07c0f38c023efd',\n  // nosemgrep\n  seed: 'Alice//stash',\n  type: 'sr25519'\n}, {\n  p: '0x8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48',\n  s: '0x081ff694633e255136bdb456c20a5fc8fed21f8b964c11bb17ff534ce80ebd5941ae88f85d0c1bfc37be41c904e1dfc01de8c8067b0d6d5df25dd1ac0894a325',\n  // nosemgrep\n  seed: 'Bob',\n  type: 'sr25519'\n}, {\n  p: '0xfe65717dad0447d715f660a0a58411de509b42e6efb8375f562f58a554d5860e',\n  s: '0xc006507cdfc267a21532394c49ca9b754ca71de21e15a1cdf807c7ceab6d0b6c3ed408d9d35311540dcd54931933e67cf1ea10d46f75408f82b789d9bd212fde',\n  // nosemgrep\n  seed: 'Bob//stash',\n  type: 'sr25519'\n}, {\n  p: '0x90b5ab205c6974c9ea841be688864633dc9ca8a357843eeacf2314649965fe22',\n  s: '0xa8f2d83016052e5d6d77b2f6fd5d59418922a09024cda701b3c34369ec43a7668faf12ff39cd4e5d92bb773972f41a7a5279ebc2ed92264bed8f47d344f8f18c',\n  // nosemgrep\n  seed: 'Charlie',\n  type: 'sr25519'\n}, {\n  p: '0x306721211d5404bd9da88e0204360a1a9ab8b87c66c1bc2fcdd37f3c2222cc20',\n  s: '0x20e05482ca4677e0edbc58ae9a3a59f6ed3b1a9484ba17e64d6fe8688b2b7b5d108c4487b9323b98b11fe36cb301b084e920f7b7895536809a6d62a451b25568',\n  // nosemgrep\n  seed: 'Dave',\n  type: 'sr25519'\n}, {\n  p: '0xe659a7a1628cdd93febc04a4e0646ea20e9f5f0ce097d9a05290d4a9e054df4e',\n  s: '0x683576abfd5dc35273e4264c23095a1bf21c14517bece57c7f0cc5c0ed4ce06a3dbf386b7828f348abe15d76973a72009e6ef86a5c91db2990cb36bb657c6587',\n  // nosemgrep\n  seed: 'Eve',\n  type: 'sr25519'\n}, {\n  p: '0x1cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c',\n  s: '0xb835c20f450079cf4f513900ae9faf8df06ad86c681884122c752a4b2bf74d4303e4f21bc6cc62bb4eeed5a9cce642c25e2d2ac1464093b50f6196d78e3a7426',\n  // nosemgrep\n  seed: 'Ferdie',\n  type: 'sr25519'\n}];\nexport const PAIRSETHEREUM = [{\n  name: 'Alith',\n  p: '0x02509540919faacf9ab52146c9aa40db68172d83777250b28e4679176e49ccdd9f',\n  s: '0x5fb92d6e98884f76de468fa3f6278f8807c48bebc13595d45af5bdc4da702133',\n  // nosemgrep\n  type: 'ethereum'\n}, {\n  name: 'Baltathar',\n  p: '0x033bc19e36ff1673910575b6727a974a9abd80c9a875d41ab3e2648dbfb9e4b518',\n  s: '0x8075991ce870b93a8870eca0c0f91913d12f47948ca0fd25b49c6fa7cdbeee8b',\n  // nosemgrep\n  type: 'ethereum'\n}, {\n  name: 'Charleth',\n  p: '0x0234637bdc0e89b5d46543bcbf8edff329d2702bc995e27e9af4b1ba009a3c2a5e',\n  s: '0x0b6e18cafb6ed99687ec547bd28139cafdd2bffe70e6b688025de6b445aa5c5b',\n  // nosemgrep\n  type: 'ethereum'\n}, {\n  name: 'Dorothy',\n  p: '0x02a00d60b2b408c2a14c5d70cdd2c205db8985ef737a7e55ad20ea32cc9e7c417c',\n  s: '0x39539ab1876910bbf3a223d84a29e28f1cb4e2e456503e7e91ed39b2e7223d68',\n  // nosemgrep\n  type: 'ethereum'\n}, {\n  name: 'Ethan',\n  p: '0x025cdc005b752651cd3f728fb9192182acb3a9c89e19072cbd5b03f3ee1f1b3ffa',\n  s: '0x7dce9bc8babb68fec1409be38c8e1a52650206a7ed90ff956ae8a6d15eeaaef4',\n  // nosemgrep\n  type: 'ethereum'\n}, {\n  name: 'Faith',\n  p: '0x037964b6c9d546da4646ada28a99e34acaa1d14e7aba861a9055f9bd200c8abf74',\n  s: '0xb9d2ea9a615f3165812e8d44de0d24da9bbd164b65c4f0573e1ce2c8dbd9c8df',\n  // nosemgrep\n  type: 'ethereum'\n}];\nfunction createMeta(name, seed) {\n  if (!name && !seed) {\n    throw new Error('Testing pair should have either a name or a seed');\n  }\n  return {\n    isTesting: true,\n    name: name || seed?.replace('//', '_').toLowerCase()\n  };\n}\n/**\n * @name testKeyring\n * @summary Create an instance of Keyring pre-populated with locked test accounts\n * @description The test accounts (i.e. alice, bob, dave, eve, ferdie)\n * are available on the dev chain and each test account is initialized with DOT funds.\n */\nexport function createTestKeyring(options = {}, isDerived = true) {\n  const keyring = new Keyring(options);\n  const pairs = options.type === 'ethereum' ? PAIRSETHEREUM : PAIRSSR25519;\n  for (const {\n    name,\n    p,\n    s,\n    seed,\n    type\n  } of pairs) {\n    const meta = createMeta(name, seed);\n    const pair = !isDerived && !name && seed ? keyring.addFromUri(seed, meta, options.type) : keyring.addPair(createPair({\n      toSS58: keyring.encodeAddress,\n      type\n    }, {\n      publicKey: hexToU8a(p),\n      secretKey: hexToU8a(s)\n    }, meta));\n    pair.lock = () => {\n      // we don't have lock/unlock functionality here\n    };\n  }\n  return keyring;\n}","map":{"version":3,"names":["hexToU8a","createPair","Keyring","PAIRSSR25519","p","s","seed","type","PAIRSETHEREUM","name","createMeta","Error","isTesting","replace","toLowerCase","createTestKeyring","options","isDerived","keyring","pairs","meta","pair","addFromUri","addPair","toSS58","encodeAddress","publicKey","secretKey","lock"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/keyring/testing.js"],"sourcesContent":["import { hexToU8a } from '@polkadot/util';\nimport { createPair } from './pair/index.js';\nimport { Keyring } from './keyring.js';\nexport const PAIRSSR25519 = [\n    {\n        p: '0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d',\n        s: '0x98319d4ff8a9508c4bb0cf0b5a78d760a0b2082c02775e6e82370816fedfff48925a225d97aa00682d6a59b95b18780c10d7032336e88f3442b42361f4a66011', // nosemgrep\n        seed: 'Alice',\n        type: 'sr25519'\n    },\n    {\n        p: '0xbe5ddb1579b72e84524fc29e78609e3caf42e85aa118ebfe0b0ad404b5bdd25f',\n        s: '0xe8da6c9d810e020f5e3c7f5af2dea314cbeaa0d72bc6421e92c0808a0c584a6046ab28e97c3ffc77fe12b5a4d37e8cd4afbfebbf2391ffc7cb07c0f38c023efd', // nosemgrep\n        seed: 'Alice//stash',\n        type: 'sr25519'\n    },\n    {\n        p: '0x8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48',\n        s: '0x081ff694633e255136bdb456c20a5fc8fed21f8b964c11bb17ff534ce80ebd5941ae88f85d0c1bfc37be41c904e1dfc01de8c8067b0d6d5df25dd1ac0894a325', // nosemgrep\n        seed: 'Bob',\n        type: 'sr25519'\n    },\n    {\n        p: '0xfe65717dad0447d715f660a0a58411de509b42e6efb8375f562f58a554d5860e',\n        s: '0xc006507cdfc267a21532394c49ca9b754ca71de21e15a1cdf807c7ceab6d0b6c3ed408d9d35311540dcd54931933e67cf1ea10d46f75408f82b789d9bd212fde', // nosemgrep\n        seed: 'Bob//stash',\n        type: 'sr25519'\n    },\n    {\n        p: '0x90b5ab205c6974c9ea841be688864633dc9ca8a357843eeacf2314649965fe22',\n        s: '0xa8f2d83016052e5d6d77b2f6fd5d59418922a09024cda701b3c34369ec43a7668faf12ff39cd4e5d92bb773972f41a7a5279ebc2ed92264bed8f47d344f8f18c', // nosemgrep\n        seed: 'Charlie',\n        type: 'sr25519'\n    },\n    {\n        p: '0x306721211d5404bd9da88e0204360a1a9ab8b87c66c1bc2fcdd37f3c2222cc20',\n        s: '0x20e05482ca4677e0edbc58ae9a3a59f6ed3b1a9484ba17e64d6fe8688b2b7b5d108c4487b9323b98b11fe36cb301b084e920f7b7895536809a6d62a451b25568', // nosemgrep\n        seed: 'Dave',\n        type: 'sr25519'\n    },\n    {\n        p: '0xe659a7a1628cdd93febc04a4e0646ea20e9f5f0ce097d9a05290d4a9e054df4e',\n        s: '0x683576abfd5dc35273e4264c23095a1bf21c14517bece57c7f0cc5c0ed4ce06a3dbf386b7828f348abe15d76973a72009e6ef86a5c91db2990cb36bb657c6587', // nosemgrep\n        seed: 'Eve',\n        type: 'sr25519'\n    },\n    {\n        p: '0x1cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c',\n        s: '0xb835c20f450079cf4f513900ae9faf8df06ad86c681884122c752a4b2bf74d4303e4f21bc6cc62bb4eeed5a9cce642c25e2d2ac1464093b50f6196d78e3a7426', // nosemgrep\n        seed: 'Ferdie',\n        type: 'sr25519'\n    }\n];\nexport const PAIRSETHEREUM = [\n    {\n        name: 'Alith',\n        p: '0x02509540919faacf9ab52146c9aa40db68172d83777250b28e4679176e49ccdd9f',\n        s: '0x5fb92d6e98884f76de468fa3f6278f8807c48bebc13595d45af5bdc4da702133', // nosemgrep\n        type: 'ethereum'\n    },\n    {\n        name: 'Baltathar',\n        p: '0x033bc19e36ff1673910575b6727a974a9abd80c9a875d41ab3e2648dbfb9e4b518',\n        s: '0x8075991ce870b93a8870eca0c0f91913d12f47948ca0fd25b49c6fa7cdbeee8b', // nosemgrep\n        type: 'ethereum'\n    },\n    {\n        name: 'Charleth',\n        p: '0x0234637bdc0e89b5d46543bcbf8edff329d2702bc995e27e9af4b1ba009a3c2a5e',\n        s: '0x0b6e18cafb6ed99687ec547bd28139cafdd2bffe70e6b688025de6b445aa5c5b', // nosemgrep\n        type: 'ethereum'\n    },\n    {\n        name: 'Dorothy',\n        p: '0x02a00d60b2b408c2a14c5d70cdd2c205db8985ef737a7e55ad20ea32cc9e7c417c',\n        s: '0x39539ab1876910bbf3a223d84a29e28f1cb4e2e456503e7e91ed39b2e7223d68', // nosemgrep\n        type: 'ethereum'\n    },\n    {\n        name: 'Ethan',\n        p: '0x025cdc005b752651cd3f728fb9192182acb3a9c89e19072cbd5b03f3ee1f1b3ffa',\n        s: '0x7dce9bc8babb68fec1409be38c8e1a52650206a7ed90ff956ae8a6d15eeaaef4', // nosemgrep\n        type: 'ethereum'\n    },\n    {\n        name: 'Faith',\n        p: '0x037964b6c9d546da4646ada28a99e34acaa1d14e7aba861a9055f9bd200c8abf74',\n        s: '0xb9d2ea9a615f3165812e8d44de0d24da9bbd164b65c4f0573e1ce2c8dbd9c8df', // nosemgrep\n        type: 'ethereum'\n    }\n];\nfunction createMeta(name, seed) {\n    if (!name && !seed) {\n        throw new Error('Testing pair should have either a name or a seed');\n    }\n    return {\n        isTesting: true,\n        name: name || seed?.replace('//', '_').toLowerCase()\n    };\n}\n/**\n * @name testKeyring\n * @summary Create an instance of Keyring pre-populated with locked test accounts\n * @description The test accounts (i.e. alice, bob, dave, eve, ferdie)\n * are available on the dev chain and each test account is initialized with DOT funds.\n */\nexport function createTestKeyring(options = {}, isDerived = true) {\n    const keyring = new Keyring(options);\n    const pairs = options.type === 'ethereum'\n        ? PAIRSETHEREUM\n        : PAIRSSR25519;\n    for (const { name, p, s, seed, type } of pairs) {\n        const meta = createMeta(name, seed);\n        const pair = !isDerived && !name && seed\n            ? keyring.addFromUri(seed, meta, options.type)\n            : keyring.addPair(createPair({ toSS58: keyring.encodeAddress, type }, { publicKey: hexToU8a(p), secretKey: hexToU8a(s) }, meta));\n        pair.lock = () => {\n            // we don't have lock/unlock functionality here\n        };\n    }\n    return keyring;\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,OAAO,QAAQ,cAAc;AACtC,OAAO,MAAMC,YAAY,GAAG,CACxB;EACIC,CAAC,EAAE,oEAAoE;EACvEC,CAAC,EAAE,oIAAoI;EAAE;EACzIC,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE;AACV,CAAC,EACD;EACIH,CAAC,EAAE,oEAAoE;EACvEC,CAAC,EAAE,oIAAoI;EAAE;EACzIC,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE;AACV,CAAC,EACD;EACIH,CAAC,EAAE,oEAAoE;EACvEC,CAAC,EAAE,oIAAoI;EAAE;EACzIC,IAAI,EAAE,KAAK;EACXC,IAAI,EAAE;AACV,CAAC,EACD;EACIH,CAAC,EAAE,oEAAoE;EACvEC,CAAC,EAAE,oIAAoI;EAAE;EACzIC,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE;AACV,CAAC,EACD;EACIH,CAAC,EAAE,oEAAoE;EACvEC,CAAC,EAAE,oIAAoI;EAAE;EACzIC,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE;AACV,CAAC,EACD;EACIH,CAAC,EAAE,oEAAoE;EACvEC,CAAC,EAAE,oIAAoI;EAAE;EACzIC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE;AACV,CAAC,EACD;EACIH,CAAC,EAAE,oEAAoE;EACvEC,CAAC,EAAE,oIAAoI;EAAE;EACzIC,IAAI,EAAE,KAAK;EACXC,IAAI,EAAE;AACV,CAAC,EACD;EACIH,CAAC,EAAE,oEAAoE;EACvEC,CAAC,EAAE,oIAAoI;EAAE;EACzIC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE;AACV,CAAC,CACJ;AACD,OAAO,MAAMC,aAAa,GAAG,CACzB;EACIC,IAAI,EAAE,OAAO;EACbL,CAAC,EAAE,sEAAsE;EACzEC,CAAC,EAAE,oEAAoE;EAAE;EACzEE,IAAI,EAAE;AACV,CAAC,EACD;EACIE,IAAI,EAAE,WAAW;EACjBL,CAAC,EAAE,sEAAsE;EACzEC,CAAC,EAAE,oEAAoE;EAAE;EACzEE,IAAI,EAAE;AACV,CAAC,EACD;EACIE,IAAI,EAAE,UAAU;EAChBL,CAAC,EAAE,sEAAsE;EACzEC,CAAC,EAAE,oEAAoE;EAAE;EACzEE,IAAI,EAAE;AACV,CAAC,EACD;EACIE,IAAI,EAAE,SAAS;EACfL,CAAC,EAAE,sEAAsE;EACzEC,CAAC,EAAE,oEAAoE;EAAE;EACzEE,IAAI,EAAE;AACV,CAAC,EACD;EACIE,IAAI,EAAE,OAAO;EACbL,CAAC,EAAE,sEAAsE;EACzEC,CAAC,EAAE,oEAAoE;EAAE;EACzEE,IAAI,EAAE;AACV,CAAC,EACD;EACIE,IAAI,EAAE,OAAO;EACbL,CAAC,EAAE,sEAAsE;EACzEC,CAAC,EAAE,oEAAoE;EAAE;EACzEE,IAAI,EAAE;AACV,CAAC,CACJ;AACD,SAASG,UAAUA,CAACD,IAAI,EAAEH,IAAI,EAAE;EAC5B,IAAI,CAACG,IAAI,IAAI,CAACH,IAAI,EAAE;IAChB,MAAM,IAAIK,KAAK,CAAC,kDAAkD,CAAC;EACvE;EACA,OAAO;IACHC,SAAS,EAAE,IAAI;IACfH,IAAI,EAAEA,IAAI,IAAIH,IAAI,EAAEO,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACC,WAAW,CAAC;EACvD,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAACC,OAAO,GAAG,CAAC,CAAC,EAAEC,SAAS,GAAG,IAAI,EAAE;EAC9D,MAAMC,OAAO,GAAG,IAAIhB,OAAO,CAACc,OAAO,CAAC;EACpC,MAAMG,KAAK,GAAGH,OAAO,CAACT,IAAI,KAAK,UAAU,GACnCC,aAAa,GACbL,YAAY;EAClB,KAAK,MAAM;IAAEM,IAAI;IAAEL,CAAC;IAAEC,CAAC;IAAEC,IAAI;IAAEC;EAAK,CAAC,IAAIY,KAAK,EAAE;IAC5C,MAAMC,IAAI,GAAGV,UAAU,CAACD,IAAI,EAAEH,IAAI,CAAC;IACnC,MAAMe,IAAI,GAAG,CAACJ,SAAS,IAAI,CAACR,IAAI,IAAIH,IAAI,GAClCY,OAAO,CAACI,UAAU,CAAChB,IAAI,EAAEc,IAAI,EAAEJ,OAAO,CAACT,IAAI,CAAC,GAC5CW,OAAO,CAACK,OAAO,CAACtB,UAAU,CAAC;MAAEuB,MAAM,EAAEN,OAAO,CAACO,aAAa;MAAElB;IAAK,CAAC,EAAE;MAAEmB,SAAS,EAAE1B,QAAQ,CAACI,CAAC,CAAC;MAAEuB,SAAS,EAAE3B,QAAQ,CAACK,CAAC;IAAE,CAAC,EAAEe,IAAI,CAAC,CAAC;IACpIC,IAAI,CAACO,IAAI,GAAG,MAAM;MACd;IAAA,CACH;EACL;EACA,OAAOV,OAAO;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}