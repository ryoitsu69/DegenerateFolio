{"ast":null,"code":"function booleanArray(size) {\n  const array = new Array(size);\n  for (let i = 0; i < array.length; i++) array[i] = !1;\n  return array;\n}\nfunction defaultValue(type, size) {\n  switch (type) {\n    case \"float\":\n      return 0;\n    case \"vec2\":\n      return new Float32Array(2 * size);\n    case \"vec3\":\n      return new Float32Array(3 * size);\n    case \"vec4\":\n      return new Float32Array(4 * size);\n    case \"int\":\n    case \"uint\":\n    case \"sampler2D\":\n    case \"sampler2DArray\":\n      return 0;\n    case \"ivec2\":\n      return new Int32Array(2 * size);\n    case \"ivec3\":\n      return new Int32Array(3 * size);\n    case \"ivec4\":\n      return new Int32Array(4 * size);\n    case \"uvec2\":\n      return new Uint32Array(2 * size);\n    case \"uvec3\":\n      return new Uint32Array(3 * size);\n    case \"uvec4\":\n      return new Uint32Array(4 * size);\n    case \"bool\":\n      return !1;\n    case \"bvec2\":\n      return booleanArray(2 * size);\n    case \"bvec3\":\n      return booleanArray(3 * size);\n    case \"bvec4\":\n      return booleanArray(4 * size);\n    case \"mat2\":\n      return new Float32Array([1, 0, 0, 1]);\n    case \"mat3\":\n      return new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    case \"mat4\":\n      return new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\n  }\n  return null;\n}\nexport { defaultValue };","map":{"version":3,"names":["booleanArray","size","array","Array","i","length","defaultValue","type","Float32Array","Int32Array","Uint32Array"],"sources":["/home/ryoitsu/node_modules/@pixi/core/src/shader/utils/defaultValue.ts"],"sourcesContent":["function booleanArray(size: number): Array<boolean>\n{\n    const array = new Array(size);\n\n    for (let i = 0; i < array.length; i++)\n    {\n        array[i] = false;\n    }\n\n    return array;\n}\n\n/**\n * @method defaultValue\n * @memberof PIXI.glCore.shader\n * @param {string} type - Type of value\n * @param {number} size\n * @private\n */\nexport function defaultValue(\n    type: string,\n    size: number\n): number | Float32Array | Int32Array | Uint32Array | boolean | boolean[]\n{\n    switch (type)\n    {\n        case 'float':\n            return 0;\n\n        case 'vec2':\n            return new Float32Array(2 * size);\n\n        case 'vec3':\n            return new Float32Array(3 * size);\n\n        case 'vec4':\n            return new Float32Array(4 * size);\n\n        case 'int':\n        case 'uint':\n        case 'sampler2D':\n        case 'sampler2DArray':\n            return 0;\n\n        case 'ivec2':\n            return new Int32Array(2 * size);\n\n        case 'ivec3':\n            return new Int32Array(3 * size);\n\n        case 'ivec4':\n            return new Int32Array(4 * size);\n\n        case 'uvec2':\n            return new Uint32Array(2 * size);\n\n        case 'uvec3':\n            return new Uint32Array(3 * size);\n\n        case 'uvec4':\n            return new Uint32Array(4 * size);\n\n        case 'bool':\n            return false;\n\n        case 'bvec2':\n\n            return booleanArray(2 * size);\n\n        case 'bvec3':\n            return booleanArray(3 * size);\n\n        case 'bvec4':\n            return booleanArray(4 * size);\n\n        case 'mat2':\n            return new Float32Array([1, 0,\n                0, 1]);\n\n        case 'mat3':\n            return new Float32Array([1, 0, 0,\n                0, 1, 0,\n                0, 0, 1]);\n\n        case 'mat4':\n            return new Float32Array([1, 0, 0, 0,\n                0, 1, 0, 0,\n                0, 0, 1, 0,\n                0, 0, 0, 1]);\n    }\n\n    return null;\n}\n"],"mappings":"AAAA,SAASA,aAAaC,IAAA,EACtB;EACU,MAAAC,KAAA,GAAQ,IAAIC,KAAA,CAAMF,IAAI;EAE5B,SAASG,CAAA,GAAI,GAAGA,CAAA,GAAIF,KAAA,CAAMG,MAAA,EAAQD,CAAA,IAE9BF,KAAA,CAAME,CAAC,IAAI;EAGR,OAAAF,KAAA;AACX;AASgB,SAAAI,aACZC,IAAA,EACAN,IAAA,EAEJ;EACI,QAAQM,IAAA;IAEJ,KAAK;MACM;IAEX,KAAK;MACM,WAAIC,YAAA,CAAa,IAAIP,IAAI;IAEpC,KAAK;MACM,WAAIO,YAAA,CAAa,IAAIP,IAAI;IAEpC,KAAK;MACM,WAAIO,YAAA,CAAa,IAAIP,IAAI;IAEpC,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;MACM;IAEX,KAAK;MACM,WAAIQ,UAAA,CAAW,IAAIR,IAAI;IAElC,KAAK;MACM,WAAIQ,UAAA,CAAW,IAAIR,IAAI;IAElC,KAAK;MACM,WAAIQ,UAAA,CAAW,IAAIR,IAAI;IAElC,KAAK;MACM,WAAIS,WAAA,CAAY,IAAIT,IAAI;IAEnC,KAAK;MACM,WAAIS,WAAA,CAAY,IAAIT,IAAI;IAEnC,KAAK;MACM,WAAIS,WAAA,CAAY,IAAIT,IAAI;IAEnC,KAAK;MACM;IAEX,KAAK;MAEM,OAAAD,YAAA,CAAa,IAAIC,IAAI;IAEhC,KAAK;MACM,OAAAD,YAAA,CAAa,IAAIC,IAAI;IAEhC,KAAK;MACM,OAAAD,YAAA,CAAa,IAAIC,IAAI;IAEhC,KAAK;MACD,OAAO,IAAIO,YAAA,CAAa,CAAC,GAAG,GACxB,GAAG,EAAE;IAEb,KAAK;MACD,OAAO,IAAIA,YAAA,CAAa,CAAC,GAAG,GAAG,GAC3B,GAAG,GAAG,GACN,GAAG,GAAG,EAAE;IAEhB,KAAK;MACD,OAAO,IAAIA,YAAA,CAAa,CAAC,GAAG,GAAG,GAAG,GAC9B,GAAG,GAAG,GAAG,GACT,GAAG,GAAG,GAAG,GACT,GAAG,GAAG,GAAG,EAAE;EACvB;EAEO;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}