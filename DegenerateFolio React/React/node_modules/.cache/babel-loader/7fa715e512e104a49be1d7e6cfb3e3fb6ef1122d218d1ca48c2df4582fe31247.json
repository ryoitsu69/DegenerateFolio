{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n  var result;\n  var _Symbol = root.Symbol;\n  if (typeof _Symbol === 'function') {\n    if (_Symbol.observable) {\n      result = _Symbol.observable;\n    } else {\n      // This just needs to be something that won't trample other user's Symbol.for use\n      // It also will guide people to the source of their issues, if this is problematic.\n      // META: It's a resource locator!\n      result = _Symbol['for']('https://github.com/benlesh/symbol-observable');\n      try {\n        _Symbol.observable = result;\n      } catch (err) {\n        // Do nothing. In some environments, users have frozen `Symbol` for security reasons,\n        // if it is frozen assigning to it will throw. In this case, we don't care, because\n        // they will need to use the returned value from the ponyfill.\n      }\n    }\n  } else {\n    result = '@@observable';\n  }\n  return result;\n}\n;","map":{"version":3,"names":["Object","defineProperty","exports","value","symbolObservablePonyfill","root","result","_Symbol","Symbol","observable","err"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/symbol-observable/lib/ponyfill.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\n\t\t\t// This just needs to be something that won't trample other user's Symbol.for use\n\t\t\t// It also will guide people to the source of their issues, if this is problematic.\n\t\t\t// META: It's a resource locator!\n\t\t\tresult = _Symbol['for']('https://github.com/benlesh/symbol-observable');\n\t\t\ttry {\n\t\t\t\t_Symbol.observable = result;\n\t\t\t} catch (err) {\n\t\t\t\t// Do nothing. In some environments, users have frozen `Symbol` for security reasons,\n\t\t\t\t// if it is frozen assigning to it will throw. In this case, we don't care, because\n\t\t\t\t// they will need to use the returned value from the ponyfill.\n\t\t\t}\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC5CC,KAAK,EAAE;AACR,CAAC,CAAC;AACFD,OAAO,CAAC,SAAS,CAAC,GAAGE,wBAAwB;AAC7C,SAASA,wBAAwBA,CAACC,IAAI,EAAE;EACvC,IAAIC,MAAM;EACV,IAAIC,OAAO,GAAGF,IAAI,CAACG,MAAM;EAEzB,IAAI,OAAOD,OAAO,KAAK,UAAU,EAAE;IAClC,IAAIA,OAAO,CAACE,UAAU,EAAE;MACvBH,MAAM,GAAGC,OAAO,CAACE,UAAU;IAC5B,CAAC,MAAM;MAEN;MACA;MACA;MACAH,MAAM,GAAGC,OAAO,CAAC,KAAK,CAAC,CAAC,8CAA8C,CAAC;MACvE,IAAI;QACHA,OAAO,CAACE,UAAU,GAAGH,MAAM;MAC5B,CAAC,CAAC,OAAOI,GAAG,EAAE;QACb;QACA;QACA;MAAA;IAEF;EACD,CAAC,MAAM;IACNJ,MAAM,GAAG,cAAc;EACxB;EAEA,OAAOA,MAAM;AACd;AAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}