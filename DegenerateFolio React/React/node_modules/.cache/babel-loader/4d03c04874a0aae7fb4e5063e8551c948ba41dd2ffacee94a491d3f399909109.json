{"ast":null,"code":"\"use strict\";\n\n/* eslint-disable @typescript-eslint/naming-convention */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildQuery = exports.SubscriptionEventType = exports.Method = void 0;\n/**\n * RPC methods as documented in https://docs.tendermint.com/master/rpc/\n *\n * Enum raw value must match the spelling in the \"shell\" example call (snake_case)\n */\nvar Method;\n(function (Method) {\n  Method[\"AbciInfo\"] = \"abci_info\";\n  Method[\"AbciQuery\"] = \"abci_query\";\n  Method[\"Block\"] = \"block\";\n  /** Get block headers for minHeight <= height <= maxHeight. */\n  Method[\"Blockchain\"] = \"blockchain\";\n  Method[\"BlockResults\"] = \"block_results\";\n  Method[\"BlockSearch\"] = \"block_search\";\n  Method[\"BroadcastTxAsync\"] = \"broadcast_tx_async\";\n  Method[\"BroadcastTxSync\"] = \"broadcast_tx_sync\";\n  Method[\"BroadcastTxCommit\"] = \"broadcast_tx_commit\";\n  Method[\"Commit\"] = \"commit\";\n  Method[\"Genesis\"] = \"genesis\";\n  Method[\"Health\"] = \"health\";\n  Method[\"NumUnconfirmedTxs\"] = \"num_unconfirmed_txs\";\n  Method[\"Status\"] = \"status\";\n  Method[\"Subscribe\"] = \"subscribe\";\n  Method[\"Tx\"] = \"tx\";\n  Method[\"TxSearch\"] = \"tx_search\";\n  Method[\"Validators\"] = \"validators\";\n  Method[\"Unsubscribe\"] = \"unsubscribe\";\n})(Method = exports.Method || (exports.Method = {}));\n/**\n * Raw values must match the tendermint event name\n *\n * @see https://godoc.org/github.com/tendermint/tendermint/types#pkg-constants\n */\nvar SubscriptionEventType;\n(function (SubscriptionEventType) {\n  SubscriptionEventType[\"NewBlock\"] = \"NewBlock\";\n  SubscriptionEventType[\"NewBlockHeader\"] = \"NewBlockHeader\";\n  SubscriptionEventType[\"Tx\"] = \"Tx\";\n})(SubscriptionEventType = exports.SubscriptionEventType || (exports.SubscriptionEventType = {}));\nfunction buildQuery(components) {\n  const tags = components.tags ? components.tags : [];\n  const tagComponents = tags.map(tag => `${tag.key}='${tag.value}'`);\n  const rawComponents = components.raw ? [components.raw] : [];\n  return [...tagComponents, ...rawComponents].join(\" AND \");\n}\nexports.buildQuery = buildQuery;","map":{"version":3,"names":["Method","exports","SubscriptionEventType","buildQuery","components","tags","tagComponents","map","tag","key","value","rawComponents","raw","join"],"sources":["../../src/tendermint34/requests.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;AAEA;;;;;AAKA,IAAYA,MAqBX;AArBD,WAAYA,MAAM;EAChBA,MAAA,0BAAsB;EACtBA,MAAA,4BAAwB;EACxBA,MAAA,mBAAe;EACf;EACAA,MAAA,6BAAyB;EACzBA,MAAA,kCAA8B;EAC9BA,MAAA,gCAA4B;EAC5BA,MAAA,2CAAuC;EACvCA,MAAA,yCAAqC;EACrCA,MAAA,6CAAyC;EACzCA,MAAA,qBAAiB;EACjBA,MAAA,uBAAmB;EACnBA,MAAA,qBAAiB;EACjBA,MAAA,6CAAyC;EACzCA,MAAA,qBAAiB;EACjBA,MAAA,2BAAuB;EACvBA,MAAA,aAAS;EACTA,MAAA,0BAAsB;EACtBA,MAAA,6BAAyB;EACzBA,MAAA,+BAA2B;AAC7B,CAAC,EArBWA,MAAM,GAANC,OAAA,CAAAD,MAAM,KAANC,OAAA,CAAAD,MAAM;AAwClB;;;;;AAKA,IAAYE,qBAIX;AAJD,WAAYA,qBAAqB;EAC/BA,qBAAA,yBAAqB;EACrBA,qBAAA,qCAAiC;EACjCA,qBAAA,aAAS;AACX,CAAC,EAJWA,qBAAqB,GAArBD,OAAA,CAAAC,qBAAqB,KAArBD,OAAA,CAAAC,qBAAqB;AAqJjC,SAAgBC,UAAUA,CAACC,UAAgC;EACzD,MAAMC,IAAI,GAAGD,UAAU,CAACC,IAAI,GAAGD,UAAU,CAACC,IAAI,GAAG,EAAE;EACnD,MAAMC,aAAa,GAAGD,IAAI,CAACE,GAAG,CAAEC,GAAG,IAAK,GAAGA,GAAG,CAACC,GAAG,KAAKD,GAAG,CAACE,KAAK,GAAG,CAAC;EACpE,MAAMC,aAAa,GAAGP,UAAU,CAACQ,GAAG,GAAG,CAACR,UAAU,CAACQ,GAAG,CAAC,GAAG,EAAE;EAE5D,OAAO,CAAC,GAAGN,aAAa,EAAE,GAAGK,aAAa,CAAC,CAACE,IAAI,CAAC,OAAO,CAAC;AAC3D;AANAZ,OAAA,CAAAE,UAAA,GAAAA,UAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}