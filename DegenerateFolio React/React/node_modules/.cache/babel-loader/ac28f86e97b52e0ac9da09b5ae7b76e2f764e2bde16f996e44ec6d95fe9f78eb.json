{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tendermint34Client = void 0;\nconst jsonrpc_1 = require(\"../jsonrpc\");\nconst rpcclients_1 = require(\"../rpcclients\");\nconst adaptor_1 = require(\"./adaptor\");\nconst requests = __importStar(require(\"./requests\"));\nclass Tendermint34Client {\n  /**\n   * Creates a new Tendermint client for the given endpoint.\n   *\n   * Uses HTTP when the URL schema is http or https. Uses WebSockets otherwise.\n   */\n  static async connect(endpoint) {\n    let rpcClient;\n    if (typeof endpoint === \"object\") {\n      rpcClient = new rpcclients_1.HttpClient(endpoint);\n    } else {\n      const useHttp = endpoint.startsWith(\"http://\") || endpoint.startsWith(\"https://\");\n      rpcClient = useHttp ? new rpcclients_1.HttpClient(endpoint) : new rpcclients_1.WebsocketClient(endpoint);\n    }\n    // For some very strange reason I don't understand, tests start to fail on some systems\n    // (our CI) when skipping the status call before doing other queries. Sleeping a little\n    // while did not help. Thus we query the version as a way to say \"hi\" to the backend,\n    // even in cases where we don't use the result.\n    const _version = await this.detectVersion(rpcClient);\n    return Tendermint34Client.create(rpcClient);\n  }\n  /**\n   * Creates a new Tendermint client given an RPC client.\n   */\n  static async create(rpcClient) {\n    return new Tendermint34Client(rpcClient);\n  }\n  static async detectVersion(client) {\n    const req = (0, jsonrpc_1.createJsonRpcRequest)(requests.Method.Status);\n    const response = await client.execute(req);\n    const result = response.result;\n    if (!result || !result.node_info) {\n      throw new Error(\"Unrecognized format for status response\");\n    }\n    const version = result.node_info.version;\n    if (typeof version !== \"string\") {\n      throw new Error(\"Unrecognized version format: must be string\");\n    }\n    return version;\n  }\n  /**\n   * Use `Tendermint34Client.connect` or `Tendermint34Client.create` to create an instance.\n   */\n  constructor(client) {\n    this.client = client;\n  }\n  disconnect() {\n    this.client.disconnect();\n  }\n  async abciInfo() {\n    const query = {\n      method: requests.Method.AbciInfo\n    };\n    return this.doCall(query, adaptor_1.Params.encodeAbciInfo, adaptor_1.Responses.decodeAbciInfo);\n  }\n  async abciQuery(params) {\n    const query = {\n      params: params,\n      method: requests.Method.AbciQuery\n    };\n    return this.doCall(query, adaptor_1.Params.encodeAbciQuery, adaptor_1.Responses.decodeAbciQuery);\n  }\n  async block(height) {\n    const query = {\n      method: requests.Method.Block,\n      params: {\n        height: height\n      }\n    };\n    return this.doCall(query, adaptor_1.Params.encodeBlock, adaptor_1.Responses.decodeBlock);\n  }\n  async blockResults(height) {\n    const query = {\n      method: requests.Method.BlockResults,\n      params: {\n        height: height\n      }\n    };\n    return this.doCall(query, adaptor_1.Params.encodeBlockResults, adaptor_1.Responses.decodeBlockResults);\n  }\n  /**\n   * Search for events that are in a block.\n   *\n   * NOTE\n   * This method will error on any node that is running a Tendermint version lower than 0.34.9.\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Info/block_search\n   */\n  async blockSearch(params) {\n    const query = {\n      params: params,\n      method: requests.Method.BlockSearch\n    };\n    const resp = await this.doCall(query, adaptor_1.Params.encodeBlockSearch, adaptor_1.Responses.decodeBlockSearch);\n    return {\n      ...resp,\n      // make sure we sort by height, as tendermint may be sorting by string value of the height\n      blocks: [...resp.blocks].sort((a, b) => a.block.header.height - b.block.header.height)\n    };\n  }\n  // this should paginate through all blockSearch options to ensure it returns all results.\n  // starts with page 1 or whatever was provided (eg. to start on page 7)\n  //\n  // NOTE\n  // This method will error on any node that is running a Tendermint version lower than 0.34.9.\n  async blockSearchAll(params) {\n    let page = params.page || 1;\n    const blocks = [];\n    let done = false;\n    while (!done) {\n      const resp = await this.blockSearch({\n        ...params,\n        page: page\n      });\n      blocks.push(...resp.blocks);\n      if (blocks.length < resp.totalCount) {\n        page++;\n      } else {\n        done = true;\n      }\n    }\n    // make sure we sort by height, as tendermint may be sorting by string value of the height\n    // and the earlier items may be in a higher page than the later items\n    blocks.sort((a, b) => a.block.header.height - b.block.header.height);\n    return {\n      totalCount: blocks.length,\n      blocks: blocks\n    };\n  }\n  /**\n   * Queries block headers filtered by minHeight <= height <= maxHeight.\n   *\n   * @param minHeight The minimum height to be included in the result. Defaults to 0.\n   * @param maxHeight The maximum height to be included in the result. Defaults to infinity.\n   */\n  async blockchain(minHeight, maxHeight) {\n    const query = {\n      method: requests.Method.Blockchain,\n      params: {\n        minHeight: minHeight,\n        maxHeight: maxHeight\n      }\n    };\n    return this.doCall(query, adaptor_1.Params.encodeBlockchain, adaptor_1.Responses.decodeBlockchain);\n  }\n  /**\n   * Broadcast transaction to mempool and wait for response\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_sync\n   */\n  async broadcastTxSync(params) {\n    const query = {\n      params: params,\n      method: requests.Method.BroadcastTxSync\n    };\n    return this.doCall(query, adaptor_1.Params.encodeBroadcastTx, adaptor_1.Responses.decodeBroadcastTxSync);\n  }\n  /**\n   * Broadcast transaction to mempool and do not wait for result\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_async\n   */\n  async broadcastTxAsync(params) {\n    const query = {\n      params: params,\n      method: requests.Method.BroadcastTxAsync\n    };\n    return this.doCall(query, adaptor_1.Params.encodeBroadcastTx, adaptor_1.Responses.decodeBroadcastTxAsync);\n  }\n  /**\n   * Broadcast transaction to mempool and wait for block\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_commit\n   */\n  async broadcastTxCommit(params) {\n    const query = {\n      params: params,\n      method: requests.Method.BroadcastTxCommit\n    };\n    return this.doCall(query, adaptor_1.Params.encodeBroadcastTx, adaptor_1.Responses.decodeBroadcastTxCommit);\n  }\n  async commit(height) {\n    const query = {\n      method: requests.Method.Commit,\n      params: {\n        height: height\n      }\n    };\n    return this.doCall(query, adaptor_1.Params.encodeCommit, adaptor_1.Responses.decodeCommit);\n  }\n  async genesis() {\n    const query = {\n      method: requests.Method.Genesis\n    };\n    return this.doCall(query, adaptor_1.Params.encodeGenesis, adaptor_1.Responses.decodeGenesis);\n  }\n  async health() {\n    const query = {\n      method: requests.Method.Health\n    };\n    return this.doCall(query, adaptor_1.Params.encodeHealth, adaptor_1.Responses.decodeHealth);\n  }\n  async numUnconfirmedTxs() {\n    const query = {\n      method: requests.Method.NumUnconfirmedTxs\n    };\n    return this.doCall(query, adaptor_1.Params.encodeNumUnconfirmedTxs, adaptor_1.Responses.decodeNumUnconfirmedTxs);\n  }\n  async status() {\n    const query = {\n      method: requests.Method.Status\n    };\n    return this.doCall(query, adaptor_1.Params.encodeStatus, adaptor_1.Responses.decodeStatus);\n  }\n  subscribeNewBlock() {\n    const request = {\n      method: requests.Method.Subscribe,\n      query: {\n        type: requests.SubscriptionEventType.NewBlock\n      }\n    };\n    return this.subscribe(request, adaptor_1.Responses.decodeNewBlockEvent);\n  }\n  subscribeNewBlockHeader() {\n    const request = {\n      method: requests.Method.Subscribe,\n      query: {\n        type: requests.SubscriptionEventType.NewBlockHeader\n      }\n    };\n    return this.subscribe(request, adaptor_1.Responses.decodeNewBlockHeaderEvent);\n  }\n  subscribeTx(query) {\n    const request = {\n      method: requests.Method.Subscribe,\n      query: {\n        type: requests.SubscriptionEventType.Tx,\n        raw: query\n      }\n    };\n    return this.subscribe(request, adaptor_1.Responses.decodeTxEvent);\n  }\n  /**\n   * Get a single transaction by hash\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Info/tx\n   */\n  async tx(params) {\n    const query = {\n      params: params,\n      method: requests.Method.Tx\n    };\n    return this.doCall(query, adaptor_1.Params.encodeTx, adaptor_1.Responses.decodeTx);\n  }\n  /**\n   * Search for transactions that are in a block\n   *\n   * @see https://docs.tendermint.com/master/rpc/#/Info/tx_search\n   */\n  async txSearch(params) {\n    const query = {\n      params: params,\n      method: requests.Method.TxSearch\n    };\n    return this.doCall(query, adaptor_1.Params.encodeTxSearch, adaptor_1.Responses.decodeTxSearch);\n  }\n  // this should paginate through all txSearch options to ensure it returns all results.\n  // starts with page 1 or whatever was provided (eg. to start on page 7)\n  async txSearchAll(params) {\n    let page = params.page || 1;\n    const txs = [];\n    let done = false;\n    while (!done) {\n      const resp = await this.txSearch({\n        ...params,\n        page: page\n      });\n      txs.push(...resp.txs);\n      if (txs.length < resp.totalCount) {\n        page++;\n      } else {\n        done = true;\n      }\n    }\n    return {\n      totalCount: txs.length,\n      txs: txs\n    };\n  }\n  async validators(params) {\n    const query = {\n      method: requests.Method.Validators,\n      params: params\n    };\n    return this.doCall(query, adaptor_1.Params.encodeValidators, adaptor_1.Responses.decodeValidators);\n  }\n  async validatorsAll(height) {\n    const validators = [];\n    let page = 1;\n    let done = false;\n    let blockHeight = height;\n    while (!done) {\n      const response = await this.validators({\n        per_page: 50,\n        height: blockHeight,\n        page: page\n      });\n      validators.push(...response.validators);\n      blockHeight = blockHeight || response.blockHeight;\n      if (validators.length < response.total) {\n        page++;\n      } else {\n        done = true;\n      }\n    }\n    return {\n      // NOTE: Default value is for type safety but this should always be set\n      blockHeight: blockHeight ?? 0,\n      count: validators.length,\n      total: validators.length,\n      validators: validators\n    };\n  }\n  // doCall is a helper to handle the encode/call/decode logic\n  async doCall(request, encode, decode) {\n    const req = encode(request);\n    const result = await this.client.execute(req);\n    return decode(result);\n  }\n  subscribe(request, decode) {\n    if (!(0, rpcclients_1.instanceOfRpcStreamingClient)(this.client)) {\n      throw new Error(\"This RPC client type cannot subscribe to events\");\n    }\n    const req = adaptor_1.Params.encodeSubscribe(request);\n    const eventStream = this.client.listen(req);\n    return eventStream.map(event => {\n      return decode(event);\n    });\n  }\n}\nexports.Tendermint34Client = Tendermint34Client;","map":{"version":3,"names":["jsonrpc_1","require","rpcclients_1","adaptor_1","requests","__importStar","Tendermint34Client","connect","endpoint","rpcClient","HttpClient","useHttp","startsWith","WebsocketClient","_version","detectVersion","create","client","req","createJsonRpcRequest","Method","Status","response","execute","result","node_info","Error","version","constructor","disconnect","abciInfo","query","method","AbciInfo","doCall","Params","encodeAbciInfo","Responses","decodeAbciInfo","abciQuery","params","AbciQuery","encodeAbciQuery","decodeAbciQuery","block","height","Block","encodeBlock","decodeBlock","blockResults","BlockResults","encodeBlockResults","decodeBlockResults","blockSearch","BlockSearch","resp","encodeBlockSearch","decodeBlockSearch","blocks","sort","a","b","header","blockSearchAll","page","done","push","length","totalCount","blockchain","minHeight","maxHeight","Blockchain","encodeBlockchain","decodeBlockchain","broadcastTxSync","BroadcastTxSync","encodeBroadcastTx","decodeBroadcastTxSync","broadcastTxAsync","BroadcastTxAsync","decodeBroadcastTxAsync","broadcastTxCommit","BroadcastTxCommit","decodeBroadcastTxCommit","commit","Commit","encodeCommit","decodeCommit","genesis","Genesis","encodeGenesis","decodeGenesis","health","Health","encodeHealth","decodeHealth","numUnconfirmedTxs","NumUnconfirmedTxs","encodeNumUnconfirmedTxs","decodeNumUnconfirmedTxs","status","encodeStatus","decodeStatus","subscribeNewBlock","request","Subscribe","type","SubscriptionEventType","NewBlock","subscribe","decodeNewBlockEvent","subscribeNewBlockHeader","NewBlockHeader","decodeNewBlockHeaderEvent","subscribeTx","Tx","raw","decodeTxEvent","tx","encodeTx","decodeTx","txSearch","TxSearch","encodeTxSearch","decodeTxSearch","txSearchAll","txs","validators","Validators","encodeValidators","decodeValidators","validatorsAll","blockHeight","per_page","total","count","encode","decode","instanceOfRpcStreamingClient","encodeSubscribe","eventStream","listen","map","event","exports"],"sources":["../../src/tendermint34/tendermint34client.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}