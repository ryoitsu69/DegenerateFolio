{"ast":null,"code":"import { flattenUniq } from './flattenUniq.js';\nimport { validateTypes } from './validateTypes.js';\n/** @internal */\nfunction extractTypes(lookup, types) {\n  return types.map(_ref => {\n    let {\n      type\n    } = _ref;\n    return lookup.getTypeDef(type).type;\n  });\n}\n/** @internal */\nfunction extractFieldTypes(lookup, type) {\n  return lookup.getSiType(type).def.asVariant.variants.map(_ref2 => {\n    let {\n      fields\n    } = _ref2;\n    return extractTypes(lookup, fields);\n  });\n}\n/** @internal */\nfunction getPalletNames(_ref3) {\n  let {\n    lookup,\n    pallets\n  } = _ref3;\n  return pallets.reduce((all, _ref4) => {\n    let {\n      calls,\n      constants,\n      events,\n      storage\n    } = _ref4;\n    all.push([extractTypes(lookup, constants)]);\n    if (calls.isSome) {\n      all.push(extractFieldTypes(lookup, calls.unwrap().type));\n    }\n    if (events.isSome) {\n      all.push(extractFieldTypes(lookup, events.unwrap().type));\n    }\n    if (storage.isSome) {\n      all.push(storage.unwrap().items.map(_ref5 => {\n        let {\n          type\n        } = _ref5;\n        if (type.isPlain) {\n          return [lookup.getTypeDef(type.asPlain).type];\n        }\n        const {\n          hashers,\n          key,\n          value\n        } = type.asMap;\n        return hashers.length === 1 ? [lookup.getTypeDef(value).type, lookup.getTypeDef(key).type] : [lookup.getTypeDef(value).type, ...lookup.getSiType(key).def.asTuple.map(t => lookup.getTypeDef(t).type)];\n      }));\n    }\n    return all;\n  }, []);\n}\n/** @internal */\nexport function getUniqTypes(registry, meta, throwError) {\n  return validateTypes(registry, throwError, flattenUniq(getPalletNames(meta)));\n}","map":{"version":3,"names":["flattenUniq","validateTypes","extractTypes","lookup","types","map","_ref","type","getTypeDef","extractFieldTypes","getSiType","def","asVariant","variants","_ref2","fields","getPalletNames","_ref3","pallets","reduce","all","_ref4","calls","constants","events","storage","push","isSome","unwrap","items","_ref5","isPlain","asPlain","hashers","key","value","asMap","length","asTuple","t","getUniqTypes","registry","meta","throwError"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/metadata/util/getUniqTypes.js"],"sourcesContent":["import { flattenUniq } from './flattenUniq.js';\nimport { validateTypes } from './validateTypes.js';\n/** @internal */\nfunction extractTypes(lookup, types) {\n    return types.map(({ type }) => lookup.getTypeDef(type).type);\n}\n/** @internal */\nfunction extractFieldTypes(lookup, type) {\n    return lookup.getSiType(type).def.asVariant.variants.map(({ fields }) => extractTypes(lookup, fields));\n}\n/** @internal */\nfunction getPalletNames({ lookup, pallets }) {\n    return pallets.reduce((all, { calls, constants, events, storage }) => {\n        all.push([extractTypes(lookup, constants)]);\n        if (calls.isSome) {\n            all.push(extractFieldTypes(lookup, calls.unwrap().type));\n        }\n        if (events.isSome) {\n            all.push(extractFieldTypes(lookup, events.unwrap().type));\n        }\n        if (storage.isSome) {\n            all.push(storage.unwrap().items.map(({ type }) => {\n                if (type.isPlain) {\n                    return [lookup.getTypeDef(type.asPlain).type];\n                }\n                const { hashers, key, value } = type.asMap;\n                return hashers.length === 1\n                    ? [\n                        lookup.getTypeDef(value).type,\n                        lookup.getTypeDef(key).type\n                    ]\n                    : [\n                        lookup.getTypeDef(value).type,\n                        ...lookup.getSiType(key).def.asTuple.map((t) => lookup.getTypeDef(t).type)\n                    ];\n            }));\n        }\n        return all;\n    }, []);\n}\n/** @internal */\nexport function getUniqTypes(registry, meta, throwError) {\n    return validateTypes(registry, throwError, flattenUniq(getPalletNames(meta)));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}