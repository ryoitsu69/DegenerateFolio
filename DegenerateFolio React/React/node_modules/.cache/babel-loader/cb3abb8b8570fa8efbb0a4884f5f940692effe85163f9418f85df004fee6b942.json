{"ast":null,"code":"var appleIphone = /iPhone/i;\nvar appleIpod = /iPod/i;\nvar appleTablet = /iPad/i;\nvar appleUniversal = /\\biOS-universal(?:.+)Mac\\b/i;\nvar androidPhone = /\\bAndroid(?:.+)Mobile\\b/i;\nvar androidTablet = /Android/i;\nvar amazonPhone = /(?:SD4930UR|\\bSilk(?:.+)Mobile\\b)/i;\nvar amazonTablet = /Silk/i;\nvar windowsPhone = /Windows Phone/i;\nvar windowsTablet = /\\bWindows(?:.+)ARM\\b/i;\nvar otherBlackBerry = /BlackBerry/i;\nvar otherBlackBerry10 = /BB10/i;\nvar otherOpera = /Opera Mini/i;\nvar otherChrome = /\\b(CriOS|Chrome)(?:.+)Mobile/i;\nvar otherFirefox = /Mobile(?:.+)Firefox\\b/i;\nvar isAppleTabletOnIos13 = function (navigator) {\n  return typeof navigator !== 'undefined' && navigator.platform === 'MacIntel' && typeof navigator.maxTouchPoints === 'number' && navigator.maxTouchPoints > 1 && typeof MSStream === 'undefined';\n};\nfunction createMatch(userAgent) {\n  return function (regex) {\n    return regex.test(userAgent);\n  };\n}\nexport default function isMobile(param) {\n  var nav = {\n    userAgent: '',\n    platform: '',\n    maxTouchPoints: 0\n  };\n  if (!param && typeof navigator !== 'undefined') {\n    nav = {\n      userAgent: navigator.userAgent,\n      platform: navigator.platform,\n      maxTouchPoints: navigator.maxTouchPoints || 0\n    };\n  } else if (typeof param === 'string') {\n    nav.userAgent = param;\n  } else if (param && param.userAgent) {\n    nav = {\n      userAgent: param.userAgent,\n      platform: param.platform,\n      maxTouchPoints: param.maxTouchPoints || 0\n    };\n  }\n  var userAgent = nav.userAgent;\n  var tmp = userAgent.split('[FBAN');\n  if (typeof tmp[1] !== 'undefined') {\n    userAgent = tmp[0];\n  }\n  tmp = userAgent.split('Twitter');\n  if (typeof tmp[1] !== 'undefined') {\n    userAgent = tmp[0];\n  }\n  var match = createMatch(userAgent);\n  var result = {\n    apple: {\n      phone: match(appleIphone) && !match(windowsPhone),\n      ipod: match(appleIpod),\n      tablet: !match(appleIphone) && (match(appleTablet) || isAppleTabletOnIos13(nav)) && !match(windowsPhone),\n      universal: match(appleUniversal),\n      device: (match(appleIphone) || match(appleIpod) || match(appleTablet) || match(appleUniversal) || isAppleTabletOnIos13(nav)) && !match(windowsPhone)\n    },\n    amazon: {\n      phone: match(amazonPhone),\n      tablet: !match(amazonPhone) && match(amazonTablet),\n      device: match(amazonPhone) || match(amazonTablet)\n    },\n    android: {\n      phone: !match(windowsPhone) && match(amazonPhone) || !match(windowsPhone) && match(androidPhone),\n      tablet: !match(windowsPhone) && !match(amazonPhone) && !match(androidPhone) && (match(amazonTablet) || match(androidTablet)),\n      device: !match(windowsPhone) && (match(amazonPhone) || match(amazonTablet) || match(androidPhone) || match(androidTablet)) || match(/\\bokhttp\\b/i)\n    },\n    windows: {\n      phone: match(windowsPhone),\n      tablet: match(windowsTablet),\n      device: match(windowsPhone) || match(windowsTablet)\n    },\n    other: {\n      blackberry: match(otherBlackBerry),\n      blackberry10: match(otherBlackBerry10),\n      opera: match(otherOpera),\n      firefox: match(otherFirefox),\n      chrome: match(otherChrome),\n      device: match(otherBlackBerry) || match(otherBlackBerry10) || match(otherOpera) || match(otherFirefox) || match(otherChrome)\n    },\n    any: false,\n    phone: false,\n    tablet: false\n  };\n  result.any = result.apple.device || result.android.device || result.windows.device || result.other.device;\n  result.phone = result.apple.phone || result.android.phone || result.windows.phone;\n  result.tablet = result.apple.tablet || result.android.tablet || result.windows.tablet;\n  return result;\n}","map":{"version":3,"names":["appleIphone","appleIpod","appleTablet","appleUniversal","androidPhone","androidTablet","amazonPhone","amazonTablet","windowsPhone","windowsTablet","otherBlackBerry","otherBlackBerry10","otherOpera","otherChrome","otherFirefox","isAppleTabletOnIos13","navigator","platform","maxTouchPoints","MSStream","createMatch","userAgent","regex","test","isMobile","param","nav","tmp","split","match","result","apple","phone","ipod","tablet","universal","device","amazon","android","windows","other","blackberry","blackberry10","opera","firefox","chrome","any"],"sources":["/home/ryoitsu/node_modules/ismobilejs/src/isMobile.ts"],"sourcesContent":["const appleIphone = /iPhone/i;\nconst appleIpod = /iPod/i;\nconst appleTablet = /iPad/i;\nconst appleUniversal = /\\biOS-universal(?:.+)Mac\\b/i;\nconst androidPhone = /\\bAndroid(?:.+)Mobile\\b/i; // Match 'Android' AND 'Mobile'\nconst androidTablet = /Android/i;\nconst amazonPhone = /(?:SD4930UR|\\bSilk(?:.+)Mobile\\b)/i; // Match 'Silk' AND 'Mobile'\nconst amazonTablet = /Silk/i;\nconst windowsPhone = /Windows Phone/i;\nconst windowsTablet = /\\bWindows(?:.+)ARM\\b/i; // Match 'Windows' AND 'ARM'\nconst otherBlackBerry = /BlackBerry/i;\nconst otherBlackBerry10 = /BB10/i;\nconst otherOpera = /Opera Mini/i;\nconst otherChrome = /\\b(CriOS|Chrome)(?:.+)Mobile/i;\nconst otherFirefox = /Mobile(?:.+)Firefox\\b/i; // Match 'Mobile' AND 'Firefox'\n\nexport type UserAgent = string;\nexport type Navigator = {\n  userAgent: string;\n  platform: string;\n  maxTouchPoints?: number;\n};\n\nconst isAppleTabletOnIos13 = (navigator?: Navigator): boolean => {\n  return (\n    typeof navigator !== 'undefined' &&\n    navigator.platform === 'MacIntel' &&\n    typeof navigator.maxTouchPoints === 'number' &&\n    navigator.maxTouchPoints > 1 &&\n    typeof MSStream === 'undefined'\n  );\n};\n\nfunction createMatch(userAgent: UserAgent): (regex: RegExp) => boolean {\n  return (regex: RegExp): boolean => regex.test(userAgent);\n}\n\nexport type isMobileResult = {\n  apple: {\n    phone: boolean;\n    ipod: boolean;\n    tablet: boolean;\n    universal: boolean;\n    device: boolean;\n  };\n  amazon: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  android: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  windows: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  other: {\n    blackberry: boolean;\n    blackberry10: boolean;\n    opera: boolean;\n    firefox: boolean;\n    chrome: boolean;\n    device: boolean;\n  };\n  phone: boolean;\n  tablet: boolean;\n  any: boolean;\n};\n\nexport type IsMobileParameter = UserAgent | Navigator;\n\nexport default function isMobile(param?: IsMobileParameter): isMobileResult {\n  let nav: Navigator = {\n    userAgent: '',\n    platform: '',\n    maxTouchPoints: 0,\n  };\n\n  if (!param && typeof navigator !== 'undefined') {\n    nav = {\n      userAgent: navigator.userAgent,\n      platform: navigator.platform,\n      maxTouchPoints: navigator.maxTouchPoints || 0,\n    };\n  } else if (typeof param === 'string') {\n    nav.userAgent = param;\n  } else if (param && param.userAgent) {\n    nav = {\n      userAgent: param.userAgent,\n      platform: param.platform,\n      maxTouchPoints: param.maxTouchPoints || 0,\n    };\n  }\n\n  let userAgent = nav.userAgent;\n\n  // Facebook mobile app's integrated browser adds a bunch of strings that\n  // match everything. Strip it out if it exists.\n  let tmp = userAgent.split('[FBAN');\n  if (typeof tmp[1] !== 'undefined') {\n    userAgent = tmp[0];\n  }\n\n  // Twitter mobile app's integrated browser on iPad adds a \"Twitter for\n  // iPhone\" string. Same probably happens on other tablet platforms.\n  // This will confuse detection so strip it out if it exists.\n  tmp = userAgent.split('Twitter');\n  if (typeof tmp[1] !== 'undefined') {\n    userAgent = tmp[0];\n  }\n\n  const match = createMatch(userAgent);\n\n  const result: isMobileResult = {\n    apple: {\n      phone: match(appleIphone) && !match(windowsPhone),\n      ipod: match(appleIpod),\n      tablet:\n        !match(appleIphone) &&\n        (match(appleTablet) || isAppleTabletOnIos13(nav)) &&\n        !match(windowsPhone),\n      universal: match(appleUniversal),\n      device:\n        (match(appleIphone) ||\n          match(appleIpod) ||\n          match(appleTablet) ||\n          match(appleUniversal) ||\n          isAppleTabletOnIos13(nav)) &&\n        !match(windowsPhone),\n    },\n    amazon: {\n      phone: match(amazonPhone),\n      tablet: !match(amazonPhone) && match(amazonTablet),\n      device: match(amazonPhone) || match(amazonTablet),\n    },\n    android: {\n      phone:\n        (!match(windowsPhone) && match(amazonPhone)) ||\n        (!match(windowsPhone) && match(androidPhone)),\n      tablet:\n        !match(windowsPhone) &&\n        !match(amazonPhone) &&\n        !match(androidPhone) &&\n        (match(amazonTablet) || match(androidTablet)),\n      device:\n        (!match(windowsPhone) &&\n          (match(amazonPhone) ||\n            match(amazonTablet) ||\n            match(androidPhone) ||\n            match(androidTablet))) ||\n        match(/\\bokhttp\\b/i),\n    },\n    windows: {\n      phone: match(windowsPhone),\n      tablet: match(windowsTablet),\n      device: match(windowsPhone) || match(windowsTablet),\n    },\n    other: {\n      blackberry: match(otherBlackBerry),\n      blackberry10: match(otherBlackBerry10),\n      opera: match(otherOpera),\n      firefox: match(otherFirefox),\n      chrome: match(otherChrome),\n      device:\n        match(otherBlackBerry) ||\n        match(otherBlackBerry10) ||\n        match(otherOpera) ||\n        match(otherFirefox) ||\n        match(otherChrome),\n    },\n    any: false,\n    phone: false,\n    tablet: false,\n  };\n\n  result.any =\n    result.apple.device ||\n    result.android.device ||\n    result.windows.device ||\n    result.other.device;\n  // excludes 'other' devices and ipods, targeting touchscreen phones\n  result.phone =\n    result.apple.phone || result.android.phone || result.windows.phone;\n  result.tablet =\n    result.apple.tablet || result.android.tablet || result.windows.tablet;\n\n  return result;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}