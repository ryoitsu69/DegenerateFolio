{"ast":null,"code":"import { combineLatest, map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nfunction isVoter(value) {\n  return !Array.isArray(value);\n}\nfunction retrieveStakeOf(elections) {\n  return elections['stakeOf'].entries().pipe(map(entries => entries.map(([{\n    args: [accountId]\n  }, stake]) => [accountId, stake])));\n}\nfunction retrieveVoteOf(elections) {\n  return elections['votesOf'].entries().pipe(map(entries => entries.map(([{\n    args: [accountId]\n  }, votes]) => [accountId, votes])));\n}\nfunction retrievePrev(api, elections) {\n  return combineLatest([retrieveStakeOf(elections), retrieveVoteOf(elections)]).pipe(map(([stakes, votes]) => {\n    const result = [];\n    votes.forEach(([voter, votes]) => {\n      result.push([voter, {\n        stake: api.registry.createType('Balance'),\n        votes\n      }]);\n    });\n    stakes.forEach(([staker, stake]) => {\n      const entry = result.find(([voter]) => voter.eq(staker));\n      if (entry) {\n        entry[1].stake = stake;\n      } else {\n        result.push([staker, {\n          stake,\n          votes: []\n        }]);\n      }\n    });\n    return result;\n  }));\n}\nfunction retrieveCurrent(elections) {\n  return elections.voting.entries().pipe(map(entries => entries.map(([{\n    args: [accountId]\n  }, value]) => [accountId, isVoter(value) ? {\n    stake: value.stake,\n    votes: value.votes\n  } : {\n    stake: value[0],\n    votes: value[1]\n  }])));\n}\nexport function votes(instanceId, api) {\n  const elections = api.query.elections || api.query['phragmenElection'] || api.query['electionsPhragmen'];\n  return memo(instanceId, () => elections ? elections['stakeOf'] ? retrievePrev(api, elections) : retrieveCurrent(elections) : of([]));\n}","map":{"version":3,"names":["combineLatest","map","of","memo","isVoter","value","Array","isArray","retrieveStakeOf","elections","entries","pipe","args","accountId","stake","retrieveVoteOf","votes","retrievePrev","api","stakes","result","forEach","voter","push","registry","createType","staker","entry","find","eq","retrieveCurrent","voting","instanceId","query"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/council/votes.js"],"sourcesContent":["import { combineLatest, map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nfunction isVoter(value) {\n    return !Array.isArray(value);\n}\nfunction retrieveStakeOf(elections) {\n    return elections['stakeOf'].entries().pipe(map((entries) => entries.map(([{ args: [accountId] }, stake]) => [accountId, stake])));\n}\nfunction retrieveVoteOf(elections) {\n    return elections['votesOf'].entries().pipe(map((entries) => entries.map(([{ args: [accountId] }, votes]) => [accountId, votes])));\n}\nfunction retrievePrev(api, elections) {\n    return combineLatest([\n        retrieveStakeOf(elections),\n        retrieveVoteOf(elections)\n    ]).pipe(map(([stakes, votes]) => {\n        const result = [];\n        votes.forEach(([voter, votes]) => {\n            result.push([voter, { stake: api.registry.createType('Balance'), votes }]);\n        });\n        stakes.forEach(([staker, stake]) => {\n            const entry = result.find(([voter]) => voter.eq(staker));\n            if (entry) {\n                entry[1].stake = stake;\n            }\n            else {\n                result.push([staker, { stake, votes: [] }]);\n            }\n        });\n        return result;\n    }));\n}\nfunction retrieveCurrent(elections) {\n    return elections.voting.entries().pipe(map((entries) => entries.map(([{ args: [accountId] }, value]) => [\n        accountId,\n        isVoter(value)\n            ? { stake: value.stake, votes: value.votes }\n            : { stake: value[0], votes: value[1] }\n    ])));\n}\nexport function votes(instanceId, api) {\n    const elections = api.query.elections || api.query['phragmenElection'] || api.query['electionsPhragmen'];\n    return memo(instanceId, () => elections\n        ? elections['stakeOf']\n            ? retrievePrev(api, elections)\n            : retrieveCurrent(elections)\n        : of([]));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}