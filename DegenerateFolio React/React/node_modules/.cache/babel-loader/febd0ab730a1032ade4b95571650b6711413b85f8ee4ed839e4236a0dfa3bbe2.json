{"ast":null,"code":"import { DeriveJunction } from './DeriveJunction.js';\nconst RE_JUNCTION = /\\/(\\/?)([^/]+)/g;\n/**\n * @description Extract derivation junctions from the supplied path\n */\nexport function keyExtractPath(derivePath) {\n  const parts = derivePath.match(RE_JUNCTION);\n  const path = [];\n  let constructed = '';\n  if (parts) {\n    constructed = parts.join('');\n    for (const p of parts) {\n      path.push(DeriveJunction.from(p.substring(1)));\n    }\n  }\n  if (constructed !== derivePath) {\n    throw new Error(\"Re-constructed path \\\"\".concat(constructed, \"\\\" does not match input\"));\n  }\n  return {\n    parts,\n    path\n  };\n}","map":{"version":3,"names":["DeriveJunction","RE_JUNCTION","keyExtractPath","derivePath","parts","match","path","constructed","join","p","push","from","substring","Error","concat"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/key/extractPath.js"],"sourcesContent":["import { DeriveJunction } from './DeriveJunction.js';\nconst RE_JUNCTION = /\\/(\\/?)([^/]+)/g;\n/**\n * @description Extract derivation junctions from the supplied path\n */\nexport function keyExtractPath(derivePath) {\n    const parts = derivePath.match(RE_JUNCTION);\n    const path = [];\n    let constructed = '';\n    if (parts) {\n        constructed = parts.join('');\n        for (const p of parts) {\n            path.push(DeriveJunction.from(p.substring(1)));\n        }\n    }\n    if (constructed !== derivePath) {\n        throw new Error(`Re-constructed path \"${constructed}\" does not match input`);\n    }\n    return {\n        parts,\n        path\n    };\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,qBAAqB;AACpD,MAAMC,WAAW,GAAG,iBAAiB;AACrC;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,UAAU,EAAE;EACvC,MAAMC,KAAK,GAAGD,UAAU,CAACE,KAAK,CAACJ,WAAW,CAAC;EAC3C,MAAMK,IAAI,GAAG,EAAE;EACf,IAAIC,WAAW,GAAG,EAAE;EACpB,IAAIH,KAAK,EAAE;IACPG,WAAW,GAAGH,KAAK,CAACI,IAAI,CAAC,EAAE,CAAC;IAC5B,KAAK,MAAMC,CAAC,IAAIL,KAAK,EAAE;MACnBE,IAAI,CAACI,IAAI,CAACV,cAAc,CAACW,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD;EACJ;EACA,IAAIL,WAAW,KAAKJ,UAAU,EAAE;IAC5B,MAAM,IAAIU,KAAK,0BAAAC,MAAA,CAAyBP,WAAW,4BAAwB,CAAC;EAChF;EACA,OAAO;IACHH,KAAK;IACLE;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}