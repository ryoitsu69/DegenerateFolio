{"ast":null,"code":"import { ExtensionType } from '../../../extensions/Extensions.mjs';\n\"use strict\";\nconst imageFormats = [\"png\", \"jpg\", \"jpeg\"];\nconst detectDefaults = {\n  extension: {\n    type: ExtensionType.DetectionParser,\n    priority: -1\n  },\n  test: () => Promise.resolve(true),\n  add: async formats => [...formats, ...imageFormats],\n  remove: async formats => formats.filter(f => !imageFormats.includes(f))\n};\nexport { detectDefaults };","map":{"version":3,"names":["imageFormats","detectDefaults","extension","type","ExtensionType","DetectionParser","priority","test","Promise","resolve","add","formats","remove","filter","f","includes"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/assets/detections/parsers/detectDefaults.ts"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions';\n\nimport type { FormatDetectionParser } from '../types';\n\nconst imageFormats = ['png', 'jpg', 'jpeg'];\n\n/**\n * Adds some default image formats to the detection parser\n * @memberof assets\n */\nexport const detectDefaults = {\n    extension: {\n        type: ExtensionType.DetectionParser,\n        priority: -1,\n    },\n    test: (): Promise<boolean> => Promise.resolve(true),\n    add: async (formats) => [...formats, ...imageFormats],\n    remove: async (formats) => formats.filter((f) => !imageFormats.includes(f)),\n} as FormatDetectionParser;\n"],"mappings":";;AAIA,MAAMA,YAAe,IAAC,KAAO,SAAO,MAAM;AAMnC,MAAMC,cAAiB;EAC1BC,SAAW;IACPC,IAAA,EAAMC,aAAc,CAAAC,eAAA;IACpBC,QAAU;EAAA,CACd;EACAC,IAAM,EAAAA,CAAA,KAAwBC,OAAQ,CAAAC,OAAA,CAAQ,IAAI;EAClDC,GAAA,EAAK,MAAOC,OAAA,IAAY,CAAC,GAAGA,OAAA,EAAS,GAAGX,YAAY;EACpDY,MAAA,EAAQ,MAAOD,OAAA,IAAYA,OAAQ,CAAAE,MAAA,CAAQC,CAAA,IAAM,CAACd,YAAA,CAAae,QAAS,CAAAD,CAAC,CAAC;AAC9E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}