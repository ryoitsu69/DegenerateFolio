{"ast":null,"code":"import { map, of, switchMap } from 'rxjs';\nimport { BN_ZERO, bnToBn, objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { getQueryInterface } from './util.js';\nfunction orderBags(ids, bags) {\n  const sorted = ids.map((id, index) => ({\n    bag: bags[index].unwrapOr(null),\n    id,\n    key: id.toString()\n  })).sort((a, b) => b.id.cmp(a.id));\n  const max = sorted.length - 1;\n  return sorted.map((entry, index) => objectSpread(entry, {\n    bagLower: index === max ? BN_ZERO : sorted[index + 1].id,\n    bagUpper: entry.id,\n    index\n  }));\n}\nexport function _getIds(instanceId, api) {\n  const query = getQueryInterface(api);\n  return memo(instanceId, _ids => {\n    const ids = _ids.map(id => bnToBn(id));\n    return ids.length ? query.listBags.multi(ids).pipe(map(bags => orderBags(ids, bags))) : of([]);\n  });\n}\nexport function all(instanceId, api) {\n  const query = getQueryInterface(api);\n  return memo(instanceId, () => query.listBags.keys().pipe(switchMap(keys => api.derive.bagsList._getIds(keys.map(_ref => {\n    let {\n      args: [id]\n    } = _ref;\n    return id;\n  }))), map(list => list.filter(_ref2 => {\n    let {\n      bag\n    } = _ref2;\n    return bag;\n  }))));\n}\nexport function get(instanceId, api) {\n  return memo(instanceId, id => api.derive.bagsList._getIds([bnToBn(id)]).pipe(map(bags => bags[0])));\n}","map":{"version":3,"names":["map","of","switchMap","BN_ZERO","bnToBn","objectSpread","memo","getQueryInterface","orderBags","ids","bags","sorted","id","index","bag","unwrapOr","key","toString","sort","a","b","cmp","max","length","entry","bagLower","bagUpper","_getIds","instanceId","api","query","_ids","listBags","multi","pipe","all","keys","derive","bagsList","_ref","args","list","filter","_ref2","get"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/bagsList/get.js"],"sourcesContent":["import { map, of, switchMap } from 'rxjs';\nimport { BN_ZERO, bnToBn, objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { getQueryInterface } from './util.js';\nfunction orderBags(ids, bags) {\n    const sorted = ids\n        .map((id, index) => ({\n        bag: bags[index].unwrapOr(null),\n        id,\n        key: id.toString()\n    }))\n        .sort((a, b) => b.id.cmp(a.id));\n    const max = sorted.length - 1;\n    return sorted.map((entry, index) => objectSpread(entry, {\n        bagLower: index === max\n            ? BN_ZERO\n            : sorted[index + 1].id,\n        bagUpper: entry.id,\n        index\n    }));\n}\nexport function _getIds(instanceId, api) {\n    const query = getQueryInterface(api);\n    return memo(instanceId, (_ids) => {\n        const ids = _ids.map((id) => bnToBn(id));\n        return ids.length\n            ? query.listBags.multi(ids).pipe(map((bags) => orderBags(ids, bags)))\n            : of([]);\n    });\n}\nexport function all(instanceId, api) {\n    const query = getQueryInterface(api);\n    return memo(instanceId, () => query.listBags.keys().pipe(switchMap((keys) => api.derive.bagsList._getIds(keys.map(({ args: [id] }) => id))), map((list) => list.filter(({ bag }) => bag))));\n}\nexport function get(instanceId, api) {\n    return memo(instanceId, (id) => api.derive.bagsList._getIds([bnToBn(id)]).pipe(map((bags) => bags[0])));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}