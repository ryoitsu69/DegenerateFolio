{"ast":null,"code":"import { bnToBn } from '../bn/toBn.js';\nimport { formatDecimal } from './formatDecimal.js';\nimport { getSeparator } from './getSeparator.js';\n/**\n * @name formatNumber\n * @description Formats a number into string format with thousand separators\n */\nexport function formatNumber(value, {\n  locale = 'en'\n} = {}) {\n  const {\n    thousand\n  } = getSeparator(locale);\n  return formatDecimal(bnToBn(value).toString(), thousand);\n}","map":{"version":3,"names":["bnToBn","formatDecimal","getSeparator","formatNumber","value","locale","thousand","toString"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util/format/formatNumber.js"],"sourcesContent":["import { bnToBn } from '../bn/toBn.js';\nimport { formatDecimal } from './formatDecimal.js';\nimport { getSeparator } from './getSeparator.js';\n/**\n * @name formatNumber\n * @description Formats a number into string format with thousand separators\n */\nexport function formatNumber(value, { locale = 'en' } = {}) {\n    const { thousand } = getSeparator(locale);\n    return formatDecimal(bnToBn(value).toString(), thousand);\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,YAAY,QAAQ,mBAAmB;AAChD;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAEC,MAAM,GAAG;AAAK,CAAC,GAAG,CAAC,CAAC,EAAE;EACxD,MAAM;IAAEC;EAAS,CAAC,GAAGJ,YAAY,CAACG,MAAM,CAAC;EACzC,OAAOJ,aAAa,CAACD,MAAM,CAACI,KAAK,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAED,QAAQ,CAAC;AAC5D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}