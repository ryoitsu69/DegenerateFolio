{"ast":null,"code":"import { uniformParsers } from './uniformParsers.mjs';\n\"use strict\";\nfunction createUboSyncFunction(uboElements, parserCode, arrayGenerationFunction, singleSettersMap) {\n  const funcFragments = [`\n        var v = null;\n        var v2 = null;\n        var t = 0;\n        var index = 0;\n        var name = null;\n        var arrayOffset = null;\n    `];\n  let prev = 0;\n  for (let i = 0; i < uboElements.length; i++) {\n    const uboElement = uboElements[i];\n    const name = uboElement.data.name;\n    let parsed = false;\n    let offset = 0;\n    for (let j = 0; j < uniformParsers.length; j++) {\n      const uniformParser = uniformParsers[j];\n      if (uniformParser.test(uboElement.data)) {\n        offset = uboElement.offset / 4;\n        funcFragments.push(`name = \"${name}\";`, `offset += ${offset - prev};`, uniformParsers[j][parserCode] || uniformParsers[j].ubo);\n        parsed = true;\n        break;\n      }\n    }\n    if (!parsed) {\n      if (uboElement.data.size > 1) {\n        offset = uboElement.offset / 4;\n        funcFragments.push(arrayGenerationFunction(uboElement, offset - prev));\n      } else {\n        const template = singleSettersMap[uboElement.data.type];\n        offset = uboElement.offset / 4;\n        funcFragments.push( /* wgsl */\n        `\n                    v = uv.${name};\n                    offset += ${offset - prev};\n                    ${template};\n                `);\n      }\n    }\n    prev = offset;\n  }\n  const fragmentSrc = funcFragments.join(\"\\n\");\n  return new Function(\"uv\", \"data\", \"offset\", fragmentSrc);\n}\nexport { createUboSyncFunction };","map":{"version":3,"names":["createUboSyncFunction","uboElements","parserCode","arrayGenerationFunction","singleSettersMap","funcFragments","prev","i","length","uboElement","name","data","parsed","offset","j","uniformParsers","uniformParser","test","push","ubo","size","template","type","fragmentSrc","join","Function"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/renderers/shared/shader/utils/createUboSyncFunction.ts"],"sourcesContent":["/* eslint-disable quote-props */\nimport { uniformParsers } from './uniformParsers';\n\nimport type { UboElement, UNIFORM_TYPES_SINGLE, UniformsSyncCallback } from '../types';\n\nexport function createUboSyncFunction(\n    uboElements: UboElement[],\n    parserCode: 'uboWgsl' | 'uboStd40',\n    arrayGenerationFunction: (uboElement: UboElement, offsetToAdd: number) => string,\n    singleSettersMap: Record<UNIFORM_TYPES_SINGLE, string>,\n): UniformsSyncCallback\n{\n    const funcFragments = [`\n        var v = null;\n        var v2 = null;\n        var t = 0;\n        var index = 0;\n        var name = null;\n        var arrayOffset = null;\n    `];\n\n    let prev = 0;\n\n    for (let i = 0; i < uboElements.length; i++)\n    {\n        const uboElement = uboElements[i];\n\n        const name = uboElement.data.name;\n\n        let parsed = false;\n        let offset = 0;\n\n        for (let j = 0; j < uniformParsers.length; j++)\n        {\n            const uniformParser = uniformParsers[j];\n\n            if (uniformParser.test(uboElement.data))\n            {\n                offset = uboElement.offset / 4;\n\n                funcFragments.push(\n                    `name = \"${name}\";`,\n                    `offset += ${offset - prev};`,\n                    uniformParsers[j][parserCode] || uniformParsers[j].ubo);\n                parsed = true;\n\n                break;\n            }\n        }\n\n        if (!parsed)\n        {\n            if (uboElement.data.size > 1)\n            {\n                offset = uboElement.offset / 4;\n\n                funcFragments.push(arrayGenerationFunction(uboElement, offset - prev));\n            }\n            else\n            {\n                const template = singleSettersMap[uboElement.data.type as UNIFORM_TYPES_SINGLE];\n\n                offset = uboElement.offset / 4;\n\n                funcFragments.push(/* wgsl */`\n                    v = uv.${name};\n                    offset += ${offset - prev};\n                    ${template};\n                `);\n            }\n        }\n\n        prev = offset;\n    }\n\n    const fragmentSrc = funcFragments.join('\\n');\n\n    // eslint-disable-next-line no-new-func\n    return new Function(\n        'uv',\n        'data',\n        'offset',\n        fragmentSrc,\n    ) as UniformsSyncCallback;\n}\n"],"mappings":";;AAKO,SAASA,qBACZA,CAAAC,WAAA,EACAC,UACA,EAAAC,uBAAA,EACAC,gBAEJ;EACI,MAAMC,aAAA,GAAgB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOtB;EAED,IAAIC,IAAO;EAEX,SAASC,CAAI,MAAGA,CAAI,GAAAN,WAAA,CAAYO,MAAA,EAAQD,CACxC;IACU,MAAAE,UAAA,GAAaR,WAAA,CAAYM,CAAC;IAE1B,MAAAG,IAAA,GAAOD,UAAA,CAAWE,IAAK,CAAAD,IAAA;IAE7B,IAAIE,MAAS;IACb,IAAIC,MAAS;IAEb,SAASC,CAAI,MAAGA,CAAI,GAAAC,cAAA,CAAeP,MAAA,EAAQM,CAC3C;MACU,MAAAE,aAAA,GAAgBD,cAAA,CAAeD,CAAC;MAEtC,IAAIE,aAAc,CAAAC,IAAA,CAAKR,UAAW,CAAAE,IAAI,CACtC;QACIE,MAAA,GAASJ,UAAA,CAAWI,MAAS;QAEfR,aAAA,CAAAa,IAAA,CACV,WAAWR,IAAI,MACf,aAAaG,MAAA,GAASP,IAAI,KAC1BS,cAAA,CAAeD,CAAC,EAAEZ,UAAU,CAAK,IAAAa,cAAA,CAAeD,CAAC,CAAE,CAAAK,GAAA,CAAG;QACjDP,MAAA;QAET;MAAA;IACJ;IAGJ,IAAI,CAACA,MACL;MACQ,IAAAH,UAAA,CAAWE,IAAK,CAAAS,IAAA,GAAO,CAC3B;QACIP,MAAA,GAASJ,UAAA,CAAWI,MAAS;QAE7BR,aAAA,CAAca,IAAK,CAAAf,uBAAA,CAAwBM,UAAY,EAAAI,MAAA,GAASP,IAAI,CAAC;MAAA,CAGzE;QACI,MAAMe,QAAW,GAAAjB,gBAAA,CAAiBK,UAAW,CAAAE,IAAA,CAAKW,IAA4B;QAE9ET,MAAA,GAASJ,UAAA,CAAWI,MAAS;QAEfR,aAAA,CAAAa,IAAA;QAAe;AAAA,6BAChBR,IAAI;AAAA,gCACDG,MAAA,GAASP,IAAI;AAAA,sBACvBe,QAAQ;AAAA,kBACb;MAAA;IACL;IAGGf,IAAA,GAAAO,MAAA;EAAA;EAGL,MAAAU,WAAA,GAAclB,aAAc,CAAAmB,IAAA,CAAK,IAAI;EAG3C,OAAO,IAAIC,QAAA,CACP,MACA,QACA,UACAF,WAAA,CACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}