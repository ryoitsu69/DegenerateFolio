{"ast":null,"code":"function removeItems(arr, startIdx, removeCount) {\n  const length = arr.length;\n  let i;\n  if (startIdx >= length || removeCount === 0) return;\n  removeCount = startIdx + removeCount > length ? length - startIdx : removeCount;\n  const len = length - removeCount;\n  for (i = startIdx; i < len; ++i) arr[i] = arr[i + removeCount];\n  arr.length = len;\n}\nexport { removeItems };","map":{"version":3,"names":["removeItems","arr","startIdx","removeCount","length","i","len"],"sources":["/home/ryoitsu/node_modules/@pixi/utils/src/data/removeItems.ts"],"sourcesContent":["/**\n * Remove items from a javascript array without generating garbage\n * @function removeItems\n * @memberof PIXI.utils\n * @param {Array<any>} arr - Array to remove elements from\n * @param {number} startIdx - starting index\n * @param {number} removeCount - how many to remove\n */\nexport function removeItems(arr: any[], startIdx: number, removeCount: number): void\n{\n    const length = arr.length;\n    let i;\n\n    if (startIdx >= length || removeCount === 0)\n    {\n        return;\n    }\n\n    removeCount = (startIdx + removeCount > length ? length - startIdx : removeCount);\n\n    const len = length - removeCount;\n\n    for (i = startIdx; i < len; ++i)\n    {\n        arr[i] = arr[i + removeCount];\n    }\n\n    arr.length = len;\n}\n"],"mappings":"AAQgB,SAAAA,YAAYC,GAAA,EAAYC,QAAA,EAAkBC,WAAA,EAC1D;EACI,MAAMC,MAAA,GAASH,GAAA,CAAIG,MAAA;EACf,IAAAC,CAAA;EAEA,IAAAH,QAAA,IAAYE,MAAA,IAAUD,WAAA,KAAgB,GAEtC;EAGJA,WAAA,GAAeD,QAAA,GAAWC,WAAA,GAAcC,MAAA,GAASA,MAAA,GAASF,QAAA,GAAWC,WAAA;EAErE,MAAMG,GAAA,GAAMF,MAAA,GAASD,WAAA;EAErB,KAAKE,CAAA,GAAIH,QAAA,EAAUG,CAAA,GAAIC,GAAA,EAAK,EAAED,CAAA,EAE1BJ,GAAA,CAAII,CAAC,IAAIJ,GAAA,CAAII,CAAA,GAAIF,WAAW;EAGhCF,GAAA,CAAIG,MAAA,GAASE,GAAA;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}