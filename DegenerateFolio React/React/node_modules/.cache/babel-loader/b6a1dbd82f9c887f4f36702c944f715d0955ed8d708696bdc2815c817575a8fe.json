{"ast":null,"code":"/**\n * @name ed25519PairFromSecret\n * @summary Creates a new public/secret keypair from a secret.\n * @description\n * Returns a object containing a `publicKey` & `secretKey` generated from the supplied secret.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519PairFromSecret } from '@polkadot/util-crypto';\n *\n * ed25519PairFromSecret(...); // => { secretKey: [...], publicKey: [...] }\n * ```\n */\nexport function ed25519PairFromSecret(secretKey) {\n  if (secretKey.length !== 64) {\n    throw new Error('Invalid secretKey provided');\n  }\n  return {\n    publicKey: secretKey.slice(32),\n    secretKey\n  };\n}","map":{"version":3,"names":["ed25519PairFromSecret","secretKey","length","Error","publicKey","slice"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/ed25519/pair/fromSecret.js"],"sourcesContent":["/**\n * @name ed25519PairFromSecret\n * @summary Creates a new public/secret keypair from a secret.\n * @description\n * Returns a object containing a `publicKey` & `secretKey` generated from the supplied secret.\n * @example\n * <BR>\n *\n * ```javascript\n * import { ed25519PairFromSecret } from '@polkadot/util-crypto';\n *\n * ed25519PairFromSecret(...); // => { secretKey: [...], publicKey: [...] }\n * ```\n */\nexport function ed25519PairFromSecret(secretKey) {\n    if (secretKey.length !== 64) {\n        throw new Error('Invalid secretKey provided');\n    }\n    return {\n        publicKey: secretKey.slice(32),\n        secretKey\n    };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,qBAAqBA,CAACC,SAAS,EAAE;EAC7C,IAAIA,SAAS,CAACC,MAAM,KAAK,EAAE,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EACjD;EACA,OAAO;IACHC,SAAS,EAAEH,SAAS,CAACI,KAAK,CAAC,EAAE,CAAC;IAC9BJ;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}