{"ast":null,"code":"import { isU8a, u8aToU8a } from '@polkadot/util';\nimport { sr25519DerivePublicSoft } from '@polkadot/wasm-crypto';\nexport function sr25519DerivePublic(publicKey, chainCode) {\n  const publicKeyU8a = u8aToU8a(publicKey);\n  if (!isU8a(chainCode) || chainCode.length !== 32) {\n    throw new Error('Invalid chainCode passed to derive');\n  } else if (publicKeyU8a.length !== 32) {\n    throw new Error(`Invalid publicKey, received ${publicKeyU8a.length} bytes, expected 32`);\n  }\n  return sr25519DerivePublicSoft(publicKeyU8a, chainCode);\n}","map":{"version":3,"names":["isU8a","u8aToU8a","sr25519DerivePublicSoft","sr25519DerivePublic","publicKey","chainCode","publicKeyU8a","length","Error"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/sr25519/derivePublic.js"],"sourcesContent":["import { isU8a, u8aToU8a } from '@polkadot/util';\nimport { sr25519DerivePublicSoft } from '@polkadot/wasm-crypto';\nexport function sr25519DerivePublic(publicKey, chainCode) {\n    const publicKeyU8a = u8aToU8a(publicKey);\n    if (!isU8a(chainCode) || chainCode.length !== 32) {\n        throw new Error('Invalid chainCode passed to derive');\n    }\n    else if (publicKeyU8a.length !== 32) {\n        throw new Error(`Invalid publicKey, received ${publicKeyU8a.length} bytes, expected 32`);\n    }\n    return sr25519DerivePublicSoft(publicKeyU8a, chainCode);\n}\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,gBAAgB;AAChD,SAASC,uBAAuB,QAAQ,uBAAuB;AAC/D,OAAO,SAASC,mBAAmBA,CAACC,SAAS,EAAEC,SAAS,EAAE;EACtD,MAAMC,YAAY,GAAGL,QAAQ,CAACG,SAAS,CAAC;EACxC,IAAI,CAACJ,KAAK,CAACK,SAAS,CAAC,IAAIA,SAAS,CAACE,MAAM,KAAK,EAAE,EAAE;IAC9C,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;EACzD,CAAC,MACI,IAAIF,YAAY,CAACC,MAAM,KAAK,EAAE,EAAE;IACjC,MAAM,IAAIC,KAAK,CAAE,+BAA8BF,YAAY,CAACC,MAAO,qBAAoB,CAAC;EAC5F;EACA,OAAOL,uBAAuB,CAACI,YAAY,EAAED,SAAS,CAAC;AAC3D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}