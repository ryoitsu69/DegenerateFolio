{"ast":null,"code":"import { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { executeInstructions } from './utils/executeInstructions.mjs';\n\"use strict\";\nclass RenderGroupPipe {\n  constructor(renderer) {\n    this._renderer = renderer;\n  }\n  addRenderGroup(renderGroup, instructionSet) {\n    this._renderer.renderPipes.batch.break(instructionSet);\n    instructionSet.add(renderGroup);\n  }\n  execute(renderGroup) {\n    if (!renderGroup.isRenderable) return;\n    this._renderer.globalUniforms.push({\n      worldTransformMatrix: renderGroup.worldTransform,\n      worldColor: renderGroup.worldColorAlpha\n    });\n    executeInstructions(renderGroup, this._renderer.renderPipes);\n    this._renderer.globalUniforms.pop();\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\nRenderGroupPipe.extension = {\n  type: [ExtensionType.WebGLPipes, ExtensionType.WebGPUPipes, ExtensionType.CanvasPipes],\n  name: \"renderGroup\"\n};\nexport { RenderGroupPipe };","map":{"version":3,"names":["RenderGroupPipe","constructor","renderer","_renderer","addRenderGroup","renderGroup","instructionSet","renderPipes","batch","break","add","execute","isRenderable","globalUniforms","push","worldTransformMatrix","worldTransform","worldColor","worldColorAlpha","executeInstructions","pop","destroy","extension","type","ExtensionType","WebGLPipes","WebGPUPipes","CanvasPipes","name"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/scene/container/RenderGroupPipe.ts"],"sourcesContent":["import { ExtensionType } from '../../extensions/Extensions';\nimport { executeInstructions } from './utils/executeInstructions';\n\nimport type { InstructionSet } from '../../rendering/renderers/shared/instructions/InstructionSet';\nimport type { InstructionPipe } from '../../rendering/renderers/shared/instructions/RenderPipe';\nimport type { Renderer } from '../../rendering/renderers/types';\nimport type { RenderGroup } from './RenderGroup';\n\nexport class RenderGroupPipe implements InstructionPipe<RenderGroup>\n{\n    public static extension = {\n        type: [\n            ExtensionType.WebGLPipes,\n            ExtensionType.WebGPUPipes,\n            ExtensionType.CanvasPipes,\n        ],\n        name: 'renderGroup',\n    } as const;\n\n    private _renderer: Renderer;\n\n    constructor(renderer: Renderer)\n    {\n        this._renderer = renderer;\n    }\n\n    public addRenderGroup(renderGroup: RenderGroup, instructionSet: InstructionSet): void\n    {\n        this._renderer.renderPipes.batch.break(instructionSet);\n\n        instructionSet.add(renderGroup);\n    }\n\n    public execute(renderGroup: RenderGroup)\n    {\n        if (!renderGroup.isRenderable) return;\n\n        this._renderer.globalUniforms.push({\n            worldTransformMatrix: renderGroup.worldTransform,\n            worldColor: renderGroup.worldColorAlpha,\n        });\n\n        executeInstructions(renderGroup, this._renderer.renderPipes);\n\n        this._renderer.globalUniforms.pop();\n\n        // now render a quad..\n    }\n\n    public destroy(): void\n    {\n        this._renderer = null;\n    }\n}\n"],"mappings":";;;AAQO,MAAMA,eACb;EAYIC,YAAYC,QACZ;IACI,KAAKC,SAAY,GAAAD,QAAA;EAAA;EAGdE,eAAeC,WAAA,EAA0BC,cAChD;IACI,KAAKH,SAAU,CAAAI,WAAA,CAAYC,KAAM,CAAAC,KAAA,CAAMH,cAAc;IAErDA,cAAA,CAAeI,GAAA,CAAIL,WAAW;EAAA;EAG3BM,QAAQN,WACf;IACI,IAAI,CAACA,WAAY,CAAAO,YAAA,EAAc;IAE1B,KAAAT,SAAA,CAAUU,cAAA,CAAeC,IAAK;MAC/BC,oBAAA,EAAsBV,WAAY,CAAAW,cAAA;MAClCC,UAAA,EAAYZ,WAAY,CAAAa;IAAA,CAC3B;IAEmBC,mBAAA,CAAAd,WAAA,EAAa,IAAK,CAAAF,SAAA,CAAUI,WAAW;IAEtD,KAAAJ,SAAA,CAAUU,cAAA,CAAeO,GAAI;EAAA;EAK/BC,OACPA,CAAA;IACI,KAAKlB,SAAY;EAAA;AAEzB;AA7CaH,eAAA,CAEKsB,SAAY;EACtBC,IAAM,GACFC,aAAc,CAAAC,UAAA,EACdD,aAAc,CAAAE,WAAA,EACdF,aAAc,CAAAG,WAAA,CAClB;EACAC,IAAM;AACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}