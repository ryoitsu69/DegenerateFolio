{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines an environment agnostic {@linkplain cmd.Executor\n * command executor} that communicates with a remote end using JSON over HTTP.\n *\n * Clients should implement the {@link Client} interface, which is used by\n * the {@link Executor} to send commands to the remote end.\n */\n\n'use strict';\n\nconst path = require('path');\nconst cmd = require('./command');\nconst error = require('./error');\nconst logging = require('./logging');\nconst promise = require('./promise');\nconst {\n  Session\n} = require('./session');\nconst webElement = require('./webelement');\nconst {\n  isObject\n} = require('./util');\nconst log_ = logging.getLogger(`${logging.Type.DRIVER}.http`);\nconst getAttribute = requireAtom('get-attribute.js', '//javascript/node/selenium-webdriver/lib/atoms:get-attribute.js');\nconst isDisplayed = requireAtom('is-displayed.js', '//javascript/node/selenium-webdriver/lib/atoms:is-displayed.js');\nconst findElements = requireAtom('find-elements.js', '//javascript/node/selenium-webdriver/lib/atoms:find-elements.js');\n\n/**\n * @param {string} module\n * @param {string} bazelTarget\n * @return {!Function}\n */\nfunction requireAtom(module, bazelTarget) {\n  try {\n    return require('./atoms/' + module);\n  } catch (ex) {\n    try {\n      const file = bazelTarget.slice(2).replace(':', '/');\n      log_.log(`../../../bazel-bin/${file}`);\n      return require(path.resolve(`../../../bazel-bin/${file}`));\n    } catch (ex2) {\n      log_.severe(ex2);\n      throw Error(`Failed to import atoms module ${module}. If running in dev mode, you` + ` need to run \\`bazel build ${bazelTarget}\\` from the project` + `root: ${ex}`);\n    }\n  }\n}\n\n/**\n * Converts a headers map to a HTTP header block string.\n * @param {!Map<string, string>} headers The map to convert.\n * @return {string} The headers as a string.\n */\nfunction headersToString(headers) {\n  const ret = [];\n  headers.forEach(function (value, name) {\n    ret.push(`${name.toLowerCase()}: ${value}`);\n  });\n  return ret.join('\\n');\n}\n\n/**\n * Represents a HTTP request message. This class is a \"partial\" request and only\n * defines the path on the server to send a request to. It is each client's\n * responsibility to build the full URL for the final request.\n * @final\n */\nclass Request {\n  /**\n   * @param {string} method The HTTP method to use for the request.\n   * @param {string} path The path on the server to send the request to.\n   * @param {Object=} opt_data This request's non-serialized JSON payload data.\n   */\n  constructor(method, path, opt_data) {\n    this.method = /** string */method;\n    this.path = /** string */path;\n    this.data = /** Object */opt_data;\n    this.headers = /** !Map<string, string> */new Map([['Accept', 'application/json; charset=utf-8']]);\n  }\n\n  /** @override */\n  toString() {\n    let ret = `${this.method} ${this.path} HTTP/1.1\\n`;\n    ret += headersToString(this.headers) + '\\n\\n';\n    if (this.data) {\n      ret += JSON.stringify(this.data);\n    }\n    return ret;\n  }\n}\n\n/**\n * Represents a HTTP response message.\n * @final\n */\nclass Response {\n  /**\n   * @param {number} status The response code.\n   * @param {!Object<string>} headers The response headers. All header names\n   *     will be converted to lowercase strings for consistent lookups.\n   * @param {string} body The response body.\n   */\n  constructor(status, headers, body) {\n    this.status = /** number */status;\n    this.body = /** string */body;\n    this.headers = /** !Map<string, string>*/new Map();\n    for (let header in headers) {\n      this.headers.set(header.toLowerCase(), headers[header]);\n    }\n  }\n\n  /** @override */\n  toString() {\n    let ret = `HTTP/1.1 ${this.status}\\n${headersToString(this.headers)}\\n\\n`;\n    if (this.body) {\n      ret += this.body;\n    }\n    return ret;\n  }\n}\n\n/** @enum {!Function} */\nconst Atom = {\n  GET_ATTRIBUTE: getAttribute,\n  IS_DISPLAYED: isDisplayed,\n  FIND_ELEMENTS: findElements\n};\nfunction post(path) {\n  return resource('POST', path);\n}\nfunction del(path) {\n  return resource('DELETE', path);\n}\nfunction get(path) {\n  return resource('GET', path);\n}\nfunction resource(method, path) {\n  return {\n    method: method,\n    path: path\n  };\n}\n\n/** @typedef {{method: string, path: string}} */\nvar CommandSpec; // eslint-disable-line\n\n/** @typedef {function(!cmd.Command): !cmd.Command} */\nvar CommandTransformer; // eslint-disable-line\n\nclass InternalTypeError extends TypeError {}\n\n/**\n * @param {!cmd.Command} command The initial command.\n * @param {Atom} atom The name of the atom to execute.\n * @param params\n * @return {!Command} The transformed command to execute.\n */\nfunction toExecuteAtomCommand(command, atom, name, ...params) {\n  if (typeof atom !== 'function') {\n    throw new InternalTypeError('atom is not a function: ' + typeof atom);\n  }\n  return new cmd.Command(cmd.Name.EXECUTE_SCRIPT).setParameter('sessionId', command.getParameter('sessionId')).setParameter('script', `/* ${name} */return (${atom}).apply(null, arguments)`).setParameter('args', params.map(param => command.getParameter(param)));\n}\n\n/** @const {!Map<string, (CommandSpec|CommandTransformer)>} */\nconst W3C_COMMAND_MAP = new Map([\n// Session management.\n[cmd.Name.NEW_SESSION, post('/session')], [cmd.Name.QUIT, del('/session/:sessionId')],\n// Server status.\n[cmd.Name.GET_SERVER_STATUS, get('/status')],\n// timeouts\n[cmd.Name.GET_TIMEOUT, get('/session/:sessionId/timeouts')], [cmd.Name.SET_TIMEOUT, post('/session/:sessionId/timeouts')],\n// Navigation.\n[cmd.Name.GET_CURRENT_URL, get('/session/:sessionId/url')], [cmd.Name.GET, post('/session/:sessionId/url')], [cmd.Name.GO_BACK, post('/session/:sessionId/back')], [cmd.Name.GO_FORWARD, post('/session/:sessionId/forward')], [cmd.Name.REFRESH, post('/session/:sessionId/refresh')],\n// Page inspection.\n[cmd.Name.GET_PAGE_SOURCE, get('/session/:sessionId/source')], [cmd.Name.GET_TITLE, get('/session/:sessionId/title')],\n// Script execution.\n[cmd.Name.EXECUTE_SCRIPT, post('/session/:sessionId/execute/sync')], [cmd.Name.EXECUTE_ASYNC_SCRIPT, post('/session/:sessionId/execute/async')],\n// Frame selection.\n[cmd.Name.SWITCH_TO_FRAME, post('/session/:sessionId/frame')], [cmd.Name.SWITCH_TO_FRAME_PARENT, post('/session/:sessionId/frame/parent')],\n// Window management.\n[cmd.Name.GET_CURRENT_WINDOW_HANDLE, get('/session/:sessionId/window')], [cmd.Name.CLOSE, del('/session/:sessionId/window')], [cmd.Name.SWITCH_TO_WINDOW, post('/session/:sessionId/window')], [cmd.Name.SWITCH_TO_NEW_WINDOW, post('/session/:sessionId/window/new')], [cmd.Name.GET_WINDOW_HANDLES, get('/session/:sessionId/window/handles')], [cmd.Name.GET_WINDOW_RECT, get('/session/:sessionId/window/rect')], [cmd.Name.SET_WINDOW_RECT, post('/session/:sessionId/window/rect')], [cmd.Name.MAXIMIZE_WINDOW, post('/session/:sessionId/window/maximize')], [cmd.Name.MINIMIZE_WINDOW, post('/session/:sessionId/window/minimize')], [cmd.Name.FULLSCREEN_WINDOW, post('/session/:sessionId/window/fullscreen')],\n// Actions.\n[cmd.Name.ACTIONS, post('/session/:sessionId/actions')], [cmd.Name.CLEAR_ACTIONS, del('/session/:sessionId/actions')], [cmd.Name.PRINT_PAGE, post('/session/:sessionId/print')],\n// Locating elements.\n[cmd.Name.GET_ACTIVE_ELEMENT, get('/session/:sessionId/element/active')], [cmd.Name.FIND_ELEMENT, post('/session/:sessionId/element')], [cmd.Name.FIND_ELEMENTS, post('/session/:sessionId/elements')], [cmd.Name.FIND_ELEMENTS_RELATIVE, cmd => {\n  return toExecuteAtomCommand(cmd, Atom.FIND_ELEMENTS, 'findElements', 'args');\n}], [cmd.Name.FIND_CHILD_ELEMENT, post('/session/:sessionId/element/:id/element')], [cmd.Name.FIND_CHILD_ELEMENTS, post('/session/:sessionId/element/:id/elements')],\n// Element interaction.\n[cmd.Name.GET_ELEMENT_TAG_NAME, get('/session/:sessionId/element/:id/name')], [cmd.Name.GET_DOM_ATTRIBUTE, get('/session/:sessionId/element/:id/attribute/:name')], [cmd.Name.GET_ELEMENT_ATTRIBUTE, cmd => {\n  return toExecuteAtomCommand(cmd, Atom.GET_ATTRIBUTE, 'getAttribute', 'id', 'name');\n}], [cmd.Name.GET_ELEMENT_PROPERTY, get('/session/:sessionId/element/:id/property/:name')], [cmd.Name.GET_ELEMENT_VALUE_OF_CSS_PROPERTY, get('/session/:sessionId/element/:id/css/:propertyName')], [cmd.Name.GET_ELEMENT_RECT, get('/session/:sessionId/element/:id/rect')], [cmd.Name.CLEAR_ELEMENT, post('/session/:sessionId/element/:id/clear')], [cmd.Name.CLICK_ELEMENT, post('/session/:sessionId/element/:id/click')], [cmd.Name.SEND_KEYS_TO_ELEMENT, post('/session/:sessionId/element/:id/value')], [cmd.Name.GET_ELEMENT_TEXT, get('/session/:sessionId/element/:id/text')], [cmd.Name.GET_COMPUTED_ROLE, get('/session/:sessionId/element/:id/computedrole')], [cmd.Name.GET_COMPUTED_LABEL, get('/session/:sessionId/element/:id/computedlabel')], [cmd.Name.IS_ELEMENT_ENABLED, get('/session/:sessionId/element/:id/enabled')], [cmd.Name.IS_ELEMENT_SELECTED, get('/session/:sessionId/element/:id/selected')], [cmd.Name.IS_ELEMENT_DISPLAYED, cmd => {\n  return toExecuteAtomCommand(cmd, Atom.IS_DISPLAYED, 'isDisplayed', 'id');\n}],\n// Cookie management.\n[cmd.Name.GET_ALL_COOKIES, get('/session/:sessionId/cookie')], [cmd.Name.ADD_COOKIE, post('/session/:sessionId/cookie')], [cmd.Name.DELETE_ALL_COOKIES, del('/session/:sessionId/cookie')], [cmd.Name.GET_COOKIE, get('/session/:sessionId/cookie/:name')], [cmd.Name.DELETE_COOKIE, del('/session/:sessionId/cookie/:name')],\n// Alert management.\n[cmd.Name.ACCEPT_ALERT, post('/session/:sessionId/alert/accept')], [cmd.Name.DISMISS_ALERT, post('/session/:sessionId/alert/dismiss')], [cmd.Name.GET_ALERT_TEXT, get('/session/:sessionId/alert/text')], [cmd.Name.SET_ALERT_TEXT, post('/session/:sessionId/alert/text')],\n// Screenshots.\n[cmd.Name.SCREENSHOT, get('/session/:sessionId/screenshot')], [cmd.Name.TAKE_ELEMENT_SCREENSHOT, get('/session/:sessionId/element/:id/screenshot')],\n// Shadow Root\n[cmd.Name.GET_SHADOW_ROOT, get('/session/:sessionId/element/:id/shadow')], [cmd.Name.FIND_ELEMENT_FROM_SHADOWROOT, post('/session/:sessionId/shadow/:id/element')], [cmd.Name.FIND_ELEMENTS_FROM_SHADOWROOT, post('/session/:sessionId/shadow/:id/elements')],\n// Log extensions.\n[cmd.Name.GET_LOG, post('/session/:sessionId/se/log')], [cmd.Name.GET_AVAILABLE_LOG_TYPES, get('/session/:sessionId/se/log/types')],\n// Server Extensions\n[cmd.Name.UPLOAD_FILE, post('/session/:sessionId/se/file')],\n// Virtual Authenticator\n[cmd.Name.ADD_VIRTUAL_AUTHENTICATOR, post('/session/:sessionId/webauthn/authenticator')], [cmd.Name.REMOVE_VIRTUAL_AUTHENTICATOR, del('/session/:sessionId/webauthn/authenticator/:authenticatorId')], [cmd.Name.ADD_CREDENTIAL, post('/session/:sessionId/webauthn/authenticator/:authenticatorId/credential')], [cmd.Name.GET_CREDENTIALS, get('/session/:sessionId/webauthn/authenticator/:authenticatorId/credentials')], [cmd.Name.REMOVE_CREDENTIAL, del('/session/:sessionId/webauthn/authenticator/:authenticatorId/credentials/:credentialId')], [cmd.Name.REMOVE_ALL_CREDENTIALS, del('/session/:sessionId/webauthn/authenticator/:authenticatorId/credentials')], [cmd.Name.SET_USER_VERIFIED, post('/session/:sessionId/webauthn/authenticator/:authenticatorId/uv')], [cmd.Name.GET_DOWNLOADABLE_FILES, get('/session/:sessionId/se/files')], [cmd.Name.DOWNLOAD_FILE, post(`/session/:sessionId/se/files`)], [cmd.Name.DELETE_DOWNLOADABLE_FILES, del(`/session/:sessionId/se/files`)]]);\n\n/**\n * Handles sending HTTP messages to a remote end.\n *\n * @interface\n */\nclass Client {\n  /**\n   * Sends a request to the server. The client will automatically follow any\n   * redirects returned by the server, fulfilling the returned promise with the\n   * final response.\n   *\n   * @param {!Request} httpRequest The request to send.\n   * @return {!Promise<Response>} A promise that will be fulfilled with the\n   *     server's response.\n   */\n  send(httpRequest) {} // eslint-disable-line\n}\n\n/**\n * @param {Map<string, CommandSpec>} customCommands\n *     A map of custom command definitions.\n * @param {!cmd.Command} command The command to resolve.\n * @return {!Request} A promise that will resolve with the\n *     command to execute.\n */\nfunction buildRequest(customCommands, command) {\n  log_.finest(() => `Translating command: ${command.getName()}`);\n  let spec = customCommands && customCommands.get(command.getName());\n  if (spec) {\n    return toHttpRequest(spec);\n  }\n  spec = W3C_COMMAND_MAP.get(command.getName());\n  if (typeof spec === 'function') {\n    log_.finest(() => `Transforming command for W3C: ${command.getName()}`);\n    let newCommand = spec(command);\n    return buildRequest(customCommands, newCommand);\n  } else if (spec) {\n    return toHttpRequest(spec);\n  }\n  throw new error.UnknownCommandError('Unrecognized command: ' + command.getName());\n\n  /**\n   * @param {CommandSpec} resource\n   * @return {!Request}\n   */\n  function toHttpRequest(resource) {\n    log_.finest(() => `Building HTTP request: ${JSON.stringify(resource)}`);\n    let parameters = command.getParameters();\n    let path = buildPath(resource.path, parameters);\n    return new Request(resource.method, path, parameters);\n  }\n}\nconst CLIENTS = /** !WeakMap<!Executor, !(Client|IThenable<!Client>)> */new WeakMap();\n\n/**\n * A command executor that communicates with the server using JSON over HTTP.\n *\n * By default, each instance of this class will use the legacy wire protocol\n * from [Selenium project][json]. The executor will automatically switch to the\n * [W3C wire protocol][w3c] if the remote end returns a compliant response to\n * a new session command.\n *\n * [json]: https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol\n * [w3c]: https://w3c.github.io/webdriver/webdriver-spec.html\n *\n * @implements {cmd.Executor}\n */\nclass Executor {\n  /**\n   * @param {!(Client|IThenable<!Client>)} client The client to use for sending\n   *     requests to the server, or a promise-like object that will resolve\n   *     to the client.\n   */\n  constructor(client) {\n    CLIENTS.set(this, client);\n\n    /** @private {Map<string, CommandSpec>} */\n    this.customCommands_ = null;\n\n    /** @private {!logging.Logger} */\n    this.log_ = logging.getLogger(`${logging.Type.DRIVER}.http.Executor`);\n  }\n\n  /**\n   * Defines a new command for use with this executor. When a command is sent,\n   * the {@code path} will be preprocessed using the command's parameters; any\n   * path segments prefixed with \":\" will be replaced by the parameter of the\n   * same name. For example, given \"/person/:name\" and the parameters\n   * \"{name: 'Bob'}\", the final command path will be \"/person/Bob\".\n   *\n   * @param {string} name The command name.\n   * @param {string} method The HTTP method to use when sending this command.\n   * @param {string} path The path to send the command to, relative to\n   *     the WebDriver server's command root and of the form\n   *     \"/path/:variable/segment\".\n   */\n  defineCommand(name, method, path) {\n    if (!this.customCommands_) {\n      this.customCommands_ = new Map();\n    }\n    this.customCommands_.set(name, {\n      method,\n      path\n    });\n  }\n\n  /** @override */\n  async execute(command) {\n    let request = buildRequest(this.customCommands_, command);\n    this.log_.finer(() => `>>> ${request.method} ${request.path}`);\n    let client = CLIENTS.get(this);\n    if (promise.isPromise(client)) {\n      client = await client;\n      CLIENTS.set(this, client);\n    }\n    let response = await client.send(request);\n    this.log_.finer(() => `>>>\\n${request}\\n<<<\\n${response}`);\n    let httpResponse = /** @type {!Response} */response;\n    let {\n      isW3C,\n      value\n    } = parseHttpResponse(command, httpResponse);\n    if (command.getName() === cmd.Name.NEW_SESSION) {\n      if (!value || !value.sessionId) {\n        throw new error.WebDriverError(`Unable to parse new session response: ${response.body}`);\n      }\n\n      // The remote end is a W3C compliant server if there is no `status`\n      // field in the response.\n      if (command.getName() === cmd.Name.NEW_SESSION) {\n        this.w3c = this.w3c || isW3C;\n      }\n\n      // No implementations use the `capabilities` key yet...\n      let capabilities = value.capabilities || value.value;\n      return new Session( /** @type {{sessionId: string}} */value.sessionId, capabilities);\n    }\n    return typeof value === 'undefined' ? null : value;\n  }\n}\n\n/**\n * @param {string} str .\n * @return {?} .\n */\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch (ignored) {\n    // Do nothing.\n  }\n}\n\n/**\n * Callback used to parse {@link Response} objects from a\n * {@link HttpClient}.\n *\n * @param {!cmd.Command} command The command the response is for.\n * @param {!Response} httpResponse The HTTP response to parse.\n * @return {{isW3C: boolean, value: ?}} An object describing the parsed\n *     response. This object will have two fields: `isW3C` indicates whether\n *     the response looks like it came from a remote end that conforms with the\n *     W3C WebDriver spec, and `value`, the actual response value.\n * @throws {WebDriverError} If the HTTP response is an error.\n */\nfunction parseHttpResponse(command, httpResponse) {\n  if (httpResponse.status < 200) {\n    // This should never happen, but throw the raw response so users report it.\n    throw new error.WebDriverError(`Unexpected HTTP response:\\n${httpResponse}`);\n  }\n  let parsed = tryParse(httpResponse.body);\n  if (parsed && typeof parsed === 'object') {\n    let value = parsed.value;\n    let isW3C = isObject(value) && typeof parsed.status === 'undefined';\n    if (!isW3C) {\n      error.checkLegacyResponse(parsed);\n\n      // Adjust legacy new session responses to look like W3C to simplify\n      // later processing.\n      if (command.getName() === cmd.Name.NEW_SESSION) {\n        value = parsed;\n      }\n    } else if (httpResponse.status > 399) {\n      error.throwDecodedError(value);\n    }\n    return {\n      isW3C,\n      value\n    };\n  }\n  if (parsed !== undefined) {\n    return {\n      isW3C: false,\n      value: parsed\n    };\n  }\n  let value = httpResponse.body.replace(/\\r\\n/g, '\\n');\n\n  // 404 represents an unknown command; anything else > 399 is a generic unknown\n  // error.\n  if (httpResponse.status === 404) {\n    throw new error.UnsupportedOperationError(command.getName() + ': ' + value);\n  } else if (httpResponse.status >= 400) {\n    throw new error.WebDriverError(value);\n  }\n  return {\n    isW3C: false,\n    value: value || null\n  };\n}\n\n/**\n * Builds a fully qualified path using the given set of command parameters. Each\n * path segment prefixed with ':' will be replaced by the value of the\n * corresponding parameter. All parameters spliced into the path will be\n * removed from the parameter map.\n * @param {string} path The original resource path.\n * @param {!Object<*>} parameters The parameters object to splice into the path.\n * @return {string} The modified path.\n */\nfunction buildPath(path, parameters) {\n  let pathParameters = path.match(/\\/:(\\w+)\\b/g);\n  if (pathParameters) {\n    for (let i = 0; i < pathParameters.length; ++i) {\n      let key = pathParameters[i].substring(2); // Trim the /:\n      if (key in parameters) {\n        let value = parameters[key];\n        if (webElement.isId(value)) {\n          // When inserting a WebElement into the URL, only use its ID value,\n          // not the full JSON.\n          value = webElement.extractId(value);\n        }\n        path = path.replace(pathParameters[i], '/' + value);\n        delete parameters[key];\n      } else {\n        throw new error.InvalidArgumentError('Missing required parameter: ' + key);\n      }\n    }\n  }\n  return path;\n}\n\n// PUBLIC API\n\nmodule.exports = {\n  Executor,\n  Client,\n  Request,\n  Response,\n  // Exported for testing.\n  buildPath\n};","map":{"version":3,"names":["path","require","cmd","error","logging","promise","Session","webElement","isObject","log_","getLogger","Type","DRIVER","getAttribute","requireAtom","isDisplayed","findElements","module","bazelTarget","ex","file","slice","replace","log","resolve","ex2","severe","Error","headersToString","headers","ret","forEach","value","name","push","toLowerCase","join","Request","constructor","method","opt_data","data","Map","toString","JSON","stringify","Response","status","body","header","set","Atom","GET_ATTRIBUTE","IS_DISPLAYED","FIND_ELEMENTS","post","resource","del","get","CommandSpec","CommandTransformer","InternalTypeError","TypeError","toExecuteAtomCommand","command","atom","params","Command","Name","EXECUTE_SCRIPT","setParameter","getParameter","map","param","W3C_COMMAND_MAP","NEW_SESSION","QUIT","GET_SERVER_STATUS","GET_TIMEOUT","SET_TIMEOUT","GET_CURRENT_URL","GET","GO_BACK","GO_FORWARD","REFRESH","GET_PAGE_SOURCE","GET_TITLE","EXECUTE_ASYNC_SCRIPT","SWITCH_TO_FRAME","SWITCH_TO_FRAME_PARENT","GET_CURRENT_WINDOW_HANDLE","CLOSE","SWITCH_TO_WINDOW","SWITCH_TO_NEW_WINDOW","GET_WINDOW_HANDLES","GET_WINDOW_RECT","SET_WINDOW_RECT","MAXIMIZE_WINDOW","MINIMIZE_WINDOW","FULLSCREEN_WINDOW","ACTIONS","CLEAR_ACTIONS","PRINT_PAGE","GET_ACTIVE_ELEMENT","FIND_ELEMENT","FIND_ELEMENTS_RELATIVE","FIND_CHILD_ELEMENT","FIND_CHILD_ELEMENTS","GET_ELEMENT_TAG_NAME","GET_DOM_ATTRIBUTE","GET_ELEMENT_ATTRIBUTE","GET_ELEMENT_PROPERTY","GET_ELEMENT_VALUE_OF_CSS_PROPERTY","GET_ELEMENT_RECT","CLEAR_ELEMENT","CLICK_ELEMENT","SEND_KEYS_TO_ELEMENT","GET_ELEMENT_TEXT","GET_COMPUTED_ROLE","GET_COMPUTED_LABEL","IS_ELEMENT_ENABLED","IS_ELEMENT_SELECTED","IS_ELEMENT_DISPLAYED","GET_ALL_COOKIES","ADD_COOKIE","DELETE_ALL_COOKIES","GET_COOKIE","DELETE_COOKIE","ACCEPT_ALERT","DISMISS_ALERT","GET_ALERT_TEXT","SET_ALERT_TEXT","SCREENSHOT","TAKE_ELEMENT_SCREENSHOT","GET_SHADOW_ROOT","FIND_ELEMENT_FROM_SHADOWROOT","FIND_ELEMENTS_FROM_SHADOWROOT","GET_LOG","GET_AVAILABLE_LOG_TYPES","UPLOAD_FILE","ADD_VIRTUAL_AUTHENTICATOR","REMOVE_VIRTUAL_AUTHENTICATOR","ADD_CREDENTIAL","GET_CREDENTIALS","REMOVE_CREDENTIAL","REMOVE_ALL_CREDENTIALS","SET_USER_VERIFIED","GET_DOWNLOADABLE_FILES","DOWNLOAD_FILE","DELETE_DOWNLOADABLE_FILES","Client","send","httpRequest","buildRequest","customCommands","finest","getName","spec","toHttpRequest","newCommand","UnknownCommandError","parameters","getParameters","buildPath","CLIENTS","WeakMap","Executor","client","customCommands_","defineCommand","execute","request","finer","isPromise","response","httpResponse","isW3C","parseHttpResponse","sessionId","WebDriverError","w3c","capabilities","tryParse","str","parse","ignored","parsed","checkLegacyResponse","throwDecodedError","undefined","UnsupportedOperationError","pathParameters","match","i","length","key","substring","isId","extractId","InvalidArgumentError","exports"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/selenium-webdriver/lib/http.js"],"sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines an environment agnostic {@linkplain cmd.Executor\n * command executor} that communicates with a remote end using JSON over HTTP.\n *\n * Clients should implement the {@link Client} interface, which is used by\n * the {@link Executor} to send commands to the remote end.\n */\n\n'use strict'\n\nconst path = require('path')\nconst cmd = require('./command')\nconst error = require('./error')\nconst logging = require('./logging')\nconst promise = require('./promise')\nconst { Session } = require('./session')\nconst webElement = require('./webelement')\nconst { isObject } = require('./util')\n\nconst log_ = logging.getLogger(`${logging.Type.DRIVER}.http`)\n\nconst getAttribute = requireAtom('get-attribute.js', '//javascript/node/selenium-webdriver/lib/atoms:get-attribute.js')\nconst isDisplayed = requireAtom('is-displayed.js', '//javascript/node/selenium-webdriver/lib/atoms:is-displayed.js')\nconst findElements = requireAtom('find-elements.js', '//javascript/node/selenium-webdriver/lib/atoms:find-elements.js')\n\n/**\n * @param {string} module\n * @param {string} bazelTarget\n * @return {!Function}\n */\nfunction requireAtom(module, bazelTarget) {\n  try {\n    return require('./atoms/' + module)\n  } catch (ex) {\n    try {\n      const file = bazelTarget.slice(2).replace(':', '/')\n      log_.log(`../../../bazel-bin/${file}`)\n      return require(path.resolve(`../../../bazel-bin/${file}`))\n    } catch (ex2) {\n      log_.severe(ex2)\n      throw Error(\n        `Failed to import atoms module ${module}. If running in dev mode, you` +\n          ` need to run \\`bazel build ${bazelTarget}\\` from the project` +\n          `root: ${ex}`,\n      )\n    }\n  }\n}\n\n/**\n * Converts a headers map to a HTTP header block string.\n * @param {!Map<string, string>} headers The map to convert.\n * @return {string} The headers as a string.\n */\nfunction headersToString(headers) {\n  const ret = []\n  headers.forEach(function (value, name) {\n    ret.push(`${name.toLowerCase()}: ${value}`)\n  })\n  return ret.join('\\n')\n}\n\n/**\n * Represents a HTTP request message. This class is a \"partial\" request and only\n * defines the path on the server to send a request to. It is each client's\n * responsibility to build the full URL for the final request.\n * @final\n */\nclass Request {\n  /**\n   * @param {string} method The HTTP method to use for the request.\n   * @param {string} path The path on the server to send the request to.\n   * @param {Object=} opt_data This request's non-serialized JSON payload data.\n   */\n  constructor(method, path, opt_data) {\n    this.method = /** string */ method\n    this.path = /** string */ path\n    this.data = /** Object */ opt_data\n    this.headers = /** !Map<string, string> */ new Map([['Accept', 'application/json; charset=utf-8']])\n  }\n\n  /** @override */\n  toString() {\n    let ret = `${this.method} ${this.path} HTTP/1.1\\n`\n    ret += headersToString(this.headers) + '\\n\\n'\n    if (this.data) {\n      ret += JSON.stringify(this.data)\n    }\n    return ret\n  }\n}\n\n/**\n * Represents a HTTP response message.\n * @final\n */\nclass Response {\n  /**\n   * @param {number} status The response code.\n   * @param {!Object<string>} headers The response headers. All header names\n   *     will be converted to lowercase strings for consistent lookups.\n   * @param {string} body The response body.\n   */\n  constructor(status, headers, body) {\n    this.status = /** number */ status\n    this.body = /** string */ body\n    this.headers = /** !Map<string, string>*/ new Map()\n    for (let header in headers) {\n      this.headers.set(header.toLowerCase(), headers[header])\n    }\n  }\n\n  /** @override */\n  toString() {\n    let ret = `HTTP/1.1 ${this.status}\\n${headersToString(this.headers)}\\n\\n`\n    if (this.body) {\n      ret += this.body\n    }\n    return ret\n  }\n}\n\n/** @enum {!Function} */\nconst Atom = {\n  GET_ATTRIBUTE: getAttribute,\n  IS_DISPLAYED: isDisplayed,\n  FIND_ELEMENTS: findElements,\n}\n\nfunction post(path) {\n  return resource('POST', path)\n}\n\nfunction del(path) {\n  return resource('DELETE', path)\n}\n\nfunction get(path) {\n  return resource('GET', path)\n}\n\nfunction resource(method, path) {\n  return { method: method, path: path }\n}\n\n/** @typedef {{method: string, path: string}} */\nvar CommandSpec // eslint-disable-line\n\n/** @typedef {function(!cmd.Command): !cmd.Command} */\nvar CommandTransformer // eslint-disable-line\n\nclass InternalTypeError extends TypeError {}\n\n/**\n * @param {!cmd.Command} command The initial command.\n * @param {Atom} atom The name of the atom to execute.\n * @param params\n * @return {!Command} The transformed command to execute.\n */\nfunction toExecuteAtomCommand(command, atom, name, ...params) {\n  if (typeof atom !== 'function') {\n    throw new InternalTypeError('atom is not a function: ' + typeof atom)\n  }\n\n  return new cmd.Command(cmd.Name.EXECUTE_SCRIPT)\n    .setParameter('sessionId', command.getParameter('sessionId'))\n    .setParameter('script', `/* ${name} */return (${atom}).apply(null, arguments)`)\n    .setParameter(\n      'args',\n      params.map((param) => command.getParameter(param)),\n    )\n}\n\n/** @const {!Map<string, (CommandSpec|CommandTransformer)>} */\nconst W3C_COMMAND_MAP = new Map([\n  // Session management.\n  [cmd.Name.NEW_SESSION, post('/session')],\n  [cmd.Name.QUIT, del('/session/:sessionId')],\n\n  // Server status.\n  [cmd.Name.GET_SERVER_STATUS, get('/status')],\n\n  // timeouts\n  [cmd.Name.GET_TIMEOUT, get('/session/:sessionId/timeouts')],\n  [cmd.Name.SET_TIMEOUT, post('/session/:sessionId/timeouts')],\n\n  // Navigation.\n  [cmd.Name.GET_CURRENT_URL, get('/session/:sessionId/url')],\n  [cmd.Name.GET, post('/session/:sessionId/url')],\n  [cmd.Name.GO_BACK, post('/session/:sessionId/back')],\n  [cmd.Name.GO_FORWARD, post('/session/:sessionId/forward')],\n  [cmd.Name.REFRESH, post('/session/:sessionId/refresh')],\n\n  // Page inspection.\n  [cmd.Name.GET_PAGE_SOURCE, get('/session/:sessionId/source')],\n  [cmd.Name.GET_TITLE, get('/session/:sessionId/title')],\n\n  // Script execution.\n  [cmd.Name.EXECUTE_SCRIPT, post('/session/:sessionId/execute/sync')],\n  [cmd.Name.EXECUTE_ASYNC_SCRIPT, post('/session/:sessionId/execute/async')],\n\n  // Frame selection.\n  [cmd.Name.SWITCH_TO_FRAME, post('/session/:sessionId/frame')],\n  [cmd.Name.SWITCH_TO_FRAME_PARENT, post('/session/:sessionId/frame/parent')],\n\n  // Window management.\n  [cmd.Name.GET_CURRENT_WINDOW_HANDLE, get('/session/:sessionId/window')],\n  [cmd.Name.CLOSE, del('/session/:sessionId/window')],\n  [cmd.Name.SWITCH_TO_WINDOW, post('/session/:sessionId/window')],\n  [cmd.Name.SWITCH_TO_NEW_WINDOW, post('/session/:sessionId/window/new')],\n  [cmd.Name.GET_WINDOW_HANDLES, get('/session/:sessionId/window/handles')],\n  [cmd.Name.GET_WINDOW_RECT, get('/session/:sessionId/window/rect')],\n  [cmd.Name.SET_WINDOW_RECT, post('/session/:sessionId/window/rect')],\n  [cmd.Name.MAXIMIZE_WINDOW, post('/session/:sessionId/window/maximize')],\n  [cmd.Name.MINIMIZE_WINDOW, post('/session/:sessionId/window/minimize')],\n  [cmd.Name.FULLSCREEN_WINDOW, post('/session/:sessionId/window/fullscreen')],\n\n  // Actions.\n  [cmd.Name.ACTIONS, post('/session/:sessionId/actions')],\n  [cmd.Name.CLEAR_ACTIONS, del('/session/:sessionId/actions')],\n  [cmd.Name.PRINT_PAGE, post('/session/:sessionId/print')],\n\n  // Locating elements.\n  [cmd.Name.GET_ACTIVE_ELEMENT, get('/session/:sessionId/element/active')],\n  [cmd.Name.FIND_ELEMENT, post('/session/:sessionId/element')],\n  [cmd.Name.FIND_ELEMENTS, post('/session/:sessionId/elements')],\n  [\n    cmd.Name.FIND_ELEMENTS_RELATIVE,\n    (cmd) => {\n      return toExecuteAtomCommand(cmd, Atom.FIND_ELEMENTS, 'findElements', 'args')\n    },\n  ],\n  [cmd.Name.FIND_CHILD_ELEMENT, post('/session/:sessionId/element/:id/element')],\n  [cmd.Name.FIND_CHILD_ELEMENTS, post('/session/:sessionId/element/:id/elements')],\n  // Element interaction.\n  [cmd.Name.GET_ELEMENT_TAG_NAME, get('/session/:sessionId/element/:id/name')],\n  [cmd.Name.GET_DOM_ATTRIBUTE, get('/session/:sessionId/element/:id/attribute/:name')],\n  [\n    cmd.Name.GET_ELEMENT_ATTRIBUTE,\n    (cmd) => {\n      return toExecuteAtomCommand(cmd, Atom.GET_ATTRIBUTE, 'getAttribute', 'id', 'name')\n    },\n  ],\n  [cmd.Name.GET_ELEMENT_PROPERTY, get('/session/:sessionId/element/:id/property/:name')],\n  [cmd.Name.GET_ELEMENT_VALUE_OF_CSS_PROPERTY, get('/session/:sessionId/element/:id/css/:propertyName')],\n  [cmd.Name.GET_ELEMENT_RECT, get('/session/:sessionId/element/:id/rect')],\n  [cmd.Name.CLEAR_ELEMENT, post('/session/:sessionId/element/:id/clear')],\n  [cmd.Name.CLICK_ELEMENT, post('/session/:sessionId/element/:id/click')],\n  [cmd.Name.SEND_KEYS_TO_ELEMENT, post('/session/:sessionId/element/:id/value')],\n  [cmd.Name.GET_ELEMENT_TEXT, get('/session/:sessionId/element/:id/text')],\n  [cmd.Name.GET_COMPUTED_ROLE, get('/session/:sessionId/element/:id/computedrole')],\n  [cmd.Name.GET_COMPUTED_LABEL, get('/session/:sessionId/element/:id/computedlabel')],\n  [cmd.Name.IS_ELEMENT_ENABLED, get('/session/:sessionId/element/:id/enabled')],\n  [cmd.Name.IS_ELEMENT_SELECTED, get('/session/:sessionId/element/:id/selected')],\n\n  [\n    cmd.Name.IS_ELEMENT_DISPLAYED,\n    (cmd) => {\n      return toExecuteAtomCommand(cmd, Atom.IS_DISPLAYED, 'isDisplayed', 'id')\n    },\n  ],\n\n  // Cookie management.\n  [cmd.Name.GET_ALL_COOKIES, get('/session/:sessionId/cookie')],\n  [cmd.Name.ADD_COOKIE, post('/session/:sessionId/cookie')],\n  [cmd.Name.DELETE_ALL_COOKIES, del('/session/:sessionId/cookie')],\n  [cmd.Name.GET_COOKIE, get('/session/:sessionId/cookie/:name')],\n  [cmd.Name.DELETE_COOKIE, del('/session/:sessionId/cookie/:name')],\n\n  // Alert management.\n  [cmd.Name.ACCEPT_ALERT, post('/session/:sessionId/alert/accept')],\n  [cmd.Name.DISMISS_ALERT, post('/session/:sessionId/alert/dismiss')],\n  [cmd.Name.GET_ALERT_TEXT, get('/session/:sessionId/alert/text')],\n  [cmd.Name.SET_ALERT_TEXT, post('/session/:sessionId/alert/text')],\n\n  // Screenshots.\n  [cmd.Name.SCREENSHOT, get('/session/:sessionId/screenshot')],\n  [cmd.Name.TAKE_ELEMENT_SCREENSHOT, get('/session/:sessionId/element/:id/screenshot')],\n\n  // Shadow Root\n  [cmd.Name.GET_SHADOW_ROOT, get('/session/:sessionId/element/:id/shadow')],\n  [cmd.Name.FIND_ELEMENT_FROM_SHADOWROOT, post('/session/:sessionId/shadow/:id/element')],\n  [cmd.Name.FIND_ELEMENTS_FROM_SHADOWROOT, post('/session/:sessionId/shadow/:id/elements')],\n  // Log extensions.\n  [cmd.Name.GET_LOG, post('/session/:sessionId/se/log')],\n  [cmd.Name.GET_AVAILABLE_LOG_TYPES, get('/session/:sessionId/se/log/types')],\n\n  // Server Extensions\n  [cmd.Name.UPLOAD_FILE, post('/session/:sessionId/se/file')],\n\n  // Virtual Authenticator\n  [cmd.Name.ADD_VIRTUAL_AUTHENTICATOR, post('/session/:sessionId/webauthn/authenticator')],\n  [cmd.Name.REMOVE_VIRTUAL_AUTHENTICATOR, del('/session/:sessionId/webauthn/authenticator/:authenticatorId')],\n  [cmd.Name.ADD_CREDENTIAL, post('/session/:sessionId/webauthn/authenticator/:authenticatorId/credential')],\n  [cmd.Name.GET_CREDENTIALS, get('/session/:sessionId/webauthn/authenticator/:authenticatorId/credentials')],\n  [\n    cmd.Name.REMOVE_CREDENTIAL,\n    del('/session/:sessionId/webauthn/authenticator/:authenticatorId/credentials/:credentialId'),\n  ],\n  [cmd.Name.REMOVE_ALL_CREDENTIALS, del('/session/:sessionId/webauthn/authenticator/:authenticatorId/credentials')],\n  [cmd.Name.SET_USER_VERIFIED, post('/session/:sessionId/webauthn/authenticator/:authenticatorId/uv')],\n\n  [cmd.Name.GET_DOWNLOADABLE_FILES, get('/session/:sessionId/se/files')],\n  [cmd.Name.DOWNLOAD_FILE, post(`/session/:sessionId/se/files`)],\n  [cmd.Name.DELETE_DOWNLOADABLE_FILES, del(`/session/:sessionId/se/files`)],\n])\n\n/**\n * Handles sending HTTP messages to a remote end.\n *\n * @interface\n */\nclass Client {\n  /**\n   * Sends a request to the server. The client will automatically follow any\n   * redirects returned by the server, fulfilling the returned promise with the\n   * final response.\n   *\n   * @param {!Request} httpRequest The request to send.\n   * @return {!Promise<Response>} A promise that will be fulfilled with the\n   *     server's response.\n   */\n  send(httpRequest) {} // eslint-disable-line\n}\n\n/**\n * @param {Map<string, CommandSpec>} customCommands\n *     A map of custom command definitions.\n * @param {!cmd.Command} command The command to resolve.\n * @return {!Request} A promise that will resolve with the\n *     command to execute.\n */\nfunction buildRequest(customCommands, command) {\n  log_.finest(() => `Translating command: ${command.getName()}`)\n  let spec = customCommands && customCommands.get(command.getName())\n  if (spec) {\n    return toHttpRequest(spec)\n  }\n\n  spec = W3C_COMMAND_MAP.get(command.getName())\n  if (typeof spec === 'function') {\n    log_.finest(() => `Transforming command for W3C: ${command.getName()}`)\n    let newCommand = spec(command)\n    return buildRequest(customCommands, newCommand)\n  } else if (spec) {\n    return toHttpRequest(spec)\n  }\n  throw new error.UnknownCommandError('Unrecognized command: ' + command.getName())\n\n  /**\n   * @param {CommandSpec} resource\n   * @return {!Request}\n   */\n  function toHttpRequest(resource) {\n    log_.finest(() => `Building HTTP request: ${JSON.stringify(resource)}`)\n    let parameters = command.getParameters()\n    let path = buildPath(resource.path, parameters)\n    return new Request(resource.method, path, parameters)\n  }\n}\n\nconst CLIENTS = /** !WeakMap<!Executor, !(Client|IThenable<!Client>)> */ new WeakMap()\n\n/**\n * A command executor that communicates with the server using JSON over HTTP.\n *\n * By default, each instance of this class will use the legacy wire protocol\n * from [Selenium project][json]. The executor will automatically switch to the\n * [W3C wire protocol][w3c] if the remote end returns a compliant response to\n * a new session command.\n *\n * [json]: https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol\n * [w3c]: https://w3c.github.io/webdriver/webdriver-spec.html\n *\n * @implements {cmd.Executor}\n */\nclass Executor {\n  /**\n   * @param {!(Client|IThenable<!Client>)} client The client to use for sending\n   *     requests to the server, or a promise-like object that will resolve\n   *     to the client.\n   */\n  constructor(client) {\n    CLIENTS.set(this, client)\n\n    /** @private {Map<string, CommandSpec>} */\n    this.customCommands_ = null\n\n    /** @private {!logging.Logger} */\n    this.log_ = logging.getLogger(`${logging.Type.DRIVER}.http.Executor`)\n  }\n\n  /**\n   * Defines a new command for use with this executor. When a command is sent,\n   * the {@code path} will be preprocessed using the command's parameters; any\n   * path segments prefixed with \":\" will be replaced by the parameter of the\n   * same name. For example, given \"/person/:name\" and the parameters\n   * \"{name: 'Bob'}\", the final command path will be \"/person/Bob\".\n   *\n   * @param {string} name The command name.\n   * @param {string} method The HTTP method to use when sending this command.\n   * @param {string} path The path to send the command to, relative to\n   *     the WebDriver server's command root and of the form\n   *     \"/path/:variable/segment\".\n   */\n  defineCommand(name, method, path) {\n    if (!this.customCommands_) {\n      this.customCommands_ = new Map()\n    }\n    this.customCommands_.set(name, { method, path })\n  }\n\n  /** @override */\n  async execute(command) {\n    let request = buildRequest(this.customCommands_, command)\n    this.log_.finer(() => `>>> ${request.method} ${request.path}`)\n\n    let client = CLIENTS.get(this)\n    if (promise.isPromise(client)) {\n      client = await client\n      CLIENTS.set(this, client)\n    }\n\n    let response = await client.send(request)\n    this.log_.finer(() => `>>>\\n${request}\\n<<<\\n${response}`)\n\n    let httpResponse = /** @type {!Response} */ (response)\n\n    let { isW3C, value } = parseHttpResponse(command, httpResponse)\n\n    if (command.getName() === cmd.Name.NEW_SESSION) {\n      if (!value || !value.sessionId) {\n        throw new error.WebDriverError(`Unable to parse new session response: ${response.body}`)\n      }\n\n      // The remote end is a W3C compliant server if there is no `status`\n      // field in the response.\n      if (command.getName() === cmd.Name.NEW_SESSION) {\n        this.w3c = this.w3c || isW3C\n      }\n\n      // No implementations use the `capabilities` key yet...\n      let capabilities = value.capabilities || value.value\n      return new Session(/** @type {{sessionId: string}} */ (value).sessionId, capabilities)\n    }\n\n    return typeof value === 'undefined' ? null : value\n  }\n}\n\n/**\n * @param {string} str .\n * @return {?} .\n */\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str)\n  } catch (ignored) {\n    // Do nothing.\n  }\n}\n\n/**\n * Callback used to parse {@link Response} objects from a\n * {@link HttpClient}.\n *\n * @param {!cmd.Command} command The command the response is for.\n * @param {!Response} httpResponse The HTTP response to parse.\n * @return {{isW3C: boolean, value: ?}} An object describing the parsed\n *     response. This object will have two fields: `isW3C` indicates whether\n *     the response looks like it came from a remote end that conforms with the\n *     W3C WebDriver spec, and `value`, the actual response value.\n * @throws {WebDriverError} If the HTTP response is an error.\n */\nfunction parseHttpResponse(command, httpResponse) {\n  if (httpResponse.status < 200) {\n    // This should never happen, but throw the raw response so users report it.\n    throw new error.WebDriverError(`Unexpected HTTP response:\\n${httpResponse}`)\n  }\n\n  let parsed = tryParse(httpResponse.body)\n\n  if (parsed && typeof parsed === 'object') {\n    let value = parsed.value\n    let isW3C = isObject(value) && typeof parsed.status === 'undefined'\n\n    if (!isW3C) {\n      error.checkLegacyResponse(parsed)\n\n      // Adjust legacy new session responses to look like W3C to simplify\n      // later processing.\n      if (command.getName() === cmd.Name.NEW_SESSION) {\n        value = parsed\n      }\n    } else if (httpResponse.status > 399) {\n      error.throwDecodedError(value)\n    }\n\n    return { isW3C, value }\n  }\n\n  if (parsed !== undefined) {\n    return { isW3C: false, value: parsed }\n  }\n\n  let value = httpResponse.body.replace(/\\r\\n/g, '\\n')\n\n  // 404 represents an unknown command; anything else > 399 is a generic unknown\n  // error.\n  if (httpResponse.status === 404) {\n    throw new error.UnsupportedOperationError(command.getName() + ': ' + value)\n  } else if (httpResponse.status >= 400) {\n    throw new error.WebDriverError(value)\n  }\n\n  return { isW3C: false, value: value || null }\n}\n\n/**\n * Builds a fully qualified path using the given set of command parameters. Each\n * path segment prefixed with ':' will be replaced by the value of the\n * corresponding parameter. All parameters spliced into the path will be\n * removed from the parameter map.\n * @param {string} path The original resource path.\n * @param {!Object<*>} parameters The parameters object to splice into the path.\n * @return {string} The modified path.\n */\nfunction buildPath(path, parameters) {\n  let pathParameters = path.match(/\\/:(\\w+)\\b/g)\n  if (pathParameters) {\n    for (let i = 0; i < pathParameters.length; ++i) {\n      let key = pathParameters[i].substring(2) // Trim the /:\n      if (key in parameters) {\n        let value = parameters[key]\n        if (webElement.isId(value)) {\n          // When inserting a WebElement into the URL, only use its ID value,\n          // not the full JSON.\n          value = webElement.extractId(value)\n        }\n        path = path.replace(pathParameters[i], '/' + value)\n        delete parameters[key]\n      } else {\n        throw new error.InvalidArgumentError('Missing required parameter: ' + key)\n      }\n    }\n  }\n  return path\n}\n\n// PUBLIC API\n\nmodule.exports = {\n  Executor,\n  Client,\n  Request,\n  Response,\n  // Exported for testing.\n  buildPath,\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}