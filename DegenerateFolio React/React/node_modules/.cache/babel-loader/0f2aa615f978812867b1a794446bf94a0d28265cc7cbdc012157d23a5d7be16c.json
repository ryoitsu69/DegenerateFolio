{"ast":null,"code":"import { map, startWith, switchMap } from 'rxjs';\nimport { drr, memo } from '../util/index.js';\nfunction onBondedEvent(api) {\n  let current = Date.now();\n  return api.query.system.events().pipe(map(events => {\n    current = events.filter(_ref => {\n      let {\n        event,\n        phase\n      } = _ref;\n      try {\n        return phase.isApplyExtrinsic && event.section === 'staking' && event.method === 'Bonded';\n      } catch {\n        return false;\n      }\n    }) ? Date.now() : current;\n    return current;\n  }), startWith(current), drr({\n    skipTimeout: true\n  }));\n}\n/**\n * @description Retrieve the list of all validator stashes\n */\nexport function stashes(instanceId, api) {\n  return memo(instanceId, () => onBondedEvent(api).pipe(switchMap(() => api.query.staking.validators.keys()), map(keys => keys.map(_ref2 => {\n    let {\n      args: [v]\n    } = _ref2;\n    return v;\n  }).filter(a => a))));\n}","map":{"version":3,"names":["map","startWith","switchMap","drr","memo","onBondedEvent","api","current","Date","now","query","system","events","pipe","filter","_ref","event","phase","isApplyExtrinsic","section","method","skipTimeout","stashes","instanceId","staking","validators","keys","_ref2","args","v","a"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/staking/stashes.js"],"sourcesContent":["import { map, startWith, switchMap } from 'rxjs';\nimport { drr, memo } from '../util/index.js';\nfunction onBondedEvent(api) {\n    let current = Date.now();\n    return api.query.system.events().pipe(map((events) => {\n        current = events.filter(({ event, phase }) => {\n            try {\n                return phase.isApplyExtrinsic &&\n                    event.section === 'staking' &&\n                    event.method === 'Bonded';\n            }\n            catch {\n                return false;\n            }\n        })\n            ? Date.now()\n            : current;\n        return current;\n    }), startWith(current), drr({ skipTimeout: true }));\n}\n/**\n * @description Retrieve the list of all validator stashes\n */\nexport function stashes(instanceId, api) {\n    return memo(instanceId, () => onBondedEvent(api).pipe(switchMap(() => api.query.staking.validators.keys()), map((keys) => keys.map(({ args: [v] }) => v).filter((a) => a))));\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,SAAS,EAAEC,SAAS,QAAQ,MAAM;AAChD,SAASC,GAAG,EAAEC,IAAI,QAAQ,kBAAkB;AAC5C,SAASC,aAAaA,CAACC,GAAG,EAAE;EACxB,IAAIC,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EACxB,OAAOH,GAAG,CAACI,KAAK,CAACC,MAAM,CAACC,MAAM,CAAC,CAAC,CAACC,IAAI,CAACb,GAAG,CAAEY,MAAM,IAAK;IAClDL,OAAO,GAAGK,MAAM,CAACE,MAAM,CAACC,IAAA,IAAsB;MAAA,IAArB;QAAEC,KAAK;QAAEC;MAAM,CAAC,GAAAF,IAAA;MACrC,IAAI;QACA,OAAOE,KAAK,CAACC,gBAAgB,IACzBF,KAAK,CAACG,OAAO,KAAK,SAAS,IAC3BH,KAAK,CAACI,MAAM,KAAK,QAAQ;MACjC,CAAC,CACD,MAAM;QACF,OAAO,KAAK;MAChB;IACJ,CAAC,CAAC,GACIZ,IAAI,CAACC,GAAG,CAAC,CAAC,GACVF,OAAO;IACb,OAAOA,OAAO;EAClB,CAAC,CAAC,EAAEN,SAAS,CAACM,OAAO,CAAC,EAAEJ,GAAG,CAAC;IAAEkB,WAAW,EAAE;EAAK,CAAC,CAAC,CAAC;AACvD;AACA;AACA;AACA;AACA,OAAO,SAASC,OAAOA,CAACC,UAAU,EAAEjB,GAAG,EAAE;EACrC,OAAOF,IAAI,CAACmB,UAAU,EAAE,MAAMlB,aAAa,CAACC,GAAG,CAAC,CAACO,IAAI,CAACX,SAAS,CAAC,MAAMI,GAAG,CAACI,KAAK,CAACc,OAAO,CAACC,UAAU,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE1B,GAAG,CAAE0B,IAAI,IAAKA,IAAI,CAAC1B,GAAG,CAAC2B,KAAA;IAAA,IAAC;MAAEC,IAAI,EAAE,CAACC,CAAC;IAAE,CAAC,GAAAF,KAAA;IAAA,OAAKE,CAAC;EAAA,EAAC,CAACf,MAAM,CAAEgB,CAAC,IAAKA,CAAC,CAAC,CAAC,CAAC,CAAC;AAChL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}