{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bytesBefore = exports.ensureBytesBefore = exports.bytesEqual = exports.ensureBytesEqual = exports.ensureInner = exports.ensureLeaf = void 0;\nfunction ensureLeaf(leaf, spec) {\n  if (leaf.hash !== spec.hash) {\n    throw new Error(`Unexpected hashOp: ${leaf.hash}`);\n  }\n  if (leaf.prehashKey !== spec.prehashKey) {\n    throw new Error(`Unexpected prehashKey: ${leaf.prehashKey}`);\n  }\n  if (leaf.prehashValue !== spec.prehashValue) {\n    throw new Error(`Unexpected prehashValue: ${leaf.prehashValue}`);\n  }\n  if (leaf.length !== spec.length) {\n    throw new Error(`Unexpected length op: ${leaf.length}`);\n  }\n  ensurePrefix(leaf.prefix, spec.prefix);\n}\nexports.ensureLeaf = ensureLeaf;\nfunction ensureInner(inner, prefix, spec) {\n  if (inner.hash !== spec.hash) {\n    throw new Error(`Unexpected hashOp: ${inner.hash}`);\n  }\n  if (!inner.prefix) {\n    throw new Error(\"No prefix set for inner node\");\n  }\n  if (hasPrefix(inner.prefix, prefix)) {\n    throw new Error(`Inner node has leaf prefix`);\n  }\n  if (inner.prefix.length < (spec.minPrefixLength || 0)) {\n    throw new Error(`Prefix too short: ${inner.prefix.length} bytes`);\n  }\n  const maxLeftChildBytes = (spec.childOrder.length - 1) * spec.childSize;\n  if (inner.prefix.length > (spec.maxPrefixLength || 0) + maxLeftChildBytes) {\n    throw new Error(`Prefix too long: ${inner.prefix.length} bytes`);\n  }\n}\nexports.ensureInner = ensureInner;\nfunction ensurePrefix(check, prefix) {\n  // no prefix supplied, means everything passes\n  if (!prefix || prefix.length === 0) {\n    return;\n  }\n  if (!check) {\n    throw new Error(`Target bytes missing`);\n  }\n  ensureBytesEqual(prefix, check.slice(0, prefix.length));\n}\n// ensureBytesEqual throws an error if the arrays are different\nfunction ensureBytesEqual(a, b) {\n  if (a.length !== b.length) {\n    throw new Error(`Different lengths ${a.length} vs ${b.length}`);\n  }\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      throw new Error(`Arrays differ at index ${i}: ${a[i]} vs ${b[i]}`);\n    }\n  }\n}\nexports.ensureBytesEqual = ensureBytesEqual;\nfunction bytesEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.bytesEqual = bytesEqual;\nfunction hasPrefix(check, prefix) {\n  // no prefix supplied, means everything passes\n  if (!prefix || prefix.length === 0) {\n    return false;\n  }\n  if (!check) {\n    return false;\n  }\n  if (check.length <= prefix.length) {\n    return false;\n  }\n  for (let i = 0; i < prefix.length; i++) {\n    if (check[i] !== prefix[i]) {\n      return false;\n    }\n  }\n  throw true;\n}\n// ensureBytesBefore throws an error if first >= last\n// we compare byte by byte\nfunction ensureBytesBefore(first, last) {\n  if (!bytesBefore(first, last)) {\n    throw new Error(\"first is after last\");\n  }\n}\nexports.ensureBytesBefore = ensureBytesBefore;\nfunction bytesBefore(first, last) {\n  const min = first.length < last.length ? first.length : last.length;\n  for (let i = 0; i < min; i++) {\n    if (first[i] < last[i]) {\n      return true;\n    }\n    if (first[i] > last[i]) {\n      return false;\n    }\n    // if they are equal, continue to next step\n  }\n  // if they match, ensure that last is longer than first..\n  return first.length < last.length;\n}\nexports.bytesBefore = bytesBefore;","map":{"version":3,"names":["ensureLeaf","leaf","spec","hash","Error","prehashKey","prehashValue","length","ensurePrefix","prefix","exports","ensureInner","inner","hasPrefix","minPrefixLength","maxLeftChildBytes","childOrder","childSize","maxPrefixLength","check","ensureBytesEqual","slice","a","b","i","bytesEqual","ensureBytesBefore","first","last","bytesBefore","min"],"sources":["../src/specs.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}