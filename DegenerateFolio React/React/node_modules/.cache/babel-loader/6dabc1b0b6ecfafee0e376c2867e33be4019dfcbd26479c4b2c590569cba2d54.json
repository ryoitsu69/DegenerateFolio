{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Net = void 0;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nconst web3_core_1 = require(\"web3-core\");\nconst web3_types_1 = require(\"web3-types\");\nconst rpcMethodsWrappers = __importStar(require(\"./rpc_method_wrappers.js\"));\nclass Net extends web3_core_1.Web3Context {\n  /**\n   * Gets the current network ID\n   *\n   * @param returnFormat - Return format\n   * @returns A Promise of the network ID.\n   * @example\n   * ```ts\n   * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n   * await net.getId();\n   * > 1\n   * ```\n   */\n  getId(returnFormat = web3_types_1.DEFAULT_RETURN_FORMAT) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return rpcMethodsWrappers.getId(this, returnFormat);\n    });\n  }\n  /**\n   * Get the number of peers connected to.\n   *\n   * @param returnFormat - Return format\n   * @returns A promise of the number of the peers connected to.\n   * @example\n   * ```ts\n   * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n   * await net.getPeerCount();\n   * > 0\n   * ```\n   */\n  getPeerCount(returnFormat = web3_types_1.DEFAULT_RETURN_FORMAT) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return rpcMethodsWrappers.getPeerCount(this, returnFormat);\n    });\n  }\n  /**\n   * Check if the node is listening for peers\n   *\n   * @returns A promise of a boolean if the node is listening to peers\n   * @example\n   * ```ts\n   * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n   * await net.isListening();\n   * > true\n   * ```\n   */\n  isListening() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return rpcMethodsWrappers.isListening(this);\n    });\n  }\n}\nexports.Net = Net;","map":{"version":3,"names":["web3_core_1","require","web3_types_1","rpcMethodsWrappers","__importStar","Net","Web3Context","getId","returnFormat","DEFAULT_RETURN_FORMAT","getPeerCount","isListening","exports"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/web3-net/src/net.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3Context } from 'web3-core';\nimport { DataFormat, DEFAULT_RETURN_FORMAT, Web3NetAPI } from 'web3-types';\n\nimport * as rpcMethodsWrappers from './rpc_method_wrappers.js';\n\nexport class Net extends Web3Context<Web3NetAPI> {\n\t/**\n\t * Gets the current network ID\n\t *\n\t * @param returnFormat - Return format\n\t * @returns A Promise of the network ID.\n\t * @example\n\t * ```ts\n\t * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n\t * await net.getId();\n\t * > 1\n\t * ```\n\t */\n\tpublic async getId<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getId(this, returnFormat);\n\t}\n\n\t/**\n\t * Get the number of peers connected to.\n\t *\n\t * @param returnFormat - Return format\n\t * @returns A promise of the number of the peers connected to.\n\t * @example\n\t * ```ts\n\t * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n\t * await net.getPeerCount();\n\t * > 0\n\t * ```\n\t */\n\tpublic async getPeerCount<ReturnFormat extends DataFormat = typeof DEFAULT_RETURN_FORMAT>(\n\t\treturnFormat: ReturnFormat = DEFAULT_RETURN_FORMAT as ReturnFormat,\n\t) {\n\t\treturn rpcMethodsWrappers.getPeerCount(this, returnFormat);\n\t}\n\n\t/**\n\t * Check if the node is listening for peers\n\t *\n\t * @returns A promise of a boolean if the node is listening to peers\n\t * @example\n\t * ```ts\n\t * const net = new Net(Net.givenProvider || 'ws://some.local-or-remote.node:8546');\n\t * await net.isListening();\n\t * > true\n\t * ```\n\t */\n\tpublic async isListening() {\n\t\treturn rpcMethodsWrappers.isListening(this);\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;AAgBA,MAAAA,WAAA,GAAAC,OAAA;AACA,MAAAC,YAAA,GAAAD,OAAA;AAEA,MAAAE,kBAAA,GAAAC,YAAA,CAAAH,OAAA;AAEA,MAAaI,GAAI,SAAQL,WAAA,CAAAM,WAAuB;EAC/C;;;;;;;;;;;;EAYaC,KAAKA,CACjBC,YAAA,GAA6BN,YAAA,CAAAO,qBAAqC;;MAElE,OAAON,kBAAkB,CAACI,KAAK,CAAC,IAAI,EAAEC,YAAY,CAAC;IACpD,CAAC;;EAED;;;;;;;;;;;;EAYaE,YAAYA,CACxBF,YAAA,GAA6BN,YAAA,CAAAO,qBAAqC;;MAElE,OAAON,kBAAkB,CAACO,YAAY,CAAC,IAAI,EAAEF,YAAY,CAAC;IAC3D,CAAC;;EAED;;;;;;;;;;;EAWaG,WAAWA,CAAA;;MACvB,OAAOR,kBAAkB,CAACQ,WAAW,CAAC,IAAI,CAAC;IAC5C,CAAC;;;AAlDFC,OAAA,CAAAP,GAAA,GAAAA,GAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}