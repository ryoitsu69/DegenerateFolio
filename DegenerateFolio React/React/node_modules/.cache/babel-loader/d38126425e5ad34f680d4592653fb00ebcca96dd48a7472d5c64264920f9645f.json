{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseCoins = exports.coins = exports.coin = exports.executeKdf = exports.makeSignDoc = exports.makeSignBytes = exports.makeAuthInfoBytes = exports.isOfflineDirectSigner = exports.Registry = exports.isTxBodyEncodeObject = exports.isTsProtoGeneratedType = exports.isPbjsGeneratedType = exports.encodePubkey = exports.decodePubkey = exports.decodeOptionalPubkey = exports.anyToSinglePubkey = exports.makeCosmoshubPath = exports.DirectSecp256k1Wallet = exports.extractKdfConfiguration = exports.DirectSecp256k1HdWallet = exports.decodeTxRaw = void 0;\n// This type happens to be shared between Amino and Direct sign modes\nvar decode_1 = require(\"./decode\");\nObject.defineProperty(exports, \"decodeTxRaw\", {\n  enumerable: true,\n  get: function () {\n    return decode_1.decodeTxRaw;\n  }\n});\nvar directsecp256k1hdwallet_1 = require(\"./directsecp256k1hdwallet\");\nObject.defineProperty(exports, \"DirectSecp256k1HdWallet\", {\n  enumerable: true,\n  get: function () {\n    return directsecp256k1hdwallet_1.DirectSecp256k1HdWallet;\n  }\n});\nObject.defineProperty(exports, \"extractKdfConfiguration\", {\n  enumerable: true,\n  get: function () {\n    return directsecp256k1hdwallet_1.extractKdfConfiguration;\n  }\n});\nvar directsecp256k1wallet_1 = require(\"./directsecp256k1wallet\");\nObject.defineProperty(exports, \"DirectSecp256k1Wallet\", {\n  enumerable: true,\n  get: function () {\n    return directsecp256k1wallet_1.DirectSecp256k1Wallet;\n  }\n});\nvar paths_1 = require(\"./paths\");\nObject.defineProperty(exports, \"makeCosmoshubPath\", {\n  enumerable: true,\n  get: function () {\n    return paths_1.makeCosmoshubPath;\n  }\n});\nvar pubkey_1 = require(\"./pubkey\");\nObject.defineProperty(exports, \"anyToSinglePubkey\", {\n  enumerable: true,\n  get: function () {\n    return pubkey_1.anyToSinglePubkey;\n  }\n});\nObject.defineProperty(exports, \"decodeOptionalPubkey\", {\n  enumerable: true,\n  get: function () {\n    return pubkey_1.decodeOptionalPubkey;\n  }\n});\nObject.defineProperty(exports, \"decodePubkey\", {\n  enumerable: true,\n  get: function () {\n    return pubkey_1.decodePubkey;\n  }\n});\nObject.defineProperty(exports, \"encodePubkey\", {\n  enumerable: true,\n  get: function () {\n    return pubkey_1.encodePubkey;\n  }\n});\nvar registry_1 = require(\"./registry\");\nObject.defineProperty(exports, \"isPbjsGeneratedType\", {\n  enumerable: true,\n  get: function () {\n    return registry_1.isPbjsGeneratedType;\n  }\n});\nObject.defineProperty(exports, \"isTsProtoGeneratedType\", {\n  enumerable: true,\n  get: function () {\n    return registry_1.isTsProtoGeneratedType;\n  }\n});\nObject.defineProperty(exports, \"isTxBodyEncodeObject\", {\n  enumerable: true,\n  get: function () {\n    return registry_1.isTxBodyEncodeObject;\n  }\n});\nObject.defineProperty(exports, \"Registry\", {\n  enumerable: true,\n  get: function () {\n    return registry_1.Registry;\n  }\n});\nvar signer_1 = require(\"./signer\");\nObject.defineProperty(exports, \"isOfflineDirectSigner\", {\n  enumerable: true,\n  get: function () {\n    return signer_1.isOfflineDirectSigner;\n  }\n});\nvar signing_1 = require(\"./signing\");\nObject.defineProperty(exports, \"makeAuthInfoBytes\", {\n  enumerable: true,\n  get: function () {\n    return signing_1.makeAuthInfoBytes;\n  }\n});\nObject.defineProperty(exports, \"makeSignBytes\", {\n  enumerable: true,\n  get: function () {\n    return signing_1.makeSignBytes;\n  }\n});\nObject.defineProperty(exports, \"makeSignDoc\", {\n  enumerable: true,\n  get: function () {\n    return signing_1.makeSignDoc;\n  }\n});\nvar wallet_1 = require(\"./wallet\");\nObject.defineProperty(exports, \"executeKdf\", {\n  enumerable: true,\n  get: function () {\n    return wallet_1.executeKdf;\n  }\n});\n// re-exports\nvar amino_1 = require(\"@cosmjs/amino\");\nObject.defineProperty(exports, \"coin\", {\n  enumerable: true,\n  get: function () {\n    return amino_1.coin;\n  }\n});\nObject.defineProperty(exports, \"coins\", {\n  enumerable: true,\n  get: function () {\n    return amino_1.coins;\n  }\n});\nObject.defineProperty(exports, \"parseCoins\", {\n  enumerable: true,\n  get: function () {\n    return amino_1.parseCoins;\n  }\n});","map":{"version":3,"names":["decode_1","require","Object","defineProperty","exports","enumerable","get","decodeTxRaw","directsecp256k1hdwallet_1","DirectSecp256k1HdWallet","extractKdfConfiguration","directsecp256k1wallet_1","DirectSecp256k1Wallet","paths_1","makeCosmoshubPath","pubkey_1","anyToSinglePubkey","decodeOptionalPubkey","decodePubkey","encodePubkey","registry_1","isPbjsGeneratedType","isTsProtoGeneratedType","isTxBodyEncodeObject","Registry","signer_1","isOfflineDirectSigner","signing_1","makeAuthInfoBytes","makeSignBytes","makeSignDoc","wallet_1","executeKdf","amino_1","coin","coins","parseCoins"],"sources":["../src/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}