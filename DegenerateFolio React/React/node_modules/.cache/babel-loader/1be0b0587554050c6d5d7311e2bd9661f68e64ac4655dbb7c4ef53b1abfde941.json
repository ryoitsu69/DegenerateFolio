{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Eip1193Provider = void 0;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nconst web3_types_1 = require(\"web3-types\");\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst web3_errors_1 = require(\"web3-errors\");\nconst json_rpc_js_1 = require(\"./json_rpc.js\");\n/**\n * This is an abstract class, which extends {@link Web3BaseProvider} class. This class is used to implement a provider that adheres to the EIP-1193 standard for Ethereum providers.\n */\nclass Eip1193Provider extends web3_types_1.Web3BaseProvider {\n  constructor() {\n    super(...arguments);\n    this._eventEmitter = new eventemitter3_1.EventEmitter();\n    this._chainId = '';\n    this._accounts = [];\n  }\n  _getChainId() {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const data = yield this.request((0, json_rpc_js_1.toPayload)({\n        method: 'eth_chainId',\n        params: []\n      }));\n      return (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : '';\n    });\n  }\n  _getAccounts() {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const data = yield this.request((0, json_rpc_js_1.toPayload)({\n        method: 'eth_accounts',\n        params: []\n      }));\n      return (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : [];\n    });\n  }\n  _onConnect() {\n    Promise.all([this._getChainId().then(chainId => {\n      if (chainId !== this._chainId) {\n        this._chainId = chainId;\n        this._eventEmitter.emit('chainChanged', this._chainId);\n      }\n    }).catch(err => {\n      // todo: add error handler\n      console.error(err);\n    }), this._getAccounts().then(accounts => {\n      if (!(this._accounts.length === accounts.length && accounts.every(v => accounts.includes(v)))) {\n        this._accounts = accounts;\n        this._onAccountsChanged();\n      }\n    }).catch(err => {\n      // todo: add error handler\n      // eslint-disable-next-line no-console\n      console.error(err);\n    })]).then(() => this._eventEmitter.emit('connect', {\n      chainId: this._chainId\n    })).catch(err => {\n      // todo: add error handler\n      // eslint-disable-next-line no-console\n      console.error(err);\n    });\n  }\n  // todo this must be ProvideRpcError with a message too\n  _onDisconnect(code, data) {\n    this._eventEmitter.emit('disconnect', new web3_errors_1.EIP1193ProviderRpcError(code, data));\n  }\n  _onAccountsChanged() {\n    // get chainId and safe to local\n    this._eventEmitter.emit('accountsChanged', this._accounts);\n  }\n}\nexports.Eip1193Provider = Eip1193Provider;","map":{"version":3,"names":["web3_types_1","require","eventemitter3_1","web3_errors_1","json_rpc_js_1","Eip1193Provider","Web3BaseProvider","constructor","_eventEmitter","EventEmitter","_chainId","_accounts","_getChainId","data","request","toPayload","method","params","_a","result","_getAccounts","_onConnect","Promise","all","then","chainId","emit","catch","err","console","error","accounts","length","every","v","includes","_onAccountsChanged","_onDisconnect","code","EIP1193ProviderRpcError","exports"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/web3-utils/src/web3_eip1193_provider.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport {\n\tEthExecutionAPI,\n\tHexString,\n\tProviderConnectInfo,\n\tWeb3APIMethod,\n\tWeb3APIPayload,\n\tWeb3APISpec,\n\tWeb3BaseProvider,\n} from 'web3-types';\nimport { EventEmitter } from 'eventemitter3';\nimport { EIP1193ProviderRpcError } from 'web3-errors';\nimport { toPayload } from './json_rpc.js';\n\n/**\n * This is an abstract class, which extends {@link Web3BaseProvider} class. This class is used to implement a provider that adheres to the EIP-1193 standard for Ethereum providers.\n */\nexport abstract class Eip1193Provider<\n\tAPI extends Web3APISpec = EthExecutionAPI,\n> extends Web3BaseProvider<API> {\n\tprotected readonly _eventEmitter: EventEmitter = new EventEmitter();\n\tprivate _chainId: HexString = '';\n\tprivate _accounts: HexString[] = [];\n\n\tprivate async _getChainId(): Promise<HexString> {\n\t\tconst data = await (this as Web3BaseProvider<API>).request<\n\t\t\tWeb3APIMethod<API>,\n\t\t\tResponseType\n\t\t>(\n\t\t\ttoPayload({\n\t\t\t\tmethod: 'eth_chainId',\n\t\t\t\tparams: [],\n\t\t\t}) as Web3APIPayload<API, Web3APIMethod<API>>,\n\t\t);\n\t\treturn data?.result ?? '';\n\t}\n\n\tprivate async _getAccounts(): Promise<HexString[]> {\n\t\tconst data = await (this as Web3BaseProvider<API>).request<Web3APIMethod<API>, HexString[]>(\n\t\t\ttoPayload({\n\t\t\t\tmethod: 'eth_accounts',\n\t\t\t\tparams: [],\n\t\t\t}) as Web3APIPayload<API, Web3APIMethod<API>>,\n\t\t);\n\t\treturn data?.result ?? [];\n\t}\n\n\tprotected _onConnect() {\n\t\tPromise.all([\n\t\t\tthis._getChainId()\n\t\t\t\t.then(chainId => {\n\t\t\t\t\tif (chainId !== this._chainId) {\n\t\t\t\t\t\tthis._chainId = chainId;\n\t\t\t\t\t\tthis._eventEmitter.emit('chainChanged', this._chainId);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\t// todo: add error handler\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t}),\n\n\t\t\tthis._getAccounts()\n\t\t\t\t.then(accounts => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!(\n\t\t\t\t\t\t\tthis._accounts.length === accounts.length &&\n\t\t\t\t\t\t\taccounts.every(v => accounts.includes(v))\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._accounts = accounts;\n\t\t\t\t\t\tthis._onAccountsChanged();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\t// todo: add error handler\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t}),\n\t\t])\n\t\t\t.then(() =>\n\t\t\t\tthis._eventEmitter.emit('connect', {\n\t\t\t\t\tchainId: this._chainId,\n\t\t\t\t} as ProviderConnectInfo),\n\t\t\t)\n\t\t\t.catch(err => {\n\t\t\t\t// todo: add error handler\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t}\n\n\t// todo this must be ProvideRpcError with a message too\n\tprotected _onDisconnect(code: number, data?: unknown) {\n\t\tthis._eventEmitter.emit('disconnect', new EIP1193ProviderRpcError(code, data));\n\t}\n\n\tprivate _onAccountsChanged() {\n\t\t// get chainId and safe to local\n\t\tthis._eventEmitter.emit('accountsChanged', this._accounts);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}