{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pbkdf2Sync = exports.pbkdf2 = void 0;\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_js_1 = require(\"./utils.js\");\nasync function pbkdf2(password, salt, iterations, keylen, digest) {\n  if (![\"sha256\", \"sha512\"].includes(digest)) {\n    throw new Error(\"Only sha256 and sha512 are supported\");\n  }\n  (0, utils_js_1.assertBytes)(password);\n  (0, utils_js_1.assertBytes)(salt);\n  return (0, pbkdf2_1.pbkdf2Async)(digest === \"sha256\" ? sha256_1.sha256 : sha512_1.sha512, password, salt, {\n    c: iterations,\n    dkLen: keylen\n  });\n}\nexports.pbkdf2 = pbkdf2;\nfunction pbkdf2Sync(password, salt, iterations, keylen, digest) {\n  if (![\"sha256\", \"sha512\"].includes(digest)) {\n    throw new Error(\"Only sha256 and sha512 are supported\");\n  }\n  (0, utils_js_1.assertBytes)(password);\n  (0, utils_js_1.assertBytes)(salt);\n  return (0, pbkdf2_1.pbkdf2)(digest === \"sha256\" ? sha256_1.sha256 : sha512_1.sha512, password, salt, {\n    c: iterations,\n    dkLen: keylen\n  });\n}\nexports.pbkdf2Sync = pbkdf2Sync;","map":{"version":3,"names":["Object","defineProperty","exports","value","pbkdf2Sync","pbkdf2","pbkdf2_1","require","sha256_1","sha512_1","utils_js_1","password","salt","iterations","keylen","digest","includes","Error","assertBytes","pbkdf2Async","sha256","sha512","c","dkLen"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/ethereum-cryptography/pbkdf2.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2Sync = exports.pbkdf2 = void 0;\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_js_1 = require(\"./utils.js\");\nasync function pbkdf2(password, salt, iterations, keylen, digest) {\n    if (![\"sha256\", \"sha512\"].includes(digest)) {\n        throw new Error(\"Only sha256 and sha512 are supported\");\n    }\n    (0, utils_js_1.assertBytes)(password);\n    (0, utils_js_1.assertBytes)(salt);\n    return (0, pbkdf2_1.pbkdf2Async)(digest === \"sha256\" ? sha256_1.sha256 : sha512_1.sha512, password, salt, {\n        c: iterations,\n        dkLen: keylen\n    });\n}\nexports.pbkdf2 = pbkdf2;\nfunction pbkdf2Sync(password, salt, iterations, keylen, digest) {\n    if (![\"sha256\", \"sha512\"].includes(digest)) {\n        throw new Error(\"Only sha256 and sha512 are supported\");\n    }\n    (0, utils_js_1.assertBytes)(password);\n    (0, utils_js_1.assertBytes)(salt);\n    return (0, pbkdf2_1.pbkdf2)(digest === \"sha256\" ? sha256_1.sha256 : sha512_1.sha512, password, salt, {\n        c: iterations,\n        dkLen: keylen\n    });\n}\nexports.pbkdf2Sync = pbkdf2Sync;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAGF,OAAO,CAACG,MAAM,GAAG,KAAK,CAAC;AAC5C,MAAMC,QAAQ,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAChD,MAAMC,QAAQ,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAChD,MAAME,QAAQ,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAChD,MAAMG,UAAU,GAAGH,OAAO,CAAC,YAAY,CAAC;AACxC,eAAeF,MAAMA,CAACM,QAAQ,EAAEC,IAAI,EAAEC,UAAU,EAAEC,MAAM,EAAEC,MAAM,EAAE;EAC9D,IAAI,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAACD,MAAM,CAAC,EAAE;IACxC,MAAM,IAAIE,KAAK,CAAC,sCAAsC,CAAC;EAC3D;EACA,CAAC,CAAC,EAAEP,UAAU,CAACQ,WAAW,EAAEP,QAAQ,CAAC;EACrC,CAAC,CAAC,EAAED,UAAU,CAACQ,WAAW,EAAEN,IAAI,CAAC;EACjC,OAAO,CAAC,CAAC,EAAEN,QAAQ,CAACa,WAAW,EAAEJ,MAAM,KAAK,QAAQ,GAAGP,QAAQ,CAACY,MAAM,GAAGX,QAAQ,CAACY,MAAM,EAAEV,QAAQ,EAAEC,IAAI,EAAE;IACtGU,CAAC,EAAET,UAAU;IACbU,KAAK,EAAET;EACX,CAAC,CAAC;AACN;AACAZ,OAAO,CAACG,MAAM,GAAGA,MAAM;AACvB,SAASD,UAAUA,CAACO,QAAQ,EAAEC,IAAI,EAAEC,UAAU,EAAEC,MAAM,EAAEC,MAAM,EAAE;EAC5D,IAAI,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAACD,MAAM,CAAC,EAAE;IACxC,MAAM,IAAIE,KAAK,CAAC,sCAAsC,CAAC;EAC3D;EACA,CAAC,CAAC,EAAEP,UAAU,CAACQ,WAAW,EAAEP,QAAQ,CAAC;EACrC,CAAC,CAAC,EAAED,UAAU,CAACQ,WAAW,EAAEN,IAAI,CAAC;EACjC,OAAO,CAAC,CAAC,EAAEN,QAAQ,CAACD,MAAM,EAAEU,MAAM,KAAK,QAAQ,GAAGP,QAAQ,CAACY,MAAM,GAAGX,QAAQ,CAACY,MAAM,EAAEV,QAAQ,EAAEC,IAAI,EAAE;IACjGU,CAAC,EAAET,UAAU;IACbU,KAAK,EAAET;EACX,CAAC,CAAC;AACN;AACAZ,OAAO,CAACE,UAAU,GAAGA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}