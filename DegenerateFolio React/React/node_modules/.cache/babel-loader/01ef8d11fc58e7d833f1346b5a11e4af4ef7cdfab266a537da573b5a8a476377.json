{"ast":null,"code":"/** @internal */\nexport const SI_MID = 8;\n/** @internal */\nexport const SI = [{\n  power: -24,\n  text: 'yocto',\n  value: 'y'\n}, {\n  power: -21,\n  text: 'zepto',\n  value: 'z'\n}, {\n  power: -18,\n  text: 'atto',\n  value: 'a'\n}, {\n  power: -15,\n  text: 'femto',\n  value: 'f'\n}, {\n  power: -12,\n  text: 'pico',\n  value: 'p'\n}, {\n  power: -9,\n  text: 'nano',\n  value: 'n'\n}, {\n  power: -6,\n  text: 'micro',\n  value: 'µ'\n}, {\n  power: -3,\n  text: 'milli',\n  value: 'm'\n}, {\n  power: 0,\n  text: 'Unit',\n  value: '-'\n},\n// position 8\n{\n  power: 3,\n  text: 'Kilo',\n  value: 'k'\n}, {\n  power: 6,\n  text: 'Mill',\n  value: 'M'\n},\n// Mega, M\n{\n  power: 9,\n  text: 'Bill',\n  value: 'B'\n},\n// Giga, G\n{\n  power: 12,\n  text: 'Tril',\n  value: 'T'\n},\n// Tera, T\n{\n  power: 15,\n  text: 'Peta',\n  value: 'P'\n}, {\n  power: 18,\n  text: 'Exa',\n  value: 'E'\n}, {\n  power: 21,\n  text: 'Zeta',\n  value: 'Z'\n}, {\n  power: 24,\n  text: 'Yotta',\n  value: 'Y'\n}];\n/** @internal */\nexport function findSi(type) {\n  // use a loop here, better RN support (which doesn't have [].find)\n  for (let i = 0, count = SI.length; i < count; i++) {\n    if (SI[i].value === type) {\n      return SI[i];\n    }\n  }\n  return SI[SI_MID];\n}\n/** @internal */\nexport function calcSi(text, decimals, forceUnit) {\n  if (forceUnit) {\n    return findSi(forceUnit);\n  }\n  const siDefIndex = SI_MID - 1 + Math.ceil((text.length - decimals) / 3);\n  return SI[siDefIndex] || SI[siDefIndex < 0 ? 0 : SI.length - 1];\n}","map":{"version":3,"names":["SI_MID","SI","power","text","value","findSi","type","i","count","length","calcSi","decimals","forceUnit","siDefIndex","Math","ceil"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util/format/si.js"],"sourcesContent":["/** @internal */\nexport const SI_MID = 8;\n/** @internal */\nexport const SI = [\n    { power: -24, text: 'yocto', value: 'y' },\n    { power: -21, text: 'zepto', value: 'z' },\n    { power: -18, text: 'atto', value: 'a' },\n    { power: -15, text: 'femto', value: 'f' },\n    { power: -12, text: 'pico', value: 'p' },\n    { power: -9, text: 'nano', value: 'n' },\n    { power: -6, text: 'micro', value: 'µ' },\n    { power: -3, text: 'milli', value: 'm' },\n    { power: 0, text: 'Unit', value: '-' }, // position 8\n    { power: 3, text: 'Kilo', value: 'k' },\n    { power: 6, text: 'Mill', value: 'M' }, // Mega, M\n    { power: 9, text: 'Bill', value: 'B' }, // Giga, G\n    { power: 12, text: 'Tril', value: 'T' }, // Tera, T\n    { power: 15, text: 'Peta', value: 'P' },\n    { power: 18, text: 'Exa', value: 'E' },\n    { power: 21, text: 'Zeta', value: 'Z' },\n    { power: 24, text: 'Yotta', value: 'Y' }\n];\n/** @internal */\nexport function findSi(type) {\n    // use a loop here, better RN support (which doesn't have [].find)\n    for (let i = 0, count = SI.length; i < count; i++) {\n        if (SI[i].value === type) {\n            return SI[i];\n        }\n    }\n    return SI[SI_MID];\n}\n/** @internal */\nexport function calcSi(text, decimals, forceUnit) {\n    if (forceUnit) {\n        return findSi(forceUnit);\n    }\n    const siDefIndex = (SI_MID - 1) + Math.ceil((text.length - decimals) / 3);\n    return SI[siDefIndex] || SI[siDefIndex < 0 ? 0 : SI.length - 1];\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}