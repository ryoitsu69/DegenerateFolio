{"ast":null,"code":"import { u8aEq } from '@polkadot/util';\nimport { jsonDecryptData } from '@polkadot/util-crypto';\nimport { PKCS8_DIVIDER, PKCS8_HEADER, PUB_LENGTH, SEC_LENGTH, SEED_LENGTH } from './defaults.js';\nconst SEED_OFFSET = PKCS8_HEADER.length;\nexport function decodePair(passphrase, encrypted, _encType) {\n  const encType = Array.isArray(_encType) || _encType === undefined ? _encType : [_encType];\n  const decrypted = jsonDecryptData(encrypted, passphrase, encType);\n  const header = decrypted.subarray(0, PKCS8_HEADER.length);\n  if (!u8aEq(header, PKCS8_HEADER)) {\n    throw new Error('Invalid Pkcs8 header found in body');\n  }\n  let secretKey = decrypted.subarray(SEED_OFFSET, SEED_OFFSET + SEC_LENGTH);\n  let divOffset = SEED_OFFSET + SEC_LENGTH;\n  let divider = decrypted.subarray(divOffset, divOffset + PKCS8_DIVIDER.length);\n  // old-style, we have the seed here\n  if (!u8aEq(divider, PKCS8_DIVIDER)) {\n    divOffset = SEED_OFFSET + SEED_LENGTH;\n    secretKey = decrypted.subarray(SEED_OFFSET, divOffset);\n    divider = decrypted.subarray(divOffset, divOffset + PKCS8_DIVIDER.length);\n    if (!u8aEq(divider, PKCS8_DIVIDER)) {\n      throw new Error('Invalid Pkcs8 divider found in body');\n    }\n  }\n  const pubOffset = divOffset + PKCS8_DIVIDER.length;\n  const publicKey = decrypted.subarray(pubOffset, pubOffset + PUB_LENGTH);\n  return {\n    publicKey,\n    secretKey\n  };\n}","map":{"version":3,"names":["u8aEq","jsonDecryptData","PKCS8_DIVIDER","PKCS8_HEADER","PUB_LENGTH","SEC_LENGTH","SEED_LENGTH","SEED_OFFSET","length","decodePair","passphrase","encrypted","_encType","encType","Array","isArray","undefined","decrypted","header","subarray","Error","secretKey","divOffset","divider","pubOffset","publicKey"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/keyring/pair/decode.js"],"sourcesContent":["import { u8aEq } from '@polkadot/util';\nimport { jsonDecryptData } from '@polkadot/util-crypto';\nimport { PKCS8_DIVIDER, PKCS8_HEADER, PUB_LENGTH, SEC_LENGTH, SEED_LENGTH } from './defaults.js';\nconst SEED_OFFSET = PKCS8_HEADER.length;\nexport function decodePair(passphrase, encrypted, _encType) {\n    const encType = Array.isArray(_encType) || _encType === undefined\n        ? _encType\n        : [_encType];\n    const decrypted = jsonDecryptData(encrypted, passphrase, encType);\n    const header = decrypted.subarray(0, PKCS8_HEADER.length);\n    if (!u8aEq(header, PKCS8_HEADER)) {\n        throw new Error('Invalid Pkcs8 header found in body');\n    }\n    let secretKey = decrypted.subarray(SEED_OFFSET, SEED_OFFSET + SEC_LENGTH);\n    let divOffset = SEED_OFFSET + SEC_LENGTH;\n    let divider = decrypted.subarray(divOffset, divOffset + PKCS8_DIVIDER.length);\n    // old-style, we have the seed here\n    if (!u8aEq(divider, PKCS8_DIVIDER)) {\n        divOffset = SEED_OFFSET + SEED_LENGTH;\n        secretKey = decrypted.subarray(SEED_OFFSET, divOffset);\n        divider = decrypted.subarray(divOffset, divOffset + PKCS8_DIVIDER.length);\n        if (!u8aEq(divider, PKCS8_DIVIDER)) {\n            throw new Error('Invalid Pkcs8 divider found in body');\n        }\n    }\n    const pubOffset = divOffset + PKCS8_DIVIDER.length;\n    const publicKey = decrypted.subarray(pubOffset, pubOffset + PUB_LENGTH);\n    return {\n        publicKey,\n        secretKey\n    };\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SAASC,eAAe,QAAQ,uBAAuB;AACvD,SAASC,aAAa,EAAEC,YAAY,EAAEC,UAAU,EAAEC,UAAU,EAAEC,WAAW,QAAQ,eAAe;AAChG,MAAMC,WAAW,GAAGJ,YAAY,CAACK,MAAM;AACvC,OAAO,SAASC,UAAUA,CAACC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,EAAE;EACxD,MAAMC,OAAO,GAAGC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAAC,IAAIA,QAAQ,KAAKI,SAAS,GAC3DJ,QAAQ,GACR,CAACA,QAAQ,CAAC;EAChB,MAAMK,SAAS,GAAGhB,eAAe,CAACU,SAAS,EAAED,UAAU,EAAEG,OAAO,CAAC;EACjE,MAAMK,MAAM,GAAGD,SAAS,CAACE,QAAQ,CAAC,CAAC,EAAEhB,YAAY,CAACK,MAAM,CAAC;EACzD,IAAI,CAACR,KAAK,CAACkB,MAAM,EAAEf,YAAY,CAAC,EAAE;IAC9B,MAAM,IAAIiB,KAAK,CAAC,oCAAoC,CAAC;EACzD;EACA,IAAIC,SAAS,GAAGJ,SAAS,CAACE,QAAQ,CAACZ,WAAW,EAAEA,WAAW,GAAGF,UAAU,CAAC;EACzE,IAAIiB,SAAS,GAAGf,WAAW,GAAGF,UAAU;EACxC,IAAIkB,OAAO,GAAGN,SAAS,CAACE,QAAQ,CAACG,SAAS,EAAEA,SAAS,GAAGpB,aAAa,CAACM,MAAM,CAAC;EAC7E;EACA,IAAI,CAACR,KAAK,CAACuB,OAAO,EAAErB,aAAa,CAAC,EAAE;IAChCoB,SAAS,GAAGf,WAAW,GAAGD,WAAW;IACrCe,SAAS,GAAGJ,SAAS,CAACE,QAAQ,CAACZ,WAAW,EAAEe,SAAS,CAAC;IACtDC,OAAO,GAAGN,SAAS,CAACE,QAAQ,CAACG,SAAS,EAAEA,SAAS,GAAGpB,aAAa,CAACM,MAAM,CAAC;IACzE,IAAI,CAACR,KAAK,CAACuB,OAAO,EAAErB,aAAa,CAAC,EAAE;MAChC,MAAM,IAAIkB,KAAK,CAAC,qCAAqC,CAAC;IAC1D;EACJ;EACA,MAAMI,SAAS,GAAGF,SAAS,GAAGpB,aAAa,CAACM,MAAM;EAClD,MAAMiB,SAAS,GAAGR,SAAS,CAACE,QAAQ,CAACK,SAAS,EAAEA,SAAS,GAAGpB,UAAU,CAAC;EACvE,OAAO;IACHqB,SAAS;IACTJ;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}