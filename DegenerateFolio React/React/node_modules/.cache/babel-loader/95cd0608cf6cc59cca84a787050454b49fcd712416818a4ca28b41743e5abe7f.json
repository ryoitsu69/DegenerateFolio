{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HashedParams = exports.VersionParams = exports.ValidatorParams = exports.EvidenceParams = exports.BlockParams = exports.ConsensusParams = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst duration_1 = require(\"../../google/protobuf/duration\");\nconst binary_1 = require(\"../../binary\");\nconst helpers_1 = require(\"../../helpers\");\nexports.protobufPackage = \"tendermint.types\";\nfunction createBaseConsensusParams() {\n  return {\n    block: undefined,\n    evidence: undefined,\n    validator: undefined,\n    version: undefined\n  };\n}\nexports.ConsensusParams = {\n  typeUrl: \"/tendermint.types.ConsensusParams\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.block !== undefined) {\n      exports.BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.evidence !== undefined) {\n      exports.EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.validator !== undefined) {\n      exports.ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.version !== undefined) {\n      exports.VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseConsensusParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.block = exports.BlockParams.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.evidence = exports.EvidenceParams.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.validator = exports.ValidatorParams.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.version = exports.VersionParams.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseConsensusParams();\n    if ((0, helpers_1.isSet)(object.block)) obj.block = exports.BlockParams.fromJSON(object.block);\n    if ((0, helpers_1.isSet)(object.evidence)) obj.evidence = exports.EvidenceParams.fromJSON(object.evidence);\n    if ((0, helpers_1.isSet)(object.validator)) obj.validator = exports.ValidatorParams.fromJSON(object.validator);\n    if ((0, helpers_1.isSet)(object.version)) obj.version = exports.VersionParams.fromJSON(object.version);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.block !== undefined && (obj.block = message.block ? exports.BlockParams.toJSON(message.block) : undefined);\n    message.evidence !== undefined && (obj.evidence = message.evidence ? exports.EvidenceParams.toJSON(message.evidence) : undefined);\n    message.validator !== undefined && (obj.validator = message.validator ? exports.ValidatorParams.toJSON(message.validator) : undefined);\n    message.version !== undefined && (obj.version = message.version ? exports.VersionParams.toJSON(message.version) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseConsensusParams();\n    if (object.block !== undefined && object.block !== null) {\n      message.block = exports.BlockParams.fromPartial(object.block);\n    }\n    if (object.evidence !== undefined && object.evidence !== null) {\n      message.evidence = exports.EvidenceParams.fromPartial(object.evidence);\n    }\n    if (object.validator !== undefined && object.validator !== null) {\n      message.validator = exports.ValidatorParams.fromPartial(object.validator);\n    }\n    if (object.version !== undefined && object.version !== null) {\n      message.version = exports.VersionParams.fromPartial(object.version);\n    }\n    return message;\n  }\n};\nfunction createBaseBlockParams() {\n  return {\n    maxBytes: BigInt(0),\n    maxGas: BigInt(0)\n  };\n}\nexports.BlockParams = {\n  typeUrl: \"/tendermint.types.BlockParams\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.maxBytes !== BigInt(0)) {\n      writer.uint32(8).int64(message.maxBytes);\n    }\n    if (message.maxGas !== BigInt(0)) {\n      writer.uint32(16).int64(message.maxGas);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseBlockParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.maxBytes = reader.int64();\n          break;\n        case 2:\n          message.maxGas = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseBlockParams();\n    if ((0, helpers_1.isSet)(object.maxBytes)) obj.maxBytes = BigInt(object.maxBytes.toString());\n    if ((0, helpers_1.isSet)(object.maxGas)) obj.maxGas = BigInt(object.maxGas.toString());\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.maxBytes !== undefined && (obj.maxBytes = (message.maxBytes || BigInt(0)).toString());\n    message.maxGas !== undefined && (obj.maxGas = (message.maxGas || BigInt(0)).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseBlockParams();\n    if (object.maxBytes !== undefined && object.maxBytes !== null) {\n      message.maxBytes = BigInt(object.maxBytes.toString());\n    }\n    if (object.maxGas !== undefined && object.maxGas !== null) {\n      message.maxGas = BigInt(object.maxGas.toString());\n    }\n    return message;\n  }\n};\nfunction createBaseEvidenceParams() {\n  return {\n    maxAgeNumBlocks: BigInt(0),\n    maxAgeDuration: duration_1.Duration.fromPartial({}),\n    maxBytes: BigInt(0)\n  };\n}\nexports.EvidenceParams = {\n  typeUrl: \"/tendermint.types.EvidenceParams\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.maxAgeNumBlocks !== BigInt(0)) {\n      writer.uint32(8).int64(message.maxAgeNumBlocks);\n    }\n    if (message.maxAgeDuration !== undefined) {\n      duration_1.Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.maxBytes !== BigInt(0)) {\n      writer.uint32(24).int64(message.maxBytes);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseEvidenceParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.maxAgeNumBlocks = reader.int64();\n          break;\n        case 2:\n          message.maxAgeDuration = duration_1.Duration.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.maxBytes = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseEvidenceParams();\n    if ((0, helpers_1.isSet)(object.maxAgeNumBlocks)) obj.maxAgeNumBlocks = BigInt(object.maxAgeNumBlocks.toString());\n    if ((0, helpers_1.isSet)(object.maxAgeDuration)) obj.maxAgeDuration = duration_1.Duration.fromJSON(object.maxAgeDuration);\n    if ((0, helpers_1.isSet)(object.maxBytes)) obj.maxBytes = BigInt(object.maxBytes.toString());\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.maxAgeNumBlocks !== undefined && (obj.maxAgeNumBlocks = (message.maxAgeNumBlocks || BigInt(0)).toString());\n    message.maxAgeDuration !== undefined && (obj.maxAgeDuration = message.maxAgeDuration ? duration_1.Duration.toJSON(message.maxAgeDuration) : undefined);\n    message.maxBytes !== undefined && (obj.maxBytes = (message.maxBytes || BigInt(0)).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseEvidenceParams();\n    if (object.maxAgeNumBlocks !== undefined && object.maxAgeNumBlocks !== null) {\n      message.maxAgeNumBlocks = BigInt(object.maxAgeNumBlocks.toString());\n    }\n    if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n      message.maxAgeDuration = duration_1.Duration.fromPartial(object.maxAgeDuration);\n    }\n    if (object.maxBytes !== undefined && object.maxBytes !== null) {\n      message.maxBytes = BigInt(object.maxBytes.toString());\n    }\n    return message;\n  }\n};\nfunction createBaseValidatorParams() {\n  return {\n    pubKeyTypes: []\n  };\n}\nexports.ValidatorParams = {\n  typeUrl: \"/tendermint.types.ValidatorParams\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    for (const v of message.pubKeyTypes) {\n      writer.uint32(10).string(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseValidatorParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pubKeyTypes.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseValidatorParams();\n    if (Array.isArray(object?.pubKeyTypes)) obj.pubKeyTypes = object.pubKeyTypes.map(e => String(e));\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.pubKeyTypes) {\n      obj.pubKeyTypes = message.pubKeyTypes.map(e => e);\n    } else {\n      obj.pubKeyTypes = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseValidatorParams();\n    message.pubKeyTypes = object.pubKeyTypes?.map(e => e) || [];\n    return message;\n  }\n};\nfunction createBaseVersionParams() {\n  return {\n    app: BigInt(0)\n  };\n}\nexports.VersionParams = {\n  typeUrl: \"/tendermint.types.VersionParams\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.app !== BigInt(0)) {\n      writer.uint32(8).uint64(message.app);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseVersionParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.app = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseVersionParams();\n    if ((0, helpers_1.isSet)(object.app)) obj.app = BigInt(object.app.toString());\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.app !== undefined && (obj.app = (message.app || BigInt(0)).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseVersionParams();\n    if (object.app !== undefined && object.app !== null) {\n      message.app = BigInt(object.app.toString());\n    }\n    return message;\n  }\n};\nfunction createBaseHashedParams() {\n  return {\n    blockMaxBytes: BigInt(0),\n    blockMaxGas: BigInt(0)\n  };\n}\nexports.HashedParams = {\n  typeUrl: \"/tendermint.types.HashedParams\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.blockMaxBytes !== BigInt(0)) {\n      writer.uint32(8).int64(message.blockMaxBytes);\n    }\n    if (message.blockMaxGas !== BigInt(0)) {\n      writer.uint32(16).int64(message.blockMaxGas);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseHashedParams();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.blockMaxBytes = reader.int64();\n          break;\n        case 2:\n          message.blockMaxGas = reader.int64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseHashedParams();\n    if ((0, helpers_1.isSet)(object.blockMaxBytes)) obj.blockMaxBytes = BigInt(object.blockMaxBytes.toString());\n    if ((0, helpers_1.isSet)(object.blockMaxGas)) obj.blockMaxGas = BigInt(object.blockMaxGas.toString());\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.blockMaxBytes !== undefined && (obj.blockMaxBytes = (message.blockMaxBytes || BigInt(0)).toString());\n    message.blockMaxGas !== undefined && (obj.blockMaxGas = (message.blockMaxGas || BigInt(0)).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseHashedParams();\n    if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n      message.blockMaxBytes = BigInt(object.blockMaxBytes.toString());\n    }\n    if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n      message.blockMaxGas = BigInt(object.blockMaxGas.toString());\n    }\n    return message;\n  }\n};","map":{"version":3,"names":["duration_1","require","binary_1","helpers_1","exports","protobufPackage","createBaseConsensusParams","block","undefined","evidence","validator","version","ConsensusParams","typeUrl","encode","message","writer","BinaryWriter","create","BlockParams","uint32","fork","ldelim","EvidenceParams","ValidatorParams","VersionParams","decode","input","length","reader","BinaryReader","end","len","pos","tag","skipType","fromJSON","object","obj","isSet","toJSON","fromPartial","createBaseBlockParams","maxBytes","BigInt","maxGas","int64","toString","createBaseEvidenceParams","maxAgeNumBlocks","maxAgeDuration","Duration","createBaseValidatorParams","pubKeyTypes","v","string","push","Array","isArray","map","e","String","createBaseVersionParams","app","uint64","createBaseHashedParams","blockMaxBytes","blockMaxGas","HashedParams"],"sources":["../../../src/tendermint/types/params.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}