{"ast":null,"code":"import { warn } from '../../../../utils/logging/warn.mjs';\n\"use strict\";\nfunction addBits(srcParts, parts, name) {\n  if (srcParts) {\n    for (const i in srcParts) {\n      const id = i.toLocaleLowerCase();\n      const part = parts[id];\n      if (part) {\n        let sanitisedPart = srcParts[i];\n        if (i === \"header\") {\n          sanitisedPart = sanitisedPart.replace(/@in\\s+[^;]+;\\s*/g, \"\").replace(/@out\\s+[^;]+;\\s*/g, \"\");\n        }\n        if (name) {\n          part.push(`//----${name}----//`);\n        }\n        part.push(sanitisedPart);\n      } else {\n        warn(`${i} placement hook does not exist in shader`);\n      }\n    }\n  }\n}\nexport { addBits };","map":{"version":3,"names":["addBits","srcParts","parts","name","i","id","toLocaleLowerCase","part","sanitisedPart","replace","push","warn"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/high-shader/compiler/utils/addBits.ts"],"sourcesContent":["import { warn } from '../../../../utils/logging/warn';\n\n/**\n * takes the HighFragment source parts and adds them to the hook hash\n * @param srcParts - the hash of hook arrays\n * @param parts - the code to inject into the hooks\n * @param name - optional the name of the part to add\n */\nexport function addBits(srcParts: Record<string, string>, parts: Record<string, string[]>, name?: string)\n{\n    if (srcParts)\n    {\n        for (const i in srcParts)\n        {\n            const id = i.toLocaleLowerCase();\n\n            const part = parts[id];\n\n            if (part)\n            {\n                let sanitisedPart = srcParts[i];\n\n                if (i === 'header')\n                {\n                    sanitisedPart = sanitisedPart\n                        .replace(/@in\\s+[^;]+;\\s*/g, '')\n                        .replace(/@out\\s+[^;]+;\\s*/g, '');\n                }\n\n                if (name)\n                {\n                    part.push(`//----${name}----//`);\n                }\n                part.push(sanitisedPart);\n            }\n\n            else\n            {\n                // #if _DEBUG\n                warn(`${i} placement hook does not exist in shader`);\n                // #endif\n            }\n        }\n    }\n}\n"],"mappings":";;AAQgB,SAAAA,QAAQC,QAAkC,EAAAC,KAAA,EAAiCC,IAC3F;EACI,IAAIF,QACJ;IACI,WAAWG,CAAA,IAAKH,QAChB;MACU,MAAAI,EAAA,GAAKD,CAAA,CAAEE,iBAAkB;MAEzB,MAAAC,IAAA,GAAOL,KAAA,CAAMG,EAAE;MAErB,IAAIE,IACJ;QACQ,IAAAC,aAAA,GAAgBP,QAAA,CAASG,CAAC;QAE9B,IAAIA,CAAA,KAAM,QACV;UACII,aAAA,GAAgBA,aAAA,CACXC,OAAQ,qBAAoB,EAAE,CAC9B,CAAAA,OAAA,CAAQ,qBAAqB,EAAE;QAAA;QAGxC,IAAIN,IACJ;UACSI,IAAA,CAAAG,IAAA,CAAc,SAAAP,IAAY;QAAA;QAEnCI,IAAA,CAAKG,IAAA,CAAKF,aAAa;MAAA,CAI3B;QAESG,IAAA,IAAGP,CAA2C;MAAA;IAEvD;EACJ;AAER","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}