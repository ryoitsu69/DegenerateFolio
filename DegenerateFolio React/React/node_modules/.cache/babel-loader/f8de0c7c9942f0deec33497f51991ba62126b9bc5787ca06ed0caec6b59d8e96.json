{"ast":null,"code":"import { isHex } from '@polkadot/util';\nimport { isEthereumChecksum } from './isChecksum.js';\nexport function isEthereumAddress(address) {\n  if (!address || address.length !== 42 || !isHex(address)) {\n    return false;\n  } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n    return true;\n  }\n  return isEthereumChecksum(address);\n}","map":{"version":3,"names":["isHex","isEthereumChecksum","isEthereumAddress","address","length","test"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/ethereum/isAddress.js"],"sourcesContent":["import { isHex } from '@polkadot/util';\nimport { isEthereumChecksum } from './isChecksum.js';\nexport function isEthereumAddress(address) {\n    if (!address || address.length !== 42 || !isHex(address)) {\n        return false;\n    }\n    else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n        return true;\n    }\n    return isEthereumChecksum(address);\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,OAAO,SAASC,iBAAiBA,CAACC,OAAO,EAAE;EACvC,IAAI,CAACA,OAAO,IAAIA,OAAO,CAACC,MAAM,KAAK,EAAE,IAAI,CAACJ,KAAK,CAACG,OAAO,CAAC,EAAE;IACtD,OAAO,KAAK;EAChB,CAAC,MACI,IAAI,qBAAqB,CAACE,IAAI,CAACF,OAAO,CAAC,IAAI,qBAAqB,CAACE,IAAI,CAACF,OAAO,CAAC,EAAE;IACjF,OAAO,IAAI;EACf;EACA,OAAOF,kBAAkB,CAACE,OAAO,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}