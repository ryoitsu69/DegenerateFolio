{"ast":null,"code":"import { getSupportedCompressedTextureFormats } from './getSupportedCompressedTextureFormats.mjs';\n\"use strict\";\nconst nonCompressedFormats = [\n// 8-bit formats\n\"r8unorm\", \"r8snorm\", \"r8uint\", \"r8sint\",\n// 16-bit formats\n\"r16uint\", \"r16sint\", \"r16float\", \"rg8unorm\", \"rg8snorm\", \"rg8uint\", \"rg8sint\",\n// 32-bit formats\n\"r32uint\", \"r32sint\", \"r32float\", \"rg16uint\", \"rg16sint\", \"rg16float\", \"rgba8unorm\", \"rgba8unorm-srgb\", \"rgba8snorm\", \"rgba8uint\", \"rgba8sint\", \"bgra8unorm\", \"bgra8unorm-srgb\",\n// Packed 32-bit formats\n\"rgb9e5ufloat\", \"rgb10a2unorm\", \"rg11b10ufloat\",\n// 64-bit formats\n\"rg32uint\", \"rg32sint\", \"rg32float\", \"rgba16uint\", \"rgba16sint\", \"rgba16float\",\n// 128-bit formats\n\"rgba32uint\", \"rgba32sint\", \"rgba32float\",\n// Depth/stencil formats\n\"stencil8\", \"depth16unorm\", \"depth24plus\", \"depth24plus-stencil8\", \"depth32float\",\n// \"depth32float-stencil8\" feature\n\"depth32float-stencil8\"];\nlet supportedTextureFormats;\nasync function getSupportedTextureFormats() {\n  if (supportedTextureFormats !== void 0) return supportedTextureFormats;\n  const compressedTextureFormats = await getSupportedCompressedTextureFormats();\n  supportedTextureFormats = [...nonCompressedFormats, ...compressedTextureFormats];\n  return supportedTextureFormats;\n}\nexport { getSupportedTextureFormats, nonCompressedFormats };","map":{"version":3,"names":["nonCompressedFormats","supportedTextureFormats","getSupportedTextureFormats","compressedTextureFormats","getSupportedCompressedTextureFormats"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/renderers/shared/texture/utils/getSupportedTextureFormats.ts"],"sourcesContent":["import { getSupportedCompressedTextureFormats } from './getSupportedCompressedTextureFormats';\n\nimport type { TEXTURE_FORMATS } from '../const';\n\nexport const nonCompressedFormats: TEXTURE_FORMATS[] = [\n    // 8-bit formats\n    'r8unorm',\n    'r8snorm',\n    'r8uint',\n    'r8sint',\n\n    // 16-bit formats\n    'r16uint',\n    'r16sint',\n    'r16float',\n    'rg8unorm',\n    'rg8snorm',\n    'rg8uint',\n    'rg8sint',\n\n    // 32-bit formats\n    'r32uint',\n    'r32sint',\n    'r32float',\n    'rg16uint',\n    'rg16sint',\n    'rg16float',\n    'rgba8unorm',\n    'rgba8unorm-srgb',\n    'rgba8snorm',\n    'rgba8uint',\n    'rgba8sint',\n    'bgra8unorm',\n    'bgra8unorm-srgb',\n    // Packed 32-bit formats\n    'rgb9e5ufloat',\n    'rgb10a2unorm',\n    'rg11b10ufloat',\n\n    // 64-bit formats\n    'rg32uint',\n    'rg32sint',\n    'rg32float',\n    'rgba16uint',\n    'rgba16sint',\n    'rgba16float',\n\n    // 128-bit formats\n    'rgba32uint',\n    'rgba32sint',\n    'rgba32float',\n\n    // Depth/stencil formats\n    'stencil8',\n    'depth16unorm',\n    'depth24plus',\n    'depth24plus-stencil8',\n    'depth32float',\n\n    // \"depth32float-stencil8\" feature\n    'depth32float-stencil8',\n];\n\nlet supportedTextureFormats: TEXTURE_FORMATS[];\n\nexport async function getSupportedTextureFormats(): Promise<TEXTURE_FORMATS[]>\n{\n    if (supportedTextureFormats !== undefined) return supportedTextureFormats;\n\n    const compressedTextureFormats = await getSupportedCompressedTextureFormats();\n\n    supportedTextureFormats = [\n        ...nonCompressedFormats,\n        ...compressedTextureFormats,\n    ];\n\n    return supportedTextureFormats;\n}\n\n"],"mappings":";;AAIO,MAAMA,oBAA0C;AAAA;AAEnD,WACA,WACA,UACA;AAAA;AAGA,WACA,WACA,YACA,YACA,YACA,WACA;AAAA;AAGA,WACA,WACA,YACA,YACA,YACA,aACA,cACA,mBACA,cACA,aACA,aACA,cACA;AAAA;AAEA,gBACA,gBACA;AAAA;AAGA,YACA,YACA,aACA,cACA,cACA;AAAA;AAGA,cACA,cACA;AAAA;AAGA,YACA,gBACA,eACA,wBACA;AAAA;AAGA,wBACJ;AAEA,IAAIC,uBAAA;AAEJ,eAAsBC,0BACtBA,CAAA;EACI,IAAID,uBAA4B,aAAkB,OAAAA,uBAAA;EAE5C,MAAAE,wBAAA,GAA2B,MAAMC,oCAAqC;EAElDH,uBAAA,IACtB,GAAGD,oBAAA,EACH,GAAGG,wBAAA,CACP;EAEO,OAAAF,uBAAA;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}