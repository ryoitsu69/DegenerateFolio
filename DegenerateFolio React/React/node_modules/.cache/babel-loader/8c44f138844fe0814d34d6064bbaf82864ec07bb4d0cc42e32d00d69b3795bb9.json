{"ast":null,"code":"import { map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nfunction parse([currentIndex, activeEra, activeEraStart, currentEra, validatorCount]) {\n  return {\n    activeEra,\n    activeEraStart,\n    currentEra,\n    currentIndex,\n    validatorCount\n  };\n}\nfunction queryStaking(api) {\n  return api.queryMulti([api.query.session.currentIndex, api.query.staking.activeEra, api.query.staking.currentEra, api.query.staking.validatorCount]).pipe(map(([currentIndex, activeOpt, currentEra, validatorCount]) => {\n    const {\n      index,\n      start\n    } = activeOpt.unwrapOrDefault();\n    return parse([currentIndex, index, start, currentEra.unwrapOrDefault(), validatorCount]);\n  }));\n}\nfunction querySession(api) {\n  return api.query.session.currentIndex().pipe(map(currentIndex => parse([currentIndex, api.registry.createType('EraIndex'), api.registry.createType('Option<Moment>'), api.registry.createType('EraIndex'), api.registry.createType('u32')])));\n}\nfunction empty(api) {\n  return of(parse([api.registry.createType('SessionIndex', 1), api.registry.createType('EraIndex'), api.registry.createType('Option<Moment>'), api.registry.createType('EraIndex'), api.registry.createType('u32')]));\n}\nexport function indexes(instanceId, api) {\n  return memo(instanceId, () => api.query.session ? api.query.staking ? queryStaking(api) : querySession(api) : empty(api));\n}","map":{"version":3,"names":["map","of","memo","parse","currentIndex","activeEra","activeEraStart","currentEra","validatorCount","queryStaking","api","queryMulti","query","session","staking","pipe","activeOpt","index","start","unwrapOrDefault","querySession","registry","createType","empty","indexes","instanceId"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/session/indexes.js"],"sourcesContent":["import { map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nfunction parse([currentIndex, activeEra, activeEraStart, currentEra, validatorCount]) {\n    return {\n        activeEra,\n        activeEraStart,\n        currentEra,\n        currentIndex,\n        validatorCount\n    };\n}\nfunction queryStaking(api) {\n    return api.queryMulti([\n        api.query.session.currentIndex,\n        api.query.staking.activeEra,\n        api.query.staking.currentEra,\n        api.query.staking.validatorCount\n    ]).pipe(map(([currentIndex, activeOpt, currentEra, validatorCount]) => {\n        const { index, start } = activeOpt.unwrapOrDefault();\n        return parse([\n            currentIndex,\n            index,\n            start,\n            currentEra.unwrapOrDefault(),\n            validatorCount\n        ]);\n    }));\n}\nfunction querySession(api) {\n    return api.query.session.currentIndex().pipe(map((currentIndex) => parse([\n        currentIndex,\n        api.registry.createType('EraIndex'),\n        api.registry.createType('Option<Moment>'),\n        api.registry.createType('EraIndex'),\n        api.registry.createType('u32')\n    ])));\n}\nfunction empty(api) {\n    return of(parse([\n        api.registry.createType('SessionIndex', 1),\n        api.registry.createType('EraIndex'),\n        api.registry.createType('Option<Moment>'),\n        api.registry.createType('EraIndex'),\n        api.registry.createType('u32')\n    ]));\n}\nexport function indexes(instanceId, api) {\n    return memo(instanceId, () => api.query.session\n        ? api.query.staking\n            ? queryStaking(api)\n            : querySession(api)\n        : empty(api));\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,EAAE,QAAQ,MAAM;AAC9B,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,KAAKA,CAAC,CAACC,YAAY,EAAEC,SAAS,EAAEC,cAAc,EAAEC,UAAU,EAAEC,cAAc,CAAC,EAAE;EAClF,OAAO;IACHH,SAAS;IACTC,cAAc;IACdC,UAAU;IACVH,YAAY;IACZI;EACJ,CAAC;AACL;AACA,SAASC,YAAYA,CAACC,GAAG,EAAE;EACvB,OAAOA,GAAG,CAACC,UAAU,CAAC,CAClBD,GAAG,CAACE,KAAK,CAACC,OAAO,CAACT,YAAY,EAC9BM,GAAG,CAACE,KAAK,CAACE,OAAO,CAACT,SAAS,EAC3BK,GAAG,CAACE,KAAK,CAACE,OAAO,CAACP,UAAU,EAC5BG,GAAG,CAACE,KAAK,CAACE,OAAO,CAACN,cAAc,CACnC,CAAC,CAACO,IAAI,CAACf,GAAG,CAAC,CAAC,CAACI,YAAY,EAAEY,SAAS,EAAET,UAAU,EAAEC,cAAc,CAAC,KAAK;IACnE,MAAM;MAAES,KAAK;MAAEC;IAAM,CAAC,GAAGF,SAAS,CAACG,eAAe,CAAC,CAAC;IACpD,OAAOhB,KAAK,CAAC,CACTC,YAAY,EACZa,KAAK,EACLC,KAAK,EACLX,UAAU,CAACY,eAAe,CAAC,CAAC,EAC5BX,cAAc,CACjB,CAAC;EACN,CAAC,CAAC,CAAC;AACP;AACA,SAASY,YAAYA,CAACV,GAAG,EAAE;EACvB,OAAOA,GAAG,CAACE,KAAK,CAACC,OAAO,CAACT,YAAY,CAAC,CAAC,CAACW,IAAI,CAACf,GAAG,CAAEI,YAAY,IAAKD,KAAK,CAAC,CACrEC,YAAY,EACZM,GAAG,CAACW,QAAQ,CAACC,UAAU,CAAC,UAAU,CAAC,EACnCZ,GAAG,CAACW,QAAQ,CAACC,UAAU,CAAC,gBAAgB,CAAC,EACzCZ,GAAG,CAACW,QAAQ,CAACC,UAAU,CAAC,UAAU,CAAC,EACnCZ,GAAG,CAACW,QAAQ,CAACC,UAAU,CAAC,KAAK,CAAC,CACjC,CAAC,CAAC,CAAC;AACR;AACA,SAASC,KAAKA,CAACb,GAAG,EAAE;EAChB,OAAOT,EAAE,CAACE,KAAK,CAAC,CACZO,GAAG,CAACW,QAAQ,CAACC,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC,EAC1CZ,GAAG,CAACW,QAAQ,CAACC,UAAU,CAAC,UAAU,CAAC,EACnCZ,GAAG,CAACW,QAAQ,CAACC,UAAU,CAAC,gBAAgB,CAAC,EACzCZ,GAAG,CAACW,QAAQ,CAACC,UAAU,CAAC,UAAU,CAAC,EACnCZ,GAAG,CAACW,QAAQ,CAACC,UAAU,CAAC,KAAK,CAAC,CACjC,CAAC,CAAC;AACP;AACA,OAAO,SAASE,OAAOA,CAACC,UAAU,EAAEf,GAAG,EAAE;EACrC,OAAOR,IAAI,CAACuB,UAAU,EAAE,MAAMf,GAAG,CAACE,KAAK,CAACC,OAAO,GACzCH,GAAG,CAACE,KAAK,CAACE,OAAO,GACbL,YAAY,CAACC,GAAG,CAAC,GACjBU,YAAY,CAACV,GAAG,CAAC,GACrBa,KAAK,CAACb,GAAG,CAAC,CAAC;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}