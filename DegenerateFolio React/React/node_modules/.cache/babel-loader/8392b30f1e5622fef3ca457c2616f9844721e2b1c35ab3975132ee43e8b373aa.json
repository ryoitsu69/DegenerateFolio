{"ast":null,"code":"import { DOMAdapter } from '../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { checkDataUrl } from '../../utils/checkDataUrl.mjs';\nimport { checkExtension } from '../../utils/checkExtension.mjs';\nimport { LoaderParserPriority } from './LoaderParser.mjs';\n\"use strict\";\nconst validJSONExtension = \".json\";\nconst validJSONMIME = \"application/json\";\nconst loadJson = {\n  extension: {\n    type: ExtensionType.LoadParser,\n    priority: LoaderParserPriority.Low\n  },\n  name: \"loadJson\",\n  test(url) {\n    return checkDataUrl(url, validJSONMIME) || checkExtension(url, validJSONExtension);\n  },\n  async load(url) {\n    const response = await DOMAdapter.get().fetch(url);\n    const json = await response.json();\n    return json;\n  }\n};\nexport { loadJson };","map":{"version":3,"names":["validJSONExtension","validJSONMIME","loadJson","extension","type","ExtensionType","LoadParser","priority","LoaderParserPriority","Low","name","test","url","checkDataUrl","checkExtension","load","response","DOMAdapter","get","fetch","json"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/assets/loader/parsers/loadJson.ts"],"sourcesContent":["import { DOMAdapter } from '../../../environment/adapter';\nimport { ExtensionType } from '../../../extensions/Extensions';\nimport { checkDataUrl } from '../../utils/checkDataUrl';\nimport { checkExtension } from '../../utils/checkExtension';\nimport { LoaderParserPriority } from './LoaderParser';\n\nimport type { LoaderParser } from './LoaderParser';\n\nconst validJSONExtension = '.json';\nconst validJSONMIME = 'application/json';\n\n/**\n * A simple loader plugin for loading json data\n * @memberof assets\n */\nexport const loadJson = {\n    extension: {\n        type: ExtensionType.LoadParser,\n        priority: LoaderParserPriority.Low,\n    },\n\n    name: 'loadJson',\n\n    test(url: string): boolean\n    {\n        return checkDataUrl(url, validJSONMIME) || checkExtension(url, validJSONExtension);\n    },\n\n    async load<T>(url: string): Promise<T>\n    {\n        const response = await DOMAdapter.get().fetch(url);\n\n        const json = await response.json();\n\n        return json as T;\n    },\n} as LoaderParser;\n"],"mappings":";;;;;;AAQA,MAAMA,kBAAqB;AAC3B,MAAMC,aAAgB;AAMf,MAAMC,QAAW;EACpBC,SAAW;IACPC,IAAA,EAAMC,aAAc,CAAAC,UAAA;IACpBC,QAAA,EAAUC,oBAAqB,CAAAC;EAAA,CACnC;EAEAC,IAAM;EAENC,KAAKC,GACL;IACI,OAAOC,YAAA,CAAaD,GAAK,EAAAX,aAAa,CAAK,IAAAa,cAAA,CAAeF,GAAA,EAAKZ,kBAAkB;EAAA,CACrF;EAEA,MAAMe,KAAQH,GACd;IACI,MAAMI,QAAA,GAAW,MAAMC,UAAA,CAAWC,GAAI,GAAEC,KAAA,CAAMP,GAAG;IAE3C,MAAAQ,IAAA,GAAO,MAAMJ,QAAA,CAASI,IAAK;IAE1B,OAAAA,IAAA;EAAA;AAEf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}