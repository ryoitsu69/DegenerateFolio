{"ast":null,"code":"import { map, of } from 'rxjs';\nimport { isFunction } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nfunction parseFlags(address, _ref) {\n  let [electionsMembers, councilMembers, technicalCommitteeMembers, societyMembers, sudoKey] = _ref;\n  const addrStr = address === null || address === void 0 ? void 0 : address.toString();\n  const isIncluded = id => id.toString() === addrStr;\n  return {\n    isCouncil: ((electionsMembers === null || electionsMembers === void 0 ? void 0 : electionsMembers.map(r => Array.isArray(r) ? r[0] : r.who)) || councilMembers || []).some(isIncluded),\n    isSociety: (societyMembers || []).some(isIncluded),\n    isSudo: (sudoKey === null || sudoKey === void 0 ? void 0 : sudoKey.toString()) === addrStr,\n    isTechCommittee: (technicalCommitteeMembers || []).some(isIncluded)\n  };\n}\nexport function _flags(instanceId, api) {\n  return memo(instanceId, () => {\n    var _ref2, _api$query$council, _api$query$technicalC, _api$query$society, _api$query$sudo;\n    const results = [undefined, [], [], [], undefined];\n    const calls = [(_ref2 = api.query.elections || api.query['phragmenElection'] || api.query['electionsPhragmen']) === null || _ref2 === void 0 ? void 0 : _ref2.members, (_api$query$council = api.query.council) === null || _api$query$council === void 0 ? void 0 : _api$query$council.members, (_api$query$technicalC = api.query.technicalCommittee) === null || _api$query$technicalC === void 0 ? void 0 : _api$query$technicalC.members, (_api$query$society = api.query.society) === null || _api$query$society === void 0 ? void 0 : _api$query$society.members, (_api$query$sudo = api.query.sudo) === null || _api$query$sudo === void 0 ? void 0 : _api$query$sudo.key];\n    const filtered = calls.filter(c => c);\n    if (!filtered.length) {\n      return of(results);\n    }\n    return api.queryMulti(filtered).pipe(map(values => {\n      let resultIndex = -1;\n      for (let i = 0, count = calls.length; i < count; i++) {\n        if (isFunction(calls[i])) {\n          results[i] = values[++resultIndex];\n        }\n      }\n      return results;\n    }));\n  });\n}\n/**\n * @name info\n * @description Returns account membership flags\n */\nexport function flags(instanceId, api) {\n  return memo(instanceId, address => api.derive.accounts._flags().pipe(map(r => parseFlags(address, r))));\n}","map":{"version":3,"names":["map","of","isFunction","memo","parseFlags","address","_ref","electionsMembers","councilMembers","technicalCommitteeMembers","societyMembers","sudoKey","addrStr","toString","isIncluded","id","isCouncil","r","Array","isArray","who","some","isSociety","isSudo","isTechCommittee","_flags","instanceId","api","_ref2","_api$query$council","_api$query$technicalC","_api$query$society","_api$query$sudo","results","undefined","calls","query","elections","members","council","technicalCommittee","society","sudo","key","filtered","filter","c","length","queryMulti","pipe","values","resultIndex","i","count","flags","derive","accounts"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/accounts/flags.js"],"sourcesContent":["import { map, of } from 'rxjs';\nimport { isFunction } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nfunction parseFlags(address, [electionsMembers, councilMembers, technicalCommitteeMembers, societyMembers, sudoKey]) {\n    const addrStr = address?.toString();\n    const isIncluded = (id) => id.toString() === addrStr;\n    return {\n        isCouncil: (electionsMembers?.map((r) => Array.isArray(r) ? r[0] : r.who) || councilMembers || []).some(isIncluded),\n        isSociety: (societyMembers || []).some(isIncluded),\n        isSudo: sudoKey?.toString() === addrStr,\n        isTechCommittee: (technicalCommitteeMembers || []).some(isIncluded)\n    };\n}\nexport function _flags(instanceId, api) {\n    return memo(instanceId, () => {\n        const results = [undefined, [], [], [], undefined];\n        const calls = [\n            (api.query.elections || api.query['phragmenElection'] || api.query['electionsPhragmen'])?.members,\n            api.query.council?.members,\n            api.query.technicalCommittee?.members,\n            api.query.society?.members,\n            api.query.sudo?.key\n        ];\n        const filtered = calls.filter((c) => c);\n        if (!filtered.length) {\n            return of(results);\n        }\n        return api.queryMulti(filtered).pipe(map((values) => {\n            let resultIndex = -1;\n            for (let i = 0, count = calls.length; i < count; i++) {\n                if (isFunction(calls[i])) {\n                    results[i] = values[++resultIndex];\n                }\n            }\n            return results;\n        }));\n    });\n}\n/**\n * @name info\n * @description Returns account membership flags\n */\nexport function flags(instanceId, api) {\n    return memo(instanceId, (address) => api.derive.accounts._flags().pipe(map((r) => parseFlags(address, r))));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}