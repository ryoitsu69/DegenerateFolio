{"ast":null,"code":"import { buildArc } from './buildArc.mjs';\n\"use strict\";\nfunction buildArcTo(points, x1, y1, x2, y2, radius) {\n  const fromX = points[points.length - 2];\n  const fromY = points[points.length - 1];\n  const a1 = fromY - y1;\n  const b1 = fromX - x1;\n  const a2 = y2 - y1;\n  const b2 = x2 - x1;\n  const mm = Math.abs(a1 * b2 - b1 * a2);\n  if (mm < 1e-8 || radius === 0) {\n    if (points[points.length - 2] !== x1 || points[points.length - 1] !== y1) {\n      points.push(x1, y1);\n    }\n    return;\n  }\n  const dd = a1 * a1 + b1 * b1;\n  const cc = a2 * a2 + b2 * b2;\n  const tt = a1 * a2 + b1 * b2;\n  const k1 = radius * Math.sqrt(dd) / mm;\n  const k2 = radius * Math.sqrt(cc) / mm;\n  const j1 = k1 * tt / dd;\n  const j2 = k2 * tt / cc;\n  const cx = k1 * b2 + k2 * b1;\n  const cy = k1 * a2 + k2 * a1;\n  const px = b1 * (k2 + j1);\n  const py = a1 * (k2 + j1);\n  const qx = b2 * (k1 + j2);\n  const qy = a2 * (k1 + j2);\n  const startAngle = Math.atan2(py - cy, px - cx);\n  const endAngle = Math.atan2(qy - cy, qx - cx);\n  buildArc(points, cx + x1, cy + y1, radius, startAngle, endAngle, b1 * a2 > b2 * a1);\n}\nexport { buildArcTo };","map":{"version":3,"names":["buildArcTo","points","x1","y1","x2","y2","radius","fromX","length","fromY","a1","b1","a2","b2","mm","Math","abs","push","dd","cc","tt","k1","sqrt","k2","j1","j2","cx","cy","px","py","qx","qy","startAngle","atan2","endAngle","buildArc"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildArcTo.ts"],"sourcesContent":["import { buildArc } from './buildArc';\n\n/**\n * The arcTo() method creates an arc/curve between two tangents on the canvas.\n *\n * \"borrowed\" from https://code.google.com/p/fxcanvas/ - thanks google!\n * @param points\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n * @param radius\n */\nexport function buildArcTo(\n    points: number[],\n    x1: number, y1: number,\n    x2: number, y2: number,\n    radius: number,\n): void\n{\n    const fromX = points[points.length - 2];\n    const fromY = points[points.length - 1];\n\n    const a1 = fromY - y1;\n    const b1 = fromX - x1;\n    const a2 = y2 - y1;\n    const b2 = x2 - x1;\n    const mm = Math.abs((a1 * b2) - (b1 * a2));\n\n    if (mm < 1.0e-8 || radius === 0)\n    {\n        if (points[points.length - 2] !== x1 || points[points.length - 1] !== y1)\n        {\n            points.push(x1, y1);\n        }\n\n        return;\n    }\n\n    const dd = (a1 * a1) + (b1 * b1);\n    const cc = (a2 * a2) + (b2 * b2);\n    const tt = (a1 * a2) + (b1 * b2);\n    const k1 = radius * Math.sqrt(dd) / mm;\n    const k2 = radius * Math.sqrt(cc) / mm;\n    const j1 = k1 * tt / dd;\n    const j2 = k2 * tt / cc;\n    const cx = (k1 * b2) + (k2 * b1);\n    const cy = (k1 * a2) + (k2 * a1);\n    const px = b1 * (k2 + j1);\n    const py = a1 * (k2 + j1);\n    const qx = b2 * (k1 + j2);\n    const qy = a2 * (k1 + j2);\n    const startAngle = Math.atan2(py - cy, px - cx);\n    const endAngle = Math.atan2(qy - cy, qx - cx);\n\n    buildArc(points,\n        (cx + x1),\n        (cy + y1),\n        radius,\n        startAngle,\n        endAngle,\n        b1 * a2 > b2 * a1\n    );\n}\n"],"mappings":";;AAaO,SAASA,WACZC,MACA,EAAAC,EAAA,EAAYC,EACZ,EAAAC,EAAA,EAAYC,EAAA,EACZC,MAEJ;EACI,MAAMC,KAAQ,GAAAN,MAAA,CAAOA,MAAO,CAAAO,MAAA,GAAS,CAAC;EACtC,MAAMC,KAAQ,GAAAR,MAAA,CAAOA,MAAO,CAAAO,MAAA,GAAS,CAAC;EAEtC,MAAME,EAAA,GAAKD,KAAQ,GAAAN,EAAA;EACnB,MAAMQ,EAAA,GAAKJ,KAAQ,GAAAL,EAAA;EACnB,MAAMU,EAAA,GAAKP,EAAK,GAAAF,EAAA;EAChB,MAAMU,EAAA,GAAKT,EAAK,GAAAF,EAAA;EAChB,MAAMY,EAAA,GAAKC,IAAK,CAAAC,GAAA,CAAKN,EAAK,GAAAG,EAAA,GAAOF,EAAA,GAAKC,EAAG;EAErC,IAAAE,EAAA,GAAK,IAAU,IAAAR,MAAA,KAAW,CAC9B;IACQ,IAAAL,MAAA,CAAOA,MAAO,CAAAO,MAAA,GAAS,CAAC,MAAMN,EAAM,IAAAD,MAAA,CAAOA,MAAO,CAAAO,MAAA,GAAS,CAAC,MAAML,EACtE;MACWF,MAAA,CAAAgB,IAAA,CAAKf,EAAA,EAAIC,EAAE;IAAA;IAGtB;EAAA;EAGE,MAAAe,EAAA,GAAMR,EAAK,GAAAA,EAAA,GAAOC,EAAK,GAAAA,EAAA;EACvB,MAAAQ,EAAA,GAAMP,EAAK,GAAAA,EAAA,GAAOC,EAAK,GAAAA,EAAA;EACvB,MAAAO,EAAA,GAAMV,EAAK,GAAAE,EAAA,GAAOD,EAAK,GAAAE,EAAA;EAC7B,MAAMQ,EAAK,GAAAf,MAAA,GAASS,IAAK,CAAAO,IAAA,CAAKJ,EAAE,CAAI,GAAAJ,EAAA;EACpC,MAAMS,EAAK,GAAAjB,MAAA,GAASS,IAAK,CAAAO,IAAA,CAAKH,EAAE,CAAI,GAAAL,EAAA;EAC9B,MAAAU,EAAA,GAAKH,EAAA,GAAKD,EAAK,GAAAF,EAAA;EACf,MAAAO,EAAA,GAAKF,EAAA,GAAKH,EAAK,GAAAD,EAAA;EACf,MAAAO,EAAA,GAAML,EAAK,GAAAR,EAAA,GAAOU,EAAK,GAAAZ,EAAA;EACvB,MAAAgB,EAAA,GAAMN,EAAK,GAAAT,EAAA,GAAOW,EAAK,GAAAb,EAAA;EACvB,MAAAkB,EAAA,GAAKjB,EAAA,IAAMY,EAAK,GAAAC,EAAA;EAChB,MAAAK,EAAA,GAAKnB,EAAA,IAAMa,EAAK,GAAAC,EAAA;EAChB,MAAAM,EAAA,GAAKjB,EAAA,IAAMQ,EAAK,GAAAI,EAAA;EAChB,MAAAM,EAAA,GAAKnB,EAAA,IAAMS,EAAK,GAAAI,EAAA;EACtB,MAAMO,UAAA,GAAajB,IAAK,CAAAkB,KAAA,CAAMJ,EAAK,GAAAF,EAAA,EAAIC,EAAA,GAAKF,EAAE;EAC9C,MAAMQ,QAAA,GAAWnB,IAAK,CAAAkB,KAAA,CAAMF,EAAK,GAAAJ,EAAA,EAAIG,EAAA,GAAKJ,EAAE;EAE5CS,QAAA,CAASlC,MAAA,EACJyB,EAAK,GAAAxB,EAAA,EACLyB,EAAK,GAAAxB,EAAA,EACNG,MAAA,EACA0B,UAAA,EACAE,QAAA,EACAvB,EAAA,GAAKC,EAAA,GAAKC,EAAK,GAAAH,EAAA,CACnB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}