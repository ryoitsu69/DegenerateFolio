{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryClientImpl = exports.QueryNextSequenceReceiveResponse = exports.QueryNextSequenceReceiveRequest = exports.QueryUnreceivedAcksResponse = exports.QueryUnreceivedAcksRequest = exports.QueryUnreceivedPacketsResponse = exports.QueryUnreceivedPacketsRequest = exports.QueryPacketAcknowledgementsResponse = exports.QueryPacketAcknowledgementsRequest = exports.QueryPacketAcknowledgementResponse = exports.QueryPacketAcknowledgementRequest = exports.QueryPacketReceiptResponse = exports.QueryPacketReceiptRequest = exports.QueryPacketCommitmentsResponse = exports.QueryPacketCommitmentsRequest = exports.QueryPacketCommitmentResponse = exports.QueryPacketCommitmentRequest = exports.QueryChannelConsensusStateResponse = exports.QueryChannelConsensusStateRequest = exports.QueryChannelClientStateResponse = exports.QueryChannelClientStateRequest = exports.QueryConnectionChannelsResponse = exports.QueryConnectionChannelsRequest = exports.QueryChannelsResponse = exports.QueryChannelsRequest = exports.QueryChannelResponse = exports.QueryChannelRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst pagination_1 = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nconst channel_1 = require(\"./channel\");\nconst client_1 = require(\"../../client/v1/client\");\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.core.channel.v1\";\nfunction createBaseQueryChannelRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\"\n  };\n}\nexports.QueryChannelRequest = {\n  typeUrl: \"/ibc.core.channel.v1.QueryChannelRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryChannelRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryChannelRequest();\n    if ((0, helpers_1.isSet)(object.portId)) obj.portId = String(object.portId);\n    if ((0, helpers_1.isSet)(object.channelId)) obj.channelId = String(object.channelId);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.channelId !== undefined && (obj.channelId = message.channelId);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryChannelRequest();\n    message.portId = object.portId ?? \"\";\n    message.channelId = object.channelId ?? \"\";\n    return message;\n  }\n};\nfunction createBaseQueryChannelResponse() {\n  return {\n    channel: undefined,\n    proof: new Uint8Array(),\n    proofHeight: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryChannelResponse = {\n  typeUrl: \"/ibc.core.channel.v1.QueryChannelResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.channel !== undefined) {\n      channel_1.Channel.encode(message.channel, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryChannelResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.channel = channel_1.Channel.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryChannelResponse();\n    if ((0, helpers_1.isSet)(object.channel)) obj.channel = channel_1.Channel.fromJSON(object.channel);\n    if ((0, helpers_1.isSet)(object.proof)) obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n    if ((0, helpers_1.isSet)(object.proofHeight)) obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.channel !== undefined && (obj.channel = message.channel ? channel_1.Channel.toJSON(message.channel) : undefined);\n    message.proof !== undefined && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryChannelResponse();\n    if (object.channel !== undefined && object.channel !== null) {\n      message.channel = channel_1.Channel.fromPartial(object.channel);\n    }\n    message.proof = object.proof ?? new Uint8Array();\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryChannelsRequest() {\n  return {\n    pagination: undefined\n  };\n}\nexports.QueryChannelsRequest = {\n  typeUrl: \"/ibc.core.channel.v1.QueryChannelsRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryChannelsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryChannelsRequest();\n    if ((0, helpers_1.isSet)(object.pagination)) obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryChannelsRequest();\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryChannelsResponse() {\n  return {\n    channels: [],\n    pagination: undefined,\n    height: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryChannelsResponse = {\n  typeUrl: \"/ibc.core.channel.v1.QueryChannelsResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    for (const v of message.channels) {\n      channel_1.IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryChannelsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.channels.push(channel_1.IdentifiedChannel.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryChannelsResponse();\n    if (Array.isArray(object?.channels)) obj.channels = object.channels.map(e => channel_1.IdentifiedChannel.fromJSON(e));\n    if ((0, helpers_1.isSet)(object.pagination)) obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n    if ((0, helpers_1.isSet)(object.height)) obj.height = client_1.Height.fromJSON(object.height);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.channels) {\n      obj.channels = message.channels.map(e => e ? channel_1.IdentifiedChannel.toJSON(e) : undefined);\n    } else {\n      obj.channels = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryChannelsResponse();\n    message.channels = object.channels?.map(e => channel_1.IdentifiedChannel.fromPartial(e)) || [];\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n    }\n    if (object.height !== undefined && object.height !== null) {\n      message.height = client_1.Height.fromPartial(object.height);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryConnectionChannelsRequest() {\n  return {\n    connection: \"\",\n    pagination: undefined\n  };\n}\nexports.QueryConnectionChannelsRequest = {\n  typeUrl: \"/ibc.core.channel.v1.QueryConnectionChannelsRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.connection !== \"\") {\n      writer.uint32(10).string(message.connection);\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionChannelsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connection = reader.string();\n          break;\n        case 2:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryConnectionChannelsRequest();\n    if ((0, helpers_1.isSet)(object.connection)) obj.connection = String(object.connection);\n    if ((0, helpers_1.isSet)(object.pagination)) obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connection !== undefined && (obj.connection = message.connection);\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryConnectionChannelsRequest();\n    message.connection = object.connection ?? \"\";\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryConnectionChannelsResponse() {\n  return {\n    channels: [],\n    pagination: undefined,\n    height: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryConnectionChannelsResponse = {\n  typeUrl: \"/ibc.core.channel.v1.QueryConnectionChannelsResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    for (const v of message.channels) {\n      channel_1.IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionChannelsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.channels.push(channel_1.IdentifiedChannel.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryConnectionChannelsResponse();\n    if (Array.isArray(object?.channels)) obj.channels = object.channels.map(e => channel_1.IdentifiedChannel.fromJSON(e));\n    if ((0, helpers_1.isSet)(object.pagination)) obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n    if ((0, helpers_1.isSet)(object.height)) obj.height = client_1.Height.fromJSON(object.height);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.channels) {\n      obj.channels = message.channels.map(e => e ? channel_1.IdentifiedChannel.toJSON(e) : undefined);\n    } else {\n      obj.channels = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryConnectionChannelsResponse();\n    message.channels = object.channels?.map(e => channel_1.IdentifiedChannel.fromPartial(e)) || [];\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n    }\n    if (object.height !== undefined && object.height !== null) {\n      message.height = client_1.Height.fromPartial(object.height);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryChannelClientStateRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\"\n  };\n}\nexports.QueryChannelClientStateRequest = {\n  typeUrl: \"/ibc.core.channel.v1.QueryChannelClientStateRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryChannelClientStateRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryChannelClientStateRequest();\n    if ((0, helpers_1.isSet)(object.portId)) obj.portId = String(object.portId);\n    if ((0, helpers_1.isSet)(object.channelId)) obj.channelId = String(object.channelId);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.channelId !== undefined && (obj.channelId = message.channelId);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryChannelClientStateRequest();\n    message.portId = object.portId ?? \"\";\n    message.channelId = object.channelId ?? \"\";\n    return message;\n  }\n};\nfunction createBaseQueryChannelClientStateResponse() {\n  return {\n    identifiedClientState: undefined,\n    proof: new Uint8Array(),\n    proofHeight: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryChannelClientStateResponse = {\n  typeUrl: \"/ibc.core.channel.v1.QueryChannelClientStateResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.identifiedClientState !== undefined) {\n      client_1.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryChannelClientStateResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.identifiedClientState = client_1.IdentifiedClientState.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryChannelClientStateResponse();\n    if ((0, helpers_1.isSet)(object.identifiedClientState)) obj.identifiedClientState = client_1.IdentifiedClientState.fromJSON(object.identifiedClientState);\n    if ((0, helpers_1.isSet)(object.proof)) obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n    if ((0, helpers_1.isSet)(object.proofHeight)) obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.identifiedClientState !== undefined && (obj.identifiedClientState = message.identifiedClientState ? client_1.IdentifiedClientState.toJSON(message.identifiedClientState) : undefined);\n    message.proof !== undefined && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryChannelClientStateResponse();\n    if (object.identifiedClientState !== undefined && object.identifiedClientState !== null) {\n      message.identifiedClientState = client_1.IdentifiedClientState.fromPartial(object.identifiedClientState);\n    }\n    message.proof = object.proof ?? new Uint8Array();\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryChannelConsensusStateRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    revisionNumber: BigInt(0),\n    revisionHeight: BigInt(0)\n  };\n}\nexports.QueryChannelConsensusStateRequest = {\n  typeUrl: \"/ibc.core.channel.v1.QueryChannelConsensusStateRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.revisionNumber !== BigInt(0)) {\n      writer.uint32(24).uint64(message.revisionNumber);\n    }\n    if (message.revisionHeight !== BigInt(0)) {\n      writer.uint32(32).uint64(message.revisionHeight);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryChannelConsensusStateRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.revisionNumber = reader.uint64();\n          break;\n        case 4:\n          message.revisionHeight = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryChannelConsensusStateRequest();\n    if ((0, helpers_1.isSet)(object.portId)) obj.portId = String(object.portId);\n    if ((0, helpers_1.isSet)(object.channelId)) obj.channelId = String(object.channelId);\n    if ((0, helpers_1.isSet)(object.revisionNumber)) obj.revisionNumber = BigInt(object.revisionNumber.toString());\n    if ((0, helpers_1.isSet)(object.revisionHeight)) obj.revisionHeight = BigInt(object.revisionHeight.toString());\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.channelId !== undefined && (obj.channelId = message.channelId);\n    message.revisionNumber !== undefined && (obj.revisionNumber = (message.revisionNumber || BigInt(0)).toString());\n    message.revisionHeight !== undefined && (obj.revisionHeight = (message.revisionHeight || BigInt(0)).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryChannelConsensusStateRequest();\n    message.portId = object.portId ?? \"\";\n    message.channelId = object.channelId ?? \"\";\n    if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n      message.revisionNumber = BigInt(object.revisionNumber.toString());\n    }\n    if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n      message.revisionHeight = BigInt(object.revisionHeight.toString());\n    }\n    return message;\n  }\n};\nfunction createBaseQueryChannelConsensusStateResponse() {\n  return {\n    consensusState: undefined,\n    clientId: \"\",\n    proof: new Uint8Array(),\n    proofHeight: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryChannelConsensusStateResponse = {\n  typeUrl: \"/ibc.core.channel.v1.QueryChannelConsensusStateResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.consensusState !== undefined) {\n      any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.clientId !== \"\") {\n      writer.uint32(18).string(message.clientId);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(26).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryChannelConsensusStateResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.clientId = reader.string();\n          break;\n        case 3:\n          message.proof = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryChannelConsensusStateResponse();\n    if ((0, helpers_1.isSet)(object.consensusState)) obj.consensusState = any_1.Any.fromJSON(object.consensusState);\n    if ((0, helpers_1.isSet)(object.clientId)) obj.clientId = String(object.clientId);\n    if ((0, helpers_1.isSet)(object.proof)) obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n    if ((0, helpers_1.isSet)(object.proofHeight)) obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.consensusState !== undefined && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : undefined);\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.proof !== undefined && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryChannelConsensusStateResponse();\n    if (object.consensusState !== undefined && object.consensusState !== null) {\n      message.consensusState = any_1.Any.fromPartial(object.consensusState);\n    }\n    message.clientId = object.clientId ?? \"\";\n    message.proof = object.proof ?? new Uint8Array();\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryPacketCommitmentRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    sequence: BigInt(0)\n  };\n}\nexports.QueryPacketCommitmentRequest = {\n  typeUrl: \"/ibc.core.channel.v1.QueryPacketCommitmentRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.sequence !== BigInt(0)) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryPacketCommitmentRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryPacketCommitmentRequest();\n    if ((0, helpers_1.isSet)(object.portId)) obj.portId = String(object.portId);\n    if ((0, helpers_1.isSet)(object.channelId)) obj.channelId = String(object.channelId);\n    if ((0, helpers_1.isSet)(object.sequence)) obj.sequence = BigInt(object.sequence.toString());\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.channelId !== undefined && (obj.channelId = message.channelId);\n    message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryPacketCommitmentRequest();\n    message.portId = object.portId ?? \"\";\n    message.channelId = object.channelId ?? \"\";\n    if (object.sequence !== undefined && object.sequence !== null) {\n      message.sequence = BigInt(object.sequence.toString());\n    }\n    return message;\n  }\n};\nfunction createBaseQueryPacketCommitmentResponse() {\n  return {\n    commitment: new Uint8Array(),\n    proof: new Uint8Array(),\n    proofHeight: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryPacketCommitmentResponse = {\n  typeUrl: \"/ibc.core.channel.v1.QueryPacketCommitmentResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.commitment.length !== 0) {\n      writer.uint32(10).bytes(message.commitment);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryPacketCommitmentResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.commitment = reader.bytes();\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryPacketCommitmentResponse();\n    if ((0, helpers_1.isSet)(object.commitment)) obj.commitment = (0, helpers_1.bytesFromBase64)(object.commitment);\n    if ((0, helpers_1.isSet)(object.proof)) obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n    if ((0, helpers_1.isSet)(object.proofHeight)) obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.commitment !== undefined && (obj.commitment = (0, helpers_1.base64FromBytes)(message.commitment !== undefined ? message.commitment : new Uint8Array()));\n    message.proof !== undefined && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryPacketCommitmentResponse();\n    message.commitment = object.commitment ?? new Uint8Array();\n    message.proof = object.proof ?? new Uint8Array();\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryPacketCommitmentsRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    pagination: undefined\n  };\n}\nexports.QueryPacketCommitmentsRequest = {\n  typeUrl: \"/ibc.core.channel.v1.QueryPacketCommitmentsRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryPacketCommitmentsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryPacketCommitmentsRequest();\n    if ((0, helpers_1.isSet)(object.portId)) obj.portId = String(object.portId);\n    if ((0, helpers_1.isSet)(object.channelId)) obj.channelId = String(object.channelId);\n    if ((0, helpers_1.isSet)(object.pagination)) obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.channelId !== undefined && (obj.channelId = message.channelId);\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryPacketCommitmentsRequest();\n    message.portId = object.portId ?? \"\";\n    message.channelId = object.channelId ?? \"\";\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryPacketCommitmentsResponse() {\n  return {\n    commitments: [],\n    pagination: undefined,\n    height: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryPacketCommitmentsResponse = {\n  typeUrl: \"/ibc.core.channel.v1.QueryPacketCommitmentsResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    for (const v of message.commitments) {\n      channel_1.PacketState.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryPacketCommitmentsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.commitments.push(channel_1.PacketState.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryPacketCommitmentsResponse();\n    if (Array.isArray(object?.commitments)) obj.commitments = object.commitments.map(e => channel_1.PacketState.fromJSON(e));\n    if ((0, helpers_1.isSet)(object.pagination)) obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n    if ((0, helpers_1.isSet)(object.height)) obj.height = client_1.Height.fromJSON(object.height);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.commitments) {\n      obj.commitments = message.commitments.map(e => e ? channel_1.PacketState.toJSON(e) : undefined);\n    } else {\n      obj.commitments = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryPacketCommitmentsResponse();\n    message.commitments = object.commitments?.map(e => channel_1.PacketState.fromPartial(e)) || [];\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n    }\n    if (object.height !== undefined && object.height !== null) {\n      message.height = client_1.Height.fromPartial(object.height);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryPacketReceiptRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    sequence: BigInt(0)\n  };\n}\nexports.QueryPacketReceiptRequest = {\n  typeUrl: \"/ibc.core.channel.v1.QueryPacketReceiptRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.sequence !== BigInt(0)) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryPacketReceiptRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryPacketReceiptRequest();\n    if ((0, helpers_1.isSet)(object.portId)) obj.portId = String(object.portId);\n    if ((0, helpers_1.isSet)(object.channelId)) obj.channelId = String(object.channelId);\n    if ((0, helpers_1.isSet)(object.sequence)) obj.sequence = BigInt(object.sequence.toString());\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.channelId !== undefined && (obj.channelId = message.channelId);\n    message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryPacketReceiptRequest();\n    message.portId = object.portId ?? \"\";\n    message.channelId = object.channelId ?? \"\";\n    if (object.sequence !== undefined && object.sequence !== null) {\n      message.sequence = BigInt(object.sequence.toString());\n    }\n    return message;\n  }\n};\nfunction createBaseQueryPacketReceiptResponse() {\n  return {\n    received: false,\n    proof: new Uint8Array(),\n    proofHeight: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryPacketReceiptResponse = {\n  typeUrl: \"/ibc.core.channel.v1.QueryPacketReceiptResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.received === true) {\n      writer.uint32(16).bool(message.received);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(26).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryPacketReceiptResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2:\n          message.received = reader.bool();\n          break;\n        case 3:\n          message.proof = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryPacketReceiptResponse();\n    if ((0, helpers_1.isSet)(object.received)) obj.received = Boolean(object.received);\n    if ((0, helpers_1.isSet)(object.proof)) obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n    if ((0, helpers_1.isSet)(object.proofHeight)) obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.received !== undefined && (obj.received = message.received);\n    message.proof !== undefined && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryPacketReceiptResponse();\n    message.received = object.received ?? false;\n    message.proof = object.proof ?? new Uint8Array();\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryPacketAcknowledgementRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    sequence: BigInt(0)\n  };\n}\nexports.QueryPacketAcknowledgementRequest = {\n  typeUrl: \"/ibc.core.channel.v1.QueryPacketAcknowledgementRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.sequence !== BigInt(0)) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryPacketAcknowledgementRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.sequence = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryPacketAcknowledgementRequest();\n    if ((0, helpers_1.isSet)(object.portId)) obj.portId = String(object.portId);\n    if ((0, helpers_1.isSet)(object.channelId)) obj.channelId = String(object.channelId);\n    if ((0, helpers_1.isSet)(object.sequence)) obj.sequence = BigInt(object.sequence.toString());\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.channelId !== undefined && (obj.channelId = message.channelId);\n    message.sequence !== undefined && (obj.sequence = (message.sequence || BigInt(0)).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryPacketAcknowledgementRequest();\n    message.portId = object.portId ?? \"\";\n    message.channelId = object.channelId ?? \"\";\n    if (object.sequence !== undefined && object.sequence !== null) {\n      message.sequence = BigInt(object.sequence.toString());\n    }\n    return message;\n  }\n};\nfunction createBaseQueryPacketAcknowledgementResponse() {\n  return {\n    acknowledgement: new Uint8Array(),\n    proof: new Uint8Array(),\n    proofHeight: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryPacketAcknowledgementResponse = {\n  typeUrl: \"/ibc.core.channel.v1.QueryPacketAcknowledgementResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.acknowledgement.length !== 0) {\n      writer.uint32(10).bytes(message.acknowledgement);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryPacketAcknowledgementResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.acknowledgement = reader.bytes();\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryPacketAcknowledgementResponse();\n    if ((0, helpers_1.isSet)(object.acknowledgement)) obj.acknowledgement = (0, helpers_1.bytesFromBase64)(object.acknowledgement);\n    if ((0, helpers_1.isSet)(object.proof)) obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n    if ((0, helpers_1.isSet)(object.proofHeight)) obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.acknowledgement !== undefined && (obj.acknowledgement = (0, helpers_1.base64FromBytes)(message.acknowledgement !== undefined ? message.acknowledgement : new Uint8Array()));\n    message.proof !== undefined && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryPacketAcknowledgementResponse();\n    message.acknowledgement = object.acknowledgement ?? new Uint8Array();\n    message.proof = object.proof ?? new Uint8Array();\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryPacketAcknowledgementsRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    pagination: undefined,\n    packetCommitmentSequences: []\n  };\n}\nexports.QueryPacketAcknowledgementsRequest = {\n  typeUrl: \"/ibc.core.channel.v1.QueryPacketAcknowledgementsRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n    }\n    writer.uint32(34).fork();\n    for (const v of message.packetCommitmentSequences) {\n      writer.uint64(v);\n    }\n    writer.ldelim();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryPacketAcknowledgementsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        case 4:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.packetCommitmentSequences.push(reader.uint64());\n            }\n          } else {\n            message.packetCommitmentSequences.push(reader.uint64());\n          }\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryPacketAcknowledgementsRequest();\n    if ((0, helpers_1.isSet)(object.portId)) obj.portId = String(object.portId);\n    if ((0, helpers_1.isSet)(object.channelId)) obj.channelId = String(object.channelId);\n    if ((0, helpers_1.isSet)(object.pagination)) obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n    if (Array.isArray(object?.packetCommitmentSequences)) obj.packetCommitmentSequences = object.packetCommitmentSequences.map(e => BigInt(e.toString()));\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.channelId !== undefined && (obj.channelId = message.channelId);\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    if (message.packetCommitmentSequences) {\n      obj.packetCommitmentSequences = message.packetCommitmentSequences.map(e => (e || BigInt(0)).toString());\n    } else {\n      obj.packetCommitmentSequences = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryPacketAcknowledgementsRequest();\n    message.portId = object.portId ?? \"\";\n    message.channelId = object.channelId ?? \"\";\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n    }\n    message.packetCommitmentSequences = object.packetCommitmentSequences?.map(e => BigInt(e.toString())) || [];\n    return message;\n  }\n};\nfunction createBaseQueryPacketAcknowledgementsResponse() {\n  return {\n    acknowledgements: [],\n    pagination: undefined,\n    height: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryPacketAcknowledgementsResponse = {\n  typeUrl: \"/ibc.core.channel.v1.QueryPacketAcknowledgementsResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    for (const v of message.acknowledgements) {\n      channel_1.PacketState.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryPacketAcknowledgementsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.acknowledgements.push(channel_1.PacketState.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryPacketAcknowledgementsResponse();\n    if (Array.isArray(object?.acknowledgements)) obj.acknowledgements = object.acknowledgements.map(e => channel_1.PacketState.fromJSON(e));\n    if ((0, helpers_1.isSet)(object.pagination)) obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n    if ((0, helpers_1.isSet)(object.height)) obj.height = client_1.Height.fromJSON(object.height);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.acknowledgements) {\n      obj.acknowledgements = message.acknowledgements.map(e => e ? channel_1.PacketState.toJSON(e) : undefined);\n    } else {\n      obj.acknowledgements = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryPacketAcknowledgementsResponse();\n    message.acknowledgements = object.acknowledgements?.map(e => channel_1.PacketState.fromPartial(e)) || [];\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n    }\n    if (object.height !== undefined && object.height !== null) {\n      message.height = client_1.Height.fromPartial(object.height);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryUnreceivedPacketsRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    packetCommitmentSequences: []\n  };\n}\nexports.QueryUnreceivedPacketsRequest = {\n  typeUrl: \"/ibc.core.channel.v1.QueryUnreceivedPacketsRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    writer.uint32(26).fork();\n    for (const v of message.packetCommitmentSequences) {\n      writer.uint64(v);\n    }\n    writer.ldelim();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryUnreceivedPacketsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.packetCommitmentSequences.push(reader.uint64());\n            }\n          } else {\n            message.packetCommitmentSequences.push(reader.uint64());\n          }\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryUnreceivedPacketsRequest();\n    if ((0, helpers_1.isSet)(object.portId)) obj.portId = String(object.portId);\n    if ((0, helpers_1.isSet)(object.channelId)) obj.channelId = String(object.channelId);\n    if (Array.isArray(object?.packetCommitmentSequences)) obj.packetCommitmentSequences = object.packetCommitmentSequences.map(e => BigInt(e.toString()));\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.channelId !== undefined && (obj.channelId = message.channelId);\n    if (message.packetCommitmentSequences) {\n      obj.packetCommitmentSequences = message.packetCommitmentSequences.map(e => (e || BigInt(0)).toString());\n    } else {\n      obj.packetCommitmentSequences = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryUnreceivedPacketsRequest();\n    message.portId = object.portId ?? \"\";\n    message.channelId = object.channelId ?? \"\";\n    message.packetCommitmentSequences = object.packetCommitmentSequences?.map(e => BigInt(e.toString())) || [];\n    return message;\n  }\n};\nfunction createBaseQueryUnreceivedPacketsResponse() {\n  return {\n    sequences: [],\n    height: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryUnreceivedPacketsResponse = {\n  typeUrl: \"/ibc.core.channel.v1.QueryUnreceivedPacketsResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    writer.uint32(10).fork();\n    for (const v of message.sequences) {\n      writer.uint64(v);\n    }\n    writer.ldelim();\n    if (message.height !== undefined) {\n      client_1.Height.encode(message.height, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryUnreceivedPacketsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.sequences.push(reader.uint64());\n            }\n          } else {\n            message.sequences.push(reader.uint64());\n          }\n          break;\n        case 2:\n          message.height = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryUnreceivedPacketsResponse();\n    if (Array.isArray(object?.sequences)) obj.sequences = object.sequences.map(e => BigInt(e.toString()));\n    if ((0, helpers_1.isSet)(object.height)) obj.height = client_1.Height.fromJSON(object.height);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.sequences) {\n      obj.sequences = message.sequences.map(e => (e || BigInt(0)).toString());\n    } else {\n      obj.sequences = [];\n    }\n    message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryUnreceivedPacketsResponse();\n    message.sequences = object.sequences?.map(e => BigInt(e.toString())) || [];\n    if (object.height !== undefined && object.height !== null) {\n      message.height = client_1.Height.fromPartial(object.height);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryUnreceivedAcksRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\",\n    packetAckSequences: []\n  };\n}\nexports.QueryUnreceivedAcksRequest = {\n  typeUrl: \"/ibc.core.channel.v1.QueryUnreceivedAcksRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    writer.uint32(26).fork();\n    for (const v of message.packetAckSequences) {\n      writer.uint64(v);\n    }\n    writer.ldelim();\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryUnreceivedAcksRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        case 3:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.packetAckSequences.push(reader.uint64());\n            }\n          } else {\n            message.packetAckSequences.push(reader.uint64());\n          }\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryUnreceivedAcksRequest();\n    if ((0, helpers_1.isSet)(object.portId)) obj.portId = String(object.portId);\n    if ((0, helpers_1.isSet)(object.channelId)) obj.channelId = String(object.channelId);\n    if (Array.isArray(object?.packetAckSequences)) obj.packetAckSequences = object.packetAckSequences.map(e => BigInt(e.toString()));\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.channelId !== undefined && (obj.channelId = message.channelId);\n    if (message.packetAckSequences) {\n      obj.packetAckSequences = message.packetAckSequences.map(e => (e || BigInt(0)).toString());\n    } else {\n      obj.packetAckSequences = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryUnreceivedAcksRequest();\n    message.portId = object.portId ?? \"\";\n    message.channelId = object.channelId ?? \"\";\n    message.packetAckSequences = object.packetAckSequences?.map(e => BigInt(e.toString())) || [];\n    return message;\n  }\n};\nfunction createBaseQueryUnreceivedAcksResponse() {\n  return {\n    sequences: [],\n    height: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryUnreceivedAcksResponse = {\n  typeUrl: \"/ibc.core.channel.v1.QueryUnreceivedAcksResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    writer.uint32(10).fork();\n    for (const v of message.sequences) {\n      writer.uint64(v);\n    }\n    writer.ldelim();\n    if (message.height !== undefined) {\n      client_1.Height.encode(message.height, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryUnreceivedAcksResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.sequences.push(reader.uint64());\n            }\n          } else {\n            message.sequences.push(reader.uint64());\n          }\n          break;\n        case 2:\n          message.height = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryUnreceivedAcksResponse();\n    if (Array.isArray(object?.sequences)) obj.sequences = object.sequences.map(e => BigInt(e.toString()));\n    if ((0, helpers_1.isSet)(object.height)) obj.height = client_1.Height.fromJSON(object.height);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.sequences) {\n      obj.sequences = message.sequences.map(e => (e || BigInt(0)).toString());\n    } else {\n      obj.sequences = [];\n    }\n    message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryUnreceivedAcksResponse();\n    message.sequences = object.sequences?.map(e => BigInt(e.toString())) || [];\n    if (object.height !== undefined && object.height !== null) {\n      message.height = client_1.Height.fromPartial(object.height);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryNextSequenceReceiveRequest() {\n  return {\n    portId: \"\",\n    channelId: \"\"\n  };\n}\nexports.QueryNextSequenceReceiveRequest = {\n  typeUrl: \"/ibc.core.channel.v1.QueryNextSequenceReceiveRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.portId !== \"\") {\n      writer.uint32(10).string(message.portId);\n    }\n    if (message.channelId !== \"\") {\n      writer.uint32(18).string(message.channelId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryNextSequenceReceiveRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.portId = reader.string();\n          break;\n        case 2:\n          message.channelId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryNextSequenceReceiveRequest();\n    if ((0, helpers_1.isSet)(object.portId)) obj.portId = String(object.portId);\n    if ((0, helpers_1.isSet)(object.channelId)) obj.channelId = String(object.channelId);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.portId !== undefined && (obj.portId = message.portId);\n    message.channelId !== undefined && (obj.channelId = message.channelId);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryNextSequenceReceiveRequest();\n    message.portId = object.portId ?? \"\";\n    message.channelId = object.channelId ?? \"\";\n    return message;\n  }\n};\nfunction createBaseQueryNextSequenceReceiveResponse() {\n  return {\n    nextSequenceReceive: BigInt(0),\n    proof: new Uint8Array(),\n    proofHeight: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryNextSequenceReceiveResponse = {\n  typeUrl: \"/ibc.core.channel.v1.QueryNextSequenceReceiveResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.nextSequenceReceive !== BigInt(0)) {\n      writer.uint32(8).uint64(message.nextSequenceReceive);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryNextSequenceReceiveResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.nextSequenceReceive = reader.uint64();\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryNextSequenceReceiveResponse();\n    if ((0, helpers_1.isSet)(object.nextSequenceReceive)) obj.nextSequenceReceive = BigInt(object.nextSequenceReceive.toString());\n    if ((0, helpers_1.isSet)(object.proof)) obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n    if ((0, helpers_1.isSet)(object.proofHeight)) obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.nextSequenceReceive !== undefined && (obj.nextSequenceReceive = (message.nextSequenceReceive || BigInt(0)).toString());\n    message.proof !== undefined && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryNextSequenceReceiveResponse();\n    if (object.nextSequenceReceive !== undefined && object.nextSequenceReceive !== null) {\n      message.nextSequenceReceive = BigInt(object.nextSequenceReceive.toString());\n    }\n    message.proof = object.proof ?? new Uint8Array();\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    }\n    return message;\n  }\n};\nclass QueryClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n    this.Channel = this.Channel.bind(this);\n    this.Channels = this.Channels.bind(this);\n    this.ConnectionChannels = this.ConnectionChannels.bind(this);\n    this.ChannelClientState = this.ChannelClientState.bind(this);\n    this.ChannelConsensusState = this.ChannelConsensusState.bind(this);\n    this.PacketCommitment = this.PacketCommitment.bind(this);\n    this.PacketCommitments = this.PacketCommitments.bind(this);\n    this.PacketReceipt = this.PacketReceipt.bind(this);\n    this.PacketAcknowledgement = this.PacketAcknowledgement.bind(this);\n    this.PacketAcknowledgements = this.PacketAcknowledgements.bind(this);\n    this.UnreceivedPackets = this.UnreceivedPackets.bind(this);\n    this.UnreceivedAcks = this.UnreceivedAcks.bind(this);\n    this.NextSequenceReceive = this.NextSequenceReceive.bind(this);\n  }\n  Channel(request) {\n    const data = exports.QueryChannelRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"Channel\", data);\n    return promise.then(data => exports.QueryChannelResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  Channels(request = {\n    pagination: pagination_1.PageRequest.fromPartial({})\n  }) {\n    const data = exports.QueryChannelsRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"Channels\", data);\n    return promise.then(data => exports.QueryChannelsResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  ConnectionChannels(request) {\n    const data = exports.QueryConnectionChannelsRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"ConnectionChannels\", data);\n    return promise.then(data => exports.QueryConnectionChannelsResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  ChannelClientState(request) {\n    const data = exports.QueryChannelClientStateRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"ChannelClientState\", data);\n    return promise.then(data => exports.QueryChannelClientStateResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  ChannelConsensusState(request) {\n    const data = exports.QueryChannelConsensusStateRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"ChannelConsensusState\", data);\n    return promise.then(data => exports.QueryChannelConsensusStateResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  PacketCommitment(request) {\n    const data = exports.QueryPacketCommitmentRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"PacketCommitment\", data);\n    return promise.then(data => exports.QueryPacketCommitmentResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  PacketCommitments(request) {\n    const data = exports.QueryPacketCommitmentsRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"PacketCommitments\", data);\n    return promise.then(data => exports.QueryPacketCommitmentsResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  PacketReceipt(request) {\n    const data = exports.QueryPacketReceiptRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"PacketReceipt\", data);\n    return promise.then(data => exports.QueryPacketReceiptResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  PacketAcknowledgement(request) {\n    const data = exports.QueryPacketAcknowledgementRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"PacketAcknowledgement\", data);\n    return promise.then(data => exports.QueryPacketAcknowledgementResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  PacketAcknowledgements(request) {\n    const data = exports.QueryPacketAcknowledgementsRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"PacketAcknowledgements\", data);\n    return promise.then(data => exports.QueryPacketAcknowledgementsResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  UnreceivedPackets(request) {\n    const data = exports.QueryUnreceivedPacketsRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"UnreceivedPackets\", data);\n    return promise.then(data => exports.QueryUnreceivedPacketsResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  UnreceivedAcks(request) {\n    const data = exports.QueryUnreceivedAcksRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"UnreceivedAcks\", data);\n    return promise.then(data => exports.QueryUnreceivedAcksResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  NextSequenceReceive(request) {\n    const data = exports.QueryNextSequenceReceiveRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.channel.v1.Query\", \"NextSequenceReceive\", data);\n    return promise.then(data => exports.QueryNextSequenceReceiveResponse.decode(new binary_1.BinaryReader(data)));\n  }\n}\nexports.QueryClientImpl = QueryClientImpl;","map":{"version":3,"names":["pagination_1","require","channel_1","client_1","any_1","binary_1","helpers_1","exports","protobufPackage","createBaseQueryChannelRequest","portId","channelId","QueryChannelRequest","typeUrl","encode","message","writer","BinaryWriter","create","uint32","string","decode","input","length","reader","BinaryReader","end","undefined","len","pos","tag","skipType","fromJSON","object","obj","isSet","String","toJSON","fromPartial","createBaseQueryChannelResponse","channel","proof","Uint8Array","proofHeight","Height","QueryChannelResponse","Channel","fork","ldelim","bytes","bytesFromBase64","base64FromBytes","createBaseQueryChannelsRequest","pagination","QueryChannelsRequest","PageRequest","createBaseQueryChannelsResponse","channels","height","QueryChannelsResponse","v","IdentifiedChannel","PageResponse","push","Array","isArray","map","e","createBaseQueryConnectionChannelsRequest","connection","QueryConnectionChannelsRequest","createBaseQueryConnectionChannelsResponse","QueryConnectionChannelsResponse","createBaseQueryChannelClientStateRequest","QueryChannelClientStateRequest","createBaseQueryChannelClientStateResponse","identifiedClientState","QueryChannelClientStateResponse","IdentifiedClientState","createBaseQueryChannelConsensusStateRequest","revisionNumber","BigInt","revisionHeight","QueryChannelConsensusStateRequest","uint64","toString","createBaseQueryChannelConsensusStateResponse","consensusState","clientId","QueryChannelConsensusStateResponse","Any","createBaseQueryPacketCommitmentRequest","sequence","QueryPacketCommitmentRequest","createBaseQueryPacketCommitmentResponse","commitment","QueryPacketCommitmentResponse","createBaseQueryPacketCommitmentsRequest","QueryPacketCommitmentsRequest","createBaseQueryPacketCommitmentsResponse","commitments","QueryPacketCommitmentsResponse","PacketState","createBaseQueryPacketReceiptRequest","QueryPacketReceiptRequest","createBaseQueryPacketReceiptResponse","received","QueryPacketReceiptResponse","bool","Boolean","createBaseQueryPacketAcknowledgementRequest","QueryPacketAcknowledgementRequest","createBaseQueryPacketAcknowledgementResponse","acknowledgement","QueryPacketAcknowledgementResponse","createBaseQueryPacketAcknowledgementsRequest","packetCommitmentSequences","QueryPacketAcknowledgementsRequest","end2","createBaseQueryPacketAcknowledgementsResponse","acknowledgements","QueryPacketAcknowledgementsResponse","createBaseQueryUnreceivedPacketsRequest","QueryUnreceivedPacketsRequest","createBaseQueryUnreceivedPacketsResponse","sequences","QueryUnreceivedPacketsResponse","createBaseQueryUnreceivedAcksRequest","packetAckSequences","QueryUnreceivedAcksRequest","createBaseQueryUnreceivedAcksResponse","QueryUnreceivedAcksResponse","createBaseQueryNextSequenceReceiveRequest","QueryNextSequenceReceiveRequest","createBaseQueryNextSequenceReceiveResponse","nextSequenceReceive","QueryNextSequenceReceiveResponse","QueryClientImpl","constructor","rpc","bind","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","request","data","finish","promise","then"],"sources":["../../../../../src/ibc/core/channel/v1/query.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}