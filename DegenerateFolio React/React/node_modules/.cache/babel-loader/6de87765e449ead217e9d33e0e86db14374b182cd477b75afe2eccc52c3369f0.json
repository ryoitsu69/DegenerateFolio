{"ast":null,"code":"/* eslint-disable */\n/**\n * This file and any referenced files were automatically generated by @cosmology/telescope@1.0.7\n * DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain\n * and run the transpile command or yarn proto command to regenerate this bundle.\n */\n// Copyright (c) 2016, Daniel Wirtz  All rights reserved.\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n// * Redistributions of source code must retain the above copyright\n//   notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above copyright\n//   notice, this list of conditions and the following disclaimer in the\n//   documentation and/or other materials provided with the distribution.\n// * Neither the name of its author, nor the names of its contributors\n//   may be used to endorse or promote products derived from this software\n//   without specific prior written permission.\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.utf8Write = exports.utf8Read = exports.utf8Length = void 0;\n/**\n * Calculates the UTF8 byte length of a string.\n * @param {string} string String\n * @returns {number} Byte length\n */\nfunction utf8Length(str) {\n  let len = 0,\n    c = 0;\n  for (let i = 0; i < str.length; ++i) {\n    c = str.charCodeAt(i);\n    if (c < 128) len += 1;else if (c < 2048) len += 2;else if ((c & 0xfc00) === 0xd800 && (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n      ++i;\n      len += 4;\n    } else len += 3;\n  }\n  return len;\n}\nexports.utf8Length = utf8Length;\n/**\n * Reads UTF8 bytes as a string.\n * @param {Uint8Array} buffer Source buffer\n * @param {number} start Source start\n * @param {number} end Source end\n * @returns {string} String read\n */\nfunction utf8Read(buffer, start, end) {\n  const len = end - start;\n  if (len < 1) return \"\";\n  const chunk = [];\n  let parts = [],\n    i = 0,\n    // char offset\n    t; // temporary\n  while (start < end) {\n    t = buffer[start++];\n    if (t < 128) chunk[i++] = t;else if (t > 191 && t < 224) chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;else if (t > 239 && t < 365) {\n      t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\n      chunk[i++] = 0xd800 + (t >> 10);\n      chunk[i++] = 0xdc00 + (t & 1023);\n    } else chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\n    if (i > 8191) {\n      (parts || (parts = [])).push(String.fromCharCode(...chunk));\n      i = 0;\n    }\n  }\n  if (parts) {\n    if (i) parts.push(String.fromCharCode(...chunk.slice(0, i)));\n    return parts.join(\"\");\n  }\n  return String.fromCharCode(...chunk.slice(0, i));\n}\nexports.utf8Read = utf8Read;\n/**\n * Writes a string as UTF8 bytes.\n * @param {string} string Source string\n * @param {Uint8Array} buffer Destination buffer\n * @param {number} offset Destination offset\n * @returns {number} Bytes written\n */\nfunction utf8Write(str, buffer, offset) {\n  const start = offset;\n  let c1,\n    // character 1\n    c2; // character 2\n  for (let i = 0; i < str.length; ++i) {\n    c1 = str.charCodeAt(i);\n    if (c1 < 128) {\n      buffer[offset++] = c1;\n    } else if (c1 < 2048) {\n      buffer[offset++] = c1 >> 6 | 192;\n      buffer[offset++] = c1 & 63 | 128;\n    } else if ((c1 & 0xfc00) === 0xd800 && ((c2 = str.charCodeAt(i + 1)) & 0xfc00) === 0xdc00) {\n      c1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff);\n      ++i;\n      buffer[offset++] = c1 >> 18 | 240;\n      buffer[offset++] = c1 >> 12 & 63 | 128;\n      buffer[offset++] = c1 >> 6 & 63 | 128;\n      buffer[offset++] = c1 & 63 | 128;\n    } else {\n      buffer[offset++] = c1 >> 12 | 224;\n      buffer[offset++] = c1 >> 6 & 63 | 128;\n      buffer[offset++] = c1 & 63 | 128;\n    }\n  }\n  return offset - start;\n}\nexports.utf8Write = utf8Write;","map":{"version":3,"names":["utf8Length","str","len","c","i","length","charCodeAt","exports","utf8Read","buffer","start","end","chunk","parts","t","push","String","fromCharCode","slice","join","utf8Write","offset","c1","c2"],"sources":["../src/utf8.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}