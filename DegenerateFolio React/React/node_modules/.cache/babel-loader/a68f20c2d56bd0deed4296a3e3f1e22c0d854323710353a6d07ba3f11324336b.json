{"ast":null,"code":"import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { isHex, u8aToString } from '@polkadot/util';\nimport { firstMemo, memo } from '../util/index.js';\nconst UNDEF_HEX = {\n  toHex: () => undefined\n};\nfunction dataAsString(data) {\n  return data.isRaw ? u8aToString(data.asRaw.toU8a(true)) : data.isNone ? undefined : data.toHex();\n}\nfunction extractOther(additional) {\n  return additional.reduce((other, [_key, _value]) => {\n    const key = dataAsString(_key);\n    const value = dataAsString(_value);\n    if (key && value) {\n      other[key] = value;\n    }\n    return other;\n  }, {});\n}\nfunction identityCompat(identityOfOpt) {\n  const identity = identityOfOpt.unwrap();\n  return Array.isArray(identity) ? identity[0] : identity;\n}\nfunction extractIdentity(identityOfOpt, superOf) {\n  if (!identityOfOpt?.isSome) {\n    return {\n      judgements: []\n    };\n  }\n  const {\n    info,\n    judgements\n  } = identityCompat(identityOfOpt);\n  const topDisplay = dataAsString(info.display);\n  return {\n    display: superOf && dataAsString(superOf[1]) || topDisplay,\n    displayParent: superOf && topDisplay,\n    email: dataAsString(info.email),\n    image: dataAsString(info.image),\n    judgements,\n    legal: dataAsString(info.legal),\n    other: extractOther(info.additional),\n    parent: superOf?.[0],\n    pgp: info.pgpFingerprint.unwrapOr(UNDEF_HEX).toHex(),\n    riot: dataAsString(info.riot),\n    twitter: dataAsString(info.twitter),\n    web: dataAsString(info.web)\n  };\n}\nfunction getParent(api, identityOfOpt, superOfOpt) {\n  if (identityOfOpt?.isSome) {\n    // this identity has something set\n    return of([identityOfOpt, undefined]);\n  } else if (superOfOpt?.isSome) {\n    const superOf = superOfOpt.unwrap();\n    return combineLatest([api.derive.accounts._identity(superOf[0]).pipe(map(([info]) => info)), of(superOf)]);\n  }\n  // nothing of value returned\n  return of([undefined, undefined]);\n}\nexport function _identity(instanceId, api) {\n  return memo(instanceId, accountId => accountId && api.query.identity?.identityOf ? combineLatest([api.query.identity.identityOf(accountId), api.query.identity.superOf(accountId)]) : of([undefined, undefined]));\n}\n/**\n * @name identity\n * @description Returns identity info for an account\n */\nexport function identity(instanceId, api) {\n  return memo(instanceId, accountId => api.derive.accounts._identity(accountId).pipe(switchMap(([identityOfOpt, superOfOpt]) => getParent(api, identityOfOpt, superOfOpt)), map(([identityOfOpt, superOf]) => extractIdentity(identityOfOpt, superOf))));\n}\nexport const hasIdentity = /*#__PURE__*/firstMemo((api, accountId) => api.derive.accounts.hasIdentityMulti([accountId]));\nexport function hasIdentityMulti(instanceId, api) {\n  return memo(instanceId, accountIds => api.query.identity?.identityOf ? combineLatest([api.query.identity.identityOf.multi(accountIds), api.query.identity.superOf.multi(accountIds)]).pipe(map(([identities, supers]) => identities.map((identityOfOpt, index) => {\n    const superOfOpt = supers[index];\n    const parentId = superOfOpt && superOfOpt.isSome ? superOfOpt.unwrap()[0].toString() : undefined;\n    let display;\n    if (identityOfOpt && identityOfOpt.isSome) {\n      const value = dataAsString(identityCompat(identityOfOpt).info.display);\n      if (value && !isHex(value)) {\n        display = value;\n      }\n    }\n    return {\n      display,\n      hasIdentity: !!(display || parentId),\n      parentId\n    };\n  }))) : of(accountIds.map(() => ({\n    hasIdentity: false\n  }))));\n}","map":{"version":3,"names":["combineLatest","map","of","switchMap","isHex","u8aToString","firstMemo","memo","UNDEF_HEX","toHex","undefined","dataAsString","data","isRaw","asRaw","toU8a","isNone","extractOther","additional","reduce","other","_key","_value","key","value","identityCompat","identityOfOpt","identity","unwrap","Array","isArray","extractIdentity","superOf","isSome","judgements","info","topDisplay","display","displayParent","email","image","legal","parent","pgp","pgpFingerprint","unwrapOr","riot","twitter","web","getParent","api","superOfOpt","derive","accounts","_identity","pipe","instanceId","accountId","query","identityOf","hasIdentity","hasIdentityMulti","accountIds","multi","identities","supers","index","parentId","toString"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/accounts/identity.js"],"sourcesContent":["import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { isHex, u8aToString } from '@polkadot/util';\nimport { firstMemo, memo } from '../util/index.js';\nconst UNDEF_HEX = { toHex: () => undefined };\nfunction dataAsString(data) {\n    return data.isRaw\n        ? u8aToString(data.asRaw.toU8a(true))\n        : data.isNone\n            ? undefined\n            : data.toHex();\n}\nfunction extractOther(additional) {\n    return additional.reduce((other, [_key, _value]) => {\n        const key = dataAsString(_key);\n        const value = dataAsString(_value);\n        if (key && value) {\n            other[key] = value;\n        }\n        return other;\n    }, {});\n}\nfunction identityCompat(identityOfOpt) {\n    const identity = identityOfOpt.unwrap();\n    return Array.isArray(identity)\n        ? identity[0]\n        : identity;\n}\nfunction extractIdentity(identityOfOpt, superOf) {\n    if (!identityOfOpt?.isSome) {\n        return { judgements: [] };\n    }\n    const { info, judgements } = identityCompat(identityOfOpt);\n    const topDisplay = dataAsString(info.display);\n    return {\n        display: (superOf && dataAsString(superOf[1])) || topDisplay,\n        displayParent: superOf && topDisplay,\n        email: dataAsString(info.email),\n        image: dataAsString(info.image),\n        judgements,\n        legal: dataAsString(info.legal),\n        other: extractOther(info.additional),\n        parent: superOf?.[0],\n        pgp: info.pgpFingerprint.unwrapOr(UNDEF_HEX).toHex(),\n        riot: dataAsString(info.riot),\n        twitter: dataAsString(info.twitter),\n        web: dataAsString(info.web)\n    };\n}\nfunction getParent(api, identityOfOpt, superOfOpt) {\n    if (identityOfOpt?.isSome) {\n        // this identity has something set\n        return of([identityOfOpt, undefined]);\n    }\n    else if (superOfOpt?.isSome) {\n        const superOf = superOfOpt.unwrap();\n        return combineLatest([\n            api.derive.accounts._identity(superOf[0]).pipe(map(([info]) => info)),\n            of(superOf)\n        ]);\n    }\n    // nothing of value returned\n    return of([undefined, undefined]);\n}\nexport function _identity(instanceId, api) {\n    return memo(instanceId, (accountId) => accountId && api.query.identity?.identityOf\n        ? combineLatest([\n            api.query.identity.identityOf(accountId),\n            api.query.identity.superOf(accountId)\n        ])\n        : of([undefined, undefined]));\n}\n/**\n * @name identity\n * @description Returns identity info for an account\n */\nexport function identity(instanceId, api) {\n    return memo(instanceId, (accountId) => api.derive.accounts._identity(accountId).pipe(switchMap(([identityOfOpt, superOfOpt]) => getParent(api, identityOfOpt, superOfOpt)), map(([identityOfOpt, superOf]) => extractIdentity(identityOfOpt, superOf))));\n}\nexport const hasIdentity = /*#__PURE__*/ firstMemo((api, accountId) => api.derive.accounts.hasIdentityMulti([accountId]));\nexport function hasIdentityMulti(instanceId, api) {\n    return memo(instanceId, (accountIds) => api.query.identity?.identityOf\n        ? combineLatest([\n            api.query.identity.identityOf.multi(accountIds),\n            api.query.identity.superOf.multi(accountIds)\n        ]).pipe(map(([identities, supers]) => identities.map((identityOfOpt, index) => {\n            const superOfOpt = supers[index];\n            const parentId = superOfOpt && superOfOpt.isSome\n                ? superOfOpt.unwrap()[0].toString()\n                : undefined;\n            let display;\n            if (identityOfOpt && identityOfOpt.isSome) {\n                const value = dataAsString(identityCompat(identityOfOpt).info.display);\n                if (value && !isHex(value)) {\n                    display = value;\n                }\n            }\n            return { display, hasIdentity: !!(display || parentId), parentId };\n        })))\n        : of(accountIds.map(() => ({ hasIdentity: false }))));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}