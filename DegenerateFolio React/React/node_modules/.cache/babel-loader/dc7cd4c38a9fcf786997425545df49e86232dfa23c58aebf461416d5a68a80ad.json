{"ast":null,"code":"const BB_V2_TO_V4 = {\n  // this was removed after V4\n  random_seed: {\n    description: 'Generate a random seed.',\n    params: [],\n    type: 'Hash'\n  }\n};\nconst BB_V2_TO_V5 = {\n  apply_extrinsic: {\n    description: 'Apply the given extrinsic.',\n    params: [{\n      name: 'extrinsic',\n      type: 'Extrinsic'\n    }],\n    type: 'ApplyExtrinsicResultPre6'\n  }\n};\nconst BB_V2_TO_V6 = {\n  check_inherents: {\n    description: 'Check that the inherents are valid.',\n    params: [{\n      name: 'block',\n      type: 'Block'\n    }, {\n      name: 'data',\n      type: 'InherentData'\n    }],\n    type: 'CheckInherentsResult'\n  },\n  inherent_extrinsics: {\n    description: 'Generate inherent extrinsics.',\n    params: [{\n      name: 'inherent',\n      type: 'InherentData'\n    }],\n    type: 'Vec<Extrinsic>'\n  }\n};\nconst BB_V3_TO_V6 = {\n  // renamed in v3 from finalize_block\n  finalize_block: {\n    description: 'Finish the current block.',\n    params: [],\n    type: 'Header'\n  }\n};\nexport const runtime = {\n  BlockBuilder: [{\n    methods: {\n      apply_extrinsic: {\n        description: 'Apply the given extrinsic.',\n        params: [{\n          name: 'extrinsic',\n          type: 'Extrinsic'\n        }],\n        type: 'ApplyExtrinsicResult'\n      },\n      ...BB_V2_TO_V6,\n      ...BB_V3_TO_V6\n    },\n    version: 6\n  }, {\n    methods: {\n      // apply_extrinsic result changed in 6\n      ...BB_V2_TO_V5,\n      ...BB_V2_TO_V6,\n      ...BB_V3_TO_V6\n    },\n    version: 5\n  }, {\n    methods: {\n      // random_seed removed\n      ...BB_V2_TO_V4,\n      ...BB_V2_TO_V5,\n      ...BB_V2_TO_V6,\n      ...BB_V3_TO_V6\n    },\n    version: 4\n  }, {\n    methods: {\n      // finalize_block renamed\n      ...BB_V2_TO_V4,\n      ...BB_V2_TO_V6,\n      ...BB_V3_TO_V6\n    },\n    version: 3\n  }, {\n    methods: {\n      finalise_block: {\n        description: 'Finish the current block.',\n        params: [],\n        type: 'Header'\n      },\n      ...BB_V2_TO_V4,\n      ...BB_V2_TO_V6\n    },\n    version: 2\n  }]\n};","map":{"version":3,"names":["BB_V2_TO_V4","random_seed","description","params","type","BB_V2_TO_V5","apply_extrinsic","name","BB_V2_TO_V6","check_inherents","inherent_extrinsics","BB_V3_TO_V6","finalize_block","runtime","BlockBuilder","methods","version","finalise_block"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/interfaces/blockbuilder/runtime.js"],"sourcesContent":["const BB_V2_TO_V4 = {\n    // this was removed after V4\n    random_seed: {\n        description: 'Generate a random seed.',\n        params: [],\n        type: 'Hash'\n    }\n};\nconst BB_V2_TO_V5 = {\n    apply_extrinsic: {\n        description: 'Apply the given extrinsic.',\n        params: [\n            {\n                name: 'extrinsic',\n                type: 'Extrinsic'\n            }\n        ],\n        type: 'ApplyExtrinsicResultPre6'\n    }\n};\nconst BB_V2_TO_V6 = {\n    check_inherents: {\n        description: 'Check that the inherents are valid.',\n        params: [\n            {\n                name: 'block',\n                type: 'Block'\n            },\n            {\n                name: 'data',\n                type: 'InherentData'\n            }\n        ],\n        type: 'CheckInherentsResult'\n    },\n    inherent_extrinsics: {\n        description: 'Generate inherent extrinsics.',\n        params: [\n            {\n                name: 'inherent',\n                type: 'InherentData'\n            }\n        ],\n        type: 'Vec<Extrinsic>'\n    }\n};\nconst BB_V3_TO_V6 = {\n    // renamed in v3 from finalize_block\n    finalize_block: {\n        description: 'Finish the current block.',\n        params: [],\n        type: 'Header'\n    }\n};\nexport const runtime = {\n    BlockBuilder: [\n        {\n            methods: {\n                apply_extrinsic: {\n                    description: 'Apply the given extrinsic.',\n                    params: [\n                        {\n                            name: 'extrinsic',\n                            type: 'Extrinsic'\n                        }\n                    ],\n                    type: 'ApplyExtrinsicResult'\n                },\n                ...BB_V2_TO_V6,\n                ...BB_V3_TO_V6\n            },\n            version: 6\n        },\n        {\n            methods: {\n                // apply_extrinsic result changed in 6\n                ...BB_V2_TO_V5,\n                ...BB_V2_TO_V6,\n                ...BB_V3_TO_V6\n            },\n            version: 5\n        },\n        {\n            methods: {\n                // random_seed removed\n                ...BB_V2_TO_V4,\n                ...BB_V2_TO_V5,\n                ...BB_V2_TO_V6,\n                ...BB_V3_TO_V6\n            },\n            version: 4\n        },\n        {\n            methods: {\n                // finalize_block renamed\n                ...BB_V2_TO_V4,\n                ...BB_V2_TO_V6,\n                ...BB_V3_TO_V6\n            },\n            version: 3\n        },\n        {\n            methods: {\n                finalise_block: {\n                    description: 'Finish the current block.',\n                    params: [],\n                    type: 'Header'\n                },\n                ...BB_V2_TO_V4,\n                ...BB_V2_TO_V6\n            },\n            version: 2\n        }\n    ]\n};\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG;EAChB;EACAC,WAAW,EAAE;IACTC,WAAW,EAAE,yBAAyB;IACtCC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE;EACV;AACJ,CAAC;AACD,MAAMC,WAAW,GAAG;EAChBC,eAAe,EAAE;IACbJ,WAAW,EAAE,4BAA4B;IACzCC,MAAM,EAAE,CACJ;MACII,IAAI,EAAE,WAAW;MACjBH,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV;AACJ,CAAC;AACD,MAAMI,WAAW,GAAG;EAChBC,eAAe,EAAE;IACbP,WAAW,EAAE,qCAAqC;IAClDC,MAAM,EAAE,CACJ;MACII,IAAI,EAAE,OAAO;MACbH,IAAI,EAAE;IACV,CAAC,EACD;MACIG,IAAI,EAAE,MAAM;MACZH,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDM,mBAAmB,EAAE;IACjBR,WAAW,EAAE,+BAA+B;IAC5CC,MAAM,EAAE,CACJ;MACII,IAAI,EAAE,UAAU;MAChBH,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV;AACJ,CAAC;AACD,MAAMO,WAAW,GAAG;EAChB;EACAC,cAAc,EAAE;IACZV,WAAW,EAAE,2BAA2B;IACxCC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE;EACV;AACJ,CAAC;AACD,OAAO,MAAMS,OAAO,GAAG;EACnBC,YAAY,EAAE,CACV;IACIC,OAAO,EAAE;MACLT,eAAe,EAAE;QACbJ,WAAW,EAAE,4BAA4B;QACzCC,MAAM,EAAE,CACJ;UACII,IAAI,EAAE,WAAW;UACjBH,IAAI,EAAE;QACV,CAAC,CACJ;QACDA,IAAI,EAAE;MACV,CAAC;MACD,GAAGI,WAAW;MACd,GAAGG;IACP,CAAC;IACDK,OAAO,EAAE;EACb,CAAC,EACD;IACID,OAAO,EAAE;MACL;MACA,GAAGV,WAAW;MACd,GAAGG,WAAW;MACd,GAAGG;IACP,CAAC;IACDK,OAAO,EAAE;EACb,CAAC,EACD;IACID,OAAO,EAAE;MACL;MACA,GAAGf,WAAW;MACd,GAAGK,WAAW;MACd,GAAGG,WAAW;MACd,GAAGG;IACP,CAAC;IACDK,OAAO,EAAE;EACb,CAAC,EACD;IACID,OAAO,EAAE;MACL;MACA,GAAGf,WAAW;MACd,GAAGQ,WAAW;MACd,GAAGG;IACP,CAAC;IACDK,OAAO,EAAE;EACb,CAAC,EACD;IACID,OAAO,EAAE;MACLE,cAAc,EAAE;QACZf,WAAW,EAAE,2BAA2B;QACxCC,MAAM,EAAE,EAAE;QACVC,IAAI,EAAE;MACV,CAAC;MACD,GAAGJ,WAAW;MACd,GAAGQ;IACP,CAAC;IACDQ,OAAO,EAAE;EACb,CAAC;AAET,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}