{"ast":null,"code":"import { stringify } from '../stringify.js';\n/**\n * @name isJsonObject\n * @summary Tests for a valid JSON `object`.\n * @description\n * Checks to see if the input value is a valid JSON object.\n * It returns false if the input is JSON parsable, but not an Javascript object.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isJsonObject } from '@polkadot/util';\n *\n * isJsonObject({}); // => true\n * isJsonObject({\n *  \"Test\": \"1234\",\n *  \"NestedTest\": {\n *   \"Test\": \"5678\"\n *  }\n * }); // => true\n * isJsonObject(1234); // JSON parsable, but not an object =>  false\n * isJsonObject(null); // JSON parsable, but not an object => false\n * isJsonObject('not an object'); // => false\n * ```\n */\nexport function isJsonObject(value) {\n  const str = typeof value !== 'string' ? stringify(value) : value;\n  try {\n    const obj = JSON.parse(str);\n    return typeof obj === 'object' && obj !== null;\n  } catch {\n    return false;\n  }\n}","map":{"version":3,"names":["stringify","isJsonObject","value","str","obj","JSON","parse"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util/is/jsonObject.js"],"sourcesContent":["import { stringify } from '../stringify.js';\n/**\n * @name isJsonObject\n * @summary Tests for a valid JSON `object`.\n * @description\n * Checks to see if the input value is a valid JSON object.\n * It returns false if the input is JSON parsable, but not an Javascript object.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isJsonObject } from '@polkadot/util';\n *\n * isJsonObject({}); // => true\n * isJsonObject({\n *  \"Test\": \"1234\",\n *  \"NestedTest\": {\n *   \"Test\": \"5678\"\n *  }\n * }); // => true\n * isJsonObject(1234); // JSON parsable, but not an object =>  false\n * isJsonObject(null); // JSON parsable, but not an object => false\n * isJsonObject('not an object'); // => false\n * ```\n */\nexport function isJsonObject(value) {\n    const str = typeof value !== 'string'\n        ? stringify(value)\n        : value;\n    try {\n        const obj = JSON.parse(str);\n        return typeof obj === 'object' && obj !== null;\n    }\n    catch {\n        return false;\n    }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;EAChC,MAAMC,GAAG,GAAG,OAAOD,KAAK,KAAK,QAAQ,GAC/BF,SAAS,CAACE,KAAK,CAAC,GAChBA,KAAK;EACX,IAAI;IACA,MAAME,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,CAAC;IAC3B,OAAO,OAAOC,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI;EAClD,CAAC,CACD,MAAM;IACF,OAAO,KAAK;EAChB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}