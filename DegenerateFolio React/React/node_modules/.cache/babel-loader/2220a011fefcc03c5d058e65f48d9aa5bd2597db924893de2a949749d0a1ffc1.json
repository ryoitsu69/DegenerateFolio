{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromHex = exports.toHex = void 0;\nfunction toHex(data) {\n  let out = \"\";\n  for (const byte of data) {\n    out += (\"0\" + byte.toString(16)).slice(-2);\n  }\n  return out;\n}\nexports.toHex = toHex;\nfunction fromHex(hexstring) {\n  if (hexstring.length % 2 !== 0) {\n    throw new Error(\"hex string length must be a multiple of 2\");\n  }\n  const out = new Uint8Array(hexstring.length / 2);\n  for (let i = 0; i < out.length; i++) {\n    const j = 2 * i;\n    const hexByteAsString = hexstring.slice(j, j + 2);\n    if (!hexByteAsString.match(/[0-9a-f]{2}/i)) {\n      throw new Error(\"hex string contains invalid characters\");\n    }\n    out[i] = parseInt(hexByteAsString, 16);\n  }\n  return out;\n}\nexports.fromHex = fromHex;","map":{"version":3,"names":["toHex","data","out","byte","toString","slice","exports","fromHex","hexstring","length","Error","Uint8Array","i","j","hexByteAsString","match","parseInt"],"sources":["../src/hex.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,SAAgBA,KAAKA,CAACC,IAAgB;EACpC,IAAIC,GAAG,GAAG,EAAE;EACZ,KAAK,MAAMC,IAAI,IAAIF,IAAI,EAAE;IACvBC,GAAG,IAAI,CAAC,GAAG,GAAGC,IAAI,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;;EAE5C,OAAOH,GAAG;AACZ;AANAI,OAAA,CAAAN,KAAA,GAAAA,KAAA;AAQA,SAAgBO,OAAOA,CAACC,SAAiB;EACvC,IAAIA,SAAS,CAACC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;IAC9B,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;;EAG9D,MAAMR,GAAG,GAAG,IAAIS,UAAU,CAACH,SAAS,CAACC,MAAM,GAAG,CAAC,CAAC;EAChD,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,GAAG,CAACO,MAAM,EAAEG,CAAC,EAAE,EAAE;IACnC,MAAMC,CAAC,GAAG,CAAC,GAAGD,CAAC;IACf,MAAME,eAAe,GAAGN,SAAS,CAACH,KAAK,CAACQ,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;IACjD,IAAI,CAACC,eAAe,CAACC,KAAK,CAAC,cAAc,CAAC,EAAE;MAC1C,MAAM,IAAIL,KAAK,CAAC,wCAAwC,CAAC;;IAE3DR,GAAG,CAACU,CAAC,CAAC,GAAGI,QAAQ,CAACF,eAAe,EAAE,EAAE,CAAC;;EAExC,OAAOZ,GAAG;AACZ;AAfAI,OAAA,CAAAC,OAAA,GAAAA,OAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}