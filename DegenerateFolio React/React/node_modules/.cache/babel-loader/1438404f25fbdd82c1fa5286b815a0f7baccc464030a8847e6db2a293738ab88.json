{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.doHash = exports.applyInner = exports.applyLeaf = void 0;\nconst ripemd160_1 = require(\"@noble/hashes/ripemd160\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst codecimpl_1 = require(\"./generated/codecimpl\");\nfunction applyLeaf(leaf, key, value) {\n  if (key.length === 0) {\n    throw new Error(\"Missing key\");\n  }\n  if (value.length === 0) {\n    throw new Error(\"Missing value\");\n  }\n  const pkey = prepareLeafData(ensureHash(leaf.prehashKey), ensureLength(leaf.length), key);\n  const pvalue = prepareLeafData(ensureHash(leaf.prehashValue), ensureLength(leaf.length), value);\n  const data = new Uint8Array([...ensureBytes(leaf.prefix), ...pkey, ...pvalue]);\n  return doHash(ensureHash(leaf.hash), data);\n}\nexports.applyLeaf = applyLeaf;\nfunction applyInner(inner, child) {\n  if (child.length === 0) {\n    throw new Error(\"Inner op needs child value\");\n  }\n  const preimage = new Uint8Array([...ensureBytes(inner.prefix), ...child, ...ensureBytes(inner.suffix)]);\n  return doHash(ensureHash(inner.hash), preimage);\n}\nexports.applyInner = applyInner;\nfunction ensure(maybe, value) {\n  return maybe === undefined || maybe === null ? value : maybe;\n}\nconst ensureHash = h => ensure(h, codecimpl_1.ics23.HashOp.NO_HASH);\nconst ensureLength = l => ensure(l, codecimpl_1.ics23.LengthOp.NO_PREFIX);\nconst ensureBytes = b => ensure(b, new Uint8Array([]));\nfunction prepareLeafData(hashOp, lengthOp, data) {\n  const h = doHashOrNoop(hashOp, data);\n  return doLengthOp(lengthOp, h);\n}\n// doHashOrNoop will return the preimage untouched if hashOp == NONE,\n// otherwise, perform doHash\nfunction doHashOrNoop(hashOp, preimage) {\n  if (hashOp === codecimpl_1.ics23.HashOp.NO_HASH) {\n    return preimage;\n  }\n  return doHash(hashOp, preimage);\n}\n// doHash will preform the specified hash on the preimage.\n// if hashOp == NONE, it will return an error (use doHashOrNoop if you want different behavior)\nfunction doHash(hashOp, preimage) {\n  switch (hashOp) {\n    case codecimpl_1.ics23.HashOp.SHA256:\n      return (0, sha256_1.sha256)(preimage);\n    case codecimpl_1.ics23.HashOp.SHA512:\n      return (0, sha512_1.sha512)(preimage);\n    case codecimpl_1.ics23.HashOp.RIPEMD160:\n      return (0, ripemd160_1.ripemd160)(preimage);\n    case codecimpl_1.ics23.HashOp.BITCOIN:\n      return (0, ripemd160_1.ripemd160)((0, sha256_1.sha256)(preimage));\n    case codecimpl_1.ics23.HashOp.SHA512_256:\n      return (0, sha512_1.sha512_256)(preimage);\n  }\n  throw new Error(`Unsupported hashop: ${hashOp}`);\n}\nexports.doHash = doHash;\n// doLengthOp will calculate the proper prefix and return it prepended\n//   doLengthOp(op, data) -> length(data) || data\nfunction doLengthOp(lengthOp, data) {\n  switch (lengthOp) {\n    case codecimpl_1.ics23.LengthOp.NO_PREFIX:\n      return data;\n    case codecimpl_1.ics23.LengthOp.VAR_PROTO:\n      return new Uint8Array([...encodeVarintProto(data.length), ...data]);\n    case codecimpl_1.ics23.LengthOp.REQUIRE_32_BYTES:\n      if (data.length !== 32) {\n        throw new Error(`Length is ${data.length}, not 32 bytes`);\n      }\n      return data;\n    case codecimpl_1.ics23.LengthOp.REQUIRE_64_BYTES:\n      if (data.length !== 64) {\n        throw new Error(`Length is ${data.length}, not 64 bytes`);\n      }\n      return data;\n    case codecimpl_1.ics23.LengthOp.FIXED32_LITTLE:\n      return new Uint8Array([...encodeFixed32Le(data.length), ...data]);\n    // TODO\n    // case LengthOp_VAR_RLP:\n    // case LengthOp_FIXED32_BIG:\n    // case LengthOp_FIXED64_BIG:\n    // case LengthOp_FIXED64_LITTLE:\n  }\n  throw new Error(`Unsupported lengthop: ${lengthOp}`);\n}\nfunction encodeVarintProto(n) {\n  let enc = [];\n  let l = n;\n  while (l >= 128) {\n    const b = l % 128 + 128;\n    enc = [...enc, b];\n    l = l / 128;\n  }\n  enc = [...enc, l];\n  return new Uint8Array(enc);\n}\nfunction encodeFixed32Le(n) {\n  const enc = new Uint8Array(4);\n  let l = n;\n  for (let i = enc.length; i > 0; i--) {\n    enc[Math.abs(i - enc.length)] = l % 256;\n    l = Math.floor(l / 256);\n  }\n  return enc;\n}","map":{"version":3,"names":["ripemd160_1","require","sha256_1","sha512_1","codecimpl_1","applyLeaf","leaf","key","value","length","Error","pkey","prepareLeafData","ensureHash","prehashKey","ensureLength","pvalue","prehashValue","data","Uint8Array","ensureBytes","prefix","doHash","hash","exports","applyInner","inner","child","preimage","suffix","ensure","maybe","undefined","h","ics23","HashOp","NO_HASH","l","LengthOp","NO_PREFIX","b","hashOp","lengthOp","doHashOrNoop","doLengthOp","SHA256","sha256","SHA512","sha512","RIPEMD160","ripemd160","BITCOIN","SHA512_256","sha512_256","VAR_PROTO","encodeVarintProto","REQUIRE_32_BYTES","REQUIRE_64_BYTES","FIXED32_LITTLE","encodeFixed32Le","n","enc","i","Math","abs","floor"],"sources":["../src/ops.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}