{"ast":null,"code":"import _defineProperty from \"/home/ryoitsu/Documents/test/react-todo-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { isHex, isU8a, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nexport class Pairs {\n  constructor() {\n    _defineProperty(this, \"__internal__map\", {});\n  }\n  add(pair) {\n    this.__internal__map[decodeAddress(pair.address).toString()] = pair;\n    return pair;\n  }\n  all() {\n    return Object.values(this.__internal__map);\n  }\n  get(address) {\n    const pair = this.__internal__map[decodeAddress(address).toString()];\n    if (!pair) {\n      throw new Error(\"Unable to retrieve keypair '\".concat(isU8a(address) || isHex(address) ? u8aToHex(u8aToU8a(address)) : address, \"'\"));\n    }\n    return pair;\n  }\n  remove(address) {\n    delete this.__internal__map[decodeAddress(address).toString()];\n  }\n}","map":{"version":3,"names":["isHex","isU8a","u8aToHex","u8aToU8a","decodeAddress","Pairs","constructor","_defineProperty","add","pair","__internal__map","address","toString","all","Object","values","get","Error","concat","remove"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/keyring/pairs.js"],"sourcesContent":["import { isHex, isU8a, u8aToHex, u8aToU8a } from '@polkadot/util';\nimport { decodeAddress } from '@polkadot/util-crypto';\nexport class Pairs {\n    __internal__map = {};\n    add(pair) {\n        this.__internal__map[decodeAddress(pair.address).toString()] = pair;\n        return pair;\n    }\n    all() {\n        return Object.values(this.__internal__map);\n    }\n    get(address) {\n        const pair = this.__internal__map[decodeAddress(address).toString()];\n        if (!pair) {\n            throw new Error(`Unable to retrieve keypair '${isU8a(address) || isHex(address)\n                ? u8aToHex(u8aToU8a(address))\n                : address}'`);\n        }\n        return pair;\n    }\n    remove(address) {\n        delete this.__internal__map[decodeAddress(address).toString()];\n    }\n}\n"],"mappings":";AAAA,SAASA,KAAK,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,gBAAgB;AACjE,SAASC,aAAa,QAAQ,uBAAuB;AACrD,OAAO,MAAMC,KAAK,CAAC;EAAAC,YAAA;IAAAC,eAAA,0BACG,CAAC,CAAC;EAAA;EACpBC,GAAGA,CAACC,IAAI,EAAE;IACN,IAAI,CAACC,eAAe,CAACN,aAAa,CAACK,IAAI,CAACE,OAAO,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,GAAGH,IAAI;IACnE,OAAOA,IAAI;EACf;EACAI,GAAGA,CAAA,EAAG;IACF,OAAOC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;EAC9C;EACAM,GAAGA,CAACL,OAAO,EAAE;IACT,MAAMF,IAAI,GAAG,IAAI,CAACC,eAAe,CAACN,aAAa,CAACO,OAAO,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC;IACpE,IAAI,CAACH,IAAI,EAAE;MACP,MAAM,IAAIQ,KAAK,gCAAAC,MAAA,CAAgCjB,KAAK,CAACU,OAAO,CAAC,IAAIX,KAAK,CAACW,OAAO,CAAC,GACzET,QAAQ,CAACC,QAAQ,CAACQ,OAAO,CAAC,CAAC,GAC3BA,OAAO,MAAG,CAAC;IACrB;IACA,OAAOF,IAAI;EACf;EACAU,MAAMA,CAACR,OAAO,EAAE;IACZ,OAAO,IAAI,CAACD,eAAe,CAACN,aAAa,CAACO,OAAO,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC;EAClE;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}