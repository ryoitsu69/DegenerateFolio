{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines a {@linkplain Driver WebDriver} client for Microsoft's\n * Internet Explorer. Before using the IEDriver, you must download the latest\n * [IEDriverServer](https://www.selenium.dev/downloads/)\n * and place it on your\n * [PATH](http://en.wikipedia.org/wiki/PATH_%28variable%29). You must also apply\n * the system configuration outlined on the Selenium project\n * [wiki](https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver)\n */\n\n'use strict';\n\nconst http = require('./http');\nconst portprober = require('./net/portprober');\nconst remote = require('./remote');\nconst webdriver = require('./lib/webdriver');\nconst {\n  Browser,\n  Capabilities\n} = require('./lib/capabilities');\nconst error = require('./lib/error');\nconst {\n  getPath\n} = require('./common/driverFinder');\nconst OPTIONS_CAPABILITY_KEY = 'se:ieOptions';\nconst SCROLL_BEHAVIOUR = {\n  BOTTOM: 1,\n  TOP: 0\n};\n\n/**\n * IEDriverServer logging levels.\n * @enum {string}\n */\nconst Level = {\n  FATAL: 'FATAL',\n  ERROR: 'ERROR',\n  WARN: 'WARN',\n  INFO: 'INFO',\n  DEBUG: 'DEBUG',\n  TRACE: 'TRACE'\n};\n\n/**\n * Option keys:\n * https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities#ie-specific\n * @enum {string}\n */\nconst Key = {\n  IGNORE_PROTECTED_MODE_SETTINGS: 'ignoreProtectedModeSettings',\n  IGNORE_ZOOM_SETTING: 'ignoreZoomSetting',\n  INITIAL_BROWSER_URL: 'initialBrowserUrl',\n  ENABLE_PERSISTENT_HOVER: 'enablePersistentHover',\n  ENABLE_ELEMENT_CACHE_CLEANUP: 'enableElementCacheCleanup',\n  ELEMENT_SCROLL_BEHAVIOR: 'elementScrollBehavior',\n  REQUIRE_WINDOW_FOCUS: 'requireWindowFocus',\n  BROWSER_ATTACH_TIMEOUT: 'browserAttachTimeout',\n  FORCE_CREATE_PROCESS: 'ie.forceCreateProcessApi',\n  BROWSER_COMMAND_LINE_SWITCHES: 'ie.browserCommandLineSwitches',\n  USE_PER_PROCESS_PROXY: 'ie.usePerProcessProxy',\n  ENSURE_CLEAN_SESSION: 'ie.ensureCleanSession',\n  LOG_FILE: 'logFile',\n  LOG_LEVEL: 'logLevel',\n  HOST: 'host',\n  EXTRACT_PATH: 'extractPath',\n  SILENT: 'silent',\n  FILE_UPLOAD_DIALOG_TIMEOUT: 'ie.fileUploadDialogTimeout',\n  ATTACH_TO_EDGE_CHROMIUM: 'ie.edgechromium',\n  EDGE_EXECUTABLE_PATH: 'ie.edgepath',\n  IGNORE_PROCESS_MATCH: 'ie.ignoreprocessmatch'\n};\n\n/**\n * Class for managing IEDriver specific options.\n */\nclass Options extends Capabilities {\n  /**\n   * @param {(Capabilities|Map<string, ?>|Object)=} other Another set of\n   *     capabilities to initialize this instance from.\n   */\n  constructor(other = undefined) {\n    super(other);\n\n    /** @private {!Object} */\n    this.options_ = this.get(OPTIONS_CAPABILITY_KEY) || {};\n    this.set(OPTIONS_CAPABILITY_KEY, this.options_);\n    this.setBrowserName(Browser.INTERNET_EXPLORER);\n  }\n\n  /**\n   * Whether to disable the protected mode settings check when the session is\n   * created. Disabling this setting may lead to significant instability as the\n   * browser may become unresponsive/hang. Only \"best effort\" support is provided\n   * when using this capability.\n   *\n   * For more information, refer to the IEDriver's\n   * [required system configuration](http://goo.gl/eH0Yi3).\n   *\n   * @param {boolean} ignoreSettings Whether to ignore protected mode settings.\n   * @return {!Options} A self reference.\n   */\n  introduceFlakinessByIgnoringProtectedModeSettings(ignoreSettings) {\n    this.options_[Key.IGNORE_PROTECTED_MODE_SETTINGS] = !!ignoreSettings;\n    return this;\n  }\n\n  /**\n   * Indicates whether to skip the check that the browser's zoom level is set to\n   * 100%.\n   *\n   * @param {boolean} ignore Whether to ignore the browser's zoom level settings.\n   * @return {!Options} A self reference.\n   */\n  ignoreZoomSetting(ignore) {\n    this.options_[Key.IGNORE_ZOOM_SETTING] = !!ignore;\n    return this;\n  }\n\n  /**\n   * Sets the initial URL loaded when IE starts. This is intended to be used with\n   * {@link #introduceFlakinessByIgnoringProtectedModeSettings} to allow the user to initialize IE in\n   * the proper Protected Mode zone. Setting this option may cause browser\n   * instability or flaky and unresponsive code. Only \"best effort\" support is\n   * provided when using this option.\n   *\n   * @param {string} url The initial browser URL.\n   * @return {!Options} A self reference.\n   */\n  initialBrowserUrl(url) {\n    this.options_[Key.INITIAL_BROWSER_URL] = url;\n    return this;\n  }\n\n  /**\n   * Configures whether to enable persistent mouse hovering (true by default).\n   * Persistent hovering is achieved by continuously firing mouse over events at\n   * the last location the mouse cursor has been moved to.\n   *\n   * @param {boolean} enable Whether to enable persistent hovering.\n   * @return {!Options} A self reference.\n   */\n  enablePersistentHover(enable) {\n    this.options_[Key.ENABLE_PERSISTENT_HOVER] = !!enable;\n    return this;\n  }\n\n  /**\n   * Configures whether the driver should attempt to remove obsolete\n   * {@linkplain webdriver.WebElement WebElements} from its internal cache on\n   * page navigation (true by default). Disabling this option will cause the\n   * driver to run with a larger memory footprint.\n   *\n   * @param {boolean} enable Whether to enable element reference cleanup.\n   * @return {!Options} A self reference.\n   */\n  enableElementCacheCleanup(enable) {\n    this.options_[Key.ENABLE_ELEMENT_CACHE_CLEANUP] = !!enable;\n    return this;\n  }\n\n  /**\n   * Configures whether to require the IE window to have input focus before\n   * performing any user interactions (i.e. mouse or keyboard events). This\n   * option is disabled by default, but delivers much more accurate interaction\n   * events when enabled.\n   *\n   * @param {boolean} require Whether to require window focus.\n   * @return {!Options} A self reference.\n   */\n  requireWindowFocus(require) {\n    this.options_[Key.REQUIRE_WINDOW_FOCUS] = !!require;\n    return this;\n  }\n\n  /**\n   * Configures the timeout, in milliseconds, that the driver will attempt to\n   * located and attach to a newly opened instance of Internet Explorer. The\n   * default is zero, which indicates waiting indefinitely.\n   *\n   * @param {number} timeout How long to wait for IE.\n   * @return {!Options} A self reference.\n   */\n  browserAttachTimeout(timeout) {\n    this.options_[Key.BROWSER_ATTACH_TIMEOUT] = Math.max(timeout, 0);\n    return this;\n  }\n\n  /**\n   * Configures whether to launch Internet Explorer using the CreateProcess API.\n   * If this option is not specified, IE is launched using IELaunchURL, if\n   * available. For IE 8 and above, this option requires the TabProcGrowth\n   * registry value to be set to 0.\n   *\n   * @param {boolean} force Whether to use the CreateProcess API.\n   * @return {!Options} A self reference.\n   */\n  forceCreateProcessApi(force) {\n    this.options_[Key.FORCE_CREATE_PROCESS] = !!force;\n    return this;\n  }\n\n  /**\n   * Specifies command-line switches to use when launching Internet Explorer.\n   * This is only valid when used with {@link #forceCreateProcessApi}.\n   *\n   * @param {...(string|!Array.<string>)} args The arguments to add.\n   * @return {!Options} A self reference.\n   */\n\n  addBrowserCommandSwitches(...args) {\n    let current = this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] || [];\n    if (typeof current == 'string') current = current.split(' ');\n    this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] = current.concat(args).join(' ');\n    return this;\n  }\n\n  /**\n   * Specifies command-line switches to use when launching Internet Explorer.\n   * This is only valid when used with {@link #forceCreateProcessApi}.\n   *\n   * @param {...(string|!Array.<string>)} args The arguments to add.\n   * @deprecated Use {@link #addBrowserCommandSwitches} instead.\n   * @return {!Options} A self reference.\n   */\n\n  addArguments(...args) {\n    let current = this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] || [];\n    if (typeof current == 'string') current = current.split(' ');\n    this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] = current.concat(args).join(' ');\n    return this;\n  }\n\n  /**\n   * Configures whether proxies should be configured on a per-process basis. If\n   * not set, setting a {@linkplain #setProxy proxy} will configure the system\n   * proxy. The default behavior is to use the system proxy.\n   *\n   * @param {boolean} enable Whether to enable per-process proxy settings.\n   * @return {!Options} A self reference.\n   */\n  usePerProcessProxy(enable) {\n    this.options_[Key.USE_PER_PROCESS_PROXY] = !!enable;\n    return this;\n  }\n\n  /**\n   * Configures whether to clear the cache, cookies, history, and saved form data\n   * before starting the browser. _Using this capability will clear session data\n   * for all running instances of Internet Explorer, including those started\n   * manually._\n   *\n   * @param {boolean} cleanSession Whether to clear all session data on startup.\n   * @return {!Options} A self reference.\n   */\n  ensureCleanSession(cleanSession) {\n    this.options_[Key.ENSURE_CLEAN_SESSION] = !!cleanSession;\n    return this;\n  }\n\n  /**\n   * Sets the path to the log file the driver should log to.\n   * @param {string} file The log file path.\n   * @return {!Options} A self reference.\n   */\n  setLogFile(file) {\n    this.options_[Key.LOG_FILE] = file;\n    return this;\n  }\n\n  /**\n   * Sets the IEDriverServer's logging {@linkplain Level level}.\n   * @param {Level} level The logging level.\n   * @return {!Options} A self reference.\n   */\n  setLogLevel(level) {\n    this.options_[Key.LOG_LEVEL] = level;\n    return this;\n  }\n\n  /**\n   * Sets the IP address of the driver's host adapter.\n   * @param {string} host The IP address to use.\n   * @return {!Options} A self reference.\n   */\n  setHost(host) {\n    this.options_[Key.HOST] = host;\n    return this;\n  }\n\n  /**\n   * Sets the path of the temporary data directory to use.\n   * @param {string} path The log file path.\n   * @return {!Options} A self reference.\n   */\n  setExtractPath(path) {\n    this.options_[Key.EXTRACT_PATH] = path;\n    return this;\n  }\n\n  /**\n   * Sets whether the driver should start in silent mode.\n   * @param {boolean} silent Whether to run in silent mode.\n   * @return {!Options} A self reference.\n   */\n  silent(silent) {\n    this.options_[Key.SILENT] = silent;\n    return this;\n  }\n\n  /**\n   * The options File Upload Dialog Timeout in milliseconds\n   *\n   * @param {number} timeout How long to wait for IE.\n   * @return {!Options} A self reference.\n   */\n  fileUploadDialogTimeout(timeout) {\n    this.options_[Key.FILE_UPLOAD_DIALOG_TIMEOUT] = Math.max(timeout, 0);\n    return this;\n  }\n\n  /**\n   * Sets the path of the EdgeChromium driver.\n   * @param {string} path The EdgeChromium driver path.\n   * @return {!Options} A self reference.\n   */\n  setEdgePath(path) {\n    this.options_[Key.EDGE_EXECUTABLE_PATH] = path;\n    return this;\n  }\n\n  /**\n   * Sets the IEDriver to drive Chromium-based Edge in Internet Explorer mode.\n   *\n   * @param {boolean} attachEdgeChromium Whether to run in Chromium-based-Edge in IE mode\n   * @return {!Options} A self reference.\n   */\n  setEdgeChromium(attachEdgeChromium) {\n    this.options_[Key.ATTACH_TO_EDGE_CHROMIUM] = !!attachEdgeChromium;\n    return this;\n  }\n\n  /**\n   * Sets how elements should be scrolled into view for interaction.\n   * @param {number} behavior The desired scroll behavior: either 0 to align with\n   *     the top of the viewport or 1 to align with the bottom.\n   * @return {!Options} A self reference.\n   */\n  setScrollBehavior(behavior) {\n    if (behavior && behavior !== SCROLL_BEHAVIOUR.TOP && behavior !== SCROLL_BEHAVIOUR.BOTTOM) {\n      throw new error.InvalidArgumentError(`Element Scroll Behavior out of range.\n      It should be either ${SCROLL_BEHAVIOUR.TOP} or ${SCROLL_BEHAVIOUR.BOTTOM}`);\n    }\n    this.options_[Key.ELEMENT_SCROLL_BEHAVIOR] = behavior;\n    return this;\n  }\n}\nfunction createServiceFromCapabilities(capabilities) {\n  if (process.platform !== 'win32') {\n    throw Error('The IEDriver may only be used on Windows, but you appear to be on ' + process.platform + '. Did you mean to run against a remote ' + 'WebDriver server?');\n  }\n  let exe = null; // Let Selenium Manager find it\n  var args = [];\n  if (capabilities.has(Key.HOST)) {\n    args.push('--host=' + capabilities.get(Key.HOST));\n  }\n  if (capabilities.has(Key.LOG_FILE)) {\n    args.push('--log-file=' + capabilities.get(Key.LOG_FILE));\n  }\n  if (capabilities.has(Key.LOG_LEVEL)) {\n    args.push('--log-level=' + capabilities.get(Key.LOG_LEVEL));\n  }\n  if (capabilities.has(Key.EXTRACT_PATH)) {\n    args.push('--extract-path=' + capabilities.get(Key.EXTRACT_PATH));\n  }\n  if (capabilities.get(Key.SILENT)) {\n    args.push('--silent');\n  }\n  var port = portprober.findFreePort();\n  return new remote.DriverService(exe, {\n    loopback: true,\n    port: port,\n    args: port.then(function (port) {\n      return args.concat('--port=' + port);\n    }),\n    stdio: 'ignore'\n  });\n}\n\n/**\n * Creates {@link selenium-webdriver/remote.DriverService} instances that manage\n * an [IEDriverServer](https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver)\n * server in a child process.\n */\nclass ServiceBuilder extends remote.DriverService.Builder {\n  /**\n   * @param {string=} opt_exe Path to the server executable to use. If omitted,\n   *     the builder will attempt to locate the IEDriverServer on the system PATH.\n   */\n  constructor(opt_exe) {\n    super(opt_exe);\n    this.setLoopback(true); // Required.\n  }\n}\n\n/**\n * A WebDriver client for Microsoft's Internet Explorer.\n */\nclass Driver extends webdriver.WebDriver {\n  /**\n   * Creates a new session for Microsoft's Internet Explorer.\n   *\n   * @param {(Capabilities|Options)=} options The configuration options.\n   * @param {(remote.DriverService)=} opt_service The `DriverService` to use\n   *   to start the IEDriverServer in a child process, optionally.\n   * @return {!Driver} A new driver instance.\n   */\n  static createSession(options, opt_service) {\n    options = options || new Options();\n    let service;\n    if (opt_service instanceof remote.DriverService) {\n      service = opt_service;\n    } else {\n      service = createServiceFromCapabilities(options);\n    }\n    if (!service.getExecutable()) {\n      service.setExecutable(getPath(options).driverPath);\n    }\n    let client = service.start().then(url => new http.HttpClient(url));\n    let executor = new http.Executor(client);\n    return /** @type {!Driver} */super.createSession(executor, options, () => service.kill());\n  }\n\n  /**\n   * This function is a no-op as file detectors are not supported by this\n   * implementation.\n   * @override\n   */\n  setFileDetector() {}\n}\n\n// PUBLIC API\n\nexports.Driver = Driver;\nexports.Options = Options;\nexports.Level = Level;\nexports.ServiceBuilder = ServiceBuilder;\nexports.Key = Key;\nexports.VENDOR_COMMAND_PREFIX = OPTIONS_CAPABILITY_KEY;\nexports.Behavior = SCROLL_BEHAVIOUR;","map":{"version":3,"names":["http","require","portprober","remote","webdriver","Browser","Capabilities","error","getPath","OPTIONS_CAPABILITY_KEY","SCROLL_BEHAVIOUR","BOTTOM","TOP","Level","FATAL","ERROR","WARN","INFO","DEBUG","TRACE","Key","IGNORE_PROTECTED_MODE_SETTINGS","IGNORE_ZOOM_SETTING","INITIAL_BROWSER_URL","ENABLE_PERSISTENT_HOVER","ENABLE_ELEMENT_CACHE_CLEANUP","ELEMENT_SCROLL_BEHAVIOR","REQUIRE_WINDOW_FOCUS","BROWSER_ATTACH_TIMEOUT","FORCE_CREATE_PROCESS","BROWSER_COMMAND_LINE_SWITCHES","USE_PER_PROCESS_PROXY","ENSURE_CLEAN_SESSION","LOG_FILE","LOG_LEVEL","HOST","EXTRACT_PATH","SILENT","FILE_UPLOAD_DIALOG_TIMEOUT","ATTACH_TO_EDGE_CHROMIUM","EDGE_EXECUTABLE_PATH","IGNORE_PROCESS_MATCH","Options","constructor","other","undefined","options_","get","set","setBrowserName","INTERNET_EXPLORER","introduceFlakinessByIgnoringProtectedModeSettings","ignoreSettings","ignoreZoomSetting","ignore","initialBrowserUrl","url","enablePersistentHover","enable","enableElementCacheCleanup","requireWindowFocus","browserAttachTimeout","timeout","Math","max","forceCreateProcessApi","force","addBrowserCommandSwitches","args","current","split","concat","join","addArguments","usePerProcessProxy","ensureCleanSession","cleanSession","setLogFile","file","setLogLevel","level","setHost","host","setExtractPath","path","silent","fileUploadDialogTimeout","setEdgePath","setEdgeChromium","attachEdgeChromium","setScrollBehavior","behavior","InvalidArgumentError","createServiceFromCapabilities","capabilities","process","platform","Error","exe","has","push","port","findFreePort","DriverService","loopback","then","stdio","ServiceBuilder","Builder","opt_exe","setLoopback","Driver","WebDriver","createSession","options","opt_service","service","getExecutable","setExecutable","driverPath","client","start","HttpClient","executor","Executor","kill","setFileDetector","exports","VENDOR_COMMAND_PREFIX","Behavior"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/selenium-webdriver/ie.js"],"sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines a {@linkplain Driver WebDriver} client for Microsoft's\n * Internet Explorer. Before using the IEDriver, you must download the latest\n * [IEDriverServer](https://www.selenium.dev/downloads/)\n * and place it on your\n * [PATH](http://en.wikipedia.org/wiki/PATH_%28variable%29). You must also apply\n * the system configuration outlined on the Selenium project\n * [wiki](https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver)\n */\n\n'use strict'\n\nconst http = require('./http')\nconst portprober = require('./net/portprober')\nconst remote = require('./remote')\nconst webdriver = require('./lib/webdriver')\nconst { Browser, Capabilities } = require('./lib/capabilities')\nconst error = require('./lib/error')\nconst { getPath } = require('./common/driverFinder')\n\nconst OPTIONS_CAPABILITY_KEY = 'se:ieOptions'\nconst SCROLL_BEHAVIOUR = {\n  BOTTOM: 1,\n  TOP: 0,\n}\n\n/**\n * IEDriverServer logging levels.\n * @enum {string}\n */\nconst Level = {\n  FATAL: 'FATAL',\n  ERROR: 'ERROR',\n  WARN: 'WARN',\n  INFO: 'INFO',\n  DEBUG: 'DEBUG',\n  TRACE: 'TRACE',\n}\n\n/**\n * Option keys:\n * https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities#ie-specific\n * @enum {string}\n */\nconst Key = {\n  IGNORE_PROTECTED_MODE_SETTINGS: 'ignoreProtectedModeSettings',\n  IGNORE_ZOOM_SETTING: 'ignoreZoomSetting',\n  INITIAL_BROWSER_URL: 'initialBrowserUrl',\n  ENABLE_PERSISTENT_HOVER: 'enablePersistentHover',\n  ENABLE_ELEMENT_CACHE_CLEANUP: 'enableElementCacheCleanup',\n  ELEMENT_SCROLL_BEHAVIOR: 'elementScrollBehavior',\n  REQUIRE_WINDOW_FOCUS: 'requireWindowFocus',\n  BROWSER_ATTACH_TIMEOUT: 'browserAttachTimeout',\n  FORCE_CREATE_PROCESS: 'ie.forceCreateProcessApi',\n  BROWSER_COMMAND_LINE_SWITCHES: 'ie.browserCommandLineSwitches',\n  USE_PER_PROCESS_PROXY: 'ie.usePerProcessProxy',\n  ENSURE_CLEAN_SESSION: 'ie.ensureCleanSession',\n  LOG_FILE: 'logFile',\n  LOG_LEVEL: 'logLevel',\n  HOST: 'host',\n  EXTRACT_PATH: 'extractPath',\n  SILENT: 'silent',\n  FILE_UPLOAD_DIALOG_TIMEOUT: 'ie.fileUploadDialogTimeout',\n  ATTACH_TO_EDGE_CHROMIUM: 'ie.edgechromium',\n  EDGE_EXECUTABLE_PATH: 'ie.edgepath',\n  IGNORE_PROCESS_MATCH: 'ie.ignoreprocessmatch',\n}\n\n/**\n * Class for managing IEDriver specific options.\n */\nclass Options extends Capabilities {\n  /**\n   * @param {(Capabilities|Map<string, ?>|Object)=} other Another set of\n   *     capabilities to initialize this instance from.\n   */\n  constructor(other = undefined) {\n    super(other)\n\n    /** @private {!Object} */\n    this.options_ = this.get(OPTIONS_CAPABILITY_KEY) || {}\n\n    this.set(OPTIONS_CAPABILITY_KEY, this.options_)\n    this.setBrowserName(Browser.INTERNET_EXPLORER)\n  }\n\n  /**\n   * Whether to disable the protected mode settings check when the session is\n   * created. Disabling this setting may lead to significant instability as the\n   * browser may become unresponsive/hang. Only \"best effort\" support is provided\n   * when using this capability.\n   *\n   * For more information, refer to the IEDriver's\n   * [required system configuration](http://goo.gl/eH0Yi3).\n   *\n   * @param {boolean} ignoreSettings Whether to ignore protected mode settings.\n   * @return {!Options} A self reference.\n   */\n  introduceFlakinessByIgnoringProtectedModeSettings(ignoreSettings) {\n    this.options_[Key.IGNORE_PROTECTED_MODE_SETTINGS] = !!ignoreSettings\n    return this\n  }\n\n  /**\n   * Indicates whether to skip the check that the browser's zoom level is set to\n   * 100%.\n   *\n   * @param {boolean} ignore Whether to ignore the browser's zoom level settings.\n   * @return {!Options} A self reference.\n   */\n  ignoreZoomSetting(ignore) {\n    this.options_[Key.IGNORE_ZOOM_SETTING] = !!ignore\n    return this\n  }\n\n  /**\n   * Sets the initial URL loaded when IE starts. This is intended to be used with\n   * {@link #introduceFlakinessByIgnoringProtectedModeSettings} to allow the user to initialize IE in\n   * the proper Protected Mode zone. Setting this option may cause browser\n   * instability or flaky and unresponsive code. Only \"best effort\" support is\n   * provided when using this option.\n   *\n   * @param {string} url The initial browser URL.\n   * @return {!Options} A self reference.\n   */\n  initialBrowserUrl(url) {\n    this.options_[Key.INITIAL_BROWSER_URL] = url\n    return this\n  }\n\n  /**\n   * Configures whether to enable persistent mouse hovering (true by default).\n   * Persistent hovering is achieved by continuously firing mouse over events at\n   * the last location the mouse cursor has been moved to.\n   *\n   * @param {boolean} enable Whether to enable persistent hovering.\n   * @return {!Options} A self reference.\n   */\n  enablePersistentHover(enable) {\n    this.options_[Key.ENABLE_PERSISTENT_HOVER] = !!enable\n    return this\n  }\n\n  /**\n   * Configures whether the driver should attempt to remove obsolete\n   * {@linkplain webdriver.WebElement WebElements} from its internal cache on\n   * page navigation (true by default). Disabling this option will cause the\n   * driver to run with a larger memory footprint.\n   *\n   * @param {boolean} enable Whether to enable element reference cleanup.\n   * @return {!Options} A self reference.\n   */\n  enableElementCacheCleanup(enable) {\n    this.options_[Key.ENABLE_ELEMENT_CACHE_CLEANUP] = !!enable\n    return this\n  }\n\n  /**\n   * Configures whether to require the IE window to have input focus before\n   * performing any user interactions (i.e. mouse or keyboard events). This\n   * option is disabled by default, but delivers much more accurate interaction\n   * events when enabled.\n   *\n   * @param {boolean} require Whether to require window focus.\n   * @return {!Options} A self reference.\n   */\n  requireWindowFocus(require) {\n    this.options_[Key.REQUIRE_WINDOW_FOCUS] = !!require\n    return this\n  }\n\n  /**\n   * Configures the timeout, in milliseconds, that the driver will attempt to\n   * located and attach to a newly opened instance of Internet Explorer. The\n   * default is zero, which indicates waiting indefinitely.\n   *\n   * @param {number} timeout How long to wait for IE.\n   * @return {!Options} A self reference.\n   */\n  browserAttachTimeout(timeout) {\n    this.options_[Key.BROWSER_ATTACH_TIMEOUT] = Math.max(timeout, 0)\n    return this\n  }\n\n  /**\n   * Configures whether to launch Internet Explorer using the CreateProcess API.\n   * If this option is not specified, IE is launched using IELaunchURL, if\n   * available. For IE 8 and above, this option requires the TabProcGrowth\n   * registry value to be set to 0.\n   *\n   * @param {boolean} force Whether to use the CreateProcess API.\n   * @return {!Options} A self reference.\n   */\n  forceCreateProcessApi(force) {\n    this.options_[Key.FORCE_CREATE_PROCESS] = !!force\n    return this\n  }\n\n  /**\n   * Specifies command-line switches to use when launching Internet Explorer.\n   * This is only valid when used with {@link #forceCreateProcessApi}.\n   *\n   * @param {...(string|!Array.<string>)} args The arguments to add.\n   * @return {!Options} A self reference.\n   */\n\n  addBrowserCommandSwitches(...args) {\n    let current = this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] || []\n    if (typeof current == 'string') current = current.split(' ')\n    this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] = current.concat(args).join(' ')\n    return this\n  }\n\n  /**\n   * Specifies command-line switches to use when launching Internet Explorer.\n   * This is only valid when used with {@link #forceCreateProcessApi}.\n   *\n   * @param {...(string|!Array.<string>)} args The arguments to add.\n   * @deprecated Use {@link #addBrowserCommandSwitches} instead.\n   * @return {!Options} A self reference.\n   */\n\n  addArguments(...args) {\n    let current = this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] || []\n    if (typeof current == 'string') current = current.split(' ')\n    this.options_[Key.BROWSER_COMMAND_LINE_SWITCHES] = current.concat(args).join(' ')\n    return this\n  }\n\n  /**\n   * Configures whether proxies should be configured on a per-process basis. If\n   * not set, setting a {@linkplain #setProxy proxy} will configure the system\n   * proxy. The default behavior is to use the system proxy.\n   *\n   * @param {boolean} enable Whether to enable per-process proxy settings.\n   * @return {!Options} A self reference.\n   */\n  usePerProcessProxy(enable) {\n    this.options_[Key.USE_PER_PROCESS_PROXY] = !!enable\n    return this\n  }\n\n  /**\n   * Configures whether to clear the cache, cookies, history, and saved form data\n   * before starting the browser. _Using this capability will clear session data\n   * for all running instances of Internet Explorer, including those started\n   * manually._\n   *\n   * @param {boolean} cleanSession Whether to clear all session data on startup.\n   * @return {!Options} A self reference.\n   */\n  ensureCleanSession(cleanSession) {\n    this.options_[Key.ENSURE_CLEAN_SESSION] = !!cleanSession\n    return this\n  }\n\n  /**\n   * Sets the path to the log file the driver should log to.\n   * @param {string} file The log file path.\n   * @return {!Options} A self reference.\n   */\n  setLogFile(file) {\n    this.options_[Key.LOG_FILE] = file\n    return this\n  }\n\n  /**\n   * Sets the IEDriverServer's logging {@linkplain Level level}.\n   * @param {Level} level The logging level.\n   * @return {!Options} A self reference.\n   */\n  setLogLevel(level) {\n    this.options_[Key.LOG_LEVEL] = level\n    return this\n  }\n\n  /**\n   * Sets the IP address of the driver's host adapter.\n   * @param {string} host The IP address to use.\n   * @return {!Options} A self reference.\n   */\n  setHost(host) {\n    this.options_[Key.HOST] = host\n    return this\n  }\n\n  /**\n   * Sets the path of the temporary data directory to use.\n   * @param {string} path The log file path.\n   * @return {!Options} A self reference.\n   */\n  setExtractPath(path) {\n    this.options_[Key.EXTRACT_PATH] = path\n    return this\n  }\n\n  /**\n   * Sets whether the driver should start in silent mode.\n   * @param {boolean} silent Whether to run in silent mode.\n   * @return {!Options} A self reference.\n   */\n  silent(silent) {\n    this.options_[Key.SILENT] = silent\n    return this\n  }\n\n  /**\n   * The options File Upload Dialog Timeout in milliseconds\n   *\n   * @param {number} timeout How long to wait for IE.\n   * @return {!Options} A self reference.\n   */\n  fileUploadDialogTimeout(timeout) {\n    this.options_[Key.FILE_UPLOAD_DIALOG_TIMEOUT] = Math.max(timeout, 0)\n    return this\n  }\n\n  /**\n   * Sets the path of the EdgeChromium driver.\n   * @param {string} path The EdgeChromium driver path.\n   * @return {!Options} A self reference.\n   */\n  setEdgePath(path) {\n    this.options_[Key.EDGE_EXECUTABLE_PATH] = path\n    return this\n  }\n\n  /**\n   * Sets the IEDriver to drive Chromium-based Edge in Internet Explorer mode.\n   *\n   * @param {boolean} attachEdgeChromium Whether to run in Chromium-based-Edge in IE mode\n   * @return {!Options} A self reference.\n   */\n  setEdgeChromium(attachEdgeChromium) {\n    this.options_[Key.ATTACH_TO_EDGE_CHROMIUM] = !!attachEdgeChromium\n    return this\n  }\n\n  /**\n   * Sets how elements should be scrolled into view for interaction.\n   * @param {number} behavior The desired scroll behavior: either 0 to align with\n   *     the top of the viewport or 1 to align with the bottom.\n   * @return {!Options} A self reference.\n   */\n  setScrollBehavior(behavior) {\n    if (behavior && behavior !== SCROLL_BEHAVIOUR.TOP && behavior !== SCROLL_BEHAVIOUR.BOTTOM) {\n      throw new error.InvalidArgumentError(`Element Scroll Behavior out of range.\n      It should be either ${SCROLL_BEHAVIOUR.TOP} or ${SCROLL_BEHAVIOUR.BOTTOM}`)\n    }\n    this.options_[Key.ELEMENT_SCROLL_BEHAVIOR] = behavior\n    return this\n  }\n}\n\nfunction createServiceFromCapabilities(capabilities) {\n  if (process.platform !== 'win32') {\n    throw Error(\n      'The IEDriver may only be used on Windows, but you appear to be on ' +\n        process.platform +\n        '. Did you mean to run against a remote ' +\n        'WebDriver server?',\n    )\n  }\n\n  let exe = null // Let Selenium Manager find it\n  var args = []\n  if (capabilities.has(Key.HOST)) {\n    args.push('--host=' + capabilities.get(Key.HOST))\n  }\n  if (capabilities.has(Key.LOG_FILE)) {\n    args.push('--log-file=' + capabilities.get(Key.LOG_FILE))\n  }\n  if (capabilities.has(Key.LOG_LEVEL)) {\n    args.push('--log-level=' + capabilities.get(Key.LOG_LEVEL))\n  }\n  if (capabilities.has(Key.EXTRACT_PATH)) {\n    args.push('--extract-path=' + capabilities.get(Key.EXTRACT_PATH))\n  }\n  if (capabilities.get(Key.SILENT)) {\n    args.push('--silent')\n  }\n\n  var port = portprober.findFreePort()\n  return new remote.DriverService(exe, {\n    loopback: true,\n    port: port,\n    args: port.then(function (port) {\n      return args.concat('--port=' + port)\n    }),\n    stdio: 'ignore',\n  })\n}\n\n/**\n * Creates {@link selenium-webdriver/remote.DriverService} instances that manage\n * an [IEDriverServer](https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver)\n * server in a child process.\n */\nclass ServiceBuilder extends remote.DriverService.Builder {\n  /**\n   * @param {string=} opt_exe Path to the server executable to use. If omitted,\n   *     the builder will attempt to locate the IEDriverServer on the system PATH.\n   */\n  constructor(opt_exe) {\n    super(opt_exe)\n    this.setLoopback(true) // Required.\n  }\n}\n\n/**\n * A WebDriver client for Microsoft's Internet Explorer.\n */\nclass Driver extends webdriver.WebDriver {\n  /**\n   * Creates a new session for Microsoft's Internet Explorer.\n   *\n   * @param {(Capabilities|Options)=} options The configuration options.\n   * @param {(remote.DriverService)=} opt_service The `DriverService` to use\n   *   to start the IEDriverServer in a child process, optionally.\n   * @return {!Driver} A new driver instance.\n   */\n  static createSession(options, opt_service) {\n    options = options || new Options()\n\n    let service\n\n    if (opt_service instanceof remote.DriverService) {\n      service = opt_service\n    } else {\n      service = createServiceFromCapabilities(options)\n    }\n    if (!service.getExecutable()) {\n      service.setExecutable(getPath(options).driverPath)\n    }\n\n    let client = service.start().then((url) => new http.HttpClient(url))\n    let executor = new http.Executor(client)\n\n    return /** @type {!Driver} */ (super.createSession(executor, options, () => service.kill()))\n  }\n\n  /**\n   * This function is a no-op as file detectors are not supported by this\n   * implementation.\n   * @override\n   */\n  setFileDetector() {}\n}\n\n// PUBLIC API\n\nexports.Driver = Driver\nexports.Options = Options\nexports.Level = Level\nexports.ServiceBuilder = ServiceBuilder\nexports.Key = Key\nexports.VENDOR_COMMAND_PREFIX = OPTIONS_CAPABILITY_KEY\nexports.Behavior = SCROLL_BEHAVIOUR\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}