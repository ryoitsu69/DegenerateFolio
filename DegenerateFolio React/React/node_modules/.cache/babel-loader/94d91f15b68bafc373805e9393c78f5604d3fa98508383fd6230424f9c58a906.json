{"ast":null,"code":"import { combineLatest, EMPTY, map, of, startWith, switchMap } from 'rxjs';\nimport { objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { extractContributed } from './util.js';\nfunction _getValues(api, childKey, keys) {\n  // We actually would love to use multi-keys https://github.com/paritytech/substrate/issues/9203\n  return combineLatest(keys.map(k => api.rpc.childstate.getStorage(childKey, k))).pipe(map(values => values.map(v => api.registry.createType('Option<StorageData>', v)).map(o => o.isSome ? api.registry.createType('Balance', o.unwrap()) : api.registry.createType('Balance')).reduce((all, b, index) => objectSpread(all, {\n    [keys[index]]: b\n  }), {})));\n}\nfunction _watchOwnChanges(api, paraId, childkey, keys) {\n  return api.query.system.events().pipe(switchMap(events => {\n    const changes = extractContributed(paraId, events);\n    const filtered = keys.filter(k => changes.added.includes(k) || changes.removed.includes(k));\n    return filtered.length ? _getValues(api, childkey, filtered) : EMPTY;\n  }), startWith({}));\n}\nfunction _contributions(api, paraId, childKey, keys) {\n  return combineLatest([_getValues(api, childKey, keys), _watchOwnChanges(api, paraId, childKey, keys)]).pipe(map(([all, latest]) => objectSpread({}, all, latest)));\n}\nexport function ownContributions(instanceId, api) {\n  return memo(instanceId, (paraId, keys) => api.derive.crowdloan.childKey(paraId).pipe(switchMap(childKey => childKey && keys.length ? _contributions(api, paraId, childKey, keys) : of({}))));\n}","map":{"version":3,"names":["combineLatest","EMPTY","map","of","startWith","switchMap","objectSpread","memo","extractContributed","_getValues","api","childKey","keys","k","rpc","childstate","getStorage","pipe","values","v","registry","createType","o","isSome","unwrap","reduce","all","b","index","_watchOwnChanges","paraId","childkey","query","system","events","changes","filtered","filter","added","includes","removed","length","_contributions","latest","ownContributions","instanceId","derive","crowdloan"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/crowdloan/ownContributions.js"],"sourcesContent":["import { combineLatest, EMPTY, map, of, startWith, switchMap } from 'rxjs';\nimport { objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nimport { extractContributed } from './util.js';\nfunction _getValues(api, childKey, keys) {\n    // We actually would love to use multi-keys https://github.com/paritytech/substrate/issues/9203\n    return combineLatest(keys.map((k) => api.rpc.childstate.getStorage(childKey, k))).pipe(map((values) => values\n        .map((v) => api.registry.createType('Option<StorageData>', v))\n        .map((o) => o.isSome\n        ? api.registry.createType('Balance', o.unwrap())\n        : api.registry.createType('Balance'))\n        .reduce((all, b, index) => objectSpread(all, { [keys[index]]: b }), {})));\n}\nfunction _watchOwnChanges(api, paraId, childkey, keys) {\n    return api.query.system.events().pipe(switchMap((events) => {\n        const changes = extractContributed(paraId, events);\n        const filtered = keys.filter((k) => changes.added.includes(k) ||\n            changes.removed.includes(k));\n        return filtered.length\n            ? _getValues(api, childkey, filtered)\n            : EMPTY;\n    }), startWith({}));\n}\nfunction _contributions(api, paraId, childKey, keys) {\n    return combineLatest([\n        _getValues(api, childKey, keys),\n        _watchOwnChanges(api, paraId, childKey, keys)\n    ]).pipe(map(([all, latest]) => objectSpread({}, all, latest)));\n}\nexport function ownContributions(instanceId, api) {\n    return memo(instanceId, (paraId, keys) => api.derive.crowdloan.childKey(paraId).pipe(switchMap((childKey) => childKey && keys.length\n        ? _contributions(api, paraId, childKey, keys)\n        : of({}))));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}