{"ast":null,"code":"\"use strict\";\n\nasync function logDebugTexture(texture, renderer, size = 200) {\n  const base64 = await renderer.extract.base64(texture);\n  await renderer.encoder.commandFinished;\n  const width = size;\n  console.log(`logging texture ${texture.source.width}px ${texture.source.height}px`);\n  const style = [\"font-size: 1px;\", `padding: ${width}px ${300}px;`, `background: url(${base64}) no-repeat;`, \"background-size: contain;\"].join(\" \");\n  console.log(\"%c \", style);\n}\nexport { logDebugTexture };","map":{"version":3,"names":["logDebugTexture","texture","renderer","size","base64","extract","encoder","commandFinished","width","console","log","source","height","style","join"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/utils/logging/logDebugTexture.ts"],"sourcesContent":["import type { Texture } from '../../rendering/renderers/shared/texture/Texture';\nimport type { Renderer } from '../../rendering/renderers/types';\n\n/**\n * Logs a texture to the console as a base64 image.\n * This can be very useful for debugging issues with rendering.\n * @param texture - The texture to log\n * @param renderer - The renderer to use\n * @param size - The size of the texture to log in the console\n * @ignore\n */\nexport async function logDebugTexture(texture: Texture, renderer: Renderer, size = 200)\n{\n    const base64 = await renderer.extract.base64(texture);\n\n    await renderer.encoder.commandFinished;\n\n    const width = size;\n\n    // eslint-disable-next-line no-console\n    console.log(`logging texture ${texture.source.width}px ${texture.source.height}px`);\n\n    const style = [\n        'font-size: 1px;',\n        `padding: ${width}px ${300}px;`,\n        `background: url(${base64}) no-repeat;`,\n        'background-size: contain;',\n    ].join(' ');\n\n    // eslint-disable-next-line no-console\n    console.log('%c ', style);\n}\n"],"mappings":";;AAWA,eAAsBA,eAAgBA,CAAAC,OAAA,EAAkBC,QAAoB,EAAAC,IAAA,GAAO,GACnF;EACI,MAAMC,MAAS,SAAMF,QAAS,CAAAG,OAAA,CAAQD,MAAA,CAAOH,OAAO;EAEpD,MAAMC,QAAA,CAASI,OAAQ,CAAAC,eAAA;EAEvB,MAAMC,KAAQ,GAAAL,IAAA;EAGNM,OAAA,CAAAC,GAAA,CAAI,mBAAmBT,OAAQ,CAAAU,MAAA,CAAOH,KAAW,MAAAP,OAAA,CAAQU,MAAO,CAAAC,MAAU;EAElF,MAAMC,KAAQ,IACV,mBACA,YAAYL,KAAK,MAAM,GAAG,OAC1B,mBAAmBJ,MAAM,gBACzB,4BACJ,CAAEU,IAAA,CAAK,GAAG;EAGFL,OAAA,CAAAC,GAAA,CAAI,OAAOG,KAAK;AAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}