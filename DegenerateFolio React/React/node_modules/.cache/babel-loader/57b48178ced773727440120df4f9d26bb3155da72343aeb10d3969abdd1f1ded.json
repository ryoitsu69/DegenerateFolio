{"ast":null,"code":"import { HTMLTextStyle } from '../../text-html/HtmlTextStyle.mjs';\nimport { TextStyle } from '../TextStyle.mjs';\n\"use strict\";\nfunction ensureTextStyle(renderMode, style) {\n  if (style instanceof TextStyle || style instanceof HTMLTextStyle) {\n    return style;\n  }\n  return renderMode === \"html\" ? new HTMLTextStyle(style) : new TextStyle(style);\n}\nexport { ensureTextStyle };","map":{"version":3,"names":["ensureTextStyle","renderMode","style","TextStyle","HTMLTextStyle"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/scene/text/utils/ensureTextStyle.ts"],"sourcesContent":["import { HTMLTextStyle } from '../../text-html/HtmlTextStyle';\nimport { TextStyle } from '../TextStyle';\n\nimport type { HTMLTextStyleOptions } from '../../text-html/HtmlTextStyle';\nimport type { TextStyleOptions } from '../TextStyle';\n\n/**\n * converts the style input into the correct type of TextStyle\n * either HTMLTextStyle or TextStyle based on the renderMode.\n * @param renderMode - The render mode to use\n * @param style - The style to use\n * @returns - The style class\n */\nexport function ensureTextStyle(\n    renderMode: string,\n    style: TextStyle | HTMLTextStyle | TextStyleOptions | HTMLTextStyleOptions\n)\n{\n    if (style instanceof TextStyle || style instanceof HTMLTextStyle)\n    {\n        return style;\n    }\n\n    return renderMode === 'html'\n        ? new HTMLTextStyle(style)\n        : new TextStyle(style);\n}\n"],"mappings":";;;AAagB,SAAAA,gBACZC,UAAA,EACAC,KAEJ;EACQ,IAAAA,KAAA,YAAiBC,SAAa,IAAAD,KAAA,YAAiBE,aACnD;IACW,OAAAF,KAAA;EAAA;EAGJ,OAAAD,UAAA,KAAe,SAChB,IAAIG,aAAA,CAAcF,KAAK,CACvB,OAAIC,SAAA,CAAUD,KAAK;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}