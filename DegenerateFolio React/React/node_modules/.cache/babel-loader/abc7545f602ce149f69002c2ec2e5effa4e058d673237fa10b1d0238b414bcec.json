{"ast":null,"code":"import _defineProperty from \"/home/ryoitsu/Documents/test/react-todo-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { EventEmitter } from 'eventemitter3';\nexport class Events {\n  constructor() {\n    _defineProperty(this, \"__internal__eventemitter\", new EventEmitter());\n  }\n  emit(type) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return this.__internal__eventemitter.emit(type, ...args);\n  }\n  /**\n   * @description Attach an eventemitter handler to listen to a specific event\n   *\n   * @param type The type of event to listen to. Available events are `connected`, `disconnected`, `ready` and `error`\n   * @param handler The callback to be called when the event fires. Depending on the event type, it could fire with additional arguments.\n   *\n   * @example\n   * <BR>\n   *\n   * ```javascript\n   * api.on('connected', (): void => {\n   *   console.log('API has been connected to the endpoint');\n   * });\n   *\n   * api.on('disconnected', (): void => {\n   *   console.log('API has been disconnected from the endpoint');\n   * });\n   * ```\n   */\n  on(type, handler) {\n    this.__internal__eventemitter.on(type, handler);\n    return this;\n  }\n  /**\n   * @description Remove the given eventemitter handler\n   *\n   * @param type The type of event the callback was attached to. Available events are `connected`, `disconnected`, `ready` and `error`\n   * @param handler The callback to unregister.\n   *\n   * @example\n   * <BR>\n   *\n   * ```javascript\n   * const handler = (): void => {\n   *  console.log('Connected !);\n   * };\n   *\n   * // Start listening\n   * api.on('connected', handler);\n   *\n   * // Stop listening\n   * api.off('connected', handler);\n   * ```\n   */\n  off(type, handler) {\n    this.__internal__eventemitter.removeListener(type, handler);\n    return this;\n  }\n  /**\n   * @description Attach an one-time eventemitter handler to listen to a specific event\n   *\n   * @param type The type of event to listen to. Available events are `connected`, `disconnected`, `ready` and `error`\n   * @param handler The callback to be called when the event fires. Depending on the event type, it could fire with additional arguments.\n   *\n   * @example\n   * <BR>\n   *\n   * ```javascript\n   * api.once('connected', (): void => {\n   *   console.log('API has been connected to the endpoint');\n   * });\n   *\n   * api.once('disconnected', (): void => {\n   *   console.log('API has been disconnected from the endpoint');\n   * });\n   * ```\n   */\n  once(type, handler) {\n    this.__internal__eventemitter.once(type, handler);\n    return this;\n  }\n}","map":{"version":3,"names":["EventEmitter","Events","constructor","_defineProperty","emit","type","_len","arguments","length","args","Array","_key","__internal__eventemitter","on","handler","off","removeListener","once"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api/base/Events.js"],"sourcesContent":["import { EventEmitter } from 'eventemitter3';\nexport class Events {\n    __internal__eventemitter = new EventEmitter();\n    emit(type, ...args) {\n        return this.__internal__eventemitter.emit(type, ...args);\n    }\n    /**\n     * @description Attach an eventemitter handler to listen to a specific event\n     *\n     * @param type The type of event to listen to. Available events are `connected`, `disconnected`, `ready` and `error`\n     * @param handler The callback to be called when the event fires. Depending on the event type, it could fire with additional arguments.\n     *\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * api.on('connected', (): void => {\n     *   console.log('API has been connected to the endpoint');\n     * });\n     *\n     * api.on('disconnected', (): void => {\n     *   console.log('API has been disconnected from the endpoint');\n     * });\n     * ```\n     */\n    on(type, handler) {\n        this.__internal__eventemitter.on(type, handler);\n        return this;\n    }\n    /**\n     * @description Remove the given eventemitter handler\n     *\n     * @param type The type of event the callback was attached to. Available events are `connected`, `disconnected`, `ready` and `error`\n     * @param handler The callback to unregister.\n     *\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * const handler = (): void => {\n     *  console.log('Connected !);\n     * };\n     *\n     * // Start listening\n     * api.on('connected', handler);\n     *\n     * // Stop listening\n     * api.off('connected', handler);\n     * ```\n     */\n    off(type, handler) {\n        this.__internal__eventemitter.removeListener(type, handler);\n        return this;\n    }\n    /**\n     * @description Attach an one-time eventemitter handler to listen to a specific event\n     *\n     * @param type The type of event to listen to. Available events are `connected`, `disconnected`, `ready` and `error`\n     * @param handler The callback to be called when the event fires. Depending on the event type, it could fire with additional arguments.\n     *\n     * @example\n     * <BR>\n     *\n     * ```javascript\n     * api.once('connected', (): void => {\n     *   console.log('API has been connected to the endpoint');\n     * });\n     *\n     * api.once('disconnected', (): void => {\n     *   console.log('API has been disconnected from the endpoint');\n     * });\n     * ```\n     */\n    once(type, handler) {\n        this.__internal__eventemitter.once(type, handler);\n        return this;\n    }\n}\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,eAAe;AAC5C,OAAO,MAAMC,MAAM,CAAC;EAAAC,YAAA;IAAAC,eAAA,mCACW,IAAIH,YAAY,CAAC,CAAC;EAAA;EAC7CI,IAAIA,CAACC,IAAI,EAAW;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;IAAA;IACd,OAAO,IAAI,CAACC,wBAAwB,CAACR,IAAI,CAACC,IAAI,EAAE,GAAGI,IAAI,CAAC;EAC5D;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACII,EAAEA,CAACR,IAAI,EAAES,OAAO,EAAE;IACd,IAAI,CAACF,wBAAwB,CAACC,EAAE,CAACR,IAAI,EAAES,OAAO,CAAC;IAC/C,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,GAAGA,CAACV,IAAI,EAAES,OAAO,EAAE;IACf,IAAI,CAACF,wBAAwB,CAACI,cAAc,CAACX,IAAI,EAAES,OAAO,CAAC;IAC3D,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIG,IAAIA,CAACZ,IAAI,EAAES,OAAO,EAAE;IAChB,IAAI,CAACF,wBAAwB,CAACK,IAAI,CAACZ,IAAI,EAAES,OAAO,CAAC;IACjD,OAAO,IAAI;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}