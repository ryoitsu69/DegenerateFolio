{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hmac = void 0;\nclass Hmac {\n  constructor(hashFunctionConstructor, originalKey) {\n    // This implementation is based on https://en.wikipedia.org/wiki/HMAC#Implementation\n    // with the addition of incremental hashing support. Thus part of the algorithm\n    // is in the constructor and the rest in digest().\n    const blockSize = new hashFunctionConstructor().blockSize;\n    this.hash = data => new hashFunctionConstructor().update(data).digest();\n    let key = originalKey;\n    if (key.length > blockSize) {\n      key = this.hash(key);\n    }\n    if (key.length < blockSize) {\n      const zeroPadding = new Uint8Array(blockSize - key.length);\n      key = new Uint8Array([...key, ...zeroPadding]);\n    }\n    // eslint-disable-next-line no-bitwise\n    this.oKeyPad = key.map(keyByte => keyByte ^ 0x5c);\n    // eslint-disable-next-line no-bitwise\n    this.iKeyPad = key.map(keyByte => keyByte ^ 0x36);\n    this.messageHasher = new hashFunctionConstructor();\n    this.blockSize = blockSize;\n    this.update(this.iKeyPad);\n  }\n  update(data) {\n    this.messageHasher.update(data);\n    return this;\n  }\n  digest() {\n    const innerHash = this.messageHasher.digest();\n    return this.hash(new Uint8Array([...this.oKeyPad, ...innerHash]));\n  }\n}\nexports.Hmac = Hmac;","map":{"version":3,"names":["Hmac","constructor","hashFunctionConstructor","originalKey","blockSize","hash","data","update","digest","key","length","zeroPadding","Uint8Array","oKeyPad","map","keyByte","iKeyPad","messageHasher","innerHash","exports"],"sources":["../src/hmac.ts"],"sourcesContent":[null],"mappings":";;;;;;AAEA,MAAaA,IAAI;EAQfC,YAAmBC,uBAAoC,EAAEC,WAAuB;IAC9E;IACA;IACA;IAEA,MAAMC,SAAS,GAAG,IAAIF,uBAAuB,EAAE,CAACE,SAAS;IAEzD,IAAI,CAACC,IAAI,GAAIC,IAAI,IAAK,IAAIJ,uBAAuB,EAAE,CAACK,MAAM,CAACD,IAAI,CAAC,CAACE,MAAM,EAAE;IAEzE,IAAIC,GAAG,GAAGN,WAAW;IACrB,IAAIM,GAAG,CAACC,MAAM,GAAGN,SAAS,EAAE;MAC1BK,GAAG,GAAG,IAAI,CAACJ,IAAI,CAACI,GAAG,CAAC;;IAGtB,IAAIA,GAAG,CAACC,MAAM,GAAGN,SAAS,EAAE;MAC1B,MAAMO,WAAW,GAAG,IAAIC,UAAU,CAACR,SAAS,GAAGK,GAAG,CAACC,MAAM,CAAC;MAC1DD,GAAG,GAAG,IAAIG,UAAU,CAAC,CAAC,GAAGH,GAAG,EAAE,GAAGE,WAAW,CAAC,CAAC;;IAGhD;IACA,IAAI,CAACE,OAAO,GAAGJ,GAAG,CAACK,GAAG,CAAEC,OAAO,IAAKA,OAAO,GAAG,IAAI,CAAC;IACnD;IACA,IAAI,CAACC,OAAO,GAAGP,GAAG,CAACK,GAAG,CAAEC,OAAO,IAAKA,OAAO,GAAG,IAAI,CAAC;IACnD,IAAI,CAACE,aAAa,GAAG,IAAIf,uBAAuB,EAAE;IAClD,IAAI,CAACE,SAAS,GAAGA,SAAS;IAE1B,IAAI,CAACG,MAAM,CAAC,IAAI,CAACS,OAAO,CAAC;EAC3B;EAEOT,MAAMA,CAACD,IAAgB;IAC5B,IAAI,CAACW,aAAa,CAACV,MAAM,CAACD,IAAI,CAAC;IAC/B,OAAO,IAAI;EACb;EAEOE,MAAMA,CAAA;IACX,MAAMU,SAAS,GAAG,IAAI,CAACD,aAAa,CAACT,MAAM,EAAE;IAC7C,OAAO,IAAI,CAACH,IAAI,CAAC,IAAIO,UAAU,CAAC,CAAC,GAAG,IAAI,CAACC,OAAO,EAAE,GAAGK,SAAS,CAAC,CAAC,CAAC;EACnE;;AA7CFC,OAAA,CAAAnB,IAAA,GAAAA,IAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}