{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SocketWrapper = void 0;\nconst isomorphic_ws_1 = __importDefault(require(\"isomorphic-ws\"));\nfunction environmentIsNodeJs() {\n  return typeof process !== \"undefined\" && typeof process.versions !== \"undefined\" && typeof process.versions.node !== \"undefined\";\n}\n/**\n * A thin wrapper around isomorphic-ws' WebSocket class that adds\n * - constant message/error/open/close handlers\n * - explict connection via a connect() method\n * - type support for events\n * - handling of corner cases in the open and close behaviour\n */\nclass SocketWrapper {\n  constructor(url, messageHandler, errorHandler, openHandler, closeHandler, timeout = 10000) {\n    this.closed = false;\n    this.connected = new Promise((resolve, reject) => {\n      this.connectedResolver = resolve;\n      this.connectedRejecter = reject;\n    });\n    this.url = url;\n    this.messageHandler = messageHandler;\n    this.errorHandler = errorHandler;\n    this.openHandler = openHandler;\n    this.closeHandler = closeHandler;\n    this.timeout = timeout;\n  }\n  /**\n   * returns a promise that resolves when connection is open\n   */\n  connect() {\n    const socket = new isomorphic_ws_1.default(this.url);\n    socket.onerror = error => {\n      this.clearTimeout();\n      if (this.errorHandler) {\n        this.errorHandler(error);\n      }\n    };\n    socket.onmessage = messageEvent => {\n      this.messageHandler({\n        type: messageEvent.type,\n        data: messageEvent.data\n      });\n    };\n    socket.onopen = _ => {\n      this.clearTimeout();\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.connectedResolver();\n      if (this.openHandler) {\n        this.openHandler();\n      }\n    };\n    socket.onclose = closeEvent => {\n      this.closed = true;\n      if (this.closeHandler) {\n        this.closeHandler(closeEvent);\n      }\n    };\n    const started = Date.now();\n    this.timeoutId = setTimeout(() => {\n      socket.onmessage = () => 0;\n      socket.onerror = () => 0;\n      socket.onopen = () => 0;\n      socket.onclose = () => 0;\n      socket.close();\n      this.socket = undefined;\n      const elapsed = Math.floor(Date.now() - started);\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.connectedRejecter(`Connection attempt timed out after ${elapsed} ms`);\n    }, this.timeout);\n    this.socket = socket;\n  }\n  /**\n   * Closes an established connection and aborts other connection states\n   */\n  disconnect() {\n    if (!this.socket) {\n      throw new Error(\"Socket undefined. This must be called after connecting.\");\n    }\n    this.clearTimeout();\n    switch (this.socket.readyState) {\n      case isomorphic_ws_1.default.OPEN:\n        this.socket.close(1000 /* Normal Closure */);\n        break;\n      case isomorphic_ws_1.default.CLOSED:\n        // nothing to be done\n        break;\n      case isomorphic_ws_1.default.CONNECTING:\n        // imitate missing abort API\n        this.socket.onopen = () => 0;\n        this.socket.onclose = () => 0;\n        this.socket.onerror = () => 0;\n        this.socket.onmessage = () => 0;\n        this.socket = undefined;\n        if (this.closeHandler) {\n          this.closeHandler({\n            wasClean: false,\n            code: 4001\n          });\n        }\n        break;\n      case isomorphic_ws_1.default.CLOSING:\n        // already closing. Let it proceed\n        break;\n      default:\n        throw new Error(`Unknown readyState: ${this.socket.readyState}`);\n    }\n  }\n  async send(data) {\n    return new Promise((resolve, reject) => {\n      if (!this.socket) {\n        throw new Error(\"Socket undefined. This must be called after connecting.\");\n      }\n      if (this.closed) {\n        throw new Error(\"Socket was closed, so no data can be sent anymore.\");\n      }\n      // this exception should be thrown by send() automatically according to\n      // https://developer.mozilla.org/de/docs/Web/API/WebSocket#send() but it does not work in browsers\n      if (this.socket.readyState !== isomorphic_ws_1.default.OPEN) {\n        throw new Error(\"Websocket is not open\");\n      }\n      if (environmentIsNodeJs()) {\n        this.socket.send(data, err => err ? reject(err) : resolve());\n      } else {\n        // Browser websocket send method does not accept a callback\n        this.socket.send(data);\n        resolve();\n      }\n    });\n  }\n  /**\n   * Clears the timeout function, such that no timeout error will be raised anymore. This should be\n   * called when the connection is established, a connection error occurred or the socket is disconnected.\n   *\n   * This method must not be called before `connect()`.\n   * This method is idempotent.\n   */\n  clearTimeout() {\n    if (!this.timeoutId) {\n      throw new Error(\"Timeout ID not set. This should not happen and usually means connect() was not called.\");\n    }\n    // Note: do not unset this.timeoutId to allow multiple calls to this function\n    clearTimeout(this.timeoutId);\n  }\n}\nexports.SocketWrapper = SocketWrapper;","map":{"version":3,"names":["isomorphic_ws_1","__importDefault","require","environmentIsNodeJs","process","versions","node","SocketWrapper","constructor","url","messageHandler","errorHandler","openHandler","closeHandler","timeout","closed","connected","Promise","resolve","reject","connectedResolver","connectedRejecter","connect","socket","default","onerror","error","clearTimeout","onmessage","messageEvent","type","data","onopen","_","onclose","closeEvent","started","Date","now","timeoutId","setTimeout","close","undefined","elapsed","Math","floor","disconnect","Error","readyState","OPEN","CLOSED","CONNECTING","wasClean","code","CLOSING","send","err","exports"],"sources":["../src/socketwrapper.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}