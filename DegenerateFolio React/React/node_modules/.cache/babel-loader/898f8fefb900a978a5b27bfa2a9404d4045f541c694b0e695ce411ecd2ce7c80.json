{"ast":null,"code":"function checkDataUrl(url, mimes) {\n  if (Array.isArray(mimes)) {\n    for (const mime of mimes) if (url.startsWith(`data:${mime}`)) return !0;\n    return !1;\n  }\n  return url.startsWith(`data:${mimes}`);\n}\nexport { checkDataUrl };","map":{"version":3,"names":["checkDataUrl","url","mimes","Array","isArray","mime","startsWith"],"sources":["/home/ryoitsu/node_modules/@pixi/assets/src/utils/checkDataUrl.ts"],"sourcesContent":["export function checkDataUrl(url: string, mimes: string | string[]): boolean\n{\n    if (Array.isArray(mimes))\n    {\n        for (const mime of mimes)\n        {\n            if (url.startsWith(`data:${mime}`)) return true;\n        }\n\n        return false;\n    }\n\n    return url.startsWith(`data:${mimes}`);\n}\n"],"mappings":"AAAgB,SAAAA,aAAaC,GAAA,EAAaC,KAAA,EAC1C;EACQ,IAAAC,KAAA,CAAMC,OAAA,CAAQF,KAAK,GACvB;IACI,WAAWG,IAAA,IAAQH,KAAA,EAEf,IAAID,GAAA,CAAIK,UAAA,CAAW,QAAQD,IAAI,EAAE,GAAU;IAGxC;EACX;EAEA,OAAOJ,GAAA,CAAIK,UAAA,CAAW,QAAQJ,KAAK,EAAE;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}