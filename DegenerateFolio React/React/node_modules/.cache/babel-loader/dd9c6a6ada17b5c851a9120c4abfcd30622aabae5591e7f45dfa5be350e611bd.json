{"ast":null,"code":"\"use strict\";\n\nfunction getGlobalRenderableBounds(renderables, bounds) {\n  bounds.clear();\n  const tempMatrix = bounds.matrix;\n  for (let i = 0; i < renderables.length; i++) {\n    const renderable = renderables[i];\n    if (renderable.globalDisplayStatus < 7) {\n      continue;\n    }\n    bounds.matrix = renderable.worldTransform;\n    renderable.addBounds(bounds);\n  }\n  bounds.matrix = tempMatrix;\n  return bounds;\n}\nexport { getGlobalRenderableBounds };","map":{"version":3,"names":["getGlobalRenderableBounds","renderables","bounds","clear","tempMatrix","matrix","i","length","renderable","globalDisplayStatus","worldTransform","addBounds"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/scene/container/bounds/getRenderableBounds.ts"],"sourcesContent":["import type { Renderable } from '../../../rendering/renderers/shared/Renderable';\nimport type { Bounds } from './Bounds';\n\nexport function getGlobalRenderableBounds(renderables: Renderable[], bounds: Bounds): Bounds\n{\n    bounds.clear();\n\n    // instead of copying the matrix each time we are assigning it in bounds\n    // this is a performance hack :D\n    // so we need to restore the matrix after we are done\n\n    const tempMatrix = bounds.matrix;\n\n    for (let i = 0; i < renderables.length; i++)\n    {\n        const renderable = renderables[i];\n\n        if (renderable.globalDisplayStatus < 0b111)\n        {\n            continue;\n        }\n\n        bounds.matrix = renderable.worldTransform;\n        renderable.addBounds(bounds);\n    }\n\n    bounds.matrix = tempMatrix;\n\n    return bounds;\n}\n"],"mappings":";;AAGgB,SAAAA,0BAA0BC,WAAA,EAA2BC,MACrE;EACIA,MAAA,CAAOC,KAAM;EAMb,MAAMC,UAAA,GAAaF,MAAO,CAAAG,MAAA;EAE1B,SAASC,CAAI,MAAGA,CAAI,GAAAL,WAAA,CAAYM,MAAA,EAAQD,CACxC;IACU,MAAAE,UAAA,GAAaP,WAAA,CAAYK,CAAC;IAE5B,IAAAE,UAAA,CAAWC,mBAAA,GAAsB,CACrC;MACI;IAAA;IAGJP,MAAA,CAAOG,MAAA,GAASG,UAAW,CAAAE,cAAA;IAC3BF,UAAA,CAAWG,SAAA,CAAUT,MAAM;EAAA;EAG/BA,MAAA,CAAOG,MAAS,GAAAD,UAAA;EAET,OAAAF,MAAA;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}