{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validator = exports.utils = exports.types = exports.rpcMethods = exports.providers = exports.net = exports.eth = exports.errors = exports.core = exports.Web3Validator = exports.WebSocketProvider = exports.HttpProvider = exports.Net = exports.Personal = exports.Iban = exports.Contract = exports.Web3Eth = exports.Web3PromiEvent = exports.Web3EthPluginBase = exports.Web3PluginBase = exports.Web3Context = exports.Web3 = void 0;\n/**\n * This is the main (or 'umbrella') class of the web3.js library.\n *\n * ```ts\n * import Web3 from 'web3';\n *\n * > Web3.utils\n * > Web3.version\n * > Web3.givenProvider\n * > Web3.providers\n * > Web3.modules\n * ```\n *\n * # Web3.modules\n *\n * ```ts\n * Web3.modules\n * ```\n *\n * Will return an object with the classes of all major sub modules, to be able to instantiate them manually.\n *\n * #### Returns\n *\n *  `Object` A list of module constructors:\n *\n *\n *  + `Eth` - `Constructor`: The Eth module for interacting with the Ethereum network\n *\n *\n *  + `Net` - `Constructor`: The Net module for interacting with network properties.\n *\n *\n *  + `Personal` - `constructor`: The Personal module for interacting with the Ethereum accounts (web3.eth.personal).\n *\n * #### Example\n *\n * ```ts\n * Web3.modules\n * > {\n *   \tEth: Eth(provider),\n *   \tNet: Net(provider),\n *   \tPersonal: Personal(provider),\n *   }\n * ```\n *\n * See details: {@link Web3.modules}\n *\n * # Web3 Instance\n *\n * The Web3 class is an umbrella package to house all Ethereum related modules.\n *\n * ```ts\n * import Web3 from 'web3';\n *\n * // \"Web3.givenProvider\" will be set if in an Ethereum supported browser.\n * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');\n *\n * > web3.eth\n * > web3.utils\n * > web3.version\n * ```\n *\n * ### version\n *\n * Contains the current package version of the web3.js library.\n *\n * #### Returns\n * //todo enable when functionality added\n * // @see Web3.version\n *\n * ### utils\n *\n * Static accessible property of the Web3 class and property of the instance as well.\n *\n * ```ts\n * Web3.utils\n * web3.utils\n * ```\n *\n * Utility functions are also exposed on the `Web3` class object diretly.\n *\n * //todo enable when implemented\n * //See details: {@link Web3.utils}\n *\n * ### setProvider\n *\n * ```ts\n * web3.setProvider(myProvider)\n * web3.eth.setProvider(myProvider)\n * ...\n * ```\n *\n * Will change the provider for its module.\n *\n * **_NOTE:_** When called on the umbrella package web3 it will also set the provider for all sub modules web3.eth  etc.\n *\n * #### Parameters\n *  `Object`  - `myProvider`: a valid provider.\n *\n * #### Returns\n * `Boolean`\n *\n * See details: {@link Web3.setProvider}\n *\n * #### Example: Local Geth Node\n * ```ts\n * import Web3 from \"web3\";\n * let web3: Web3 = new Web3('http://localhost:8545');\n * // or\n * let web3: Web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n *\n * // change provider\n * web3.setProvider('ws://localhost:8546');\n * // or\n * web3.setProvider(new Web3.providers.WebsocketProvider('ws://localhost:8546'));\n *\n * //todo add IPC provider\n * ```\n *\n * #### Example: Remote Geth Node\n *\n * ```ts\n * // Using a remote node provider, like Alchemy (https://www.alchemyapi.io/supernode), is simple.\n * import Web3 from \"web3\";\n * let web3: Web3 = new Web3(\"https://eth-mainnet.alchemyapi.io/v2/your-api-key\");\n * ```\n *\n * ### providers\n *\n * ```ts\n * web3.providers\n * web3.eth.providers\n * ```\n * Contains the current available providers.\n *\n * #### Returns\n *  `Object` with the following providers:\n *\n *\n *  + `Object` - `HttpProvider`: HTTP provider, does not support subscriptions.\n *\n *\n *  + `Object` - `WebSocketProvider`: The WebSocket provider is the standard for usage in legacy browsers.\n *\n *\n *  + `Object` - `IpcProvider`: The IPC provider is used in node.js dapps when running a local node. Gives the most secure connection.\n *\n *\n * #### Example\n * ```ts\n * import { Web3 } from 'web3';\n * // use the given Provider or instantiate a new websocket provider\n * let web3 = new Web3(Web3.givenProvider || 'ws://remotenode.com:8546');\n * // or\n * let web3 = new Web3(Web3.givenProvider || new Web3.providers.WebsocketProvider('ws://remotenode.com:8546'));\n *\n * // Using the IPC provider in node.js\n * import { Web3 } from 'web3';\n * import { IpcProvider } from 'web3-providers-ipc';\n * var web3 = new Web3(new IpcProvider('/Users/myuser/Library/Ethereum/geth.ipc')); // mac os path\n * // on windows the path is: \"\\\\\\\\.\\\\pipe\\\\geth.ipc\"\n * // on linux the path is: \"/users/myuser/.ethereum/geth.ipc\"\n * ```\n * #### Configuration\n *\n * ```ts\n *\n * //===\n * //Http\n * //===\n *\n * import Web3HttpProvider, { HttpProviderOptions } from \"web3-providers-http\";\n *\n * let options: HttpProviderOptions = {\n * \tproviderOptions: {\n * \t\tkeepalive: true,\n * \t\tcredentials: \"omit\",\n * \t\theaders: {\n * \t\t\t\"Access-Control-Allow-Origin\": \"*\",\n * \t\t},\n * \t},\n * };\n *\n *\n * var provider = new Web3HttpProvider(\"http://localhost:8545\", options);\n * web3.setProvider(provider);\n *\n * //===\n * //WebSockets\n * //===\n * import Web3WsProvider, {\n * \tClientOptions,\n * \tClientRequestArgs,\n * \tReconnectOptions,\n * } from \"web3-providers-ws\";\n *\n *\n * let clientOptions: ClientOptions = {\n * \t// Useful for credentialed urls, e.g: ws://username:password@localhost:8546\n * \theaders: {\n * \t\tauthorization: \"Basic username:password\",\n * \t},\n * \tmaxPayload: 100000000,\n * };\n *\n * // Enable auto reconnection\n * let reconnectOptions: ReconnectOptions = {\n * \tautoReconnect: true,\n * \tdelay: 5000, // ms\n * \tmaxAttempts: 5,\n * };\n *\n * //clientOptions and reconnectOptions are optional\n * //clientOptions: ClientOptions | ClientRequestArgs\n * let ws = new Web3WsProvider(\n * \"ws://localhost:8546\",\n * clientOptions,\n * reconnectOptions\n * );\n * web3.setProvider(ws);\n *\n * ```\n * More information for the Http and Websocket provider modules can be found here:\n *\n *\n * - {@link HttpProvider}\n *\n *\n * - {@link WebSocketProvider}\n *\n * See details: {@link Web3.providers}\n *\n *\n * ### givenProvider\n *\n * ```ts\n * web3.givenProvider\n * web3.eth.givenProvider\n * ...\n * ```\n * When using web3.js in an Ethereum compatible browser, it will set with the current native provider by that browser.\n * Will return the given provider by the (browser) environment, otherwise `undefined`.\n *\n * #### Returns\n * `Object` -  The given provider set or `undefined`.\n *\n * See details: {@link Web3.givenProvider}\n *\n * ### currentProvider\n *\n * ```ts\n * web3.currentProvider\n * web3.eth.currentProvider\n * ...\n * ```\n * Will return the current provider, otherwise `undefined`.\n *\n * #### Returns\n * `Object`: The current provider, otherwise `undefined`.\n *\n * See details: {@link Web3.currentProvider}\n *\n * ### BatchRequest\n *\n * ```ts\n * new web3.BatchRequest()\n * new web3.BatchRequest()\n * ...\n * ```\n * Class to create and execute batch requests.\n *\n *  #### Parameters\n *  none\n *\n * #### Returns\n * `Object`: With the following methods:\n *\n * + `add(request)`: To add a request object to the batch call.\n *\n * + `execute()` : To execute the batch request.\n *\n * #### Example\n * ```ts\n * let request1: JsonRpcOptionalRequest = {\n * \tid: 10,\n * \tmethod: 'eth_getBalance',\n * \tparams: [\"0xdc6bad79dab7ea733098f66f6c6f9dd008da3258\", 'latest'],\n * };\n * let request2: JsonRpcOptionalRequest = {\n * \tid: 11,\n * \tmethod: 'eth_getBalance',\n * \tparams: [\"0x962f9a9c2a6c092474d24def35eccb3d9363265e\", 'latest'],\n * };\n *\n * const batch = new web3.BatchRequest();\n *\n *  batch.add(request1);\n *  batch.add(request2);\n * // add returns a deferred promise which can be used to run specific code after completion of each respective request.\n * //const request2Promise = batch.add(request2);\n *\n * const response = await batch.execute();\n * ```\n * See details: {@link Web3.BatchRequest}\n */\n/**\n * This comment _supports3_ [Markdown](https://marked.js.org/)\n */\nconst web3_js_1 = __importDefault(require(\"./web3.js\"));\nexports.Web3 = web3_js_1.default;\n__exportStar(require(\"./types.js\"), exports);\nexports.default = web3_js_1.default;\nvar web3_core_1 = require(\"web3-core\");\nObject.defineProperty(exports, \"Web3Context\", {\n  enumerable: true,\n  get: function () {\n    return web3_core_1.Web3Context;\n  }\n});\nObject.defineProperty(exports, \"Web3PluginBase\", {\n  enumerable: true,\n  get: function () {\n    return web3_core_1.Web3PluginBase;\n  }\n});\nObject.defineProperty(exports, \"Web3EthPluginBase\", {\n  enumerable: true,\n  get: function () {\n    return web3_core_1.Web3EthPluginBase;\n  }\n});\nObject.defineProperty(exports, \"Web3PromiEvent\", {\n  enumerable: true,\n  get: function () {\n    return web3_core_1.Web3PromiEvent;\n  }\n});\nvar web3_eth_1 = require(\"web3-eth\");\nObject.defineProperty(exports, \"Web3Eth\", {\n  enumerable: true,\n  get: function () {\n    return web3_eth_1.Web3Eth;\n  }\n});\nvar web3_eth_contract_1 = require(\"web3-eth-contract\");\nObject.defineProperty(exports, \"Contract\", {\n  enumerable: true,\n  get: function () {\n    return web3_eth_contract_1.Contract;\n  }\n});\nvar web3_eth_iban_1 = require(\"web3-eth-iban\");\nObject.defineProperty(exports, \"Iban\", {\n  enumerable: true,\n  get: function () {\n    return web3_eth_iban_1.Iban;\n  }\n});\nvar web3_eth_personal_1 = require(\"web3-eth-personal\");\nObject.defineProperty(exports, \"Personal\", {\n  enumerable: true,\n  get: function () {\n    return web3_eth_personal_1.Personal;\n  }\n});\nvar web3_net_1 = require(\"web3-net\");\nObject.defineProperty(exports, \"Net\", {\n  enumerable: true,\n  get: function () {\n    return web3_net_1.Net;\n  }\n});\nvar web3_providers_http_1 = require(\"web3-providers-http\");\nObject.defineProperty(exports, \"HttpProvider\", {\n  enumerable: true,\n  get: function () {\n    return web3_providers_http_1.HttpProvider;\n  }\n});\nvar web3_providers_ws_1 = require(\"web3-providers-ws\");\nObject.defineProperty(exports, \"WebSocketProvider\", {\n  enumerable: true,\n  get: function () {\n    return web3_providers_ws_1.WebSocketProvider;\n  }\n});\nvar web3_validator_1 = require(\"web3-validator\");\nObject.defineProperty(exports, \"Web3Validator\", {\n  enumerable: true,\n  get: function () {\n    return web3_validator_1.Web3Validator;\n  }\n});\n/**\n * Export all packages grouped by name spaces\n */\nexports.core = __importStar(require(\"web3-core\"));\nexports.errors = __importStar(require(\"web3-errors\"));\nexports.eth = __importStar(require(\"./eth.exports.js\"));\nexports.net = __importStar(require(\"web3-net\"));\nexports.providers = __importStar(require(\"./providers.exports.js\"));\nexports.rpcMethods = __importStar(require(\"web3-rpc-methods\"));\nexports.types = __importStar(require(\"web3-types\"));\nexports.utils = __importStar(require(\"web3-utils\"));\nexports.validator = __importStar(require(\"web3-validator\"));\n/**\n * Export all types from `web3-types` without a namespace (in addition to being available at `types` namespace).\n * To enable the user to write: `function something(): Web3Api` without the need for `types.Web3Api`.\n * And the same for `web3-errors`. Because this package contains error classes and constants.\n */\n__exportStar(require(\"web3-errors\"), exports);\n__exportStar(require(\"web3-types\"), exports);","map":{"version":3,"names":["web3_js_1","__importDefault","require","exports","Web3","default","__exportStar","web3_core_1","Object","defineProperty","enumerable","get","Web3Context","Web3PluginBase","Web3EthPluginBase","Web3PromiEvent","web3_eth_1","Web3Eth","web3_eth_contract_1","Contract","web3_eth_iban_1","Iban","web3_eth_personal_1","Personal","web3_net_1","Net","web3_providers_http_1","HttpProvider","web3_providers_ws_1","WebSocketProvider","web3_validator_1","Web3Validator","core","__importStar","errors","eth","net","providers","rpcMethods","types","utils","validator"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/web3/src/index.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * This is the main (or 'umbrella') class of the web3.js library.\n *\n * ```ts\n * import Web3 from 'web3';\n *\n * > Web3.utils\n * > Web3.version\n * > Web3.givenProvider\n * > Web3.providers\n * > Web3.modules\n * ```\n *\n * # Web3.modules\n *\n * ```ts\n * Web3.modules\n * ```\n *\n * Will return an object with the classes of all major sub modules, to be able to instantiate them manually.\n *\n * #### Returns\n *\n *  `Object` A list of module constructors:\n *\n *\n *  + `Eth` - `Constructor`: The Eth module for interacting with the Ethereum network\n *\n *\n *  + `Net` - `Constructor`: The Net module for interacting with network properties.\n *\n *\n *  + `Personal` - `constructor`: The Personal module for interacting with the Ethereum accounts (web3.eth.personal).\n *\n * #### Example\n *\n * ```ts\n * Web3.modules\n * > {\n *   \tEth: Eth(provider),\n *   \tNet: Net(provider),\n *   \tPersonal: Personal(provider),\n *   }\n * ```\n *\n * See details: {@link Web3.modules}\n *\n * # Web3 Instance\n *\n * The Web3 class is an umbrella package to house all Ethereum related modules.\n *\n * ```ts\n * import Web3 from 'web3';\n *\n * // \"Web3.givenProvider\" will be set if in an Ethereum supported browser.\n * const web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');\n *\n * > web3.eth\n * > web3.utils\n * > web3.version\n * ```\n *\n * ### version\n *\n * Contains the current package version of the web3.js library.\n *\n * #### Returns\n * //todo enable when functionality added\n * // @see Web3.version\n *\n * ### utils\n *\n * Static accessible property of the Web3 class and property of the instance as well.\n *\n * ```ts\n * Web3.utils\n * web3.utils\n * ```\n *\n * Utility functions are also exposed on the `Web3` class object diretly.\n *\n * //todo enable when implemented\n * //See details: {@link Web3.utils}\n *\n * ### setProvider\n *\n * ```ts\n * web3.setProvider(myProvider)\n * web3.eth.setProvider(myProvider)\n * ...\n * ```\n *\n * Will change the provider for its module.\n *\n * **_NOTE:_** When called on the umbrella package web3 it will also set the provider for all sub modules web3.eth  etc.\n *\n * #### Parameters\n *  `Object`  - `myProvider`: a valid provider.\n *\n * #### Returns\n * `Boolean`\n *\n * See details: {@link Web3.setProvider}\n *\n * #### Example: Local Geth Node\n * ```ts\n * import Web3 from \"web3\";\n * let web3: Web3 = new Web3('http://localhost:8545');\n * // or\n * let web3: Web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n *\n * // change provider\n * web3.setProvider('ws://localhost:8546');\n * // or\n * web3.setProvider(new Web3.providers.WebsocketProvider('ws://localhost:8546'));\n *\n * //todo add IPC provider\n * ```\n *\n * #### Example: Remote Geth Node\n *\n * ```ts\n * // Using a remote node provider, like Alchemy (https://www.alchemyapi.io/supernode), is simple.\n * import Web3 from \"web3\";\n * let web3: Web3 = new Web3(\"https://eth-mainnet.alchemyapi.io/v2/your-api-key\");\n * ```\n *\n * ### providers\n *\n * ```ts\n * web3.providers\n * web3.eth.providers\n * ```\n * Contains the current available providers.\n *\n * #### Returns\n *  `Object` with the following providers:\n *\n *\n *  + `Object` - `HttpProvider`: HTTP provider, does not support subscriptions.\n *\n *\n *  + `Object` - `WebSocketProvider`: The WebSocket provider is the standard for usage in legacy browsers.\n *\n *\n *  + `Object` - `IpcProvider`: The IPC provider is used in node.js dapps when running a local node. Gives the most secure connection.\n *\n *\n * #### Example\n * ```ts\n * import { Web3 } from 'web3';\n * // use the given Provider or instantiate a new websocket provider\n * let web3 = new Web3(Web3.givenProvider || 'ws://remotenode.com:8546');\n * // or\n * let web3 = new Web3(Web3.givenProvider || new Web3.providers.WebsocketProvider('ws://remotenode.com:8546'));\n *\n * // Using the IPC provider in node.js\n * import { Web3 } from 'web3';\n * import { IpcProvider } from 'web3-providers-ipc';\n * var web3 = new Web3(new IpcProvider('/Users/myuser/Library/Ethereum/geth.ipc')); // mac os path\n * // on windows the path is: \"\\\\\\\\.\\\\pipe\\\\geth.ipc\"\n * // on linux the path is: \"/users/myuser/.ethereum/geth.ipc\"\n * ```\n * #### Configuration\n *\n * ```ts\n *\n * //===\n * //Http\n * //===\n *\n * import Web3HttpProvider, { HttpProviderOptions } from \"web3-providers-http\";\n *\n * let options: HttpProviderOptions = {\n * \tproviderOptions: {\n * \t\tkeepalive: true,\n * \t\tcredentials: \"omit\",\n * \t\theaders: {\n * \t\t\t\"Access-Control-Allow-Origin\": \"*\",\n * \t\t},\n * \t},\n * };\n *\n *\n * var provider = new Web3HttpProvider(\"http://localhost:8545\", options);\n * web3.setProvider(provider);\n *\n * //===\n * //WebSockets\n * //===\n * import Web3WsProvider, {\n * \tClientOptions,\n * \tClientRequestArgs,\n * \tReconnectOptions,\n * } from \"web3-providers-ws\";\n *\n *\n * let clientOptions: ClientOptions = {\n * \t// Useful for credentialed urls, e.g: ws://username:password@localhost:8546\n * \theaders: {\n * \t\tauthorization: \"Basic username:password\",\n * \t},\n * \tmaxPayload: 100000000,\n * };\n *\n * // Enable auto reconnection\n * let reconnectOptions: ReconnectOptions = {\n * \tautoReconnect: true,\n * \tdelay: 5000, // ms\n * \tmaxAttempts: 5,\n * };\n *\n * //clientOptions and reconnectOptions are optional\n * //clientOptions: ClientOptions | ClientRequestArgs\n * let ws = new Web3WsProvider(\n * \"ws://localhost:8546\",\n * clientOptions,\n * reconnectOptions\n * );\n * web3.setProvider(ws);\n *\n * ```\n * More information for the Http and Websocket provider modules can be found here:\n *\n *\n * - {@link HttpProvider}\n *\n *\n * - {@link WebSocketProvider}\n *\n * See details: {@link Web3.providers}\n *\n *\n * ### givenProvider\n *\n * ```ts\n * web3.givenProvider\n * web3.eth.givenProvider\n * ...\n * ```\n * When using web3.js in an Ethereum compatible browser, it will set with the current native provider by that browser.\n * Will return the given provider by the (browser) environment, otherwise `undefined`.\n *\n * #### Returns\n * `Object` -  The given provider set or `undefined`.\n *\n * See details: {@link Web3.givenProvider}\n *\n * ### currentProvider\n *\n * ```ts\n * web3.currentProvider\n * web3.eth.currentProvider\n * ...\n * ```\n * Will return the current provider, otherwise `undefined`.\n *\n * #### Returns\n * `Object`: The current provider, otherwise `undefined`.\n *\n * See details: {@link Web3.currentProvider}\n *\n * ### BatchRequest\n *\n * ```ts\n * new web3.BatchRequest()\n * new web3.BatchRequest()\n * ...\n * ```\n * Class to create and execute batch requests.\n *\n *  #### Parameters\n *  none\n *\n * #### Returns\n * `Object`: With the following methods:\n *\n * + `add(request)`: To add a request object to the batch call.\n *\n * + `execute()` : To execute the batch request.\n *\n * #### Example\n * ```ts\n * let request1: JsonRpcOptionalRequest = {\n * \tid: 10,\n * \tmethod: 'eth_getBalance',\n * \tparams: [\"0xdc6bad79dab7ea733098f66f6c6f9dd008da3258\", 'latest'],\n * };\n * let request2: JsonRpcOptionalRequest = {\n * \tid: 11,\n * \tmethod: 'eth_getBalance',\n * \tparams: [\"0x962f9a9c2a6c092474d24def35eccb3d9363265e\", 'latest'],\n * };\n *\n * const batch = new web3.BatchRequest();\n *\n *  batch.add(request1);\n *  batch.add(request2);\n * // add returns a deferred promise which can be used to run specific code after completion of each respective request.\n * //const request2Promise = batch.add(request2);\n *\n * const response = await batch.execute();\n * ```\n * See details: {@link Web3.BatchRequest}\n */\n/**\n * This comment _supports3_ [Markdown](https://marked.js.org/)\n */\n\nimport Web3 from './web3.js';\n\nexport * from './types.js';\nexport default Web3;\n\n/**\n * Named exports for all objects which are the default-exported-object in their packages\n */\nexport { Web3 };\nexport { Web3Context, Web3PluginBase, Web3EthPluginBase, Web3PromiEvent } from 'web3-core';\nexport { Web3Eth } from 'web3-eth';\nexport { Contract, ContractDeploySend, ContractMethodSend } from 'web3-eth-contract';\nexport { Iban } from 'web3-eth-iban';\nexport { Personal } from 'web3-eth-personal';\nexport { Net } from 'web3-net';\nexport { HttpProvider } from 'web3-providers-http';\nexport { WebSocketProvider } from 'web3-providers-ws';\nexport { Web3Validator } from 'web3-validator';\n\n/**\n * Export all packages grouped by name spaces\n */\nexport * as core from 'web3-core';\nexport * as errors from 'web3-errors';\nexport * as eth from './eth.exports.js';\nexport * as net from 'web3-net';\nexport * as providers from './providers.exports.js';\nexport * as rpcMethods from 'web3-rpc-methods';\nexport * as types from 'web3-types';\nexport * as utils from 'web3-utils';\nexport * as validator from 'web3-validator';\n\n/**\n * Export all types from `web3-types` without a namespace (in addition to being available at `types` namespace).\n * To enable the user to write: `function something(): Web3Api` without the need for `types.Web3Api`.\n * And the same for `web3-errors`. Because this package contains error classes and constants.\n */\nexport * from 'web3-errors';\nexport * from 'web3-types';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}