{"ast":null,"code":"import { loadFontAsBase64 } from './loadFontAsBase64.mjs';\n\"use strict\";\nasync function loadFontCSS(style, url) {\n  const dataSrc = await loadFontAsBase64(url);\n  return `@font-face {\n        font-family: \"${style.fontFamily}\";\n        src: url('${dataSrc}');\n        font-weight: ${style.fontWeight};\n        font-style: ${style.fontStyle};\n    }`;\n}\nexport { loadFontCSS };","map":{"version":3,"names":["loadFontCSS","style","url","dataSrc","loadFontAsBase64","fontFamily","fontWeight","fontStyle"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/scene/text-html/utils/loadFontCSS.ts"],"sourcesContent":["import { loadFontAsBase64 } from './loadFontAsBase64';\n\nexport interface FontCSSStyleOptions\n{\n    fontFamily: string | string[]\n    fontWeight: string\n    fontStyle: string\n}\n\n/**\n * This will take a font url and a style and return a css string that can be injected into a style tag\n * This will contain inlined base64 font and the font family information\n * @param style - the style to generate the css for\n * @param url - The url to load the font from\n * @returns - The css string\n */\nexport async function loadFontCSS(style: FontCSSStyleOptions, url: string): Promise<string>\n{\n    const dataSrc = await loadFontAsBase64(url);\n\n    return `@font-face {\n        font-family: \"${style.fontFamily}\";\n        src: url('${dataSrc}');\n        font-weight: ${style.fontWeight};\n        font-style: ${style.fontStyle};\n    }`;\n}\n"],"mappings":";;AAgBsB,eAAAA,YAAYC,KAAA,EAA4BC,GAC9D;EACU,MAAAC,OAAA,GAAU,MAAMC,gBAAA,CAAiBF,GAAG;EAEnC;AAAA,wBACaD,KAAA,CAAMI,UAAU;AAAA,oBACpBF,OAAO;AAAA,uBACJF,KAAA,CAAMK,UAAU;AAAA,sBACjBL,KAAA,CAAMM,SAAS;AAAA;AAErC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}