{"ast":null,"code":"\"use strict\";\n\nfunction isRenderingToScreen(renderTarget) {\n  const resource = renderTarget.colorTexture.source.resource;\n  return globalThis.HTMLCanvasElement && resource instanceof HTMLCanvasElement && document.body.contains(resource);\n}\nexport { isRenderingToScreen };","map":{"version":3,"names":["isRenderingToScreen","renderTarget","resource","colorTexture","source","globalThis","HTMLCanvasElement","document","body","contains"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/renderers/shared/renderTarget/isRenderingToScreen.ts"],"sourcesContent":["import type { RenderTarget } from './RenderTarget';\n\n/**\n * Checks if the render target is viewable on the screen\n * Basically, is it a canvas element and is that canvas element in the DOM\n * @param renderTarget - the render target to check\n * @returns true if the render target is viewable on the screen\n */\nexport function isRenderingToScreen(renderTarget: RenderTarget): boolean\n{\n    const resource = renderTarget.colorTexture.source.resource;\n\n    return ((globalThis.HTMLCanvasElement && resource instanceof HTMLCanvasElement) && document.body.contains(resource));\n}\n"],"mappings":";;AAQO,SAASA,oBAAoBC,YACpC;EACU,MAAAC,QAAA,GAAWD,YAAa,CAAAE,YAAA,CAAaC,MAAO,CAAAF,QAAA;EAElD,OAASG,UAAA,CAAWC,iBAAqB,IAAAJ,QAAA,YAAoBI,iBAAA,IAAsBC,QAAS,CAAAC,IAAA,CAAKC,QAAA,CAASP,QAAQ;AACtH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}