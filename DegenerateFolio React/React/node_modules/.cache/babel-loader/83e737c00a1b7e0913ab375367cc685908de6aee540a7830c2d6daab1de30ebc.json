{"ast":null,"code":"import { ExtensionType } from '../../extensions/Extensions.mjs';\nimport { isWebGLSupported } from '../../utils/browser/isWebGLSupported.mjs';\nimport { isWebGPUSupported } from '../../utils/browser/isWebGPUSupported.mjs';\n\"use strict\";\nconst detectBasis = {\n  extension: {\n    type: ExtensionType.DetectionParser,\n    priority: 3\n  },\n  test: async () => {\n    if (await isWebGPUSupported()) return true;\n    if (isWebGLSupported()) return true;\n    return false;\n  },\n  add: async formats => [...formats, \"basis\"],\n  remove: async formats => formats.filter(f => f !== \"basis\")\n};\nexport { detectBasis };","map":{"version":3,"names":["detectBasis","extension","type","ExtensionType","DetectionParser","priority","test","isWebGPUSupported","isWebGLSupported","add","formats","remove","filter","f"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/compressed-textures/basis/detectBasis.ts"],"sourcesContent":["import { ExtensionType } from '../../extensions/Extensions';\nimport { isWebGLSupported } from '../../utils/browser/isWebGLSupported';\nimport { isWebGPUSupported } from '../../utils/browser/isWebGPUSupported';\n\nimport type { FormatDetectionParser } from '../../assets/detections/types';\n\nexport const detectBasis = {\n    extension: {\n        type: ExtensionType.DetectionParser,\n        priority: 3,\n    },\n    test: async (): Promise<boolean> =>\n    {\n        if (await isWebGPUSupported()) return true;\n        if (isWebGLSupported()) return true;\n\n        return false;\n    },\n    add: async (formats) => [...formats, 'basis'],\n    remove: async (formats) => formats.filter((f) => f !== 'basis'),\n} as FormatDetectionParser;\n"],"mappings":";;;;AAMO,MAAMA,WAAc;EACvBC,SAAW;IACPC,IAAA,EAAMC,aAAc,CAAAC,eAAA;IACpBC,QAAU;EAAA,CACd;EACAC,IAAA,EAAM,MAAAA,CAAA,KACN;IACI,IAAI,MAAMC,iBAAkB,IAAU;IACtC,IAAIC,gBAAiB,IAAU;IAExB;EAAA,CACX;EACAC,GAAA,EAAK,MAAOC,OAAA,IAAY,CAAC,GAAGA,OAAA,EAAS,OAAO;EAC5CC,MAAA,EAAQ,MAAOD,OAAY,IAAAA,OAAA,CAAQE,MAAA,CAAQC,CAAA,IAAMA,CAAA,KAAM,OAAO;AAClE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}