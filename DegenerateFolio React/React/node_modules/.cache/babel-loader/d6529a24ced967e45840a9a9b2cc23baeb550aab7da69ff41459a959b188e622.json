{"ast":null,"code":"\"use strict\";\n\nconst roundPixelsBit = {\n  name: \"round-pixels-bit\",\n  vertex: {\n    header: ( /* wgsl */\n    `\n            fn roundPixels(position: vec2<f32>, targetSize: vec2<f32>) -> vec2<f32> \n            {\n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        `)\n  }\n};\nconst roundPixelsBitGl = {\n  name: \"round-pixels-bit\",\n  vertex: {\n    header: ( /* glsl */\n    `   \n            vec2 roundPixels(vec2 position, vec2 targetSize)\n            {       \n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        `)\n  }\n};\nexport { roundPixelsBit, roundPixelsBitGl };","map":{"version":3,"names":["roundPixelsBit","name","vertex","header","roundPixelsBitGl"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/high-shader/shader-bits/roundPixelsBit.ts"],"sourcesContent":["export const roundPixelsBit = {\n    name: 'round-pixels-bit',\n    vertex: {\n        header: /* wgsl */`\n            fn roundPixels(position: vec2<f32>, targetSize: vec2<f32>) -> vec2<f32> \n            {\n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        `\n    }\n};\n\nexport const roundPixelsBitGl = {\n    name: 'round-pixels-bit',\n    vertex: {\n        header: /* glsl */`   \n            vec2 roundPixels(vec2 position, vec2 targetSize)\n            {       \n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        `\n    }\n};\n\n"],"mappings":";;AAAO,MAAMA,cAAiB;EAC1BC,IAAM;EACNC,MAAQ;IACJC,MAAA;IAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;EAAA;AAO1B;AAEO,MAAMC,gBAAmB;EAC5BH,IAAM;EACNC,MAAQ;IACJC,MAAA;IAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;EAAA;AAO1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}