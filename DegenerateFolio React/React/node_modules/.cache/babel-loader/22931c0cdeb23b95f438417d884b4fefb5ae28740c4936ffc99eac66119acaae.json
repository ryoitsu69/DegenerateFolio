{"ast":null,"code":"'use strict';\n\nvar exec = require('child_process').exec;\nvar isWindows = process.platform === 'win32';\nvar commandMaker = isWindows ? require('./make-command-win') : require('./make-command-unix');\nfunction fixResult(results, dir) {\n  return results.map(function (path) {\n    var index = path.indexOf(dir);\n    return '.\\\\' + path.substr(index);\n  });\n}\nmodule.exports = function (callback, argv) {\n  var command = commandMaker(argv);\n  exec(command, function (error, stdout, stderr) {\n    var results = stdout.split('\\n').filter(function (str) {\n      return str !== '';\n    });\n    if (error !== null) {\n      callback({\n        error: stderr\n      });\n      return;\n    }\n    if (!argv.isAbsolutePath && isWindows) {\n      results = fixResult(results, argv.dir);\n    }\n    callback(results);\n  });\n};","map":{"version":3,"names":["exec","require","isWindows","process","platform","commandMaker","fixResult","results","dir","map","path","index","indexOf","substr","module","exports","callback","argv","command","error","stdout","stderr","split","filter","str","isAbsolutePath"],"sources":["/home/ryoitsu/node_modules/list-files/index.js"],"sourcesContent":["'use strict';\n\nvar exec = require('child_process').exec;\nvar isWindows = process.platform === 'win32';\nvar commandMaker = isWindows\n    ? require('./make-command-win')\n    : require('./make-command-unix');\n\nfunction fixResult (results, dir) {\n    return results.map(function (path) {\n        var index = path.indexOf(dir);\n        return '.\\\\' + path.substr(index);\n    });\n}\n\nmodule.exports = function (callback, argv) {\n    var command = commandMaker(argv);\n\n    exec(command,\n        function(error, stdout, stderr) {\n            var results = stdout.split('\\n').filter(function(str) {\n                return str !== '';\n            });\n            if (error !== null) {\n                callback({\n                    error: stderr\n                });\n                return;\n            }\n            if (!argv.isAbsolutePath && isWindows) {\n                results = fixResult(results, argv.dir)\n            }\n            callback(results);\n        });\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,eAAe,CAAC,CAACD,IAAI;AACxC,IAAIE,SAAS,GAAGC,OAAO,CAACC,QAAQ,KAAK,OAAO;AAC5C,IAAIC,YAAY,GAAGH,SAAS,GACtBD,OAAO,CAAC,oBAAoB,CAAC,GAC7BA,OAAO,CAAC,qBAAqB,CAAC;AAEpC,SAASK,SAASA,CAAEC,OAAO,EAAEC,GAAG,EAAE;EAC9B,OAAOD,OAAO,CAACE,GAAG,CAAC,UAAUC,IAAI,EAAE;IAC/B,IAAIC,KAAK,GAAGD,IAAI,CAACE,OAAO,CAACJ,GAAG,CAAC;IAC7B,OAAO,KAAK,GAAGE,IAAI,CAACG,MAAM,CAACF,KAAK,CAAC;EACrC,CAAC,CAAC;AACN;AAEAG,MAAM,CAACC,OAAO,GAAG,UAAUC,QAAQ,EAAEC,IAAI,EAAE;EACvC,IAAIC,OAAO,GAAGb,YAAY,CAACY,IAAI,CAAC;EAEhCjB,IAAI,CAACkB,OAAO,EACR,UAASC,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAE;IAC5B,IAAId,OAAO,GAAGa,MAAM,CAACE,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAAC,UAASC,GAAG,EAAE;MAClD,OAAOA,GAAG,KAAK,EAAE;IACrB,CAAC,CAAC;IACF,IAAIL,KAAK,KAAK,IAAI,EAAE;MAChBH,QAAQ,CAAC;QACLG,KAAK,EAAEE;MACX,CAAC,CAAC;MACF;IACJ;IACA,IAAI,CAACJ,IAAI,CAACQ,cAAc,IAAIvB,SAAS,EAAE;MACnCK,OAAO,GAAGD,SAAS,CAACC,OAAO,EAAEU,IAAI,CAACT,GAAG,CAAC;IAC1C;IACAQ,QAAQ,CAACT,OAAO,CAAC;EACrB,CAAC,CAAC;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}