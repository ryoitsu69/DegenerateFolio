{"ast":null,"code":"import { BLEND_TO_NPM } from './const.mjs';\n\"use strict\";\nfunction getAdjustedBlendModeBlend(blendMode, textureSource) {\n  if (textureSource.alphaMode === \"no-premultiply-alpha\") {\n    return BLEND_TO_NPM[blendMode] || blendMode;\n  }\n  return blendMode;\n}\nexport { getAdjustedBlendModeBlend };","map":{"version":3,"names":["getAdjustedBlendModeBlend","blendMode","textureSource","alphaMode","BLEND_TO_NPM"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/renderers/shared/state/getAdjustedBlendModeBlend.ts"],"sourcesContent":["import { type BLEND_MODES, BLEND_TO_NPM } from './const';\n\nimport type { TextureSource } from '../texture/sources/TextureSource';\n\n/**\n * Adjusts a blend mode for the current alpha mode. Returns the blend mode that works with that format.\n * eg 'normal' blend mode will return 'normal-npm' when rendering with premultiplied alpha.\n * and 'normal' if the texture is already premultiplied (the default)\n * @param blendMode - The blend mode to get the adjusted blend mode for.\n * @param textureSource - The texture to test the format of.\n * @returns - the blend mode that should be used to render this texture correctly based on its alphaMode\n */\nexport function getAdjustedBlendModeBlend(blendMode: BLEND_MODES, textureSource: TextureSource): BLEND_MODES\n{\n    if (textureSource.alphaMode === 'no-premultiply-alpha')\n    {\n        return (BLEND_TO_NPM[blendMode as keyof typeof BLEND_TO_NPM] || blendMode) as BLEND_MODES;\n    }\n\n    return blendMode;\n}\n"],"mappings":";;AAYgB,SAAAA,0BAA0BC,SAAA,EAAwBC,aAClE;EACQ,IAAAA,aAAA,CAAcC,SAAA,KAAc,sBAChC;IACY,OAAAC,YAAA,CAAaH,SAAsC,CAAK,IAAAA,SAAA;EAAA;EAG7D,OAAAA,SAAA;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}