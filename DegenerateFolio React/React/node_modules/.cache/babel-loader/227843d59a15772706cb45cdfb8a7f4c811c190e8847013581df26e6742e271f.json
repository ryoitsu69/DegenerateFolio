{"ast":null,"code":"import { Text } from '../native/Text.js';\nimport { sanitize } from '../utils/index.js';\n/**\n * @name Type\n * @description\n * This is a extended version of Text, specifically to handle types. Here we rely fully\n * on what Text provides us, however we also adjust the types received from the runtime,\n * i.e. we remove the `T::` prefixes found in some types for consistency across implementation.\n */\nexport class Type extends Text {\n  constructor(registry, value = '') {\n    super(registry, value);\n    this.setOverride(sanitize(this.toString()));\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n  toRawType() {\n    return 'Type';\n  }\n}","map":{"version":3,"names":["Text","sanitize","Type","constructor","registry","value","setOverride","toString","toRawType"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types-codec/extended/Type.js"],"sourcesContent":["import { Text } from '../native/Text.js';\nimport { sanitize } from '../utils/index.js';\n/**\n * @name Type\n * @description\n * This is a extended version of Text, specifically to handle types. Here we rely fully\n * on what Text provides us, however we also adjust the types received from the runtime,\n * i.e. we remove the `T::` prefixes found in some types for consistency across implementation.\n */\nexport class Type extends Text {\n    constructor(registry, value = '') {\n        super(registry, value);\n        this.setOverride(sanitize(this.toString()));\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return 'Type';\n    }\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,mBAAmB;AACxC,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,IAAI,SAASF,IAAI,CAAC;EAC3BG,WAAWA,CAACC,QAAQ,EAAEC,KAAK,GAAG,EAAE,EAAE;IAC9B,KAAK,CAACD,QAAQ,EAAEC,KAAK,CAAC;IACtB,IAAI,CAACC,WAAW,CAACL,QAAQ,CAAC,IAAI,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC/C;EACA;AACJ;AACA;EACIC,SAASA,CAAA,EAAG;IACR,OAAO,MAAM;EACjB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}