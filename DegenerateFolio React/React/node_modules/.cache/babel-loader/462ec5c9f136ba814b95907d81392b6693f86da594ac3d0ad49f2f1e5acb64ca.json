{"ast":null,"code":"import { stringify } from './stringify.js';\nfunction defaultGetId() {\n  return 'none';\n}\n/**\n * @name memoize\n * @description Memomize the function with a specific instanceId\n */\nexport function memoize(fn) {\n  let {\n    getInstanceId = defaultGetId\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const cache = {};\n  const memoized = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const stringParams = stringify(args);\n    const instanceId = getInstanceId();\n    if (!cache[instanceId]) {\n      cache[instanceId] = {};\n    }\n    if (cache[instanceId][stringParams] === undefined) {\n      cache[instanceId][stringParams] = fn(...args);\n    }\n    return cache[instanceId][stringParams];\n  };\n  memoized.unmemoize = function () {\n    var _cache$instanceId;\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    const stringParams = stringify(args);\n    const instanceId = getInstanceId();\n    if (((_cache$instanceId = cache[instanceId]) === null || _cache$instanceId === void 0 ? void 0 : _cache$instanceId[stringParams]) !== undefined) {\n      delete cache[instanceId][stringParams];\n    }\n  };\n  return memoized;\n}","map":{"version":3,"names":["stringify","defaultGetId","memoize","fn","getInstanceId","arguments","length","undefined","cache","memoized","_len","args","Array","_key","stringParams","instanceId","unmemoize","_cache$instanceId","_len2","_key2"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util/memoize.js"],"sourcesContent":["import { stringify } from './stringify.js';\nfunction defaultGetId() {\n    return 'none';\n}\n/**\n * @name memoize\n * @description Memomize the function with a specific instanceId\n */\nexport function memoize(fn, { getInstanceId = defaultGetId } = {}) {\n    const cache = {};\n    const memoized = (...args) => {\n        const stringParams = stringify(args);\n        const instanceId = getInstanceId();\n        if (!cache[instanceId]) {\n            cache[instanceId] = {};\n        }\n        if (cache[instanceId][stringParams] === undefined) {\n            cache[instanceId][stringParams] = fn(...args);\n        }\n        return cache[instanceId][stringParams];\n    };\n    memoized.unmemoize = (...args) => {\n        const stringParams = stringify(args);\n        const instanceId = getInstanceId();\n        if (cache[instanceId]?.[stringParams] !== undefined) {\n            delete cache[instanceId][stringParams];\n        }\n    };\n    return memoized;\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,YAAYA,CAAA,EAAG;EACpB,OAAO,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,OAAOA,CAACC,EAAE,EAAyC;EAAA,IAAvC;IAAEC,aAAa,GAAGH;EAAa,CAAC,GAAAI,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC7D,MAAMG,KAAK,GAAG,CAAC,CAAC;EAChB,MAAMC,QAAQ,GAAG,SAAAA,CAAA,EAAa;IAAA,SAAAC,IAAA,GAAAL,SAAA,CAAAC,MAAA,EAATK,IAAI,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAR,SAAA,CAAAQ,IAAA;IAAA;IACrB,MAAMC,YAAY,GAAGd,SAAS,CAACW,IAAI,CAAC;IACpC,MAAMI,UAAU,GAAGX,aAAa,CAAC,CAAC;IAClC,IAAI,CAACI,KAAK,CAACO,UAAU,CAAC,EAAE;MACpBP,KAAK,CAACO,UAAU,CAAC,GAAG,CAAC,CAAC;IAC1B;IACA,IAAIP,KAAK,CAACO,UAAU,CAAC,CAACD,YAAY,CAAC,KAAKP,SAAS,EAAE;MAC/CC,KAAK,CAACO,UAAU,CAAC,CAACD,YAAY,CAAC,GAAGX,EAAE,CAAC,GAAGQ,IAAI,CAAC;IACjD;IACA,OAAOH,KAAK,CAACO,UAAU,CAAC,CAACD,YAAY,CAAC;EAC1C,CAAC;EACDL,QAAQ,CAACO,SAAS,GAAG,YAAa;IAAA,IAAAC,iBAAA;IAAA,SAAAC,KAAA,GAAAb,SAAA,CAAAC,MAAA,EAATK,IAAI,OAAAC,KAAA,CAAAM,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAJR,IAAI,CAAAQ,KAAA,IAAAd,SAAA,CAAAc,KAAA;IAAA;IACzB,MAAML,YAAY,GAAGd,SAAS,CAACW,IAAI,CAAC;IACpC,MAAMI,UAAU,GAAGX,aAAa,CAAC,CAAC;IAClC,IAAI,EAAAa,iBAAA,GAAAT,KAAK,CAACO,UAAU,CAAC,cAAAE,iBAAA,uBAAjBA,iBAAA,CAAoBH,YAAY,CAAC,MAAKP,SAAS,EAAE;MACjD,OAAOC,KAAK,CAACO,UAAU,CAAC,CAACD,YAAY,CAAC;IAC1C;EACJ,CAAC;EACD,OAAOL,QAAQ;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}