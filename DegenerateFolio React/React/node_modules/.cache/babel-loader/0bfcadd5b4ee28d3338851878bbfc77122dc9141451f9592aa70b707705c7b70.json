{"ast":null,"code":"export const HARDENED = 0x80000000;\nexport function hdValidatePath(path) {\n  if (!path.startsWith('m/')) {\n    return false;\n  }\n  const parts = path.split('/').slice(1);\n  for (const p of parts) {\n    const n = /^\\d+'?$/.test(p) ? parseInt(p.replace(/'$/, ''), 10) : Number.NaN;\n    if (isNaN(n) || n >= HARDENED || n < 0) {\n      return false;\n    }\n  }\n  return true;\n}","map":{"version":3,"names":["HARDENED","hdValidatePath","path","startsWith","parts","split","slice","p","n","test","parseInt","replace","Number","NaN","isNaN"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/hd/validatePath.js"],"sourcesContent":["export const HARDENED = 0x80000000;\nexport function hdValidatePath(path) {\n    if (!path.startsWith('m/')) {\n        return false;\n    }\n    const parts = path.split('/').slice(1);\n    for (const p of parts) {\n        const n = /^\\d+'?$/.test(p)\n            ? parseInt(p.replace(/'$/, ''), 10)\n            : Number.NaN;\n        if (isNaN(n) || (n >= HARDENED) || (n < 0)) {\n            return false;\n        }\n    }\n    return true;\n}\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,UAAU;AAClC,OAAO,SAASC,cAAcA,CAACC,IAAI,EAAE;EACjC,IAAI,CAACA,IAAI,CAACC,UAAU,CAAC,IAAI,CAAC,EAAE;IACxB,OAAO,KAAK;EAChB;EACA,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EACtC,KAAK,MAAMC,CAAC,IAAIH,KAAK,EAAE;IACnB,MAAMI,CAAC,GAAG,SAAS,CAACC,IAAI,CAACF,CAAC,CAAC,GACrBG,QAAQ,CAACH,CAAC,CAACI,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,GACjCC,MAAM,CAACC,GAAG;IAChB,IAAIC,KAAK,CAACN,CAAC,CAAC,IAAKA,CAAC,IAAIR,QAAS,IAAKQ,CAAC,GAAG,CAAE,EAAE;MACxC,OAAO,KAAK;IAChB;EACJ;EACA,OAAO,IAAI;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}