{"ast":null,"code":"import { map, switchMap } from 'rxjs';\nimport { createHeaderExtended } from '../type/index.js';\nimport { memo } from '../util/index.js';\nimport { getAuthorDetails } from './util.js';\n/**\n * @name getHeader\n * @param {( Uint8Array | string )} hash - A block hash as U8 array or string.\n * @returns An array containing the block header and the block author\n * @description Get a specific block header and extend it with the author\n * @example\n * <BR>\n *\n * ```javascript\n * const { author, number } = await api.derive.chain.getHeader('0x123...456');\n *\n * console.log(`block #${number} was authored by ${author}`);\n * ```\n */\nexport function getHeader(instanceId, api) {\n  return memo(instanceId, blockHash => api.rpc.chain.getHeader(blockHash).pipe(switchMap(header => getAuthorDetails(api, header, blockHash)), map(_ref => {\n    let [header, validators, author] = _ref;\n    return createHeaderExtended((validators || header).registry, header, validators, author);\n  })));\n}","map":{"version":3,"names":["map","switchMap","createHeaderExtended","memo","getAuthorDetails","getHeader","instanceId","api","blockHash","rpc","chain","pipe","header","_ref","validators","author","registry"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/chain/getHeader.js"],"sourcesContent":["import { map, switchMap } from 'rxjs';\nimport { createHeaderExtended } from '../type/index.js';\nimport { memo } from '../util/index.js';\nimport { getAuthorDetails } from './util.js';\n/**\n * @name getHeader\n * @param {( Uint8Array | string )} hash - A block hash as U8 array or string.\n * @returns An array containing the block header and the block author\n * @description Get a specific block header and extend it with the author\n * @example\n * <BR>\n *\n * ```javascript\n * const { author, number } = await api.derive.chain.getHeader('0x123...456');\n *\n * console.log(`block #${number} was authored by ${author}`);\n * ```\n */\nexport function getHeader(instanceId, api) {\n    return memo(instanceId, (blockHash) => api.rpc.chain.getHeader(blockHash).pipe(switchMap((header) => getAuthorDetails(api, header, blockHash)), map(([header, validators, author]) => createHeaderExtended((validators || header).registry, header, validators, author))));\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,SAAS,QAAQ,MAAM;AACrC,SAASC,oBAAoB,QAAQ,kBAAkB;AACvD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,gBAAgB,QAAQ,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,UAAU,EAAEC,GAAG,EAAE;EACvC,OAAOJ,IAAI,CAACG,UAAU,EAAGE,SAAS,IAAKD,GAAG,CAACE,GAAG,CAACC,KAAK,CAACL,SAAS,CAACG,SAAS,CAAC,CAACG,IAAI,CAACV,SAAS,CAAEW,MAAM,IAAKR,gBAAgB,CAACG,GAAG,EAAEK,MAAM,EAAEJ,SAAS,CAAC,CAAC,EAAER,GAAG,CAACa,IAAA;IAAA,IAAC,CAACD,MAAM,EAAEE,UAAU,EAAEC,MAAM,CAAC,GAAAF,IAAA;IAAA,OAAKX,oBAAoB,CAAC,CAACY,UAAU,IAAIF,MAAM,EAAEI,QAAQ,EAAEJ,MAAM,EAAEE,UAAU,EAAEC,MAAM,CAAC;EAAA,EAAC,CAAC,CAAC;AAC9Q","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}