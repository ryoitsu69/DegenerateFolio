{"ast":null,"code":"\"use strict\";\n\nasync function testImageFormat(imageData) {\n  if (\"Image\" in globalThis) {\n    return new Promise(resolve => {\n      const image = new Image();\n      image.onload = () => {\n        resolve(true);\n      };\n      image.onerror = () => {\n        resolve(false);\n      };\n      image.src = imageData;\n    });\n  }\n  if (\"createImageBitmap\" in globalThis && \"fetch\" in globalThis) {\n    try {\n      const blob = await (await fetch(imageData)).blob();\n      await createImageBitmap(blob);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n}\nexport { testImageFormat };","map":{"version":3,"names":["testImageFormat","imageData","globalThis","Promise","resolve","image","Image","onload","onerror","src","blob","fetch","createImageBitmap","e"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/assets/detections/utils/testImageFormat.ts"],"sourcesContent":["export async function testImageFormat(imageData: string): Promise<boolean>\n{\n    // Some browsers currently do not support createImageBitmap with Blob, so new Image() is preferred when exist.\n    // See https://caniuse.com/createimagebitmap for more information.\n\n    if ('Image' in globalThis)\n    {\n        return new Promise<boolean>((resolve) =>\n        {\n            const image = new Image();\n\n            image.onload = () =>\n            {\n                resolve(true);\n            };\n            image.onerror = () =>\n            {\n                resolve(false);\n            };\n            image.src = imageData;\n        });\n    }\n\n    if ('createImageBitmap' in globalThis && 'fetch' in globalThis)\n    {\n        try\n        {\n            const blob = await (await fetch(imageData)).blob();\n\n            await createImageBitmap(blob);\n        }\n        catch (e)\n        {\n            return false;\n        }\n\n        return true;\n    }\n\n    return false;\n}\n"],"mappings":";;AAAA,eAAsBA,gBAAgBC,SACtC;EAII,IAAI,WAAWC,UACf;IACW,WAAIC,OAAiB,CAACC,OAC7B;MACU,MAAAC,KAAA,GAAQ,IAAIC,KAAM;MAExBD,KAAA,CAAME,MAAA,GAAS,MACf;QACIH,OAAA,CAAQ,IAAI;MAAA,CAChB;MACAC,KAAA,CAAMG,OAAA,GAAU,MAChB;QACIJ,OAAA,CAAQ,KAAK;MAAA,CACjB;MACAC,KAAA,CAAMI,GAAM,GAAAR,SAAA;IAAA,CACf;EAAA;EAGD,2BAAuBC,UAAc,eAAWA,UACpD;IAEI;MACI,MAAMQ,IAAA,GAAO,MAAO,OAAMC,KAAM,CAAAV,SAAS,GAAGS,IAAK;MAEjD,MAAME,iBAAA,CAAkBF,IAAI;IAAA,SAEzBG,CACP;MACW;IAAA;IAGJ;EAAA;EAGJ;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}