{"ast":null,"code":"import { keyExtractPath } from './extractPath.js';\nconst RE_CAPTURE = /^(\\w+( \\w+)*)((\\/\\/?[^/]+)*)(\\/\\/\\/(.*))?$/;\n/**\n * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed).\n */\nexport function keyExtractSuri(suri) {\n  // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n  const matches = suri.match(RE_CAPTURE);\n  if (matches === null) {\n    throw new Error('Unable to match provided value to a secret URI');\n  }\n  const [, phrase,, derivePath,,, password] = matches;\n  const {\n    path\n  } = keyExtractPath(derivePath);\n  return {\n    derivePath,\n    password,\n    path,\n    phrase\n  };\n}","map":{"version":3,"names":["keyExtractPath","RE_CAPTURE","keyExtractSuri","suri","matches","match","Error","phrase","derivePath","password","path"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/key/extractSuri.js"],"sourcesContent":["import { keyExtractPath } from './extractPath.js';\nconst RE_CAPTURE = /^(\\w+( \\w+)*)((\\/\\/?[^/]+)*)(\\/\\/\\/(.*))?$/;\n/**\n * @description Extracts the phrase, path and password from a SURI format for specifying secret keys `<secret>/<soft-key>//<hard-key>///<password>` (the `///password` may be omitted, and `/<soft-key>` and `//<hard-key>` maybe repeated and mixed).\n */\nexport function keyExtractSuri(suri) {\n    // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n    const matches = suri.match(RE_CAPTURE);\n    if (matches === null) {\n        throw new Error('Unable to match provided value to a secret URI');\n    }\n    const [, phrase, , derivePath, , , password] = matches;\n    const { path } = keyExtractPath(derivePath);\n    return {\n        derivePath,\n        password,\n        path,\n        phrase\n    };\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,MAAMC,UAAU,GAAG,4CAA4C;AAC/D;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,IAAI,EAAE;EACjC;EACA,MAAMC,OAAO,GAAGD,IAAI,CAACE,KAAK,CAACJ,UAAU,CAAC;EACtC,IAAIG,OAAO,KAAK,IAAI,EAAE;IAClB,MAAM,IAAIE,KAAK,CAAC,gDAAgD,CAAC;EACrE;EACA,MAAM,GAAGC,MAAM,GAAIC,UAAU,IAAMC,QAAQ,CAAC,GAAGL,OAAO;EACtD,MAAM;IAAEM;EAAK,CAAC,GAAGV,cAAc,CAACQ,UAAU,CAAC;EAC3C,OAAO;IACHA,UAAU;IACVC,QAAQ;IACRC,IAAI;IACJH;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}