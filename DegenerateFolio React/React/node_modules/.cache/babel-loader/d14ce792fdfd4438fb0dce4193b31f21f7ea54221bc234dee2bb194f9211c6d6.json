{"ast":null,"code":"import { blake2b as blake2bJs } from '@noble/hashes/blake2b';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { blake2b, isReady } from '@polkadot/wasm-crypto';\nimport { createAsHex } from '../helpers.js';\n/**\n * @name blake2AsU8a\n * @summary Creates a blake2b u8a from the input.\n * @description\n * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { blake2AsU8a } from '@polkadot/util-crypto';\n *\n * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]\n * ```\n */\nexport function blake2AsU8a(data, bitLength = 256, key, onlyJs) {\n  const byteLength = Math.ceil(bitLength / 8);\n  const u8a = u8aToU8a(data);\n  return !hasBigInt || !onlyJs && isReady() ? blake2b(u8a, u8aToU8a(key), byteLength) : key ? blake2bJs(u8a, {\n    dkLen: byteLength,\n    key\n  }) : blake2bJs(u8a, {\n    dkLen: byteLength\n  });\n}\n/**\n * @name blake2AsHex\n * @description Creates a blake2b hex from the input.\n */\nexport const blake2AsHex = /*#__PURE__*/createAsHex(blake2AsU8a);","map":{"version":3,"names":["blake2b","blake2bJs","hasBigInt","u8aToU8a","isReady","createAsHex","blake2AsU8a","data","bitLength","key","onlyJs","byteLength","Math","ceil","u8a","dkLen","blake2AsHex"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/blake2/asU8a.js"],"sourcesContent":["import { blake2b as blake2bJs } from '@noble/hashes/blake2b';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { blake2b, isReady } from '@polkadot/wasm-crypto';\nimport { createAsHex } from '../helpers.js';\n/**\n * @name blake2AsU8a\n * @summary Creates a blake2b u8a from the input.\n * @description\n * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { blake2AsU8a } from '@polkadot/util-crypto';\n *\n * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]\n * ```\n */\nexport function blake2AsU8a(data, bitLength = 256, key, onlyJs) {\n    const byteLength = Math.ceil(bitLength / 8);\n    const u8a = u8aToU8a(data);\n    return !hasBigInt || (!onlyJs && isReady())\n        ? blake2b(u8a, u8aToU8a(key), byteLength)\n        : key\n            ? blake2bJs(u8a, { dkLen: byteLength, key })\n            : blake2bJs(u8a, { dkLen: byteLength });\n}\n/**\n * @name blake2AsHex\n * @description Creates a blake2b hex from the input.\n */\nexport const blake2AsHex = /*#__PURE__*/ createAsHex(blake2AsU8a);\n"],"mappings":"AAAA,SAASA,OAAO,IAAIC,SAAS,QAAQ,uBAAuB;AAC5D,SAASC,SAAS,EAAEC,QAAQ,QAAQ,gBAAgB;AACpD,SAASH,OAAO,EAAEI,OAAO,QAAQ,uBAAuB;AACxD,SAASC,WAAW,QAAQ,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,IAAI,EAAEC,SAAS,GAAG,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAE;EAC5D,MAAMC,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACL,SAAS,GAAG,CAAC,CAAC;EAC3C,MAAMM,GAAG,GAAGX,QAAQ,CAACI,IAAI,CAAC;EAC1B,OAAO,CAACL,SAAS,IAAK,CAACQ,MAAM,IAAIN,OAAO,CAAC,CAAE,GACrCJ,OAAO,CAACc,GAAG,EAAEX,QAAQ,CAACM,GAAG,CAAC,EAAEE,UAAU,CAAC,GACvCF,GAAG,GACCR,SAAS,CAACa,GAAG,EAAE;IAAEC,KAAK,EAAEJ,UAAU;IAAEF;EAAI,CAAC,CAAC,GAC1CR,SAAS,CAACa,GAAG,EAAE;IAAEC,KAAK,EAAEJ;EAAW,CAAC,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,WAAW,GAAG,aAAcX,WAAW,CAACC,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}