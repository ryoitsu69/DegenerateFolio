{"ast":null,"code":"import { extensions, ExtensionType } from '../../extensions/Extensions.mjs';\nimport { BigPool } from '../../utils/pool/PoolGroup.mjs';\n\"use strict\";\nclass MaskEffectManagerClass {\n  constructor() {\n    /**\n     * @private\n     */\n    this._effectClasses = [];\n    this._tests = [];\n    this._initialized = false;\n  }\n  init() {\n    if (this._initialized) return;\n    this._initialized = true;\n    this._effectClasses.forEach(test => {\n      this.add({\n        test: test.test,\n        maskClass: test\n      });\n    });\n  }\n  add(test) {\n    this._tests.push(test);\n  }\n  getMaskEffect(item) {\n    if (!this._initialized) this.init();\n    for (let i = 0; i < this._tests.length; i++) {\n      const test = this._tests[i];\n      if (test.test(item)) {\n        return BigPool.get(test.maskClass, item);\n      }\n    }\n    return item;\n  }\n  returnMaskEffect(effect) {\n    BigPool.return(effect);\n  }\n}\nconst MaskEffectManager = new MaskEffectManagerClass();\nextensions.handleByList(ExtensionType.MaskEffect, MaskEffectManager._effectClasses);\nexport { MaskEffectManager, MaskEffectManagerClass };","map":{"version":3,"names":["MaskEffectManagerClass","constructor","_effectClasses","_tests","_initialized","init","forEach","test","add","maskClass","push","getMaskEffect","item","i","length","BigPool","get","returnMaskEffect","effect","return","MaskEffectManager","extensions","handleByList","ExtensionType","MaskEffect"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/mask/MaskEffectManager.ts"],"sourcesContent":["import { extensions, ExtensionType } from '../../extensions/Extensions';\nimport { BigPool } from '../../utils/pool/PoolGroup';\n\nimport type { Effect, EffectConstructor } from '../../scene/container/Effect';\nimport type { PoolItem, PoolItemConstructor } from '../../utils/pool/Pool';\n\ninterface MaskConversionTest\n{\n    test: (item: any) => boolean;\n    maskClass: new (item: any) => Effect & PoolItem;\n}\n\nexport type MaskEffect = {mask: unknown} & Effect;\n\n/**\n * A class that manages the conversion of masks to mask effects.\n * @memberof rendering\n * @ignore\n */\nexport class MaskEffectManagerClass\n{\n    /**\n     * @private\n     */\n    public readonly _effectClasses: EffectConstructor[] = [];\n    private readonly _tests: MaskConversionTest[] = [];\n    private _initialized = false;\n\n    public init()\n    {\n        if (this._initialized) return;\n\n        this._initialized = true;\n\n        this._effectClasses.forEach((test) =>\n        {\n            this.add({\n                test: test.test,\n                maskClass: test\n            });\n        });\n    }\n\n    public add(test: MaskConversionTest)\n    {\n        this._tests.push(test);\n    }\n\n    public getMaskEffect(item: any): MaskEffect\n    {\n        if (!this._initialized) this.init();\n\n        for (let i = 0; i < this._tests.length; i++)\n        {\n            const test = this._tests[i];\n\n            if (test.test(item))\n            {\n                return BigPool.get(test.maskClass as PoolItemConstructor<MaskEffect & PoolItem>, item);\n            }\n        }\n\n        return item;\n    }\n\n    public returnMaskEffect(effect: Effect & PoolItem)\n    {\n        BigPool.return(effect);\n    }\n}\n\nexport const MaskEffectManager = new MaskEffectManagerClass();\n\n// Handle registration of extensions\nextensions\n    .handleByList(ExtensionType.MaskEffect, MaskEffectManager._effectClasses);\n"],"mappings":";;;AAmBO,MAAMA,sBACb;EADOC,YAAA;IAKH;AAAA;AAAA;IAAA,KAAgBC,cAAA,GAAsC,EAAC;IACvD,KAAiBC,MAAA,GAA+B,EAAC;IACjD,KAAQC,YAAe;EAAA;EAEhBC,IACPA,CAAA;IACI,IAAI,IAAK,CAAAD,YAAA,EAAc;IAEvB,KAAKA,YAAe;IAEf,KAAAF,cAAA,CAAeI,OAAQ,CAACC,IAC7B;MACI,KAAKC,GAAI;QACLD,IAAA,EAAMA,IAAK,CAAAA,IAAA;QACXE,SAAW,EAAAF;MAAA,CACd;IAAA,CACJ;EAAA;EAGEC,IAAID,IACX;IACS,KAAAJ,MAAA,CAAOO,IAAA,CAAKH,IAAI;EAAA;EAGlBI,cAAcC,IACrB;IACI,IAAI,CAAC,IAAK,CAAAR,YAAA,EAAc,KAAKC,IAAK;IAElC,SAASQ,CAAA,GAAI,CAAG,EAAAA,CAAA,GAAI,IAAK,CAAAV,MAAA,CAAOW,MAAA,EAAQD,CACxC;MACU,MAAAN,IAAA,GAAO,IAAK,CAAAJ,MAAA,CAAOU,CAAC;MAEtB,IAAAN,IAAA,CAAKA,IAAK,CAAAK,IAAI,CAClB;QACI,OAAOG,OAAQ,CAAAC,GAAA,CAAIT,IAAK,CAAAE,SAAA,EAAyDG,IAAI;MAAA;IACzF;IAGG,OAAAA,IAAA;EAAA;EAGJK,iBAAiBC,MACxB;IACIH,OAAA,CAAQI,MAAA,CAAOD,MAAM;EAAA;AAE7B;AAEa,MAAAE,iBAAA,GAAoB,IAAIpB,sBAAuB;AAG5DqB,UAAA,CACKC,YAAa,CAAAC,aAAA,CAAcC,UAAY,EAAAJ,iBAAA,CAAkBlB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}