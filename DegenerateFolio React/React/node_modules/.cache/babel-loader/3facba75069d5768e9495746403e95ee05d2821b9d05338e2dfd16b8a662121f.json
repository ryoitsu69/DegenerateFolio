{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst {\n  InvalidArgumentError,\n  NoSuchFrameError\n} = require('../lib/error');\nconst {\n  BrowsingContextInfo\n} = require('./browsingContextTypes');\nconst {\n  SerializationOptions,\n  ReferenceValue,\n  RemoteValue\n} = require('./protocolValue');\nconst {\n  WebElement\n} = require('../lib/webdriver');\nclass Locator {\n  static Type = Object.freeze({\n    CSS: 'css',\n    INNER_TEXT: 'innerText',\n    XPATH: 'xpath'\n  });\n  #type;\n  #value;\n  #ignoreCase;\n  #matchType;\n  #maxDepth;\n  constructor(type, value, ignoreCase = undefined, matchType = undefined, maxDepth = undefined) {\n    this.#type = type;\n    this.#value = value;\n    this.#ignoreCase = ignoreCase;\n    this.#matchType = matchType;\n    this.#maxDepth = maxDepth;\n  }\n  static css(value) {\n    return new Locator(Locator.Type.CSS, value);\n  }\n  static xpath(value) {\n    return new Locator(Locator.Type.XPATH, value);\n  }\n  static innerText(value, ignoreCase = undefined, matchType = undefined, maxDepth = undefined) {\n    return new Locator(Locator.Type.INNER_TEXT, value, ignoreCase, matchType, maxDepth);\n  }\n  toMap() {\n    const map = new Map();\n    map.set('type', this.#type.toString());\n    map.set('value', this.#value);\n    map.set('ignoreCase', this.#ignoreCase);\n    map.set('matchType', this.#matchType);\n    map.set('maxDepth', this.#maxDepth);\n    return map;\n  }\n}\nclass BrowsingContext {\n  constructor(driver) {\n    this._driver = driver;\n  }\n\n  /**\n   * @returns id\n   */\n  get id() {\n    return this._id;\n  }\n  async init({\n    browsingContextId,\n    type,\n    referenceContext\n  }) {\n    if (!(await this._driver.getCapabilities()).get('webSocketUrl')) {\n      throw Error('WebDriver instance must support BiDi protocol');\n    }\n    if (type !== undefined && !['window', 'tab'].includes(type)) {\n      throw Error(`Valid types are 'window' & 'tab'. Received: ${type}`);\n    }\n    this.bidi = await this._driver.getBidi();\n    this._id = browsingContextId === undefined ? (await this.create(type, referenceContext))['result']['context'] : browsingContextId;\n  }\n\n  /**\n   * Creates a browsing context for the given type and referenceContext\n   */\n  async create(type, referenceContext) {\n    const params = {\n      method: 'browsingContext.create',\n      params: {\n        type: type,\n        referenceContext: referenceContext\n      }\n    };\n    return await this.bidi.send(params);\n  }\n\n  /**\n   * @param url the url to navigate to\n   * @param readinessState type of readiness state: \"none\" / \"interactive\" / \"complete\"\n   * @returns NavigateResult object\n   */\n  async navigate(url, readinessState = undefined) {\n    if (readinessState !== undefined && !['none', 'interactive', 'complete'].includes(readinessState)) {\n      throw Error(`Valid readiness states are 'none', 'interactive' & 'complete'. Received: ${readinessState}`);\n    }\n    const params = {\n      method: 'browsingContext.navigate',\n      params: {\n        context: this._id,\n        url: url,\n        wait: readinessState\n      }\n    };\n    const navigateResult = (await this.bidi.send(params))['result'];\n    return new NavigateResult(navigateResult['url'], navigateResult['navigation']);\n  }\n\n  /**\n   * @param maxDepth the max depth of the descendents of browsing context tree\n   * @returns BrowsingContextInfo object\n   */\n  async getTree(maxDepth = undefined) {\n    const params = {\n      method: 'browsingContext.getTree',\n      params: {\n        root: this._id,\n        maxDepth: maxDepth\n      }\n    };\n    let result = await this.bidi.send(params);\n    if ('error' in result) {\n      throw Error(result['error']);\n    }\n    result = result['result']['contexts'][0];\n    return new BrowsingContextInfo(result['context'], result['url'], result['children'], result['parent']);\n  }\n\n  /**\n   * Closes the browsing context\n   * @returns {Promise<void>}\n   */\n  async close() {\n    const params = {\n      method: 'browsingContext.close',\n      params: {\n        context: this._id\n      }\n    };\n    await this.bidi.send(params);\n  }\n\n  /**\n   * Prints PDF of the webpage\n   * @param options print options given by the user\n   * @returns PrintResult object\n   */\n  async printPage(options = {}) {\n    let params = {\n      method: 'browsingContext.print',\n      // Setting default values for parameters\n      params: {\n        context: this._id,\n        background: false,\n        margin: {\n          bottom: 1.0,\n          left: 1.0,\n          right: 1.0,\n          top: 1.0\n        },\n        orientation: 'portrait',\n        page: {\n          height: 27.94,\n          width: 21.59\n        },\n        pageRanges: [],\n        scale: 1.0,\n        shrinkToFit: true\n      }\n    };\n\n    // Updating parameter values based on the options passed\n    params.params = this._driver.validatePrintPageParams(options, params.params);\n    const response = await this.bidi.send(params);\n    return new PrintResult(response.result.data);\n  }\n  async captureScreenshot() {\n    let params = {\n      method: 'browsingContext.captureScreenshot',\n      params: {\n        context: this._id\n      }\n    };\n    const response = await this.bidi.send(params);\n    this.checkErrorInScreenshot(response);\n    return response['result']['data'];\n  }\n  async captureBoxScreenshot(x, y, width, height) {\n    let params = {\n      method: 'browsingContext.captureScreenshot',\n      params: {\n        context: this._id,\n        clip: {\n          type: 'box',\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        }\n      }\n    };\n    console.log(JSON.stringify(params));\n    const response = await this.bidi.send(params);\n    console.log(JSON.stringify(response));\n    this.checkErrorInScreenshot(response);\n    return response['result']['data'];\n  }\n  async captureElementScreenshot(sharedId, handle = undefined, scrollIntoView = undefined) {\n    let params = {\n      method: 'browsingContext.captureScreenshot',\n      params: {\n        context: this._id,\n        clip: {\n          type: 'element',\n          element: {\n            sharedId: sharedId,\n            handle: handle\n          },\n          scrollIntoView: scrollIntoView\n        }\n      }\n    };\n    const response = await this.bidi.send(params);\n    this.checkErrorInScreenshot(response);\n    return response['result']['data'];\n  }\n  checkErrorInScreenshot(response) {\n    if ('error' in response) {\n      const {\n        error,\n        msg\n      } = response;\n      switch (error) {\n        case 'invalid argument':\n          throw new InvalidArgumentError(msg);\n        case 'no such frame':\n          throw new NoSuchFrameError(msg);\n      }\n    }\n  }\n  async activate() {\n    const params = {\n      method: 'browsingContext.activate',\n      params: {\n        context: this._id\n      }\n    };\n    let result = await this.bidi.send(params);\n    if ('error' in result) {\n      throw Error(result['error']);\n    }\n  }\n  async handleUserPrompt(accept = undefined, userText = undefined) {\n    const params = {\n      method: 'browsingContext.handleUserPrompt',\n      params: {\n        context: this._id,\n        accept: accept,\n        userText: userText\n      }\n    };\n    let result = await this.bidi.send(params);\n    if ('error' in result) {\n      throw Error(result['error']);\n    }\n  }\n  async reload(ignoreCache = undefined, readinessState = undefined) {\n    if (readinessState !== undefined && !['none', 'interactive', 'complete'].includes(readinessState)) {\n      throw Error(`Valid readiness states are 'none', 'interactive' & 'complete'. Received: ${readinessState}`);\n    }\n    const params = {\n      method: 'browsingContext.reload',\n      params: {\n        context: this._id,\n        ignoreCache: ignoreCache,\n        wait: readinessState\n      }\n    };\n    const navigateResult = (await this.bidi.send(params))['result'];\n    return new NavigateResult(navigateResult['url'], navigateResult['navigation']);\n  }\n  async setViewport(width, height, devicePixelRatio = undefined) {\n    const params = {\n      method: 'browsingContext.setViewport',\n      params: {\n        context: this._id,\n        viewport: {\n          width: width,\n          height: height\n        },\n        devicePixelRatio: devicePixelRatio\n      }\n    };\n    let result = await this.bidi.send(params);\n    if ('error' in result) {\n      throw Error(result['error']);\n    }\n  }\n  async traverseHistory(delta) {\n    const params = {\n      method: 'browsingContext.traverseHistory',\n      params: {\n        context: this._id,\n        delta: delta\n      }\n    };\n    await this.bidi.send(params);\n  }\n  async forward() {\n    await this.traverseHistory(1);\n  }\n  async back() {\n    await this.traverseHistory(-1);\n  }\n  async locateNodes(locator, maxNodeCount = undefined, ownership = undefined, sandbox = undefined, serializationOptions = undefined, startNodes = undefined) {\n    if (!(locator instanceof Locator)) {\n      throw Error(`Pass in a Locator object. Received: ${locator}`);\n    }\n    if (serializationOptions !== undefined && !(serializationOptions instanceof SerializationOptions)) {\n      throw Error(`Pass in SerializationOptions object. Received: ${serializationOptions} `);\n    }\n    if (ownership !== undefined && !['root', 'none'].includes(ownership)) {\n      throw Error(`Valid types are 'root' and 'none. Received: ${ownership}`);\n    }\n    if (startNodes !== undefined && !Array.isArray(startNodes)) {\n      throw Error(`Pass in an array of ReferenceValue objects. Received: ${startNodes}`);\n    }\n    if (startNodes !== undefined && Array.isArray(startNodes)) {\n      startNodes.forEach(node => {\n        if (!(node instanceof ReferenceValue)) {\n          throw Error(`Pass in a ReferenceValue object. Received: ${node}`);\n        }\n      });\n    }\n    const params = {\n      method: 'browsingContext.locateNodes',\n      params: {\n        context: this._id,\n        locator: Object.fromEntries(locator.toMap()),\n        maxNodeCount: maxNodeCount,\n        ownership: ownership,\n        sandbox: sandbox,\n        serializationOptions: serializationOptions,\n        startNodes: startNodes\n      }\n    };\n    let response = await this.bidi.send(params);\n    if ('error' in response) {\n      throw Error(response['error']);\n    }\n    const nodes = response.result.nodes;\n    const remoteValues = [];\n    nodes.forEach(node => {\n      remoteValues.push(new RemoteValue(node));\n    });\n    return remoteValues;\n  }\n  async locateNode(locator, ownership = undefined, sandbox = undefined, serializationOptions = undefined, startNodes = undefined) {\n    const elements = await this.locateNodes(locator, 1, ownership, sandbox, serializationOptions, startNodes);\n    return elements[0];\n  }\n  async locateElement(locator) {\n    const elements = await this.locateNodes(locator, 1);\n    return new WebElement(this._driver, elements[0].sharedId);\n  }\n  async locateElements(locator) {\n    const elements = await this.locateNodes(locator);\n    let webElements = [];\n    elements.forEach(element => {\n      webElements.push(new WebElement(this._driver, element.sharedId));\n    });\n    return webElements;\n  }\n}\nclass NavigateResult {\n  constructor(url, navigationId) {\n    this._url = url;\n    this._navigationId = navigationId;\n  }\n  get url() {\n    return this._url;\n  }\n  get navigationId() {\n    return this._navigationId;\n  }\n}\nclass PrintResult {\n  constructor(data) {\n    this._data = data;\n  }\n  get data() {\n    return this._data;\n  }\n}\n\n/**\n * initiate browsing context instance and return\n * @param driver\n * @param browsingContextId The browsing context of current window/tab\n * @param type \"window\" or \"tab\"\n * @param referenceContext To get a browsing context for this reference if passed\n * @returns {Promise<BrowsingContext>}\n */\nasync function getBrowsingContextInstance(driver, {\n  browsingContextId,\n  type,\n  referenceContext\n}) {\n  let instance = new BrowsingContext(driver);\n  await instance.init({\n    browsingContextId,\n    type,\n    referenceContext\n  });\n  return instance;\n}\n\n/**\n * API\n * @type {function(*, {*,*,*}): Promise<BrowsingContext>}\n */\nmodule.exports = getBrowsingContextInstance;\nmodule.exports.Locator = Locator;","map":{"version":3,"names":["InvalidArgumentError","NoSuchFrameError","require","BrowsingContextInfo","SerializationOptions","ReferenceValue","RemoteValue","WebElement","Locator","Type","Object","freeze","CSS","INNER_TEXT","XPATH","type","value","ignoreCase","matchType","maxDepth","constructor","undefined","css","xpath","innerText","toMap","map","Map","set","toString","BrowsingContext","driver","_driver","id","_id","init","browsingContextId","referenceContext","getCapabilities","get","Error","includes","bidi","getBidi","create","params","method","send","navigate","url","readinessState","context","wait","navigateResult","NavigateResult","getTree","root","result","close","printPage","options","background","margin","bottom","left","right","top","orientation","page","height","width","pageRanges","scale","shrinkToFit","validatePrintPageParams","response","PrintResult","data","captureScreenshot","checkErrorInScreenshot","captureBoxScreenshot","x","y","clip","console","log","JSON","stringify","captureElementScreenshot","sharedId","handle","scrollIntoView","element","error","msg","activate","handleUserPrompt","accept","userText","reload","ignoreCache","setViewport","devicePixelRatio","viewport","traverseHistory","delta","forward","back","locateNodes","locator","maxNodeCount","ownership","sandbox","serializationOptions","startNodes","Array","isArray","forEach","node","fromEntries","nodes","remoteValues","push","locateNode","elements","locateElement","locateElements","webElements","navigationId","_url","_navigationId","_data","getBrowsingContextInstance","instance","module","exports"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/selenium-webdriver/bidi/browsingContext.js"],"sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst { InvalidArgumentError, NoSuchFrameError } = require('../lib/error')\nconst { BrowsingContextInfo } = require('./browsingContextTypes')\nconst { SerializationOptions, ReferenceValue, RemoteValue } = require('./protocolValue')\nconst { WebElement } = require('../lib/webdriver')\n\nclass Locator {\n  static Type = Object.freeze({\n    CSS: 'css',\n    INNER_TEXT: 'innerText',\n    XPATH: 'xpath',\n  })\n\n  #type\n  #value\n  #ignoreCase\n  #matchType\n  #maxDepth\n\n  constructor(type, value, ignoreCase = undefined, matchType = undefined, maxDepth = undefined) {\n    this.#type = type\n    this.#value = value\n    this.#ignoreCase = ignoreCase\n    this.#matchType = matchType\n    this.#maxDepth = maxDepth\n  }\n\n  static css(value) {\n    return new Locator(Locator.Type.CSS, value)\n  }\n\n  static xpath(value) {\n    return new Locator(Locator.Type.XPATH, value)\n  }\n\n  static innerText(value, ignoreCase = undefined, matchType = undefined, maxDepth = undefined) {\n    return new Locator(Locator.Type.INNER_TEXT, value, ignoreCase, matchType, maxDepth)\n  }\n\n  toMap() {\n    const map = new Map()\n\n    map.set('type', this.#type.toString())\n    map.set('value', this.#value)\n    map.set('ignoreCase', this.#ignoreCase)\n    map.set('matchType', this.#matchType)\n    map.set('maxDepth', this.#maxDepth)\n\n    return map\n  }\n}\n\nclass BrowsingContext {\n  constructor(driver) {\n    this._driver = driver\n  }\n\n  /**\n   * @returns id\n   */\n  get id() {\n    return this._id\n  }\n\n  async init({ browsingContextId, type, referenceContext }) {\n    if (!(await this._driver.getCapabilities()).get('webSocketUrl')) {\n      throw Error('WebDriver instance must support BiDi protocol')\n    }\n\n    if (type !== undefined && !['window', 'tab'].includes(type)) {\n      throw Error(`Valid types are 'window' & 'tab'. Received: ${type}`)\n    }\n\n    this.bidi = await this._driver.getBidi()\n    this._id =\n      browsingContextId === undefined\n        ? (await this.create(type, referenceContext))['result']['context']\n        : browsingContextId\n  }\n\n  /**\n   * Creates a browsing context for the given type and referenceContext\n   */\n  async create(type, referenceContext) {\n    const params = {\n      method: 'browsingContext.create',\n      params: {\n        type: type,\n        referenceContext: referenceContext,\n      },\n    }\n    return await this.bidi.send(params)\n  }\n\n  /**\n   * @param url the url to navigate to\n   * @param readinessState type of readiness state: \"none\" / \"interactive\" / \"complete\"\n   * @returns NavigateResult object\n   */\n  async navigate(url, readinessState = undefined) {\n    if (readinessState !== undefined && !['none', 'interactive', 'complete'].includes(readinessState)) {\n      throw Error(`Valid readiness states are 'none', 'interactive' & 'complete'. Received: ${readinessState}`)\n    }\n\n    const params = {\n      method: 'browsingContext.navigate',\n      params: {\n        context: this._id,\n        url: url,\n        wait: readinessState,\n      },\n    }\n    const navigateResult = (await this.bidi.send(params))['result']\n\n    return new NavigateResult(navigateResult['url'], navigateResult['navigation'])\n  }\n\n  /**\n   * @param maxDepth the max depth of the descendents of browsing context tree\n   * @returns BrowsingContextInfo object\n   */\n  async getTree(maxDepth = undefined) {\n    const params = {\n      method: 'browsingContext.getTree',\n      params: {\n        root: this._id,\n        maxDepth: maxDepth,\n      },\n    }\n\n    let result = await this.bidi.send(params)\n    if ('error' in result) {\n      throw Error(result['error'])\n    }\n\n    result = result['result']['contexts'][0]\n    return new BrowsingContextInfo(result['context'], result['url'], result['children'], result['parent'])\n  }\n\n  /**\n   * Closes the browsing context\n   * @returns {Promise<void>}\n   */\n  async close() {\n    const params = {\n      method: 'browsingContext.close',\n      params: {\n        context: this._id,\n      },\n    }\n    await this.bidi.send(params)\n  }\n\n  /**\n   * Prints PDF of the webpage\n   * @param options print options given by the user\n   * @returns PrintResult object\n   */\n  async printPage(options = {}) {\n    let params = {\n      method: 'browsingContext.print',\n      // Setting default values for parameters\n      params: {\n        context: this._id,\n        background: false,\n        margin: {\n          bottom: 1.0,\n          left: 1.0,\n          right: 1.0,\n          top: 1.0,\n        },\n        orientation: 'portrait',\n        page: {\n          height: 27.94,\n          width: 21.59,\n        },\n        pageRanges: [],\n        scale: 1.0,\n        shrinkToFit: true,\n      },\n    }\n\n    // Updating parameter values based on the options passed\n    params.params = this._driver.validatePrintPageParams(options, params.params)\n\n    const response = await this.bidi.send(params)\n    return new PrintResult(response.result.data)\n  }\n\n  async captureScreenshot() {\n    let params = {\n      method: 'browsingContext.captureScreenshot',\n      params: {\n        context: this._id,\n      },\n    }\n\n    const response = await this.bidi.send(params)\n    this.checkErrorInScreenshot(response)\n    return response['result']['data']\n  }\n\n  async captureBoxScreenshot(x, y, width, height) {\n    let params = {\n      method: 'browsingContext.captureScreenshot',\n      params: {\n        context: this._id,\n        clip: {\n          type: 'box',\n          x: x,\n          y: y,\n          width: width,\n          height: height,\n        },\n      },\n    }\n\n    console.log(JSON.stringify(params))\n\n    const response = await this.bidi.send(params)\n    console.log(JSON.stringify(response))\n    this.checkErrorInScreenshot(response)\n    return response['result']['data']\n  }\n\n  async captureElementScreenshot(sharedId, handle = undefined, scrollIntoView = undefined) {\n    let params = {\n      method: 'browsingContext.captureScreenshot',\n      params: {\n        context: this._id,\n        clip: {\n          type: 'element',\n          element: {\n            sharedId: sharedId,\n            handle: handle,\n          },\n          scrollIntoView: scrollIntoView,\n        },\n      },\n    }\n\n    const response = await this.bidi.send(params)\n    this.checkErrorInScreenshot(response)\n    return response['result']['data']\n  }\n\n  checkErrorInScreenshot(response) {\n    if ('error' in response) {\n      const { error, msg } = response\n\n      switch (error) {\n        case 'invalid argument':\n          throw new InvalidArgumentError(msg)\n\n        case 'no such frame':\n          throw new NoSuchFrameError(msg)\n      }\n    }\n  }\n\n  async activate() {\n    const params = {\n      method: 'browsingContext.activate',\n      params: {\n        context: this._id,\n      },\n    }\n\n    let result = await this.bidi.send(params)\n    if ('error' in result) {\n      throw Error(result['error'])\n    }\n  }\n\n  async handleUserPrompt(accept = undefined, userText = undefined) {\n    const params = {\n      method: 'browsingContext.handleUserPrompt',\n      params: {\n        context: this._id,\n        accept: accept,\n        userText: userText,\n      },\n    }\n\n    let result = await this.bidi.send(params)\n    if ('error' in result) {\n      throw Error(result['error'])\n    }\n  }\n\n  async reload(ignoreCache = undefined, readinessState = undefined) {\n    if (readinessState !== undefined && !['none', 'interactive', 'complete'].includes(readinessState)) {\n      throw Error(`Valid readiness states are 'none', 'interactive' & 'complete'. Received: ${readinessState}`)\n    }\n\n    const params = {\n      method: 'browsingContext.reload',\n      params: {\n        context: this._id,\n        ignoreCache: ignoreCache,\n        wait: readinessState,\n      },\n    }\n    const navigateResult = (await this.bidi.send(params))['result']\n\n    return new NavigateResult(navigateResult['url'], navigateResult['navigation'])\n  }\n\n  async setViewport(width, height, devicePixelRatio = undefined) {\n    const params = {\n      method: 'browsingContext.setViewport',\n      params: {\n        context: this._id,\n        viewport: { width: width, height: height },\n        devicePixelRatio: devicePixelRatio,\n      },\n    }\n    let result = await this.bidi.send(params)\n    if ('error' in result) {\n      throw Error(result['error'])\n    }\n  }\n\n  async traverseHistory(delta) {\n    const params = {\n      method: 'browsingContext.traverseHistory',\n      params: {\n        context: this._id,\n        delta: delta,\n      },\n    }\n    await this.bidi.send(params)\n  }\n\n  async forward() {\n    await this.traverseHistory(1)\n  }\n\n  async back() {\n    await this.traverseHistory(-1)\n  }\n\n  async locateNodes(\n    locator,\n    maxNodeCount = undefined,\n    ownership = undefined,\n    sandbox = undefined,\n    serializationOptions = undefined,\n    startNodes = undefined,\n  ) {\n    if (!(locator instanceof Locator)) {\n      throw Error(`Pass in a Locator object. Received: ${locator}`)\n    }\n\n    if (serializationOptions !== undefined && !(serializationOptions instanceof SerializationOptions)) {\n      throw Error(`Pass in SerializationOptions object. Received: ${serializationOptions} `)\n    }\n\n    if (ownership !== undefined && !['root', 'none'].includes(ownership)) {\n      throw Error(`Valid types are 'root' and 'none. Received: ${ownership}`)\n    }\n\n    if (startNodes !== undefined && !Array.isArray(startNodes)) {\n      throw Error(`Pass in an array of ReferenceValue objects. Received: ${startNodes}`)\n    }\n\n    if (startNodes !== undefined && Array.isArray(startNodes)) {\n      startNodes.forEach((node) => {\n        if (!(node instanceof ReferenceValue)) {\n          throw Error(`Pass in a ReferenceValue object. Received: ${node}`)\n        }\n      })\n    }\n\n    const params = {\n      method: 'browsingContext.locateNodes',\n      params: {\n        context: this._id,\n        locator: Object.fromEntries(locator.toMap()),\n        maxNodeCount: maxNodeCount,\n        ownership: ownership,\n        sandbox: sandbox,\n        serializationOptions: serializationOptions,\n        startNodes: startNodes,\n      },\n    }\n\n    let response = await this.bidi.send(params)\n    if ('error' in response) {\n      throw Error(response['error'])\n    }\n\n    const nodes = response.result.nodes\n    const remoteValues = []\n\n    nodes.forEach((node) => {\n      remoteValues.push(new RemoteValue(node))\n    })\n    return remoteValues\n  }\n\n  async locateNode(\n    locator,\n    ownership = undefined,\n    sandbox = undefined,\n    serializationOptions = undefined,\n    startNodes = undefined,\n  ) {\n    const elements = await this.locateNodes(locator, 1, ownership, sandbox, serializationOptions, startNodes)\n    return elements[0]\n  }\n\n  async locateElement(locator) {\n    const elements = await this.locateNodes(locator, 1)\n    return new WebElement(this._driver, elements[0].sharedId)\n  }\n\n  async locateElements(locator) {\n    const elements = await this.locateNodes(locator)\n\n    let webElements = []\n    elements.forEach((element) => {\n      webElements.push(new WebElement(this._driver, element.sharedId))\n    })\n    return webElements\n  }\n}\n\nclass NavigateResult {\n  constructor(url, navigationId) {\n    this._url = url\n    this._navigationId = navigationId\n  }\n\n  get url() {\n    return this._url\n  }\n\n  get navigationId() {\n    return this._navigationId\n  }\n}\n\nclass PrintResult {\n  constructor(data) {\n    this._data = data\n  }\n\n  get data() {\n    return this._data\n  }\n}\n\n/**\n * initiate browsing context instance and return\n * @param driver\n * @param browsingContextId The browsing context of current window/tab\n * @param type \"window\" or \"tab\"\n * @param referenceContext To get a browsing context for this reference if passed\n * @returns {Promise<BrowsingContext>}\n */\nasync function getBrowsingContextInstance(driver, { browsingContextId, type, referenceContext }) {\n  let instance = new BrowsingContext(driver)\n  await instance.init({ browsingContextId, type, referenceContext })\n  return instance\n}\n\n/**\n * API\n * @type {function(*, {*,*,*}): Promise<BrowsingContext>}\n */\nmodule.exports = getBrowsingContextInstance\nmodule.exports.Locator = Locator\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}