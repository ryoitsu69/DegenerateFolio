{"ast":null,"code":"import { Buffer } from 'buffer';\nimport JSONRequest from '../jsonrequest';\nimport * as encoding from '../../../encoding/encoding';\nimport { setHeaders } from './compile';\nexport default class Dryrun extends JSONRequest {\n  constructor(c, dr) {\n    super(c);\n    this.blob = encoding.encode(dr.get_obj_for_encoding(true));\n  }\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/teal/dryrun';\n  }\n  /**\n   * Executes dryrun\n   * @param headers - A headers object\n   */\n  async do() {\n    let headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const txHeaders = setHeaders(headers);\n    const res = await this.c.post(this.path(), Buffer.from(this.blob), txHeaders);\n    return res.body;\n  }\n}","map":{"version":3,"names":["Buffer","JSONRequest","encoding","setHeaders","Dryrun","constructor","c","dr","blob","encode","get_obj_for_encoding","path","do","headers","arguments","length","undefined","txHeaders","res","post","from","body"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/algosdk/src/client/v2/algod/dryrun.ts"],"sourcesContent":["import { Buffer } from 'buffer';\nimport JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport * as modelsv2 from './models/types';\nimport * as encoding from '../../../encoding/encoding';\nimport { setHeaders } from './compile';\n\nexport default class Dryrun extends JSONRequest {\n  private blob: Uint8Array;\n\n  constructor(c: HTTPClient, dr: modelsv2.DryrunRequest) {\n    super(c);\n    this.blob = encoding.encode(dr.get_obj_for_encoding(true));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/teal/dryrun';\n  }\n\n  /**\n   * Executes dryrun\n   * @param headers - A headers object\n   */\n  async do(headers = {}) {\n    const txHeaders = setHeaders(headers);\n    const res = await this.c.post(\n      this.path(),\n      Buffer.from(this.blob),\n      txHeaders\n    );\n    return res.body;\n  }\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,WAAW,MAAM,gBAAgB;AAGxC,OAAO,KAAKC,QAAQ,MAAM,4BAA4B;AACtD,SAASC,UAAU,QAAQ,WAAW;AAEtC,eAAc,MAAOC,MAAO,SAAQH,WAAW;EAG7CI,YAAYC,CAAa,EAAEC,EAA0B;IACnD,KAAK,CAACD,CAAC,CAAC;IACR,IAAI,CAACE,IAAI,GAAGN,QAAQ,CAACO,MAAM,CAACF,EAAE,CAACG,oBAAoB,CAAC,IAAI,CAAC,CAAC;EAC5D;EAEA;EACAC,IAAIA,CAAA;IACF,OAAO,iBAAiB;EAC1B;EAEA;;;;EAIA,MAAMC,EAAEA,CAAA,EAAa;IAAA,IAAZC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IACnB,MAAMG,SAAS,GAAGd,UAAU,CAACU,OAAO,CAAC;IACrC,MAAMK,GAAG,GAAG,MAAM,IAAI,CAACZ,CAAC,CAACa,IAAI,CAC3B,IAAI,CAACR,IAAI,EAAE,EACXX,MAAM,CAACoB,IAAI,CAAC,IAAI,CAACZ,IAAI,CAAC,EACtBS,SAAS,CACV;IACD,OAAOC,GAAG,CAACG,IAAI;EACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}