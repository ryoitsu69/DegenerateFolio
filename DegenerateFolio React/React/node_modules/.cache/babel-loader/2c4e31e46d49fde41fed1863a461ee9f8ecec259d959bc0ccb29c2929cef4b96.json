{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JsonRpcClient = void 0;\nconst stream_1 = require(\"@cosmjs/stream\");\nconst types_1 = require(\"./types\");\n/**\n * A thin wrapper that is used to bring together requests and responses by ID.\n *\n * Using this class is only advised for continous communication channels like\n * WebSockets or WebWorker messaging.\n */\nclass JsonRpcClient {\n  constructor(connection) {\n    this.connection = connection;\n  }\n  async run(request) {\n    const filteredStream = this.connection.responseStream.filter(r => r.id === request.id);\n    const pendingResponses = (0, stream_1.firstEvent)(filteredStream);\n    this.connection.sendRequest(request);\n    const response = await pendingResponses;\n    if ((0, types_1.isJsonRpcErrorResponse)(response)) {\n      const error = response.error;\n      throw new Error(`JSON RPC error: code=${error.code}; message='${error.message}'`);\n    }\n    return response;\n  }\n}\nexports.JsonRpcClient = JsonRpcClient;","map":{"version":3,"names":["stream_1","require","types_1","JsonRpcClient","constructor","connection","run","request","filteredStream","responseStream","filter","r","id","pendingResponses","firstEvent","sendRequest","response","isJsonRpcErrorResponse","error","Error","code","message","exports"],"sources":["../src/jsonrpcclient.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,QAAA,GAAAC,OAAA;AAGA,MAAAC,OAAA,GAAAD,OAAA;AAOA;;;;;;AAMA,MAAaE,aAAa;EAGxBC,YAAmBC,UAAsE;IACvF,IAAI,CAACA,UAAU,GAAGA,UAAU;EAC9B;EAEO,MAAMC,GAAGA,CAACC,OAAuB;IACtC,MAAMC,cAAc,GAAG,IAAI,CAACH,UAAU,CAACI,cAAc,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;IACxF,MAAMC,gBAAgB,GAAG,IAAAb,QAAA,CAAAc,UAAU,EAACN,cAAc,CAAC;IACnD,IAAI,CAACH,UAAU,CAACU,WAAW,CAACR,OAAO,CAAC;IAEpC,MAAMS,QAAQ,GAAG,MAAMH,gBAAgB;IACvC,IAAI,IAAAX,OAAA,CAAAe,sBAAsB,EAACD,QAAQ,CAAC,EAAE;MACpC,MAAME,KAAK,GAAGF,QAAQ,CAACE,KAAK;MAC5B,MAAM,IAAIC,KAAK,CAAC,wBAAwBD,KAAK,CAACE,IAAI,cAAcF,KAAK,CAACG,OAAO,GAAG,CAAC;;IAGnF,OAAOL,QAAQ;EACjB;;AAnBFM,OAAA,CAAAnB,aAAA,GAAAA,aAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}