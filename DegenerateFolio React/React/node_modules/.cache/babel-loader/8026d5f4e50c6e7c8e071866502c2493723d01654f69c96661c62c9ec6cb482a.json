{"ast":null,"code":"import { ExtensionType } from '../../../extensions/Extensions.mjs';\n\"use strict\";\nclass GlEncoderSystem {\n  constructor(renderer) {\n    this.commandFinished = Promise.resolve();\n    this._renderer = renderer;\n  }\n  setGeometry(geometry, shader) {\n    this._renderer.geometry.bind(geometry, shader.glProgram);\n  }\n  finishRenderPass() {}\n  draw(options) {\n    const renderer = this._renderer;\n    const {\n      geometry,\n      shader,\n      state,\n      skipSync,\n      topology: type,\n      size,\n      start,\n      instanceCount\n    } = options;\n    renderer.shader.bind(shader, skipSync);\n    renderer.geometry.bind(geometry, renderer.shader._activeProgram);\n    if (state) {\n      renderer.state.set(state);\n    }\n    renderer.geometry.draw(type, size, start, instanceCount ?? geometry.instanceCount);\n  }\n  destroy() {\n    this._renderer = null;\n  }\n}\n/** @ignore */\nGlEncoderSystem.extension = {\n  type: [ExtensionType.WebGLSystem],\n  name: \"encoder\"\n};\nexport { GlEncoderSystem };","map":{"version":3,"names":["GlEncoderSystem","constructor","renderer","commandFinished","Promise","resolve","_renderer","setGeometry","geometry","shader","bind","glProgram","finishRenderPass","draw","options","state","skipSync","topology","type","size","start","instanceCount","_activeProgram","set","destroy","extension","ExtensionType","WebGLSystem","name"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/renderers/gl/GlEncoderSystem.ts"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions';\n\nimport type { Topology } from '../shared/geometry/const';\nimport type { Geometry } from '../shared/geometry/Geometry';\nimport type { Shader } from '../shared/shader/Shader';\nimport type { State } from '../shared/state/State';\nimport type { System } from '../shared/system/System';\nimport type { WebGLRenderer } from './WebGLRenderer';\n\n/**\n * The system that handles encoding commands for the WebGL.\n * @memberof rendering\n */\nexport class GlEncoderSystem implements System\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLSystem,\n        ],\n        name: 'encoder',\n    } as const;\n\n    public readonly commandFinished = Promise.resolve();\n    private readonly _renderer: WebGLRenderer;\n\n    constructor(renderer: WebGLRenderer)\n    {\n        this._renderer = renderer;\n    }\n\n    public setGeometry(geometry: Geometry, shader?: Shader)\n    {\n        this._renderer.geometry.bind(geometry, shader.glProgram);\n    }\n\n    public finishRenderPass()\n    {\n        // noop\n    }\n\n    public draw(options: {\n        geometry: Geometry,\n        shader: Shader,\n        state?: State,\n        topology?: Topology,\n        size?: number,\n        start?: number,\n        instanceCount?: number\n        skipSync?: boolean,\n    })\n    {\n        const renderer = this._renderer;\n        const { geometry, shader, state, skipSync, topology: type, size, start, instanceCount } = options;\n\n        renderer.shader.bind(shader, skipSync);\n\n        renderer.geometry.bind(geometry, renderer.shader._activeProgram);\n\n        if (state)\n        {\n            renderer.state.set(state);\n        }\n\n        renderer.geometry.draw(type, size, start, instanceCount ?? geometry.instanceCount);\n    }\n\n    public destroy()\n    {\n        (this._renderer as null) = null;\n    }\n}\n"],"mappings":";;AAaO,MAAMA,eACb;EAYIC,YAAYC,QACZ;IAJgB,KAAAC,eAAA,GAAkBC,OAAA,CAAQC,OAAQ;IAK9C,KAAKC,SAAY,GAAAJ,QAAA;EAAA;EAGdK,YAAYC,QAAA,EAAoBC,MACvC;IACI,KAAKH,SAAU,CAAAE,QAAA,CAASE,IAAK,CAAAF,QAAA,EAAUC,MAAA,CAAOE,SAAS;EAAA;EAGpDC,gBACPA,CAAA;EAIOC,KAAKC,OAUZ;IACI,MAAMZ,QAAA,GAAW,IAAK,CAAAI,SAAA;IAChB;MAAEE,QAAU;MAAAC,MAAA;MAAQM,KAAO;MAAAC,QAAA;MAAUC,QAAA,EAAUC,IAAM;MAAAC,IAAA;MAAMC,KAAO;MAAAC;IAAA,CAAkB,GAAAP,OAAA;IAEjFZ,QAAA,CAAAO,MAAA,CAAOC,IAAK,CAAAD,MAAA,EAAQO,QAAQ;IAErCd,QAAA,CAASM,QAAS,CAAAE,IAAA,CAAKF,QAAU,EAAAN,QAAA,CAASO,MAAA,CAAOa,cAAc;IAE/D,IAAIP,KACJ;MACab,QAAA,CAAAa,KAAA,CAAMQ,GAAA,CAAIR,KAAK;IAAA;IAG5Bb,QAAA,CAASM,QAAA,CAASK,IAAK,CAAAK,IAAA,EAAMC,IAAA,EAAMC,KAAO,EAAAC,aAAA,IAAiBb,QAAA,CAASa,aAAa;EAAA;EAG9EG,OACPA,CAAA;IACK,KAAKlB,SAAqB;EAAA;AAEnC;AAAA;AA1DaN,eAAA,CAGKyB,SAAY;EACtBP,IAAM,GACFQ,aAAc,CAAAC,WAAA,CAClB;EACAC,IAAM;AACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}