{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupStakingExtension = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst query_1 = require(\"cosmjs-types/cosmos/staking/v1beta1/query\");\nconst queryclient_1 = require(\"../../queryclient\");\nfunction setupStakingExtension(base) {\n  // Use this service to get easy typed access to query methods\n  // This cannot be used for proof verification\n  const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n  const queryService = new query_1.QueryClientImpl(rpc);\n  return {\n    staking: {\n      delegation: async (delegatorAddress, validatorAddress) => {\n        const response = await queryService.Delegation({\n          delegatorAddr: delegatorAddress,\n          validatorAddr: validatorAddress\n        });\n        return response;\n      },\n      delegatorDelegations: async (delegatorAddress, paginationKey) => {\n        const response = await queryService.DelegatorDelegations({\n          delegatorAddr: delegatorAddress,\n          pagination: (0, queryclient_1.createPagination)(paginationKey)\n        });\n        return response;\n      },\n      delegatorUnbondingDelegations: async (delegatorAddress, paginationKey) => {\n        const response = await queryService.DelegatorUnbondingDelegations({\n          delegatorAddr: delegatorAddress,\n          pagination: (0, queryclient_1.createPagination)(paginationKey)\n        });\n        return response;\n      },\n      delegatorValidator: async (delegatorAddress, validatorAddress) => {\n        const response = await queryService.DelegatorValidator({\n          delegatorAddr: delegatorAddress,\n          validatorAddr: validatorAddress\n        });\n        return response;\n      },\n      delegatorValidators: async (delegatorAddress, paginationKey) => {\n        const response = await queryService.DelegatorValidators({\n          delegatorAddr: delegatorAddress,\n          pagination: (0, queryclient_1.createPagination)(paginationKey)\n        });\n        return response;\n      },\n      historicalInfo: async height => {\n        const response = await queryService.HistoricalInfo({\n          height: BigInt(height)\n        });\n        return response;\n      },\n      params: async () => {\n        const response = await queryService.Params({});\n        return response;\n      },\n      pool: async () => {\n        const response = await queryService.Pool({});\n        return response;\n      },\n      redelegations: async (delegatorAddress, sourceValidatorAddress, destinationValidatorAddress, paginationKey) => {\n        const response = await queryService.Redelegations({\n          delegatorAddr: delegatorAddress,\n          srcValidatorAddr: sourceValidatorAddress,\n          dstValidatorAddr: destinationValidatorAddress,\n          pagination: (0, queryclient_1.createPagination)(paginationKey)\n        });\n        return response;\n      },\n      unbondingDelegation: async (delegatorAddress, validatorAddress) => {\n        const response = await queryService.UnbondingDelegation({\n          delegatorAddr: delegatorAddress,\n          validatorAddr: validatorAddress\n        });\n        return response;\n      },\n      validator: async validatorAddress => {\n        const response = await queryService.Validator({\n          validatorAddr: validatorAddress\n        });\n        return response;\n      },\n      validatorDelegations: async (validatorAddress, paginationKey) => {\n        const response = await queryService.ValidatorDelegations({\n          validatorAddr: validatorAddress,\n          pagination: (0, queryclient_1.createPagination)(paginationKey)\n        });\n        return response;\n      },\n      validators: async (status, paginationKey) => {\n        const response = await queryService.Validators({\n          status: status,\n          pagination: (0, queryclient_1.createPagination)(paginationKey)\n        });\n        return response;\n      },\n      validatorUnbondingDelegations: async (validatorAddress, paginationKey) => {\n        const response = await queryService.ValidatorUnbondingDelegations({\n          validatorAddr: validatorAddress,\n          pagination: (0, queryclient_1.createPagination)(paginationKey)\n        });\n        return response;\n      }\n    }\n  };\n}\nexports.setupStakingExtension = setupStakingExtension;","map":{"version":3,"names":["query_1","require","queryclient_1","setupStakingExtension","base","rpc","createProtobufRpcClient","queryService","QueryClientImpl","staking","delegation","delegatorAddress","validatorAddress","response","Delegation","delegatorAddr","validatorAddr","delegatorDelegations","paginationKey","DelegatorDelegations","pagination","createPagination","delegatorUnbondingDelegations","DelegatorUnbondingDelegations","delegatorValidator","DelegatorValidator","delegatorValidators","DelegatorValidators","historicalInfo","height","HistoricalInfo","BigInt","params","Params","pool","Pool","redelegations","sourceValidatorAddress","destinationValidatorAddress","Redelegations","srcValidatorAddr","dstValidatorAddr","unbondingDelegation","UnbondingDelegation","validator","Validator","validatorDelegations","ValidatorDelegations","validators","status","Validators","validatorUnbondingDelegations","ValidatorUnbondingDelegations","exports"],"sources":["../../../src/modules/staking/queries.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}