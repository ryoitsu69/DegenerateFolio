{"ast":null,"code":"const SHARED_V1_V2 = {\n  get_storage: {\n    description: 'Query a given storage key in a given contract.',\n    params: [{\n      name: 'address',\n      type: 'AccountId'\n    }, {\n      name: 'key',\n      type: 'Bytes'\n    }],\n    type: 'Option<Bytes>'\n  },\n  upload_code: {\n    description: 'Upload new code without instantiating a contract from it.',\n    params: [{\n      name: 'origin',\n      type: 'AccountId'\n    }, {\n      name: 'code',\n      type: 'Bytes'\n    }, {\n      name: 'storageDepositLimit',\n      type: 'Option<Balance>'\n    }],\n    type: 'CodeUploadResult'\n  }\n};\nexport const runtime = {\n  ContractsApi: [{\n    methods: {\n      call: {\n        description: 'Perform a call from a specified account to a given contract.',\n        params: [{\n          name: 'origin',\n          type: 'AccountId'\n        }, {\n          name: 'dest',\n          type: 'AccountId'\n        }, {\n          name: 'value',\n          type: 'Balance'\n        }, {\n          name: 'gasLimit',\n          type: 'Option<WeightV2>'\n        }, {\n          name: 'storageDepositLimit',\n          type: 'Option<Balance>'\n        }, {\n          name: 'inputData',\n          type: 'Vec<u8>'\n        }],\n        type: 'ContractExecResult'\n      },\n      instantiate: {\n        description: 'Instantiate a new contract.',\n        params: [{\n          name: 'origin',\n          type: 'AccountId'\n        }, {\n          name: 'value',\n          type: 'Balance'\n        }, {\n          name: 'gasLimit',\n          type: 'Option<WeightV2>'\n        }, {\n          name: 'storageDepositLimit',\n          type: 'Option<Balance>'\n        }, {\n          name: 'code',\n          type: 'CodeSource'\n        }, {\n          name: 'data',\n          type: 'Bytes'\n        }, {\n          name: 'salt',\n          type: 'Bytes'\n        }],\n        type: 'ContractInstantiateResult'\n      },\n      ...SHARED_V1_V2\n    },\n    version: 2\n  }, {\n    methods: {\n      call: {\n        description: 'Perform a call from a specified account to a given contract.',\n        params: [{\n          name: 'origin',\n          type: 'AccountId'\n        }, {\n          name: 'dest',\n          type: 'AccountId'\n        }, {\n          name: 'value',\n          type: 'Balance'\n        }, {\n          name: 'gasLimit',\n          type: 'u64'\n        }, {\n          name: 'storageDepositLimit',\n          type: 'Option<Balance>'\n        }, {\n          name: 'inputData',\n          type: 'Vec<u8>'\n        }],\n        type: 'ContractExecResultU64'\n      },\n      instantiate: {\n        description: 'Instantiate a new contract.',\n        params: [{\n          name: 'origin',\n          type: 'AccountId'\n        }, {\n          name: 'value',\n          type: 'Balance'\n        }, {\n          name: 'gasLimit',\n          type: 'u64'\n        }, {\n          name: 'storageDepositLimit',\n          type: 'Option<Balance>'\n        }, {\n          name: 'code',\n          type: 'CodeSource'\n        }, {\n          name: 'data',\n          type: 'Bytes'\n        }, {\n          name: 'salt',\n          type: 'Bytes'\n        }],\n        type: 'ContractInstantiateResultU64'\n      },\n      ...SHARED_V1_V2\n    },\n    version: 1\n  }]\n};","map":{"version":3,"names":["SHARED_V1_V2","get_storage","description","params","name","type","upload_code","runtime","ContractsApi","methods","call","instantiate","version"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/interfaces/contracts/runtime.js"],"sourcesContent":["const SHARED_V1_V2 = {\n    get_storage: {\n        description: 'Query a given storage key in a given contract.',\n        params: [\n            {\n                name: 'address',\n                type: 'AccountId'\n            },\n            {\n                name: 'key',\n                type: 'Bytes'\n            }\n        ],\n        type: 'Option<Bytes>'\n    },\n    upload_code: {\n        description: 'Upload new code without instantiating a contract from it.',\n        params: [\n            {\n                name: 'origin',\n                type: 'AccountId'\n            },\n            {\n                name: 'code',\n                type: 'Bytes'\n            },\n            {\n                name: 'storageDepositLimit',\n                type: 'Option<Balance>'\n            }\n        ],\n        type: 'CodeUploadResult'\n    }\n};\nexport const runtime = {\n    ContractsApi: [\n        {\n            methods: {\n                call: {\n                    description: 'Perform a call from a specified account to a given contract.',\n                    params: [\n                        {\n                            name: 'origin',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'dest',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'value',\n                            type: 'Balance'\n                        },\n                        {\n                            name: 'gasLimit',\n                            type: 'Option<WeightV2>'\n                        },\n                        {\n                            name: 'storageDepositLimit',\n                            type: 'Option<Balance>'\n                        },\n                        {\n                            name: 'inputData',\n                            type: 'Vec<u8>'\n                        }\n                    ],\n                    type: 'ContractExecResult'\n                },\n                instantiate: {\n                    description: 'Instantiate a new contract.',\n                    params: [\n                        {\n                            name: 'origin',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'value',\n                            type: 'Balance'\n                        },\n                        {\n                            name: 'gasLimit',\n                            type: 'Option<WeightV2>'\n                        },\n                        {\n                            name: 'storageDepositLimit',\n                            type: 'Option<Balance>'\n                        },\n                        {\n                            name: 'code',\n                            type: 'CodeSource'\n                        },\n                        {\n                            name: 'data',\n                            type: 'Bytes'\n                        },\n                        {\n                            name: 'salt',\n                            type: 'Bytes'\n                        }\n                    ],\n                    type: 'ContractInstantiateResult'\n                },\n                ...SHARED_V1_V2\n            },\n            version: 2\n        },\n        {\n            methods: {\n                call: {\n                    description: 'Perform a call from a specified account to a given contract.',\n                    params: [\n                        {\n                            name: 'origin',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'dest',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'value',\n                            type: 'Balance'\n                        },\n                        {\n                            name: 'gasLimit',\n                            type: 'u64'\n                        },\n                        {\n                            name: 'storageDepositLimit',\n                            type: 'Option<Balance>'\n                        },\n                        {\n                            name: 'inputData',\n                            type: 'Vec<u8>'\n                        }\n                    ],\n                    type: 'ContractExecResultU64'\n                },\n                instantiate: {\n                    description: 'Instantiate a new contract.',\n                    params: [\n                        {\n                            name: 'origin',\n                            type: 'AccountId'\n                        },\n                        {\n                            name: 'value',\n                            type: 'Balance'\n                        },\n                        {\n                            name: 'gasLimit',\n                            type: 'u64'\n                        },\n                        {\n                            name: 'storageDepositLimit',\n                            type: 'Option<Balance>'\n                        },\n                        {\n                            name: 'code',\n                            type: 'CodeSource'\n                        },\n                        {\n                            name: 'data',\n                            type: 'Bytes'\n                        },\n                        {\n                            name: 'salt',\n                            type: 'Bytes'\n                        }\n                    ],\n                    type: 'ContractInstantiateResultU64'\n                },\n                ...SHARED_V1_V2\n            },\n            version: 1\n        }\n    ]\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,WAAW,EAAE;IACTC,WAAW,EAAE,gDAAgD;IAC7DC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE;IACV,CAAC,EACD;MACID,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDC,WAAW,EAAE;IACTJ,WAAW,EAAE,2DAA2D;IACxEC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE;IACV,CAAC,EACD;MACID,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE;IACV,CAAC,EACD;MACID,IAAI,EAAE,qBAAqB;MAC3BC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV;AACJ,CAAC;AACD,OAAO,MAAME,OAAO,GAAG;EACnBC,YAAY,EAAE,CACV;IACIC,OAAO,EAAE;MACLC,IAAI,EAAE;QACFR,WAAW,EAAE,8DAA8D;QAC3EC,MAAM,EAAE,CACJ;UACIC,IAAI,EAAE,QAAQ;UACdC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,OAAO;UACbC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,UAAU;UAChBC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,qBAAqB;UAC3BC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,WAAW;UACjBC,IAAI,EAAE;QACV,CAAC,CACJ;QACDA,IAAI,EAAE;MACV,CAAC;MACDM,WAAW,EAAE;QACTT,WAAW,EAAE,6BAA6B;QAC1CC,MAAM,EAAE,CACJ;UACIC,IAAI,EAAE,QAAQ;UACdC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,OAAO;UACbC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,UAAU;UAChBC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,qBAAqB;UAC3BC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE;QACV,CAAC,CACJ;QACDA,IAAI,EAAE;MACV,CAAC;MACD,GAAGL;IACP,CAAC;IACDY,OAAO,EAAE;EACb,CAAC,EACD;IACIH,OAAO,EAAE;MACLC,IAAI,EAAE;QACFR,WAAW,EAAE,8DAA8D;QAC3EC,MAAM,EAAE,CACJ;UACIC,IAAI,EAAE,QAAQ;UACdC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,OAAO;UACbC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,UAAU;UAChBC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,qBAAqB;UAC3BC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,WAAW;UACjBC,IAAI,EAAE;QACV,CAAC,CACJ;QACDA,IAAI,EAAE;MACV,CAAC;MACDM,WAAW,EAAE;QACTT,WAAW,EAAE,6BAA6B;QAC1CC,MAAM,EAAE,CACJ;UACIC,IAAI,EAAE,QAAQ;UACdC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,OAAO;UACbC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,UAAU;UAChBC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,qBAAqB;UAC3BC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE;QACV,CAAC,EACD;UACID,IAAI,EAAE,MAAM;UACZC,IAAI,EAAE;QACV,CAAC,CACJ;QACDA,IAAI,EAAE;MACV,CAAC;MACD,GAAGL;IACP,CAAC;IACDY,OAAO,EAAE;EACb,CAAC;AAET,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}