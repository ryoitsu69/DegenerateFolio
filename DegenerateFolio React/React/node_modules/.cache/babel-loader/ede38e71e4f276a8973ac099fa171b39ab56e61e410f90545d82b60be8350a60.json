{"ast":null,"code":"import { hmac } from '@noble/hashes/hmac';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { hmacSha256, hmacSha512, isReady } from '@polkadot/wasm-crypto';\nconst JS_HASH = {\n  256: sha256,\n  512: sha512\n};\nconst WA_MHAC = {\n  256: hmacSha256,\n  512: hmacSha512\n};\nfunction createSha(bitLength) {\n  return (key, data, onlyJs) => hmacShaAsU8a(key, data, bitLength, onlyJs);\n}\n/**\n * @name hmacShaAsU8a\n * @description creates a Hmac Sha (256/512) Uint8Array from the key & data\n */\nexport function hmacShaAsU8a(key, data, bitLength = 256, onlyJs) {\n  const u8aKey = u8aToU8a(key);\n  return !hasBigInt || !onlyJs && isReady() ? WA_MHAC[bitLength](u8aKey, data) : hmac(JS_HASH[bitLength], u8aKey, data);\n}\n/**\n * @name hmacSha256AsU8a\n * @description creates a Hmac Sha256 Uint8Array from the key & data\n */\nexport const hmacSha256AsU8a = /*#__PURE__*/createSha(256);\n/**\n * @name hmacSha512AsU8a\n * @description creates a Hmac Sha512 Uint8Array from the key & data\n */\nexport const hmacSha512AsU8a = /*#__PURE__*/createSha(512);","map":{"version":3,"names":["hmac","sha256","sha512","hasBigInt","u8aToU8a","hmacSha256","hmacSha512","isReady","JS_HASH","WA_MHAC","createSha","bitLength","key","data","onlyJs","hmacShaAsU8a","u8aKey","hmacSha256AsU8a","hmacSha512AsU8a"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/hmac/shaAsU8a.js"],"sourcesContent":["import { hmac } from '@noble/hashes/hmac';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { hmacSha256, hmacSha512, isReady } from '@polkadot/wasm-crypto';\nconst JS_HASH = {\n    256: sha256,\n    512: sha512\n};\nconst WA_MHAC = {\n    256: hmacSha256,\n    512: hmacSha512\n};\nfunction createSha(bitLength) {\n    return (key, data, onlyJs) => hmacShaAsU8a(key, data, bitLength, onlyJs);\n}\n/**\n * @name hmacShaAsU8a\n * @description creates a Hmac Sha (256/512) Uint8Array from the key & data\n */\nexport function hmacShaAsU8a(key, data, bitLength = 256, onlyJs) {\n    const u8aKey = u8aToU8a(key);\n    return !hasBigInt || (!onlyJs && isReady())\n        ? WA_MHAC[bitLength](u8aKey, data)\n        : hmac(JS_HASH[bitLength], u8aKey, data);\n}\n/**\n * @name hmacSha256AsU8a\n * @description creates a Hmac Sha256 Uint8Array from the key & data\n */\nexport const hmacSha256AsU8a = /*#__PURE__*/ createSha(256);\n/**\n * @name hmacSha512AsU8a\n * @description creates a Hmac Sha512 Uint8Array from the key & data\n */\nexport const hmacSha512AsU8a = /*#__PURE__*/ createSha(512);\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,oBAAoB;AACzC,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,gBAAgB;AACpD,SAASC,UAAU,EAAEC,UAAU,EAAEC,OAAO,QAAQ,uBAAuB;AACvE,MAAMC,OAAO,GAAG;EACZ,GAAG,EAAEP,MAAM;EACX,GAAG,EAAEC;AACT,CAAC;AACD,MAAMO,OAAO,GAAG;EACZ,GAAG,EAAEJ,UAAU;EACf,GAAG,EAAEC;AACT,CAAC;AACD,SAASI,SAASA,CAACC,SAAS,EAAE;EAC1B,OAAO,CAACC,GAAG,EAAEC,IAAI,EAAEC,MAAM,KAAKC,YAAY,CAACH,GAAG,EAAEC,IAAI,EAAEF,SAAS,EAAEG,MAAM,CAAC;AAC5E;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACH,GAAG,EAAEC,IAAI,EAAEF,SAAS,GAAG,GAAG,EAAEG,MAAM,EAAE;EAC7D,MAAME,MAAM,GAAGZ,QAAQ,CAACQ,GAAG,CAAC;EAC5B,OAAO,CAACT,SAAS,IAAK,CAACW,MAAM,IAAIP,OAAO,CAAC,CAAE,GACrCE,OAAO,CAACE,SAAS,CAAC,CAACK,MAAM,EAAEH,IAAI,CAAC,GAChCb,IAAI,CAACQ,OAAO,CAACG,SAAS,CAAC,EAAEK,MAAM,EAAEH,IAAI,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMI,eAAe,GAAG,aAAcP,SAAS,CAAC,GAAG,CAAC;AAC3D;AACA;AACA;AACA;AACA,OAAO,MAAMQ,eAAe,GAAG,aAAcR,SAAS,CAAC,GAAG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}