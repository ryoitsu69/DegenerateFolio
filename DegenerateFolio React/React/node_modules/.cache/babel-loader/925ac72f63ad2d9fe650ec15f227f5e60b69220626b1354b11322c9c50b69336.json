{"ast":null,"code":"export function typeSplit(type) {\n  const result = [];\n  // these are the depths of the various tokens: <, [, {, (\n  let c = 0;\n  let f = 0;\n  let s = 0;\n  let t = 0;\n  // current start position\n  let start = 0;\n  for (let i = 0, count = type.length; i < count; i++) {\n    switch (type[i]) {\n      // if we are not nested, add the type\n      case ',':\n        {\n          if (!(c || f || s || t)) {\n            result.push(type.substring(start, i).trim());\n            start = i + 1;\n          }\n          break;\n        }\n      // adjust compact/vec (and friends) depth\n      case '<':\n        c++;\n        break;\n      case '>':\n        c--;\n        break;\n      // adjust fixed vec depths\n      case '[':\n        f++;\n        break;\n      case ']':\n        f--;\n        break;\n      // adjust struct depth\n      case '{':\n        s++;\n        break;\n      case '}':\n        s--;\n        break;\n      // adjust tuple depth\n      case '(':\n        t++;\n        break;\n      case ')':\n        t--;\n        break;\n    }\n  }\n  // ensure we have all the terminators taken care of\n  if (c || f || s || t) {\n    throw new Error(\"Invalid definition (missing terminators) found in \".concat(type));\n  }\n  // the final leg of the journey\n  result.push(type.substring(start, type.length).trim());\n  return result;\n}","map":{"version":3,"names":["typeSplit","type","result","c","f","s","t","start","i","count","length","push","substring","trim","Error","concat"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types-create/util/typeSplit.js"],"sourcesContent":["export function typeSplit(type) {\n    const result = [];\n    // these are the depths of the various tokens: <, [, {, (\n    let c = 0;\n    let f = 0;\n    let s = 0;\n    let t = 0;\n    // current start position\n    let start = 0;\n    for (let i = 0, count = type.length; i < count; i++) {\n        switch (type[i]) {\n            // if we are not nested, add the type\n            case ',': {\n                if (!(c || f || s || t)) {\n                    result.push(type.substring(start, i).trim());\n                    start = i + 1;\n                }\n                break;\n            }\n            // adjust compact/vec (and friends) depth\n            case '<':\n                c++;\n                break;\n            case '>':\n                c--;\n                break;\n            // adjust fixed vec depths\n            case '[':\n                f++;\n                break;\n            case ']':\n                f--;\n                break;\n            // adjust struct depth\n            case '{':\n                s++;\n                break;\n            case '}':\n                s--;\n                break;\n            // adjust tuple depth\n            case '(':\n                t++;\n                break;\n            case ')':\n                t--;\n                break;\n        }\n    }\n    // ensure we have all the terminators taken care of\n    if (c || f || s || t) {\n        throw new Error(`Invalid definition (missing terminators) found in ${type}`);\n    }\n    // the final leg of the journey\n    result.push(type.substring(start, type.length).trim());\n    return result;\n}\n"],"mappings":"AAAA,OAAO,SAASA,SAASA,CAACC,IAAI,EAAE;EAC5B,MAAMC,MAAM,GAAG,EAAE;EACjB;EACA,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EACT;EACA,IAAIC,KAAK,GAAG,CAAC;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,KAAK,GAAGR,IAAI,CAACS,MAAM,EAAEF,CAAC,GAAGC,KAAK,EAAED,CAAC,EAAE,EAAE;IACjD,QAAQP,IAAI,CAACO,CAAC,CAAC;MACX;MACA,KAAK,GAAG;QAAE;UACN,IAAI,EAAEL,CAAC,IAAIC,CAAC,IAAIC,CAAC,IAAIC,CAAC,CAAC,EAAE;YACrBJ,MAAM,CAACS,IAAI,CAACV,IAAI,CAACW,SAAS,CAACL,KAAK,EAAEC,CAAC,CAAC,CAACK,IAAI,CAAC,CAAC,CAAC;YAC5CN,KAAK,GAAGC,CAAC,GAAG,CAAC;UACjB;UACA;QACJ;MACA;MACA,KAAK,GAAG;QACJL,CAAC,EAAE;QACH;MACJ,KAAK,GAAG;QACJA,CAAC,EAAE;QACH;MACJ;MACA,KAAK,GAAG;QACJC,CAAC,EAAE;QACH;MACJ,KAAK,GAAG;QACJA,CAAC,EAAE;QACH;MACJ;MACA,KAAK,GAAG;QACJC,CAAC,EAAE;QACH;MACJ,KAAK,GAAG;QACJA,CAAC,EAAE;QACH;MACJ;MACA,KAAK,GAAG;QACJC,CAAC,EAAE;QACH;MACJ,KAAK,GAAG;QACJA,CAAC,EAAE;QACH;IACR;EACJ;EACA;EACA,IAAIH,CAAC,IAAIC,CAAC,IAAIC,CAAC,IAAIC,CAAC,EAAE;IAClB,MAAM,IAAIQ,KAAK,sDAAAC,MAAA,CAAsDd,IAAI,CAAE,CAAC;EAChF;EACA;EACAC,MAAM,CAACS,IAAI,CAACV,IAAI,CAACW,SAAS,CAACL,KAAK,EAAEN,IAAI,CAACS,MAAM,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC;EACtD,OAAOX,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}