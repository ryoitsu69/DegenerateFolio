{"ast":null,"code":"import { BigInt } from '@polkadot/x-bigint';\nimport { _0n, _1n } from './consts.js';\nimport { nToBigInt } from './toBigInt.js';\nconst DIV = BigInt(256);\nconst NEG_MASK = BigInt(0xff);\nfunction toU8a(value, isLe, isNegative) {\n  const arr = [];\n  const withSigned = isNegative && value < _0n;\n  if (withSigned) {\n    value = (value + _1n) * -_1n;\n  }\n  while (value !== _0n) {\n    const mod = value % DIV;\n    const val = Number(withSigned ? mod ^ NEG_MASK : mod);\n    if (isLe) {\n      arr.push(val);\n    } else {\n      arr.unshift(val);\n    }\n    value = (value - mod) / DIV;\n  }\n  return Uint8Array.from(arr);\n}\n/**\n * @name nToU8a\n * @summary Creates a Uint8Array object from a bigint.\n */\nexport function nToU8a(value, {\n  bitLength = -1,\n  isLe = true,\n  isNegative = false\n} = {}) {\n  const valueBi = nToBigInt(value);\n  if (valueBi === _0n) {\n    return bitLength === -1 ? new Uint8Array(1) : new Uint8Array(Math.ceil((bitLength || 0) / 8));\n  }\n  const u8a = toU8a(valueBi, isLe, isNegative);\n  if (bitLength === -1) {\n    return u8a;\n  }\n  const byteLength = Math.ceil((bitLength || 0) / 8);\n  const output = new Uint8Array(byteLength);\n  if (isNegative) {\n    output.fill(0xff);\n  }\n  output.set(u8a, isLe ? 0 : byteLength - u8a.length);\n  return output;\n}","map":{"version":3,"names":["BigInt","_0n","_1n","nToBigInt","DIV","NEG_MASK","toU8a","value","isLe","isNegative","arr","withSigned","mod","val","Number","push","unshift","Uint8Array","from","nToU8a","bitLength","valueBi","Math","ceil","u8a","byteLength","output","fill","set","length"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util/bi/toU8a.js"],"sourcesContent":["import { BigInt } from '@polkadot/x-bigint';\nimport { _0n, _1n } from './consts.js';\nimport { nToBigInt } from './toBigInt.js';\nconst DIV = BigInt(256);\nconst NEG_MASK = BigInt(0xff);\nfunction toU8a(value, isLe, isNegative) {\n    const arr = [];\n    const withSigned = isNegative && (value < _0n);\n    if (withSigned) {\n        value = (value + _1n) * -_1n;\n    }\n    while (value !== _0n) {\n        const mod = value % DIV;\n        const val = Number(withSigned\n            ? mod ^ NEG_MASK\n            : mod);\n        if (isLe) {\n            arr.push(val);\n        }\n        else {\n            arr.unshift(val);\n        }\n        value = (value - mod) / DIV;\n    }\n    return Uint8Array.from(arr);\n}\n/**\n * @name nToU8a\n * @summary Creates a Uint8Array object from a bigint.\n */\nexport function nToU8a(value, { bitLength = -1, isLe = true, isNegative = false } = {}) {\n    const valueBi = nToBigInt(value);\n    if (valueBi === _0n) {\n        return bitLength === -1\n            ? new Uint8Array(1)\n            : new Uint8Array(Math.ceil((bitLength || 0) / 8));\n    }\n    const u8a = toU8a(valueBi, isLe, isNegative);\n    if (bitLength === -1) {\n        return u8a;\n    }\n    const byteLength = Math.ceil((bitLength || 0) / 8);\n    const output = new Uint8Array(byteLength);\n    if (isNegative) {\n        output.fill(0xff);\n    }\n    output.set(u8a, isLe ? 0 : byteLength - u8a.length);\n    return output;\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,GAAG,EAAEC,GAAG,QAAQ,aAAa;AACtC,SAASC,SAAS,QAAQ,eAAe;AACzC,MAAMC,GAAG,GAAGJ,MAAM,CAAC,GAAG,CAAC;AACvB,MAAMK,QAAQ,GAAGL,MAAM,CAAC,IAAI,CAAC;AAC7B,SAASM,KAAKA,CAACC,KAAK,EAAEC,IAAI,EAAEC,UAAU,EAAE;EACpC,MAAMC,GAAG,GAAG,EAAE;EACd,MAAMC,UAAU,GAAGF,UAAU,IAAKF,KAAK,GAAGN,GAAI;EAC9C,IAAIU,UAAU,EAAE;IACZJ,KAAK,GAAG,CAACA,KAAK,GAAGL,GAAG,IAAI,CAACA,GAAG;EAChC;EACA,OAAOK,KAAK,KAAKN,GAAG,EAAE;IAClB,MAAMW,GAAG,GAAGL,KAAK,GAAGH,GAAG;IACvB,MAAMS,GAAG,GAAGC,MAAM,CAACH,UAAU,GACvBC,GAAG,GAAGP,QAAQ,GACdO,GAAG,CAAC;IACV,IAAIJ,IAAI,EAAE;MACNE,GAAG,CAACK,IAAI,CAACF,GAAG,CAAC;IACjB,CAAC,MACI;MACDH,GAAG,CAACM,OAAO,CAACH,GAAG,CAAC;IACpB;IACAN,KAAK,GAAG,CAACA,KAAK,GAAGK,GAAG,IAAIR,GAAG;EAC/B;EACA,OAAOa,UAAU,CAACC,IAAI,CAACR,GAAG,CAAC;AAC/B;AACA;AACA;AACA;AACA;AACA,OAAO,SAASS,MAAMA,CAACZ,KAAK,EAAE;EAAEa,SAAS,GAAG,CAAC,CAAC;EAAEZ,IAAI,GAAG,IAAI;EAAEC,UAAU,GAAG;AAAM,CAAC,GAAG,CAAC,CAAC,EAAE;EACpF,MAAMY,OAAO,GAAGlB,SAAS,CAACI,KAAK,CAAC;EAChC,IAAIc,OAAO,KAAKpB,GAAG,EAAE;IACjB,OAAOmB,SAAS,KAAK,CAAC,CAAC,GACjB,IAAIH,UAAU,CAAC,CAAC,CAAC,GACjB,IAAIA,UAAU,CAACK,IAAI,CAACC,IAAI,CAAC,CAACH,SAAS,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EACzD;EACA,MAAMI,GAAG,GAAGlB,KAAK,CAACe,OAAO,EAAEb,IAAI,EAAEC,UAAU,CAAC;EAC5C,IAAIW,SAAS,KAAK,CAAC,CAAC,EAAE;IAClB,OAAOI,GAAG;EACd;EACA,MAAMC,UAAU,GAAGH,IAAI,CAACC,IAAI,CAAC,CAACH,SAAS,IAAI,CAAC,IAAI,CAAC,CAAC;EAClD,MAAMM,MAAM,GAAG,IAAIT,UAAU,CAACQ,UAAU,CAAC;EACzC,IAAIhB,UAAU,EAAE;IACZiB,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC;EACrB;EACAD,MAAM,CAACE,GAAG,CAACJ,GAAG,EAAEhB,IAAI,GAAG,CAAC,GAAGiB,UAAU,GAAGD,GAAG,CAACK,MAAM,CAAC;EACnD,OAAOH,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}