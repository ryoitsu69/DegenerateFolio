{"ast":null,"code":"export default {\n  rpc: {},\n  types: {\n    IdentityFields: {\n      _set: {\n        _bitLength: 64,\n        // Mapped here to 32 bits, in Rust these are 64-bit values\n        Display: 1,\n        Legal: 2,\n        Web: 4,\n        Riot: 8,\n        Email: 16,\n        PgpFingerprint: 32,\n        Image: 64,\n        Twitter: 128\n      }\n    },\n    IdentityInfoAdditional: '(Data, Data)',\n    IdentityInfoTo198: {\n      additional: 'Vec<IdentityInfoAdditional>',\n      display: 'Data',\n      legal: 'Data',\n      web: 'Data',\n      riot: 'Data',\n      email: 'Data',\n      pgpFingerprint: 'Option<H160>',\n      image: 'Data'\n    },\n    IdentityInfo: {\n      _fallback: 'IdentityInfoTo198',\n      additional: 'Vec<IdentityInfoAdditional>',\n      display: 'Data',\n      legal: 'Data',\n      web: 'Data',\n      riot: 'Data',\n      email: 'Data',\n      pgpFingerprint: 'Option<H160>',\n      image: 'Data',\n      twitter: 'Data'\n    },\n    IdentityJudgement: {\n      _enum: {\n        Unknown: 'Null',\n        FeePaid: 'Balance',\n        Reasonable: 'Null',\n        KnownGood: 'Null',\n        OutOfDate: 'Null',\n        LowQuality: 'Null',\n        Erroneous: 'Null'\n      }\n    },\n    RegistrationJudgement: '(RegistrarIndex, IdentityJudgement)',\n    RegistrationTo198: {\n      judgements: 'Vec<RegistrationJudgement>',\n      deposit: 'Balance',\n      info: 'IdentityInfoTo198'\n    },\n    Registration: {\n      _fallback: 'RegistrationTo198',\n      judgements: 'Vec<RegistrationJudgement>',\n      deposit: 'Balance',\n      info: 'IdentityInfo'\n    },\n    RegistrarIndex: 'u32',\n    RegistrarInfo: {\n      account: 'AccountId',\n      fee: 'Balance',\n      fields: 'IdentityFields'\n    }\n  }\n};","map":{"version":3,"names":["rpc","types","IdentityFields","_set","_bitLength","Display","Legal","Web","Riot","Email","PgpFingerprint","Image","Twitter","IdentityInfoAdditional","IdentityInfoTo198","additional","display","legal","web","riot","email","pgpFingerprint","image","IdentityInfo","_fallback","twitter","IdentityJudgement","_enum","Unknown","FeePaid","Reasonable","KnownGood","OutOfDate","LowQuality","Erroneous","RegistrationJudgement","RegistrationTo198","judgements","deposit","info","Registration","RegistrarIndex","RegistrarInfo","account","fee","fields"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/interfaces/identity/definitions.js"],"sourcesContent":["export default {\n    rpc: {},\n    types: {\n        IdentityFields: {\n            _set: {\n                _bitLength: 64,\n                // Mapped here to 32 bits, in Rust these are 64-bit values\n                Display: 1,\n                Legal: 2,\n                Web: 4,\n                Riot: 8,\n                Email: 16,\n                PgpFingerprint: 32,\n                Image: 64,\n                Twitter: 128\n            }\n        },\n        IdentityInfoAdditional: '(Data, Data)',\n        IdentityInfoTo198: {\n            additional: 'Vec<IdentityInfoAdditional>',\n            display: 'Data',\n            legal: 'Data',\n            web: 'Data',\n            riot: 'Data',\n            email: 'Data',\n            pgpFingerprint: 'Option<H160>',\n            image: 'Data'\n        },\n        IdentityInfo: {\n            _fallback: 'IdentityInfoTo198',\n            additional: 'Vec<IdentityInfoAdditional>',\n            display: 'Data',\n            legal: 'Data',\n            web: 'Data',\n            riot: 'Data',\n            email: 'Data',\n            pgpFingerprint: 'Option<H160>',\n            image: 'Data',\n            twitter: 'Data'\n        },\n        IdentityJudgement: {\n            _enum: {\n                Unknown: 'Null',\n                FeePaid: 'Balance',\n                Reasonable: 'Null',\n                KnownGood: 'Null',\n                OutOfDate: 'Null',\n                LowQuality: 'Null',\n                Erroneous: 'Null'\n            }\n        },\n        RegistrationJudgement: '(RegistrarIndex, IdentityJudgement)',\n        RegistrationTo198: {\n            judgements: 'Vec<RegistrationJudgement>',\n            deposit: 'Balance',\n            info: 'IdentityInfoTo198'\n        },\n        Registration: {\n            _fallback: 'RegistrationTo198',\n            judgements: 'Vec<RegistrationJudgement>',\n            deposit: 'Balance',\n            info: 'IdentityInfo'\n        },\n        RegistrarIndex: 'u32',\n        RegistrarInfo: {\n            account: 'AccountId',\n            fee: 'Balance',\n            fields: 'IdentityFields'\n        }\n    }\n};\n"],"mappings":"AAAA,eAAe;EACXA,GAAG,EAAE,CAAC,CAAC;EACPC,KAAK,EAAE;IACHC,cAAc,EAAE;MACZC,IAAI,EAAE;QACFC,UAAU,EAAE,EAAE;QACd;QACAC,OAAO,EAAE,CAAC;QACVC,KAAK,EAAE,CAAC;QACRC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,EAAE;QACTC,cAAc,EAAE,EAAE;QAClBC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE;MACb;IACJ,CAAC;IACDC,sBAAsB,EAAE,cAAc;IACtCC,iBAAiB,EAAE;MACfC,UAAU,EAAE,6BAA6B;MACzCC,OAAO,EAAE,MAAM;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,MAAM;MACXC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,MAAM;MACbC,cAAc,EAAE,cAAc;MAC9BC,KAAK,EAAE;IACX,CAAC;IACDC,YAAY,EAAE;MACVC,SAAS,EAAE,mBAAmB;MAC9BT,UAAU,EAAE,6BAA6B;MACzCC,OAAO,EAAE,MAAM;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,MAAM;MACXC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,MAAM;MACbC,cAAc,EAAE,cAAc;MAC9BC,KAAK,EAAE,MAAM;MACbG,OAAO,EAAE;IACb,CAAC;IACDC,iBAAiB,EAAE;MACfC,KAAK,EAAE;QACHC,OAAO,EAAE,MAAM;QACfC,OAAO,EAAE,SAAS;QAClBC,UAAU,EAAE,MAAM;QAClBC,SAAS,EAAE,MAAM;QACjBC,SAAS,EAAE,MAAM;QACjBC,UAAU,EAAE,MAAM;QAClBC,SAAS,EAAE;MACf;IACJ,CAAC;IACDC,qBAAqB,EAAE,qCAAqC;IAC5DC,iBAAiB,EAAE;MACfC,UAAU,EAAE,4BAA4B;MACxCC,OAAO,EAAE,SAAS;MAClBC,IAAI,EAAE;IACV,CAAC;IACDC,YAAY,EAAE;MACVhB,SAAS,EAAE,mBAAmB;MAC9Ba,UAAU,EAAE,4BAA4B;MACxCC,OAAO,EAAE,SAAS;MAClBC,IAAI,EAAE;IACV,CAAC;IACDE,cAAc,EAAE,KAAK;IACrBC,aAAa,EAAE;MACXC,OAAO,EAAE,WAAW;MACpBC,GAAG,EAAE,SAAS;MACdC,MAAM,EAAE;IACZ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}