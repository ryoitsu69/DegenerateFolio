{"ast":null,"code":"import { u8aEq } from '@polkadot/util';\nimport { decodeAddress } from './decode.js';\n/**\n * @name addressEq\n * @summary Compares two addresses, either in ss58, Uint8Array or hex format.\n * @description\n * For the input values, return true is the underlying public keys do match.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aEq } from '@polkadot/util';\n *\n * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true\n * ```\n */\nexport function addressEq(a, b) {\n  return u8aEq(decodeAddress(a), decodeAddress(b));\n}","map":{"version":3,"names":["u8aEq","decodeAddress","addressEq","a","b"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/address/eq.js"],"sourcesContent":["import { u8aEq } from '@polkadot/util';\nimport { decodeAddress } from './decode.js';\n/**\n * @name addressEq\n * @summary Compares two addresses, either in ss58, Uint8Array or hex format.\n * @description\n * For the input values, return true is the underlying public keys do match.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aEq } from '@polkadot/util';\n *\n * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true\n * ```\n */\nexport function addressEq(a, b) {\n    return u8aEq(decodeAddress(a), decodeAddress(b));\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SAASC,aAAa,QAAQ,aAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAC5B,OAAOJ,KAAK,CAACC,aAAa,CAACE,CAAC,CAAC,EAAEF,aAAa,CAACG,CAAC,CAAC,CAAC;AACpD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}