{"ast":null,"code":"import { ExtensionType } from '../../../../extensions/Extensions.mjs';\nimport { generateUniformsSync } from './utils/generateUniformsSync.mjs';\n\"use strict\";\nclass GlUniformGroupSystem {\n  /** @param renderer - The renderer this System works for. */\n  constructor(renderer) {\n    /** Cache to holds the generated functions. Stored against UniformObjects unique signature. */\n    this._cache = {};\n    this._uniformGroupSyncHash = {};\n    this._renderer = renderer;\n    this.gl = null;\n    this._cache = {};\n  }\n  contextChange(gl) {\n    this.gl = gl;\n  }\n  /**\n   * Uploads the uniforms values to the currently bound shader.\n   * @param group - the uniforms values that be applied to the current shader\n   * @param program\n   * @param syncData\n   * @param syncData.textureCount\n   */\n  updateUniformGroup(group, program, syncData) {\n    const programData = this._renderer.shader._getProgramData(program);\n    if (!group.isStatic || group._dirtyId !== programData.uniformDirtyGroups[group.uid]) {\n      programData.uniformDirtyGroups[group.uid] = group._dirtyId;\n      const syncFunc = this._getUniformSyncFunction(group, program);\n      syncFunc(programData.uniformData, group.uniforms, this._renderer, syncData);\n    }\n  }\n  /**\n   * Overrideable by the pixi.js/unsafe-eval package to use static syncUniforms instead.\n   * @param group\n   * @param program\n   */\n  _getUniformSyncFunction(group, program) {\n    return this._uniformGroupSyncHash[group._signature]?.[program._key] || this._createUniformSyncFunction(group, program);\n  }\n  _createUniformSyncFunction(group, program) {\n    const uniformGroupSyncHash = this._uniformGroupSyncHash[group._signature] || (this._uniformGroupSyncHash[group._signature] = {});\n    const id = this._getSignature(group, program._uniformData, \"u\");\n    if (!this._cache[id]) {\n      this._cache[id] = this._generateUniformsSync(group, program._uniformData);\n    }\n    uniformGroupSyncHash[program._key] = this._cache[id];\n    return uniformGroupSyncHash[program._key];\n  }\n  _generateUniformsSync(group, uniformData) {\n    return generateUniformsSync(group, uniformData);\n  }\n  /**\n   * Takes a uniform group and data and generates a unique signature for them.\n   * @param group - The uniform group to get signature of\n   * @param group.uniforms\n   * @param uniformData - Uniform information generated by the shader\n   * @param preFix\n   * @returns Unique signature of the uniform group\n   */\n  _getSignature(group, uniformData, preFix) {\n    const uniforms = group.uniforms;\n    const strings = [`${preFix}-`];\n    for (const i in uniforms) {\n      strings.push(i);\n      if (uniformData[i]) {\n        strings.push(uniformData[i].type);\n      }\n    }\n    return strings.join(\"-\");\n  }\n  /** Destroys this System and removes all its textures. */\n  destroy() {\n    this._renderer = null;\n    this._cache = null;\n  }\n}\n/** @ignore */\nGlUniformGroupSystem.extension = {\n  type: [ExtensionType.WebGLSystem],\n  name: \"uniformGroup\"\n};\nexport { GlUniformGroupSystem };","map":{"version":3,"names":["GlUniformGroupSystem","constructor","renderer","_cache","_uniformGroupSyncHash","_renderer","gl","contextChange","updateUniformGroup","group","program","syncData","programData","shader","_getProgramData","isStatic","_dirtyId","uniformDirtyGroups","uid","syncFunc","_getUniformSyncFunction","uniformData","uniforms","_signature","_key","_createUniformSyncFunction","uniformGroupSyncHash","id","_getSignature","_uniformData","_generateUniformsSync","generateUniformsSync","preFix","strings","i","push","type","join","destroy","extension","ExtensionType","WebGLSystem","name"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/renderers/gl/shader/GlUniformGroupSystem.ts"],"sourcesContent":["import { ExtensionType } from '../../../../extensions/Extensions';\nimport { generateUniformsSync } from './utils/generateUniformsSync';\n\nimport type { UniformsSyncCallback } from '../../shared/shader/types';\nimport type { UniformGroup } from '../../shared/shader/UniformGroup';\nimport type { System } from '../../shared/system/System';\nimport type { GlRenderingContext } from '../context/GlRenderingContext';\nimport type { WebGLRenderer } from '../WebGLRenderer';\nimport type { GlProgram, GlUniformData } from './GlProgram';\n\n/**\n * System plugin to the renderer to manage shaders.\n * @memberof rendering\n */\nexport class GlUniformGroupSystem implements System\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLSystem,\n        ],\n        name: 'uniformGroup',\n    } as const;\n\n    /**\n     * The current WebGL rendering context.\n     * @member {WebGLRenderingContext}\n     */\n    protected gl: GlRenderingContext;\n\n    /** Cache to holds the generated functions. Stored against UniformObjects unique signature. */\n    private _cache: Record<string, UniformsSyncCallback> = {};\n    private _renderer: WebGLRenderer;\n\n    private _uniformGroupSyncHash: Record<string, Record<string, UniformsSyncCallback>> = {};\n\n    /** @param renderer - The renderer this System works for. */\n    constructor(renderer: WebGLRenderer)\n    {\n        this._renderer = renderer;\n\n        this.gl = null;\n        this._cache = {};\n    }\n\n    protected contextChange(gl: GlRenderingContext): void\n    {\n        this.gl = gl;\n    }\n\n    /**\n     * Uploads the uniforms values to the currently bound shader.\n     * @param group - the uniforms values that be applied to the current shader\n     * @param program\n     * @param syncData\n     * @param syncData.textureCount\n     */\n    public updateUniformGroup(group: UniformGroup, program: GlProgram, syncData: { textureCount: number }): void\n    {\n        const programData = this._renderer.shader._getProgramData(program);\n\n        if (!group.isStatic || group._dirtyId !== programData.uniformDirtyGroups[group.uid])\n        {\n            programData.uniformDirtyGroups[group.uid] = group._dirtyId;\n\n            const syncFunc = this._getUniformSyncFunction(group, program);\n\n            syncFunc(programData.uniformData, group.uniforms, this._renderer, syncData);\n        }\n    }\n\n    /**\n     * Overrideable by the pixi.js/unsafe-eval package to use static syncUniforms instead.\n     * @param group\n     * @param program\n     */\n    private _getUniformSyncFunction(group: UniformGroup, program: GlProgram): UniformsSyncCallback\n    {\n        return this._uniformGroupSyncHash[group._signature]?.[program._key]\n            || this._createUniformSyncFunction(group, program);\n    }\n\n    private _createUniformSyncFunction(group: UniformGroup, program: GlProgram): UniformsSyncCallback\n    {\n        const uniformGroupSyncHash = this._uniformGroupSyncHash[group._signature]\n            || (this._uniformGroupSyncHash[group._signature] = {});\n\n        const id = this._getSignature(group, program._uniformData, 'u');\n\n        if (!this._cache[id])\n        {\n            this._cache[id] = this._generateUniformsSync(group, program._uniformData);\n        }\n\n        uniformGroupSyncHash[program._key] = this._cache[id];\n\n        return uniformGroupSyncHash[program._key];\n    }\n\n    private _generateUniformsSync(group: UniformGroup, uniformData: Record<string, GlUniformData>): UniformsSyncCallback\n    {\n        return generateUniformsSync(group, uniformData);\n    }\n\n    /**\n     * Takes a uniform group and data and generates a unique signature for them.\n     * @param group - The uniform group to get signature of\n     * @param group.uniforms\n     * @param uniformData - Uniform information generated by the shader\n     * @param preFix\n     * @returns Unique signature of the uniform group\n     */\n    private _getSignature(group: UniformGroup, uniformData: Record<string, any>, preFix: string): string\n    {\n        const uniforms = group.uniforms;\n\n        const strings = [`${preFix}-`];\n\n        for (const i in uniforms)\n        {\n            strings.push(i);\n\n            if (uniformData[i])\n            {\n                strings.push(uniformData[i].type);\n            }\n        }\n\n        return strings.join('-');\n    }\n\n    /** Destroys this System and removes all its textures. */\n    public destroy(): void\n    {\n        this._renderer = null;\n        this._cache = null;\n    }\n}\n"],"mappings":";;;AAcO,MAAMA,oBACb;EAAA;EAsBIC,YAAYC,QACZ;IAPA;IAAA,KAAQC,MAAA,GAA+C,EAAC;IAGxD,KAAQC,qBAAA,GAA8E,EAAC;IAKnF,KAAKC,SAAY,GAAAH,QAAA;IAEjB,KAAKI,EAAK;IACV,KAAKH,MAAA,GAAS,EAAC;EAAA;EAGTI,cAAcD,EACxB;IACI,KAAKA,EAAK,GAAAA,EAAA;EAAA;EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EASOE,mBAAmBC,KAAqB,EAAAC,OAAA,EAAoBC,QACnE;IACI,MAAMC,WAAc,QAAKP,SAAU,CAAAQ,MAAA,CAAOC,eAAA,CAAgBJ,OAAO;IAE7D,KAACD,KAAA,CAAMM,QAAY,IAAAN,KAAA,CAAMO,QAAA,KAAaJ,WAAY,CAAAK,kBAAA,CAAmBR,KAAM,CAAAS,GAAG,CAClF;MACIN,WAAA,CAAYK,kBAAmB,CAAAR,KAAA,CAAMS,GAAG,IAAIT,KAAM,CAAAO,QAAA;MAElD,MAAMG,QAAW,QAAKC,uBAAwB,CAAAX,KAAA,EAAOC,OAAO;MAE5DS,QAAA,CAASP,WAAA,CAAYS,WAAa,EAAAZ,KAAA,CAAMa,QAAU,OAAKjB,SAAA,EAAWM,QAAQ;IAAA;EAC9E;EACJ;AAAA;AAAA;AAAA;AAAA;EAOQS,wBAAwBX,KAAA,EAAqBC,OACrD;IACW,YAAKN,qBAAsB,CAAAK,KAAA,CAAMc,UAAU,IAAIb,OAAQ,CAAAc,IAAI,CAC3D,SAAKC,0BAA2B,CAAAhB,KAAA,EAAOC,OAAO;EAAA;EAGjDe,2BAA2BhB,KAAA,EAAqBC,OACxD;IACU,MAAAgB,oBAAA,GAAuB,IAAK,CAAAtB,qBAAA,CAAsBK,KAAM,CAAAc,UAAU,CAChE,UAAKnB,qBAAsB,CAAAK,KAAA,CAAMc,UAAU,IAAI,EAAC;IAExD,MAAMI,EAAA,GAAK,IAAK,CAAAC,aAAA,CAAcnB,KAAO,EAAAC,OAAA,CAAQmB,YAAA,EAAc,GAAG;IAE9D,IAAI,CAAC,KAAK1B,MAAO,CAAAwB,EAAE,CACnB;MACI,KAAKxB,MAAA,CAAOwB,EAAE,IAAI,KAAKG,qBAAsB,CAAArB,KAAA,EAAOC,OAAA,CAAQmB,YAAY;IAAA;IAG5EH,oBAAA,CAAqBhB,OAAQ,CAAAc,IAAI,CAAI,QAAKrB,MAAA,CAAOwB,EAAE;IAE5C,OAAAD,oBAAA,CAAqBhB,OAAA,CAAQc,IAAI;EAAA;EAGpCM,sBAAsBrB,KAAA,EAAqBY,WACnD;IACW,OAAAU,oBAAA,CAAqBtB,KAAA,EAAOY,WAAW;EAAA;EAClD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAUQO,cAAcnB,KAAqB,EAAAY,WAAA,EAAkCW,MAC7E;IACI,MAAMV,QAAA,GAAWb,KAAM,CAAAa,QAAA;IAEvB,MAAMW,OAAU,IAAI,GAAAD,MAAS;IAE7B,WAAWE,CAAA,IAAKZ,QAChB;MACIW,OAAA,CAAQE,IAAA,CAAKD,CAAC;MAEV,IAAAb,WAAA,CAAYa,CAAC,CACjB;QACID,OAAA,CAAQE,IAAK,CAAAd,WAAA,CAAYa,CAAC,EAAEE,IAAI;MAAA;IACpC;IAGG,OAAAH,OAAA,CAAQI,IAAA,CAAK,GAAG;EAAA;EAC3B;EAGOC,OACPA,CAAA;IACI,KAAKjC,SAAY;IACjB,KAAKF,MAAS;EAAA;AAEtB;AAAA;AA3HaH,oBAAA,CAGKuC,SAAY;EACtBH,IAAM,GACFI,aAAc,CAAAC,WAAA,CAClB;EACAC,IAAM;AACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}