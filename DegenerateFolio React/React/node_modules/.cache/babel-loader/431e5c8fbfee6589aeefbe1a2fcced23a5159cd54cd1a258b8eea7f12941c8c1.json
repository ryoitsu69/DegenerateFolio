{"ast":null,"code":"import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { u8aToString } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nfunction retrieveNick(api, accountId) {\n  return (accountId && api.query['nicks']?.['nameOf'] ? api.query['nicks']['nameOf'](accountId) : of(undefined)).pipe(map(nameOf => nameOf?.isSome ? u8aToString(nameOf.unwrap()[0]).substring(0, api.consts['nicks']['maxLength'].toNumber()) : undefined));\n}\n/**\n * @name info\n * @description Returns aux. info with regards to an account, current that includes the accountId, accountIndex and nickname\n */\nexport function info(instanceId, api) {\n  return memo(instanceId, address => api.derive.accounts.idAndIndex(address).pipe(switchMap(([accountId, accountIndex]) => combineLatest([of({\n    accountId,\n    accountIndex\n  }), api.derive.accounts.identity(accountId), retrieveNick(api, accountId)])), map(([{\n    accountId,\n    accountIndex\n  }, identity, nickname]) => ({\n    accountId,\n    accountIndex,\n    identity,\n    nickname\n  }))));\n}","map":{"version":3,"names":["combineLatest","map","of","switchMap","u8aToString","memo","retrieveNick","api","accountId","query","undefined","pipe","nameOf","isSome","unwrap","substring","consts","toNumber","info","instanceId","address","derive","accounts","idAndIndex","accountIndex","identity","nickname"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/accounts/info.js"],"sourcesContent":["import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { u8aToString } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nfunction retrieveNick(api, accountId) {\n    return (accountId && api.query['nicks']?.['nameOf']\n        ? api.query['nicks']['nameOf'](accountId)\n        : of(undefined)).pipe(map((nameOf) => nameOf?.isSome\n        ? u8aToString(nameOf.unwrap()[0]).substring(0, api.consts['nicks']['maxLength'].toNumber())\n        : undefined));\n}\n/**\n * @name info\n * @description Returns aux. info with regards to an account, current that includes the accountId, accountIndex and nickname\n */\nexport function info(instanceId, api) {\n    return memo(instanceId, (address) => api.derive.accounts.idAndIndex(address).pipe(switchMap(([accountId, accountIndex]) => combineLatest([\n        of({ accountId, accountIndex }),\n        api.derive.accounts.identity(accountId),\n        retrieveNick(api, accountId)\n    ])), map(([{ accountId, accountIndex }, identity, nickname]) => ({\n        accountId, accountIndex, identity, nickname\n    }))));\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,GAAG,EAAEC,EAAE,EAAEC,SAAS,QAAQ,MAAM;AACxD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,YAAYA,CAACC,GAAG,EAAEC,SAAS,EAAE;EAClC,OAAO,CAACA,SAAS,IAAID,GAAG,CAACE,KAAK,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC,GAC7CF,GAAG,CAACE,KAAK,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAACD,SAAS,CAAC,GACvCN,EAAE,CAACQ,SAAS,CAAC,EAAEC,IAAI,CAACV,GAAG,CAAEW,MAAM,IAAKA,MAAM,EAAEC,MAAM,GAClDT,WAAW,CAACQ,MAAM,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC,EAAER,GAAG,CAACS,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,GACzFP,SAAS,CAAC,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA,OAAO,SAASQ,IAAIA,CAACC,UAAU,EAAEZ,GAAG,EAAE;EAClC,OAAOF,IAAI,CAACc,UAAU,EAAGC,OAAO,IAAKb,GAAG,CAACc,MAAM,CAACC,QAAQ,CAACC,UAAU,CAACH,OAAO,CAAC,CAACT,IAAI,CAACR,SAAS,CAAC,CAAC,CAACK,SAAS,EAAEgB,YAAY,CAAC,KAAKxB,aAAa,CAAC,CACrIE,EAAE,CAAC;IAAEM,SAAS;IAAEgB;EAAa,CAAC,CAAC,EAC/BjB,GAAG,CAACc,MAAM,CAACC,QAAQ,CAACG,QAAQ,CAACjB,SAAS,CAAC,EACvCF,YAAY,CAACC,GAAG,EAAEC,SAAS,CAAC,CAC/B,CAAC,CAAC,EAAEP,GAAG,CAAC,CAAC,CAAC;IAAEO,SAAS;IAAEgB;EAAa,CAAC,EAAEC,QAAQ,EAAEC,QAAQ,CAAC,MAAM;IAC7DlB,SAAS;IAAEgB,YAAY;IAAEC,QAAQ;IAAEC;EACvC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}