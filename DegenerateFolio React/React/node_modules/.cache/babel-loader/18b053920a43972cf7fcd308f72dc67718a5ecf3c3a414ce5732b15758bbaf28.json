{"ast":null,"code":"import { isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { MetadataVersioned } from './MetadataVersioned.js';\nconst EMPTY_METADATA = new Uint8Array([0x6d, 0x65, 0x74, 0x61, 9]);\nconst VERSION_IDX = EMPTY_METADATA.length - 1;\n/** @internal */\nfunction decodeU8a(registry, u8a) {\n  if (u8a.length === 0) {\n    return EMPTY_METADATA;\n  } else if (u8a[VERSION_IDX] === 9) {\n    // This is an f-ing hack as a follow-up to another ugly hack\n    // https://github.com/polkadot-js/api/commit/a9211690be6b68ad6c6dad7852f1665cadcfa5b2\n    // when we fail on V9, try to re-parse it as v10...\n    try {\n      return new MetadataVersioned(registry, u8a);\n    } catch {\n      u8a[VERSION_IDX] = 10;\n    }\n  }\n  return u8a;\n}\n/**\n * @name Metadata\n * @description\n * The versioned runtime metadata as a decoded structure\n */\nexport class Metadata extends MetadataVersioned {\n  constructor(registry, value) {\n    // const timeStart = performance.now()\n    super(registry, isU8a(value) || isString(value) ? decodeU8a(registry, u8aToU8a(value)) : value);\n    // console.log('Metadata', `${(performance.now() - timeStart).toFixed(2)}ms`)\n  }\n}","map":{"version":3,"names":["isString","isU8a","u8aToU8a","MetadataVersioned","EMPTY_METADATA","Uint8Array","VERSION_IDX","length","decodeU8a","registry","u8a","Metadata","constructor","value"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/metadata/Metadata.js"],"sourcesContent":["import { isString, isU8a, u8aToU8a } from '@polkadot/util';\nimport { MetadataVersioned } from './MetadataVersioned.js';\nconst EMPTY_METADATA = new Uint8Array([0x6d, 0x65, 0x74, 0x61, 9]);\nconst VERSION_IDX = EMPTY_METADATA.length - 1;\n/** @internal */\nfunction decodeU8a(registry, u8a) {\n    if (u8a.length === 0) {\n        return EMPTY_METADATA;\n    }\n    else if (u8a[VERSION_IDX] === 9) {\n        // This is an f-ing hack as a follow-up to another ugly hack\n        // https://github.com/polkadot-js/api/commit/a9211690be6b68ad6c6dad7852f1665cadcfa5b2\n        // when we fail on V9, try to re-parse it as v10...\n        try {\n            return new MetadataVersioned(registry, u8a);\n        }\n        catch {\n            u8a[VERSION_IDX] = 10;\n        }\n    }\n    return u8a;\n}\n/**\n * @name Metadata\n * @description\n * The versioned runtime metadata as a decoded structure\n */\nexport class Metadata extends MetadataVersioned {\n    constructor(registry, value) {\n        // const timeStart = performance.now()\n        super(registry, isU8a(value) || isString(value)\n            ? decodeU8a(registry, u8aToU8a(value))\n            : value);\n        // console.log('Metadata', `${(performance.now() - timeStart).toFixed(2)}ms`)\n    }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,gBAAgB;AAC1D,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,MAAMC,cAAc,GAAG,IAAIC,UAAU,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAClE,MAAMC,WAAW,GAAGF,cAAc,CAACG,MAAM,GAAG,CAAC;AAC7C;AACA,SAASC,SAASA,CAACC,QAAQ,EAAEC,GAAG,EAAE;EAC9B,IAAIA,GAAG,CAACH,MAAM,KAAK,CAAC,EAAE;IAClB,OAAOH,cAAc;EACzB,CAAC,MACI,IAAIM,GAAG,CAACJ,WAAW,CAAC,KAAK,CAAC,EAAE;IAC7B;IACA;IACA;IACA,IAAI;MACA,OAAO,IAAIH,iBAAiB,CAACM,QAAQ,EAAEC,GAAG,CAAC;IAC/C,CAAC,CACD,MAAM;MACFA,GAAG,CAACJ,WAAW,CAAC,GAAG,EAAE;IACzB;EACJ;EACA,OAAOI,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,SAASR,iBAAiB,CAAC;EAC5CS,WAAWA,CAACH,QAAQ,EAAEI,KAAK,EAAE;IACzB;IACA,KAAK,CAACJ,QAAQ,EAAER,KAAK,CAACY,KAAK,CAAC,IAAIb,QAAQ,CAACa,KAAK,CAAC,GACzCL,SAAS,CAACC,QAAQ,EAAEP,QAAQ,CAACW,KAAK,CAAC,CAAC,GACpCA,KAAK,CAAC;IACZ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}