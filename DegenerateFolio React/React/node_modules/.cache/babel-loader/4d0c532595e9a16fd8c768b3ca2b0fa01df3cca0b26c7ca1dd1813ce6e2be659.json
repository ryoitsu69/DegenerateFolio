{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.numberLimits = void 0;\n/*\n * this variable contains the precalculated limits for all the numbers for uint and int types\n*/\nexports.numberLimits = new Map();\nlet base = BigInt(256); // 2 ^ 8 = 256\nfor (let i = 8; i <= 256; i += 8) {\n  exports.numberLimits.set(\"uint\".concat(i), {\n    min: BigInt(0),\n    max: base - BigInt(1)\n  });\n  exports.numberLimits.set(\"int\".concat(i), {\n    min: -base / BigInt(2),\n    max: base / BigInt(2) - BigInt(1)\n  });\n  base *= BigInt(256);\n}\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexports.numberLimits.set(\"int\", exports.numberLimits.get('int256'));\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nexports.numberLimits.set(\"uint\", exports.numberLimits.get('uint256'));","map":{"version":3,"names":["exports","numberLimits","Map","base","BigInt","i","set","concat","min","max","get"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/web3-eth-abi/src/coders/base/numbersLimits.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* \n * this variable contains the precalculated limits for all the numbers for uint and int types\n*/\nexport const numberLimits = new Map<string, { min: bigint; max: bigint }>();\n\nlet base = BigInt(256); // 2 ^ 8 = 256\nfor (let i = 8; i <= 256; i += 8) {\n\tnumberLimits.set(`uint${i}`, {\n\t\tmin: BigInt(0),\n\t\tmax: base - BigInt(1),\n\t});\n\tnumberLimits.set(`int${i}`, {\n\t\tmin: -base / BigInt(2),\n\t\tmax: base / BigInt(2) - BigInt(1),\n\t});\n\tbase *= BigInt(256);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nnumberLimits.set(`int`, numberLimits.get('int256')!);\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nnumberLimits.set(`uint`, numberLimits.get('uint256')!);\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAiBA;;;AAGaA,OAAA,CAAAC,YAAY,GAAG,IAAIC,GAAG,EAAwC;AAE3E,IAAIC,IAAI,GAAGC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,GAAG,EAAEA,CAAC,IAAI,CAAC,EAAE;EACjCL,OAAA,CAAAC,YAAY,CAACK,GAAG,QAAAC,MAAA,CAAQF,CAAC,GAAI;IAC5BG,GAAG,EAAEJ,MAAM,CAAC,CAAC,CAAC;IACdK,GAAG,EAAEN,IAAI,GAAGC,MAAM,CAAC,CAAC;GACpB,CAAC;EACFJ,OAAA,CAAAC,YAAY,CAACK,GAAG,OAAAC,MAAA,CAAOF,CAAC,GAAI;IAC3BG,GAAG,EAAE,CAACL,IAAI,GAAGC,MAAM,CAAC,CAAC,CAAC;IACtBK,GAAG,EAAEN,IAAI,GAAGC,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC;GAChC,CAAC;EACFD,IAAI,IAAIC,MAAM,CAAC,GAAG,CAAC;;AAGpB;AACAJ,OAAA,CAAAC,YAAY,CAACK,GAAG,QAAQN,OAAA,CAAAC,YAAY,CAACS,GAAG,CAAC,QAAQ,CAAE,CAAC;AACpD;AACAV,OAAA,CAAAC,YAAY,CAACK,GAAG,SAASN,OAAA,CAAAC,YAAY,CAACS,GAAG,CAAC,SAAS,CAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}