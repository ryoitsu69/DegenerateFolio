{"ast":null,"code":"const BEEFY_V1_V3 = {\n  beefy_genesis: {\n    description: 'Return the block number where BEEFY consensus is enabled/started',\n    params: [],\n    type: 'Option<BlockNumber>'\n  },\n  generate_key_ownership_proof: {\n    description: 'Generates a proof of key ownership for the given authority in the given set.',\n    params: [{\n      name: 'setId',\n      type: 'ValidatorSetId'\n    }, {\n      name: 'authorityId',\n      type: 'AuthorityId'\n    }],\n    type: 'Option<OpaqueKeyOwnershipProof>'\n  },\n  submit_report_equivocation_unsigned_extrinsic: {\n    description: 'Submits an unsigned extrinsic to report an equivocation.',\n    params: [{\n      name: 'equivocationProof',\n      type: 'BeefyEquivocationProof'\n    }, {\n      name: 'keyOwnerProof',\n      type: 'OpaqueKeyOwnershipProof'\n    }],\n    type: 'Option<Null>'\n  },\n  validator_set: {\n    description: 'Return the current active BEEFY validator set',\n    params: [],\n    type: 'Option<ValidatorSet>'\n  }\n};\nconst BEEFY_MMR_V1 = {\n  authority_set_proof: {\n    description: 'Return the currently active BEEFY authority set proof.',\n    params: [],\n    type: 'BeefyAuthoritySet'\n  },\n  next_authority_set_proof: {\n    description: 'Return the next/queued BEEFY authority set proof.',\n    params: [],\n    type: 'BeefyNextAuthoritySet'\n  }\n};\nexport const runtime = {\n  BeefyApi: [{\n    methods: BEEFY_V1_V3,\n    version: 3\n  }, {\n    methods: BEEFY_V1_V3,\n    version: 2\n  }, {\n    methods: BEEFY_V1_V3,\n    version: 1\n  }],\n  BeefyMmrApi: [{\n    methods: BEEFY_MMR_V1,\n    version: 1\n  }]\n};","map":{"version":3,"names":["BEEFY_V1_V3","beefy_genesis","description","params","type","generate_key_ownership_proof","name","submit_report_equivocation_unsigned_extrinsic","validator_set","BEEFY_MMR_V1","authority_set_proof","next_authority_set_proof","runtime","BeefyApi","methods","version","BeefyMmrApi"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/interfaces/beefy/runtime.js"],"sourcesContent":["const BEEFY_V1_V3 = {\n    beefy_genesis: {\n        description: 'Return the block number where BEEFY consensus is enabled/started',\n        params: [],\n        type: 'Option<BlockNumber>'\n    },\n    generate_key_ownership_proof: {\n        description: 'Generates a proof of key ownership for the given authority in the given set.',\n        params: [\n            {\n                name: 'setId',\n                type: 'ValidatorSetId'\n            },\n            {\n                name: 'authorityId',\n                type: 'AuthorityId'\n            }\n        ],\n        type: 'Option<OpaqueKeyOwnershipProof>'\n    },\n    submit_report_equivocation_unsigned_extrinsic: {\n        description: 'Submits an unsigned extrinsic to report an equivocation.',\n        params: [\n            {\n                name: 'equivocationProof',\n                type: 'BeefyEquivocationProof'\n            },\n            {\n                name: 'keyOwnerProof',\n                type: 'OpaqueKeyOwnershipProof'\n            }\n        ],\n        type: 'Option<Null>'\n    },\n    validator_set: {\n        description: 'Return the current active BEEFY validator set',\n        params: [],\n        type: 'Option<ValidatorSet>'\n    }\n};\nconst BEEFY_MMR_V1 = {\n    authority_set_proof: {\n        description: 'Return the currently active BEEFY authority set proof.',\n        params: [],\n        type: 'BeefyAuthoritySet'\n    },\n    next_authority_set_proof: {\n        description: 'Return the next/queued BEEFY authority set proof.',\n        params: [],\n        type: 'BeefyNextAuthoritySet'\n    }\n};\nexport const runtime = {\n    BeefyApi: [\n        {\n            methods: BEEFY_V1_V3,\n            version: 3\n        },\n        {\n            methods: BEEFY_V1_V3,\n            version: 2\n        },\n        {\n            methods: BEEFY_V1_V3,\n            version: 1\n        }\n    ],\n    BeefyMmrApi: [\n        {\n            methods: BEEFY_MMR_V1,\n            version: 1\n        }\n    ]\n};\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG;EAChBC,aAAa,EAAE;IACXC,WAAW,EAAE,kEAAkE;IAC/EC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE;EACV,CAAC;EACDC,4BAA4B,EAAE;IAC1BH,WAAW,EAAE,8EAA8E;IAC3FC,MAAM,EAAE,CACJ;MACIG,IAAI,EAAE,OAAO;MACbF,IAAI,EAAE;IACV,CAAC,EACD;MACIE,IAAI,EAAE,aAAa;MACnBF,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDG,6CAA6C,EAAE;IAC3CL,WAAW,EAAE,0DAA0D;IACvEC,MAAM,EAAE,CACJ;MACIG,IAAI,EAAE,mBAAmB;MACzBF,IAAI,EAAE;IACV,CAAC,EACD;MACIE,IAAI,EAAE,eAAe;MACrBF,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDI,aAAa,EAAE;IACXN,WAAW,EAAE,+CAA+C;IAC5DC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE;EACV;AACJ,CAAC;AACD,MAAMK,YAAY,GAAG;EACjBC,mBAAmB,EAAE;IACjBR,WAAW,EAAE,wDAAwD;IACrEC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE;EACV,CAAC;EACDO,wBAAwB,EAAE;IACtBT,WAAW,EAAE,mDAAmD;IAChEC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE;EACV;AACJ,CAAC;AACD,OAAO,MAAMQ,OAAO,GAAG;EACnBC,QAAQ,EAAE,CACN;IACIC,OAAO,EAAEd,WAAW;IACpBe,OAAO,EAAE;EACb,CAAC,EACD;IACID,OAAO,EAAEd,WAAW;IACpBe,OAAO,EAAE;EACb,CAAC,EACD;IACID,OAAO,EAAEd,WAAW;IACpBe,OAAO,EAAE;EACb,CAAC,CACJ;EACDC,WAAW,EAAE,CACT;IACIF,OAAO,EAAEL,YAAY;IACrBM,OAAO,EAAE;EACb,CAAC;AAET,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}