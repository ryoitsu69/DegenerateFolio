{"ast":null,"code":"import { u8aToU8a } from './toU8a.js';\n/**\n * @name u8aCmp\n * @summary Compares two Uint8Arrays for sorting.\n * @description\n * For `UInt8Array` (or hex string) input values returning -1, 0 or +1\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aCmp } from '@polkadot/util';\n *\n * u8aCmp(new Uint8Array([0x67, 0x65]), new Uint8Array([0x68, 0x65])); // -1\n * u8aCmp(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // 0\n * u8aCmp(new Uint8Array([0x69, 0x65]), new Uint8Array([0x68, 0x65])); // +1\n * ```\n */\nexport function u8aCmp(a, b) {\n  const u8aa = u8aToU8a(a);\n  const u8ab = u8aToU8a(b);\n  let i = 0;\n  while (true) {\n    const overA = i >= u8aa.length;\n    const overB = i >= u8ab.length;\n    if (overA && overB) {\n      // both ends reached\n      return 0;\n    } else if (overA) {\n      // a has no more data, b has data\n      return -1;\n    } else if (overB) {\n      // b has no more data, a has data\n      return 1;\n    } else if (u8aa[i] !== u8ab[i]) {\n      // the number in this index doesn't match\n      // (we don't use u8aa[i] - u8ab[i] since that doesn't match with localeCompare)\n      return u8aa[i] > u8ab[i] ? 1 : -1;\n    }\n    i++;\n  }\n}","map":{"version":3,"names":["u8aToU8a","u8aCmp","a","b","u8aa","u8ab","i","overA","length","overB"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util/u8a/cmp.js"],"sourcesContent":["import { u8aToU8a } from './toU8a.js';\n/**\n * @name u8aCmp\n * @summary Compares two Uint8Arrays for sorting.\n * @description\n * For `UInt8Array` (or hex string) input values returning -1, 0 or +1\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aCmp } from '@polkadot/util';\n *\n * u8aCmp(new Uint8Array([0x67, 0x65]), new Uint8Array([0x68, 0x65])); // -1\n * u8aCmp(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // 0\n * u8aCmp(new Uint8Array([0x69, 0x65]), new Uint8Array([0x68, 0x65])); // +1\n * ```\n */\nexport function u8aCmp(a, b) {\n    const u8aa = u8aToU8a(a);\n    const u8ab = u8aToU8a(b);\n    let i = 0;\n    while (true) {\n        const overA = i >= u8aa.length;\n        const overB = i >= u8ab.length;\n        if (overA && overB) {\n            // both ends reached\n            return 0;\n        }\n        else if (overA) {\n            // a has no more data, b has data\n            return -1;\n        }\n        else if (overB) {\n            // b has no more data, a has data\n            return 1;\n        }\n        else if (u8aa[i] !== u8ab[i]) {\n            // the number in this index doesn't match\n            // (we don't use u8aa[i] - u8ab[i] since that doesn't match with localeCompare)\n            return u8aa[i] > u8ab[i]\n                ? 1\n                : -1;\n        }\n        i++;\n    }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACzB,MAAMC,IAAI,GAAGJ,QAAQ,CAACE,CAAC,CAAC;EACxB,MAAMG,IAAI,GAAGL,QAAQ,CAACG,CAAC,CAAC;EACxB,IAAIG,CAAC,GAAG,CAAC;EACT,OAAO,IAAI,EAAE;IACT,MAAMC,KAAK,GAAGD,CAAC,IAAIF,IAAI,CAACI,MAAM;IAC9B,MAAMC,KAAK,GAAGH,CAAC,IAAID,IAAI,CAACG,MAAM;IAC9B,IAAID,KAAK,IAAIE,KAAK,EAAE;MAChB;MACA,OAAO,CAAC;IACZ,CAAC,MACI,IAAIF,KAAK,EAAE;MACZ;MACA,OAAO,CAAC,CAAC;IACb,CAAC,MACI,IAAIE,KAAK,EAAE;MACZ;MACA,OAAO,CAAC;IACZ,CAAC,MACI,IAAIL,IAAI,CAACE,CAAC,CAAC,KAAKD,IAAI,CAACC,CAAC,CAAC,EAAE;MAC1B;MACA;MACA,OAAOF,IAAI,CAACE,CAAC,CAAC,GAAGD,IAAI,CAACC,CAAC,CAAC,GAClB,CAAC,GACD,CAAC,CAAC;IACZ;IACAA,CAAC,EAAE;EACP;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}