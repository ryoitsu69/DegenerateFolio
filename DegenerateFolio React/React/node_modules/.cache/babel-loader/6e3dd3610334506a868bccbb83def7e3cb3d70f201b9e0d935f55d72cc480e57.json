{"ast":null,"code":"import { map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nimport { getEraCache, setEraCache } from './cache.js';\nimport { combineEras, erasHistoricApply, singleEra } from './util.js';\nconst CACHE_KEY = 'eraExposure';\nfunction mapStakersClipped(era, stakers) {\n  const nominators = {};\n  const validators = {};\n  stakers.forEach(([key, exposure]) => {\n    const validatorId = key.args[1].toString();\n    validators[validatorId] = exposure;\n    exposure.others.forEach(({\n      who\n    }, validatorIndex) => {\n      const nominatorId = who.toString();\n      nominators[nominatorId] = nominators[nominatorId] || [];\n      nominators[nominatorId].push({\n        validatorId,\n        validatorIndex\n      });\n    });\n  });\n  return {\n    era,\n    nominators,\n    validators\n  };\n}\nfunction mapStakersPaged(era, stakers) {\n  const nominators = {};\n  const validators = {};\n  stakers.forEach(([key, exposureOpt]) => {\n    if (exposureOpt.isSome) {\n      const validatorId = key.args[1].toString();\n      const exposure = exposureOpt.unwrap();\n      validators[validatorId] = exposure;\n      exposure.others.forEach(({\n        who\n      }, validatorIndex) => {\n        const nominatorId = who.toString();\n        nominators[nominatorId] = nominators[nominatorId] || [];\n        nominators[nominatorId].push({\n          validatorId,\n          validatorIndex\n        });\n      });\n    }\n  });\n  return {\n    era,\n    nominators,\n    validators\n  };\n}\n/**\n * erasStakersClipped will be deprecated and replaced with erasStakersPaged. Therefore support is given for both\n * storage queries until erasStakersClipped has been completely out of use.\n */\nexport function _eraExposure(instanceId, api) {\n  return memo(instanceId, (era, withActive = false) => {\n    const [cacheKey, cached] = getEraCache(CACHE_KEY, era, withActive);\n    return cached ? of(cached) : api.query.staking.erasStakersPaged ? api.query.staking.erasStakersPaged.entries(era).pipe(map(r => setEraCache(cacheKey, withActive, mapStakersPaged(era, r)))) : api.query.staking.erasStakersClipped.entries(era).pipe(map(r => setEraCache(cacheKey, withActive, mapStakersClipped(era, r))));\n  });\n}\nexport const eraExposure = /*#__PURE__*/singleEra('_eraExposure');\nexport const _erasExposure = /*#__PURE__*/combineEras('_eraExposure');\nexport const erasExposure = /*#__PURE__*/erasHistoricApply('_erasExposure');","map":{"version":3,"names":["map","of","memo","getEraCache","setEraCache","combineEras","erasHistoricApply","singleEra","CACHE_KEY","mapStakersClipped","era","stakers","nominators","validators","forEach","key","exposure","validatorId","args","toString","others","who","validatorIndex","nominatorId","push","mapStakersPaged","exposureOpt","isSome","unwrap","_eraExposure","instanceId","api","withActive","cacheKey","cached","query","staking","erasStakersPaged","entries","pipe","r","erasStakersClipped","eraExposure","_erasExposure","erasExposure"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/staking/erasExposure.js"],"sourcesContent":["import { map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\nimport { getEraCache, setEraCache } from './cache.js';\nimport { combineEras, erasHistoricApply, singleEra } from './util.js';\nconst CACHE_KEY = 'eraExposure';\nfunction mapStakersClipped(era, stakers) {\n    const nominators = {};\n    const validators = {};\n    stakers.forEach(([key, exposure]) => {\n        const validatorId = key.args[1].toString();\n        validators[validatorId] = exposure;\n        exposure.others.forEach(({ who }, validatorIndex) => {\n            const nominatorId = who.toString();\n            nominators[nominatorId] = nominators[nominatorId] || [];\n            nominators[nominatorId].push({ validatorId, validatorIndex });\n        });\n    });\n    return { era, nominators, validators };\n}\nfunction mapStakersPaged(era, stakers) {\n    const nominators = {};\n    const validators = {};\n    stakers.forEach(([key, exposureOpt]) => {\n        if (exposureOpt.isSome) {\n            const validatorId = key.args[1].toString();\n            const exposure = exposureOpt.unwrap();\n            validators[validatorId] = exposure;\n            exposure.others.forEach(({ who }, validatorIndex) => {\n                const nominatorId = who.toString();\n                nominators[nominatorId] = nominators[nominatorId] || [];\n                nominators[nominatorId].push({ validatorId, validatorIndex });\n            });\n        }\n    });\n    return { era, nominators, validators };\n}\n/**\n * erasStakersClipped will be deprecated and replaced with erasStakersPaged. Therefore support is given for both\n * storage queries until erasStakersClipped has been completely out of use.\n */\nexport function _eraExposure(instanceId, api) {\n    return memo(instanceId, (era, withActive = false) => {\n        const [cacheKey, cached] = getEraCache(CACHE_KEY, era, withActive);\n        return cached\n            ? of(cached)\n            : api.query.staking.erasStakersPaged\n                ? api.query.staking.erasStakersPaged.entries(era).pipe(map((r) => setEraCache(cacheKey, withActive, mapStakersPaged(era, r))))\n                : api.query.staking.erasStakersClipped.entries(era).pipe(map((r) => setEraCache(cacheKey, withActive, mapStakersClipped(era, r))));\n    });\n}\nexport const eraExposure = /*#__PURE__*/ singleEra('_eraExposure');\nexport const _erasExposure = /*#__PURE__*/ combineEras('_eraExposure');\nexport const erasExposure = /*#__PURE__*/ erasHistoricApply('_erasExposure');\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}