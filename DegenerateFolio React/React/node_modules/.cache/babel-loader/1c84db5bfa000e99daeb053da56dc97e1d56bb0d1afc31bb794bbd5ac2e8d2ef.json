{"ast":null,"code":"import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { u8aToString } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nfunction retrieveNick(api, accountId) {\n  var _api$query$nicks;\n  return (accountId && (_api$query$nicks = api.query['nicks']) !== null && _api$query$nicks !== void 0 && _api$query$nicks['nameOf'] ? api.query['nicks']['nameOf'](accountId) : of(undefined)).pipe(map(nameOf => nameOf !== null && nameOf !== void 0 && nameOf.isSome ? u8aToString(nameOf.unwrap()[0]).substring(0, api.consts['nicks']['maxLength'].toNumber()) : undefined));\n}\n/**\n * @name info\n * @description Returns aux. info with regards to an account, current that includes the accountId, accountIndex and nickname\n */\nexport function info(instanceId, api) {\n  return memo(instanceId, address => api.derive.accounts.idAndIndex(address).pipe(switchMap(_ref => {\n    let [accountId, accountIndex] = _ref;\n    return combineLatest([of({\n      accountId,\n      accountIndex\n    }), api.derive.accounts.identity(accountId), retrieveNick(api, accountId)]);\n  }), map(_ref2 => {\n    let [{\n      accountId,\n      accountIndex\n    }, identity, nickname] = _ref2;\n    return {\n      accountId,\n      accountIndex,\n      identity,\n      nickname\n    };\n  })));\n}","map":{"version":3,"names":["combineLatest","map","of","switchMap","u8aToString","memo","retrieveNick","api","accountId","_api$query$nicks","query","undefined","pipe","nameOf","isSome","unwrap","substring","consts","toNumber","info","instanceId","address","derive","accounts","idAndIndex","_ref","accountIndex","identity","_ref2","nickname"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/accounts/info.js"],"sourcesContent":["import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { u8aToString } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nfunction retrieveNick(api, accountId) {\n    return (accountId && api.query['nicks']?.['nameOf']\n        ? api.query['nicks']['nameOf'](accountId)\n        : of(undefined)).pipe(map((nameOf) => nameOf?.isSome\n        ? u8aToString(nameOf.unwrap()[0]).substring(0, api.consts['nicks']['maxLength'].toNumber())\n        : undefined));\n}\n/**\n * @name info\n * @description Returns aux. info with regards to an account, current that includes the accountId, accountIndex and nickname\n */\nexport function info(instanceId, api) {\n    return memo(instanceId, (address) => api.derive.accounts.idAndIndex(address).pipe(switchMap(([accountId, accountIndex]) => combineLatest([\n        of({ accountId, accountIndex }),\n        api.derive.accounts.identity(accountId),\n        retrieveNick(api, accountId)\n    ])), map(([{ accountId, accountIndex }, identity, nickname]) => ({\n        accountId, accountIndex, identity, nickname\n    }))));\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,GAAG,EAAEC,EAAE,EAAEC,SAAS,QAAQ,MAAM;AACxD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,YAAYA,CAACC,GAAG,EAAEC,SAAS,EAAE;EAAA,IAAAC,gBAAA;EAClC,OAAO,CAACD,SAAS,KAAAC,gBAAA,GAAIF,GAAG,CAACG,KAAK,CAAC,OAAO,CAAC,cAAAD,gBAAA,eAAlBA,gBAAA,CAAqB,QAAQ,CAAC,GAC7CF,GAAG,CAACG,KAAK,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAACF,SAAS,CAAC,GACvCN,EAAE,CAACS,SAAS,CAAC,EAAEC,IAAI,CAACX,GAAG,CAAEY,MAAM,IAAKA,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEC,MAAM,GAClDV,WAAW,CAACS,MAAM,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC,EAAET,GAAG,CAACU,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,GACzFP,SAAS,CAAC,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA,OAAO,SAASQ,IAAIA,CAACC,UAAU,EAAEb,GAAG,EAAE;EAClC,OAAOF,IAAI,CAACe,UAAU,EAAGC,OAAO,IAAKd,GAAG,CAACe,MAAM,CAACC,QAAQ,CAACC,UAAU,CAACH,OAAO,CAAC,CAACT,IAAI,CAACT,SAAS,CAACsB,IAAA;IAAA,IAAC,CAACjB,SAAS,EAAEkB,YAAY,CAAC,GAAAD,IAAA;IAAA,OAAKzB,aAAa,CAAC,CACrIE,EAAE,CAAC;MAAEM,SAAS;MAAEkB;IAAa,CAAC,CAAC,EAC/BnB,GAAG,CAACe,MAAM,CAACC,QAAQ,CAACI,QAAQ,CAACnB,SAAS,CAAC,EACvCF,YAAY,CAACC,GAAG,EAAEC,SAAS,CAAC,CAC/B,CAAC;EAAA,EAAC,EAAEP,GAAG,CAAC2B,KAAA;IAAA,IAAC,CAAC;MAAEpB,SAAS;MAAEkB;IAAa,CAAC,EAAEC,QAAQ,EAAEE,QAAQ,CAAC,GAAAD,KAAA;IAAA,OAAM;MAC7DpB,SAAS;MAAEkB,YAAY;MAAEC,QAAQ;MAAEE;IACvC,CAAC;EAAA,CAAC,CAAC,CAAC,CAAC;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}