{"ast":null,"code":"const convertToList = (input, transform, forceTransform = !1) => (Array.isArray(input) || (input = [input]), transform ? input.map(item => typeof item == \"string\" || forceTransform ? transform(item) : item) : input);\nexport { convertToList };","map":{"version":3,"names":["convertToList","input","transform","forceTransform","Array","isArray","map","item"],"sources":["/home/ryoitsu/node_modules/@pixi/assets/src/utils/convertToList.ts"],"sourcesContent":["export const convertToList = <T>(\n    input: string | T | (string | T)[],\n    transform?: (input: string) => T,\n    forceTransform = false\n): T[] =>\n{\n    if (!Array.isArray(input))\n    {\n        input = [input as T];\n    }\n\n    if (!transform)\n    {\n        return input as T[];\n    }\n\n    return (input as (string | T)[]).map((item): T =>\n    {\n        if (typeof item === 'string' || forceTransform)\n        {\n            return transform(item as string);\n        }\n\n        return item as T;\n    });\n};\n"],"mappings":"AAAa,MAAAA,aAAA,GAAgBA,CACzBC,KAAA,EACAC,SAAA,EACAC,cAAA,GAAiB,QAGZC,KAAA,CAAMC,OAAA,CAAQJ,KAAK,MAEpBA,KAAA,GAAQ,CAACA,KAAU,IAGlBC,SAAA,GAKGD,KAAA,CAAyBK,GAAA,CAAKC,IAAA,IAE9B,OAAOA,IAAA,IAAS,YAAYJ,cAAA,GAErBD,SAAA,CAAUK,IAAc,IAG5BA,IACV,IAXUN,KAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}