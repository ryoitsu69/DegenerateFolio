{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst {\n  BeforeRequestSent,\n  ResponseStarted\n} = require('./networkTypes');\n\n/**\n * @deprecated\n * in favor of using the `Network` class from `bidi/network.js`\n *  Inspector is specific to listening to events.\n *  Goal is to club commands and events under one class called Network.\n */\nclass NetworkInspector {\n  constructor(driver, browsingContextIds) {\n    this._driver = driver;\n    this._browsingContextIds = browsingContextIds;\n  }\n  async init() {\n    this.bidi = await this._driver.getBidi();\n  }\n  async beforeRequestSent(callback) {\n    await this.subscribeAndHandleEvent('network.beforeRequestSent', callback);\n  }\n  async responseStarted(callback) {\n    await this.subscribeAndHandleEvent('network.responseStarted', callback);\n  }\n  async responseCompleted(callback) {\n    await this.subscribeAndHandleEvent('network.responseCompleted', callback);\n  }\n  async authRequired(callback) {\n    await this.subscribeAndHandleEvent('network.authRequired', callback);\n  }\n  async subscribeAndHandleEvent(eventType, callback) {\n    if (this._browsingContextIds != null) {\n      await this.bidi.subscribe(eventType, this._browsingContextIds);\n    } else {\n      await this.bidi.subscribe(eventType);\n    }\n    await this._on(callback);\n  }\n  async _on(callback) {\n    this.ws = await this.bidi.socket;\n    this.ws.on('message', event => {\n      const {\n        params\n      } = JSON.parse(Buffer.from(event.toString()));\n      if (params) {\n        let response = null;\n        if ('initiator' in params) {\n          response = new BeforeRequestSent(params.context, params.navigation, params.redirectCount, params.request, params.timestamp, params.initiator);\n        } else if ('response' in params) {\n          response = new ResponseStarted(params.context, params.navigation, params.redirectCount, params.request, params.timestamp, params.response);\n        }\n        callback(response);\n      }\n    });\n  }\n}\nasync function getNetworkInspectorInstance(driver, browsingContextIds = null) {\n  let instance = new NetworkInspector(driver, browsingContextIds);\n  await instance.init();\n  return instance;\n}\nmodule.exports = getNetworkInspectorInstance;","map":{"version":3,"names":["BeforeRequestSent","ResponseStarted","require","NetworkInspector","constructor","driver","browsingContextIds","_driver","_browsingContextIds","init","bidi","getBidi","beforeRequestSent","callback","subscribeAndHandleEvent","responseStarted","responseCompleted","authRequired","eventType","subscribe","_on","ws","socket","on","event","params","JSON","parse","Buffer","from","toString","response","context","navigation","redirectCount","request","timestamp","initiator","getNetworkInspectorInstance","instance","module","exports"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/selenium-webdriver/bidi/networkInspector.js"],"sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst { BeforeRequestSent, ResponseStarted } = require('./networkTypes')\n\n/**\n * @deprecated\n * in favor of using the `Network` class from `bidi/network.js`\n *  Inspector is specific to listening to events.\n *  Goal is to club commands and events under one class called Network.\n */\nclass NetworkInspector {\n  constructor(driver, browsingContextIds) {\n    this._driver = driver\n    this._browsingContextIds = browsingContextIds\n  }\n\n  async init() {\n    this.bidi = await this._driver.getBidi()\n  }\n\n  async beforeRequestSent(callback) {\n    await this.subscribeAndHandleEvent('network.beforeRequestSent', callback)\n  }\n\n  async responseStarted(callback) {\n    await this.subscribeAndHandleEvent('network.responseStarted', callback)\n  }\n\n  async responseCompleted(callback) {\n    await this.subscribeAndHandleEvent('network.responseCompleted', callback)\n  }\n\n  async authRequired(callback) {\n    await this.subscribeAndHandleEvent('network.authRequired', callback)\n  }\n\n  async subscribeAndHandleEvent(eventType, callback) {\n    if (this._browsingContextIds != null) {\n      await this.bidi.subscribe(eventType, this._browsingContextIds)\n    } else {\n      await this.bidi.subscribe(eventType)\n    }\n    await this._on(callback)\n  }\n\n  async _on(callback) {\n    this.ws = await this.bidi.socket\n    this.ws.on('message', (event) => {\n      const { params } = JSON.parse(Buffer.from(event.toString()))\n      if (params) {\n        let response = null\n        if ('initiator' in params) {\n          response = new BeforeRequestSent(\n            params.context,\n            params.navigation,\n            params.redirectCount,\n            params.request,\n            params.timestamp,\n            params.initiator,\n          )\n        } else if ('response' in params) {\n          response = new ResponseStarted(\n            params.context,\n            params.navigation,\n            params.redirectCount,\n            params.request,\n            params.timestamp,\n            params.response,\n          )\n        }\n        callback(response)\n      }\n    })\n  }\n}\n\nasync function getNetworkInspectorInstance(driver, browsingContextIds = null) {\n  let instance = new NetworkInspector(driver, browsingContextIds)\n  await instance.init()\n  return instance\n}\n\nmodule.exports = getNetworkInspectorInstance\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}