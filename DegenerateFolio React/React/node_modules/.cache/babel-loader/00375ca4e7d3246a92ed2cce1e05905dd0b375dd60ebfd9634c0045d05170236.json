{"ast":null,"code":"/**\n * @name u8aFixLength\n * @summary Shifts a Uint8Array to a specific bitLength\n * @description\n * Returns a uint8Array with the specified number of bits contained in the return value. (If bitLength is -1, length checking is not done). Values with more bits are trimmed to the specified length.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aFixLength } from '@polkadot/util';\n *\n * u8aFixLength('0x12') // => 0x12\n * u8aFixLength('0x12', 16) // => 0x0012\n * u8aFixLength('0x1234', 8) // => 0x12\n * ```\n */\nexport function u8aFixLength(value) {\n  let bitLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n  let atStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const byteLength = Math.ceil(bitLength / 8);\n  if (bitLength === -1 || value.length === byteLength) {\n    return value;\n  } else if (value.length > byteLength) {\n    return value.subarray(0, byteLength);\n  }\n  const result = new Uint8Array(byteLength);\n  result.set(value, atStart ? 0 : byteLength - value.length);\n  return result;\n}","map":{"version":3,"names":["u8aFixLength","value","bitLength","arguments","length","undefined","atStart","byteLength","Math","ceil","subarray","result","Uint8Array","set"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util/u8a/fixLength.js"],"sourcesContent":["/**\n * @name u8aFixLength\n * @summary Shifts a Uint8Array to a specific bitLength\n * @description\n * Returns a uint8Array with the specified number of bits contained in the return value. (If bitLength is -1, length checking is not done). Values with more bits are trimmed to the specified length.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aFixLength } from '@polkadot/util';\n *\n * u8aFixLength('0x12') // => 0x12\n * u8aFixLength('0x12', 16) // => 0x0012\n * u8aFixLength('0x1234', 8) // => 0x12\n * ```\n */\nexport function u8aFixLength(value, bitLength = -1, atStart = false) {\n    const byteLength = Math.ceil(bitLength / 8);\n    if (bitLength === -1 || value.length === byteLength) {\n        return value;\n    }\n    else if (value.length > byteLength) {\n        return value.subarray(0, byteLength);\n    }\n    const result = new Uint8Array(byteLength);\n    result.set(value, atStart ? 0 : (byteLength - value.length));\n    return result;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,YAAYA,CAACC,KAAK,EAAmC;EAAA,IAAjCC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,IAAEG,OAAO,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAC/D,MAAMI,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACP,SAAS,GAAG,CAAC,CAAC;EAC3C,IAAIA,SAAS,KAAK,CAAC,CAAC,IAAID,KAAK,CAACG,MAAM,KAAKG,UAAU,EAAE;IACjD,OAAON,KAAK;EAChB,CAAC,MACI,IAAIA,KAAK,CAACG,MAAM,GAAGG,UAAU,EAAE;IAChC,OAAON,KAAK,CAACS,QAAQ,CAAC,CAAC,EAAEH,UAAU,CAAC;EACxC;EACA,MAAMI,MAAM,GAAG,IAAIC,UAAU,CAACL,UAAU,CAAC;EACzCI,MAAM,CAACE,GAAG,CAACZ,KAAK,EAAEK,OAAO,GAAG,CAAC,GAAIC,UAAU,GAAGN,KAAK,CAACG,MAAO,CAAC;EAC5D,OAAOO,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}