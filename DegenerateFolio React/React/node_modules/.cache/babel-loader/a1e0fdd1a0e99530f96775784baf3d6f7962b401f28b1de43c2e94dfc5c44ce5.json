{"ast":null,"code":"import { selectableNetworks } from '@polkadot/networks';\nimport { BN, hexToU8a } from '@polkadot/util';\nimport * as allKnown from './e2e/index.js';\nconst NET_EXTRA = {\n  westend: {\n    genesisHash: ['0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e']\n  }\n};\n/** @internal */\nfunction mapRaw([network, versions]) {\n  const chain = selectableNetworks.find(n => n.network === network) || NET_EXTRA[network];\n  if (!chain) {\n    throw new Error(`Unable to find info for chain ${network}`);\n  }\n  return {\n    genesisHash: hexToU8a(chain.genesisHash[0]),\n    network,\n    versions: versions.map(([blockNumber, specVersion, apis]) => ({\n      apis,\n      blockNumber: new BN(blockNumber),\n      specVersion: new BN(specVersion)\n    }))\n  };\n}\nexport const upgrades = Object.entries(allKnown).map(mapRaw);","map":{"version":3,"names":["selectableNetworks","BN","hexToU8a","allKnown","NET_EXTRA","westend","genesisHash","mapRaw","network","versions","chain","find","n","Error","map","blockNumber","specVersion","apis","upgrades","Object","entries"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types-known/upgrades/index.js"],"sourcesContent":["import { selectableNetworks } from '@polkadot/networks';\nimport { BN, hexToU8a } from '@polkadot/util';\nimport * as allKnown from './e2e/index.js';\nconst NET_EXTRA = {\n    westend: {\n        genesisHash: ['0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e']\n    }\n};\n/** @internal */\nfunction mapRaw([network, versions]) {\n    const chain = selectableNetworks.find((n) => n.network === network) || NET_EXTRA[network];\n    if (!chain) {\n        throw new Error(`Unable to find info for chain ${network}`);\n    }\n    return {\n        genesisHash: hexToU8a(chain.genesisHash[0]),\n        network,\n        versions: versions.map(([blockNumber, specVersion, apis]) => ({\n            apis,\n            blockNumber: new BN(blockNumber),\n            specVersion: new BN(specVersion)\n        }))\n    };\n}\nexport const upgrades = Object.entries(allKnown).map(mapRaw);\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,oBAAoB;AACvD,SAASC,EAAE,EAAEC,QAAQ,QAAQ,gBAAgB;AAC7C,OAAO,KAAKC,QAAQ,MAAM,gBAAgB;AAC1C,MAAMC,SAAS,GAAG;EACdC,OAAO,EAAE;IACLC,WAAW,EAAE,CAAC,oEAAoE;EACtF;AACJ,CAAC;AACD;AACA,SAASC,MAAMA,CAAC,CAACC,OAAO,EAAEC,QAAQ,CAAC,EAAE;EACjC,MAAMC,KAAK,GAAGV,kBAAkB,CAACW,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACJ,OAAO,KAAKA,OAAO,CAAC,IAAIJ,SAAS,CAACI,OAAO,CAAC;EACzF,IAAI,CAACE,KAAK,EAAE;IACR,MAAM,IAAIG,KAAK,CAAE,iCAAgCL,OAAQ,EAAC,CAAC;EAC/D;EACA,OAAO;IACHF,WAAW,EAAEJ,QAAQ,CAACQ,KAAK,CAACJ,WAAW,CAAC,CAAC,CAAC,CAAC;IAC3CE,OAAO;IACPC,QAAQ,EAAEA,QAAQ,CAACK,GAAG,CAAC,CAAC,CAACC,WAAW,EAAEC,WAAW,EAAEC,IAAI,CAAC,MAAM;MAC1DA,IAAI;MACJF,WAAW,EAAE,IAAId,EAAE,CAACc,WAAW,CAAC;MAChCC,WAAW,EAAE,IAAIf,EAAE,CAACe,WAAW;IACnC,CAAC,CAAC;EACN,CAAC;AACL;AACA,OAAO,MAAME,QAAQ,GAAGC,MAAM,CAACC,OAAO,CAACjB,QAAQ,CAAC,CAACW,GAAG,CAACP,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}