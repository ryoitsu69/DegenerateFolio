{"ast":null,"code":"import { selectableNetworks } from '@polkadot/networks';\nimport { BN, hexToU8a } from '@polkadot/util';\nimport * as allKnown from './e2e/index.js';\nconst NET_EXTRA = {\n  westend: {\n    genesisHash: ['0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e']\n  }\n};\n/** @internal */\nfunction mapRaw(_ref) {\n  let [network, versions] = _ref;\n  const chain = selectableNetworks.find(n => n.network === network) || NET_EXTRA[network];\n  if (!chain) {\n    throw new Error(\"Unable to find info for chain \".concat(network));\n  }\n  return {\n    genesisHash: hexToU8a(chain.genesisHash[0]),\n    network,\n    versions: versions.map(_ref2 => {\n      let [blockNumber, specVersion, apis] = _ref2;\n      return {\n        apis,\n        blockNumber: new BN(blockNumber),\n        specVersion: new BN(specVersion)\n      };\n    })\n  };\n}\nexport const upgrades = Object.entries(allKnown).map(mapRaw);","map":{"version":3,"names":["selectableNetworks","BN","hexToU8a","allKnown","NET_EXTRA","westend","genesisHash","mapRaw","_ref","network","versions","chain","find","n","Error","concat","map","_ref2","blockNumber","specVersion","apis","upgrades","Object","entries"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types-known/upgrades/index.js"],"sourcesContent":["import { selectableNetworks } from '@polkadot/networks';\nimport { BN, hexToU8a } from '@polkadot/util';\nimport * as allKnown from './e2e/index.js';\nconst NET_EXTRA = {\n    westend: {\n        genesisHash: ['0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e']\n    }\n};\n/** @internal */\nfunction mapRaw([network, versions]) {\n    const chain = selectableNetworks.find((n) => n.network === network) || NET_EXTRA[network];\n    if (!chain) {\n        throw new Error(`Unable to find info for chain ${network}`);\n    }\n    return {\n        genesisHash: hexToU8a(chain.genesisHash[0]),\n        network,\n        versions: versions.map(([blockNumber, specVersion, apis]) => ({\n            apis,\n            blockNumber: new BN(blockNumber),\n            specVersion: new BN(specVersion)\n        }))\n    };\n}\nexport const upgrades = Object.entries(allKnown).map(mapRaw);\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,oBAAoB;AACvD,SAASC,EAAE,EAAEC,QAAQ,QAAQ,gBAAgB;AAC7C,OAAO,KAAKC,QAAQ,MAAM,gBAAgB;AAC1C,MAAMC,SAAS,GAAG;EACdC,OAAO,EAAE;IACLC,WAAW,EAAE,CAAC,oEAAoE;EACtF;AACJ,CAAC;AACD;AACA,SAASC,MAAMA,CAAAC,IAAA,EAAsB;EAAA,IAArB,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAAF,IAAA;EAC/B,MAAMG,KAAK,GAAGX,kBAAkB,CAACY,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACJ,OAAO,KAAKA,OAAO,CAAC,IAAIL,SAAS,CAACK,OAAO,CAAC;EACzF,IAAI,CAACE,KAAK,EAAE;IACR,MAAM,IAAIG,KAAK,kCAAAC,MAAA,CAAkCN,OAAO,CAAE,CAAC;EAC/D;EACA,OAAO;IACHH,WAAW,EAAEJ,QAAQ,CAACS,KAAK,CAACL,WAAW,CAAC,CAAC,CAAC,CAAC;IAC3CG,OAAO;IACPC,QAAQ,EAAEA,QAAQ,CAACM,GAAG,CAACC,KAAA;MAAA,IAAC,CAACC,WAAW,EAAEC,WAAW,EAAEC,IAAI,CAAC,GAAAH,KAAA;MAAA,OAAM;QAC1DG,IAAI;QACJF,WAAW,EAAE,IAAIjB,EAAE,CAACiB,WAAW,CAAC;QAChCC,WAAW,EAAE,IAAIlB,EAAE,CAACkB,WAAW;MACnC,CAAC;IAAA,CAAC;EACN,CAAC;AACL;AACA,OAAO,MAAME,QAAQ,GAAGC,MAAM,CAACC,OAAO,CAACpB,QAAQ,CAAC,CAACa,GAAG,CAACT,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}