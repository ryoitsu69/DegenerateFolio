{"ast":null,"code":"/**\n * @name stringShorten\n * @summary Returns a string with maximum length\n * @description\n * Checks the string against the `prefixLength`, if longer than double this, shortens it by placing `..` in the middle of it\n * @example\n * <BR>\n *\n * ```javascript\n * import { stringShorten } from '@polkadot/util';\n *\n * stringShorten('1234567890', 2); // => 12..90\n * ```\n */\nexport function stringShorten(value, prefixLength = 6) {\n  return value.length <= 2 + 2 * prefixLength ? value.toString() : `${value.substring(0, prefixLength)}…${value.slice(-prefixLength)}`;\n}","map":{"version":3,"names":["stringShorten","value","prefixLength","length","toString","substring","slice"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util/string/shorten.js"],"sourcesContent":["/**\n * @name stringShorten\n * @summary Returns a string with maximum length\n * @description\n * Checks the string against the `prefixLength`, if longer than double this, shortens it by placing `..` in the middle of it\n * @example\n * <BR>\n *\n * ```javascript\n * import { stringShorten } from '@polkadot/util';\n *\n * stringShorten('1234567890', 2); // => 12..90\n * ```\n */\nexport function stringShorten(value, prefixLength = 6) {\n    return value.length <= 2 + 2 * prefixLength\n        ? value.toString()\n        : `${value.substring(0, prefixLength)}…${value.slice(-prefixLength)}`;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,aAAaA,CAACC,KAAK,EAAEC,YAAY,GAAG,CAAC,EAAE;EACnD,OAAOD,KAAK,CAACE,MAAM,IAAI,CAAC,GAAG,CAAC,GAAGD,YAAY,GACrCD,KAAK,CAACG,QAAQ,CAAC,CAAC,GACf,GAAEH,KAAK,CAACI,SAAS,CAAC,CAAC,EAAEH,YAAY,CAAE,IAAGD,KAAK,CAACK,KAAK,CAAC,CAACJ,YAAY,CAAE,EAAC;AAC7E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}