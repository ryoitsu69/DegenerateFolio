{"ast":null,"code":"import { u8aConcat } from '@polkadot/util';\nimport { base58Encode } from '../base58/index.js';\nimport { decodeAddress } from './decode.js';\nimport { defaults } from './defaults.js';\nimport { sshash } from './sshash.js';\nexport function encodeAddress(key, ss58Format = defaults.prefix) {\n  // decode it, this means we can re-encode an address\n  const u8a = decodeAddress(key);\n  if (ss58Format < 0 || ss58Format > 16383 || [46, 47].includes(ss58Format)) {\n    throw new Error('Out of range ss58Format specified');\n  } else if (!defaults.allowedDecodedLengths.includes(u8a.length)) {\n    throw new Error(`Expected a valid key to convert, with length ${defaults.allowedDecodedLengths.join(', ')}`);\n  }\n  const input = u8aConcat(ss58Format < 64 ? [ss58Format] : [(ss58Format & 252) >> 2 | 64, ss58Format >> 8 | (ss58Format & 3) << 6], u8a);\n  return base58Encode(u8aConcat(input, sshash(input).subarray(0, [32, 33].includes(u8a.length) ? 2 : 1)));\n}","map":{"version":3,"names":["u8aConcat","base58Encode","decodeAddress","defaults","sshash","encodeAddress","key","ss58Format","prefix","u8a","includes","Error","allowedDecodedLengths","length","join","input","subarray"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/address/encode.js"],"sourcesContent":["import { u8aConcat } from '@polkadot/util';\nimport { base58Encode } from '../base58/index.js';\nimport { decodeAddress } from './decode.js';\nimport { defaults } from './defaults.js';\nimport { sshash } from './sshash.js';\nexport function encodeAddress(key, ss58Format = defaults.prefix) {\n    // decode it, this means we can re-encode an address\n    const u8a = decodeAddress(key);\n    if ((ss58Format < 0) || (ss58Format > 16383) || [46, 47].includes(ss58Format)) {\n        throw new Error('Out of range ss58Format specified');\n    }\n    else if (!defaults.allowedDecodedLengths.includes(u8a.length)) {\n        throw new Error(`Expected a valid key to convert, with length ${defaults.allowedDecodedLengths.join(', ')}`);\n    }\n    const input = u8aConcat(ss58Format < 64\n        ? [ss58Format]\n        : [\n            ((ss58Format & 252) >> 2) | 64,\n            (ss58Format >> 8) | ((ss58Format & 3) << 6)\n        ], u8a);\n    return base58Encode(u8aConcat(input, sshash(input).subarray(0, [32, 33].includes(u8a.length) ? 2 : 1)));\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,MAAM,QAAQ,aAAa;AACpC,OAAO,SAASC,aAAaA,CAACC,GAAG,EAAEC,UAAU,GAAGJ,QAAQ,CAACK,MAAM,EAAE;EAC7D;EACA,MAAMC,GAAG,GAAGP,aAAa,CAACI,GAAG,CAAC;EAC9B,IAAKC,UAAU,GAAG,CAAC,IAAMA,UAAU,GAAG,KAAM,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAACG,QAAQ,CAACH,UAAU,CAAC,EAAE;IAC3E,MAAM,IAAII,KAAK,CAAC,mCAAmC,CAAC;EACxD,CAAC,MACI,IAAI,CAACR,QAAQ,CAACS,qBAAqB,CAACF,QAAQ,CAACD,GAAG,CAACI,MAAM,CAAC,EAAE;IAC3D,MAAM,IAAIF,KAAK,CAAE,gDAA+CR,QAAQ,CAACS,qBAAqB,CAACE,IAAI,CAAC,IAAI,CAAE,EAAC,CAAC;EAChH;EACA,MAAMC,KAAK,GAAGf,SAAS,CAACO,UAAU,GAAG,EAAE,GACjC,CAACA,UAAU,CAAC,GACZ,CACG,CAACA,UAAU,GAAG,GAAG,KAAK,CAAC,GAAI,EAAE,EAC7BA,UAAU,IAAI,CAAC,GAAK,CAACA,UAAU,GAAG,CAAC,KAAK,CAAE,CAC9C,EAAEE,GAAG,CAAC;EACX,OAAOR,YAAY,CAACD,SAAS,CAACe,KAAK,EAAEX,MAAM,CAACW,KAAK,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAACN,QAAQ,CAACD,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}