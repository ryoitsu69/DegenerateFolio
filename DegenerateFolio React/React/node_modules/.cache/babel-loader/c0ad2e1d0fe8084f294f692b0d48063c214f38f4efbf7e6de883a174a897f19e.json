{"ast":null,"code":"const publicKey = new Uint8Array(32);\nconst address = '5C4hrfjw9DjXZTzV3MwzrrAr9P1MJhSrvWGWqi1eSuyUpnhM';\nconst meta = {\n  isTesting: true,\n  name: 'nobody'\n};\nconst json = {\n  address,\n  encoded: '',\n  encoding: {\n    content: ['pkcs8', 'ed25519'],\n    type: 'none',\n    version: '0'\n  },\n  meta\n};\nconst pair = {\n  address,\n  addressRaw: publicKey,\n  decodePkcs8: (_passphrase, _encoded) => undefined,\n  derive: (_suri, _meta) => pair,\n  encodePkcs8: _passphrase => new Uint8Array(0),\n  isLocked: true,\n  lock: () => {\n    // no locking, it is always locked\n  },\n  meta,\n  publicKey,\n  setMeta: _meta => undefined,\n  sign: _message => new Uint8Array(64),\n  toJson: _passphrase => json,\n  type: 'ed25519',\n  unlock: _passphrase => undefined,\n  verify: (_message, _signature) => false,\n  vrfSign: (_message, _context, _extra) => new Uint8Array(96),\n  vrfVerify: (_message, _vrfResult, _context, _extra) => false\n};\nexport function nobody() {\n  return pair;\n}","map":{"version":3,"names":["publicKey","Uint8Array","address","meta","isTesting","name","json","encoded","encoding","content","type","version","pair","addressRaw","decodePkcs8","_passphrase","_encoded","undefined","derive","_suri","_meta","encodePkcs8","isLocked","lock","setMeta","sign","_message","toJson","unlock","verify","_signature","vrfSign","_context","_extra","vrfVerify","_vrfResult","nobody"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/keyring/pair/nobody.js"],"sourcesContent":["const publicKey = new Uint8Array(32);\nconst address = '5C4hrfjw9DjXZTzV3MwzrrAr9P1MJhSrvWGWqi1eSuyUpnhM';\nconst meta = {\n    isTesting: true,\n    name: 'nobody'\n};\nconst json = {\n    address,\n    encoded: '',\n    encoding: {\n        content: ['pkcs8', 'ed25519'],\n        type: 'none',\n        version: '0'\n    },\n    meta\n};\nconst pair = {\n    address,\n    addressRaw: publicKey,\n    decodePkcs8: (_passphrase, _encoded) => undefined,\n    derive: (_suri, _meta) => pair,\n    encodePkcs8: (_passphrase) => new Uint8Array(0),\n    isLocked: true,\n    lock: () => {\n        // no locking, it is always locked\n    },\n    meta,\n    publicKey,\n    setMeta: (_meta) => undefined,\n    sign: (_message) => new Uint8Array(64),\n    toJson: (_passphrase) => json,\n    type: 'ed25519',\n    unlock: (_passphrase) => undefined,\n    verify: (_message, _signature) => false,\n    vrfSign: (_message, _context, _extra) => new Uint8Array(96),\n    vrfVerify: (_message, _vrfResult, _context, _extra) => false\n};\nexport function nobody() {\n    return pair;\n}\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,IAAIC,UAAU,CAAC,EAAE,CAAC;AACpC,MAAMC,OAAO,GAAG,kDAAkD;AAClE,MAAMC,IAAI,GAAG;EACTC,SAAS,EAAE,IAAI;EACfC,IAAI,EAAE;AACV,CAAC;AACD,MAAMC,IAAI,GAAG;EACTJ,OAAO;EACPK,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE;IACNC,OAAO,EAAE,CAAC,OAAO,EAAE,SAAS,CAAC;IAC7BC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;EACb,CAAC;EACDR;AACJ,CAAC;AACD,MAAMS,IAAI,GAAG;EACTV,OAAO;EACPW,UAAU,EAAEb,SAAS;EACrBc,WAAW,EAAEA,CAACC,WAAW,EAAEC,QAAQ,KAAKC,SAAS;EACjDC,MAAM,EAAEA,CAACC,KAAK,EAAEC,KAAK,KAAKR,IAAI;EAC9BS,WAAW,EAAGN,WAAW,IAAK,IAAId,UAAU,CAAC,CAAC,CAAC;EAC/CqB,QAAQ,EAAE,IAAI;EACdC,IAAI,EAAEA,CAAA,KAAM;IACR;EAAA,CACH;EACDpB,IAAI;EACJH,SAAS;EACTwB,OAAO,EAAGJ,KAAK,IAAKH,SAAS;EAC7BQ,IAAI,EAAGC,QAAQ,IAAK,IAAIzB,UAAU,CAAC,EAAE,CAAC;EACtC0B,MAAM,EAAGZ,WAAW,IAAKT,IAAI;EAC7BI,IAAI,EAAE,SAAS;EACfkB,MAAM,EAAGb,WAAW,IAAKE,SAAS;EAClCY,MAAM,EAAEA,CAACH,QAAQ,EAAEI,UAAU,KAAK,KAAK;EACvCC,OAAO,EAAEA,CAACL,QAAQ,EAAEM,QAAQ,EAAEC,MAAM,KAAK,IAAIhC,UAAU,CAAC,EAAE,CAAC;EAC3DiC,SAAS,EAAEA,CAACR,QAAQ,EAAES,UAAU,EAAEH,QAAQ,EAAEC,MAAM,KAAK;AAC3D,CAAC;AACD,OAAO,SAASG,MAAMA,CAAA,EAAG;EACrB,OAAOxB,IAAI;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}