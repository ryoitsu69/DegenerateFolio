{"ast":null,"code":"import { mapSize } from \"./mapSize.mjs\";\nimport { mapType } from \"./mapType.mjs\";\nfunction getAttributeData(program, gl) {\n  const attributes = {},\n    totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < totalAttributes; i++) {\n    const attribData = gl.getActiveAttrib(program, i);\n    if (attribData.name.startsWith(\"gl_\")) continue;\n    const type = mapType(gl, attribData.type),\n      data = {\n        type,\n        name: attribData.name,\n        size: mapSize(type),\n        location: gl.getAttribLocation(program, attribData.name)\n      };\n    attributes[attribData.name] = data;\n  }\n  return attributes;\n}\nexport { getAttributeData };","map":{"version":3,"names":["getAttributeData","program","gl","attributes","totalAttributes","getProgramParameter","ACTIVE_ATTRIBUTES","i","attribData","getActiveAttrib","name","startsWith","type","mapType","data","size","mapSize","location","getAttribLocation"],"sources":["/home/ryoitsu/node_modules/@pixi/core/src/shader/utils/getAttributeData.ts"],"sourcesContent":["import { mapSize } from './mapSize';\nimport { mapType } from './mapType';\n\nimport type { IAttributeData } from '../Program';\n\n/**\n * returns the attribute data from the program\n * @private\n * @param {WebGLProgram} [program] - the WebGL program\n * @param {WebGLRenderingContext} [gl] - the WebGL context\n * @returns {object} the attribute data for this program\n */\nexport function getAttributeData(program: WebGLProgram, gl: WebGLRenderingContextBase): {[key: string]: IAttributeData}\n{\n    const attributes: {[key: string]: IAttributeData} = {};\n\n    const totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (let i = 0; i < totalAttributes; i++)\n    {\n        const attribData = gl.getActiveAttrib(program, i);\n\n        if (attribData.name.startsWith('gl_'))\n        {\n            continue;\n        }\n\n        const type = mapType(gl, attribData.type);\n        const data = {\n            type,\n            name: attribData.name,\n            size: mapSize(type),\n            location: gl.getAttribLocation(program, attribData.name),\n        };\n\n        attributes[attribData.name] = data;\n    }\n\n    return attributes;\n}\n"],"mappings":";;AAYgB,SAAAA,iBAAiBC,OAAA,EAAuBC,EAAA,EACxD;EACU,MAAAC,UAAA,GAA8C,CAE9C;IAAAC,eAAA,GAAkBF,EAAA,CAAGG,mBAAA,CAAoBJ,OAAA,EAASC,EAAA,CAAGI,iBAAiB;EAE5E,SAASC,CAAA,GAAI,GAAGA,CAAA,GAAIH,eAAA,EAAiBG,CAAA,IACrC;IACI,MAAMC,UAAA,GAAaN,EAAA,CAAGO,eAAA,CAAgBR,OAAA,EAASM,CAAC;IAE5C,IAAAC,UAAA,CAAWE,IAAA,CAAKC,UAAA,CAAW,KAAK,GAEhC;IAGJ,MAAMC,IAAA,GAAOC,OAAA,CAAQX,EAAA,EAAIM,UAAA,CAAWI,IAAI;MAClCE,IAAA,GAAO;QACTF,IAAA;QACAF,IAAA,EAAMF,UAAA,CAAWE,IAAA;QACjBK,IAAA,EAAMC,OAAA,CAAQJ,IAAI;QAClBK,QAAA,EAAUf,EAAA,CAAGgB,iBAAA,CAAkBjB,OAAA,EAASO,UAAA,CAAWE,IAAI;MAAA;IAGhDP,UAAA,CAAAK,UAAA,CAAWE,IAAI,IAAII,IAAA;EAClC;EAEO,OAAAX,UAAA;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}