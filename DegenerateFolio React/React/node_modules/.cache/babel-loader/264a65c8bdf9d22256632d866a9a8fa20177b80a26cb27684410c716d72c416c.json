{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.trySendTransaction = void 0;\nconst web3_utils_1 = require(\"web3-utils\");\nconst web3_errors_1 = require(\"web3-errors\");\n// eslint-disable-next-line import/no-cycle\nconst reject_if_block_timeout_js_1 = require(\"./reject_if_block_timeout.js\");\n/**\n * An internal function to send a transaction or throws if sending did not finish during the timeout during the blocks-timeout.\n * @param web3Context - the context to read the configurations from\n * @param sendTransactionFunc - the function that will send the transaction (could be sendTransaction or sendRawTransaction)\n * @param transactionHash - to be used inside the exception message if there will be any exceptions.\n * @returns the Promise<string> returned by the `sendTransactionFunc`.\n */\nfunction trySendTransaction(web3Context, sendTransactionFunc, transactionHash) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const [timeoutId, rejectOnTimeout] = (0, web3_utils_1.rejectIfTimeout)(web3Context.transactionSendTimeout, new web3_errors_1.TransactionSendTimeoutError({\n      numberOfSeconds: web3Context.transactionSendTimeout / 1000,\n      transactionHash\n    }));\n    const [rejectOnBlockTimeout, blockTimeoutResourceCleaner] = yield (0, reject_if_block_timeout_js_1.rejectIfBlockTimeout)(web3Context, transactionHash);\n    try {\n      // If an error happened here, do not catch it, just clear the resources before raising it to the caller function.\n      return yield Promise.race([sendTransactionFunc(), rejectOnTimeout, rejectOnBlockTimeout // this will throw an error on Transaction Block Timeout\n      ]);\n    } finally {\n      clearTimeout(timeoutId);\n      blockTimeoutResourceCleaner.clean();\n    }\n  });\n}\nexports.trySendTransaction = trySendTransaction;","map":{"version":3,"names":["web3_utils_1","require","web3_errors_1","reject_if_block_timeout_js_1","trySendTransaction","web3Context","sendTransactionFunc","transactionHash","timeoutId","rejectOnTimeout","rejectIfTimeout","transactionSendTimeout","TransactionSendTimeoutError","numberOfSeconds","rejectOnBlockTimeout","blockTimeoutResourceCleaner","rejectIfBlockTimeout","Promise","race","clearTimeout","clean","exports"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/web3-eth/src/utils/try_send_transaction.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3Context } from 'web3-core';\nimport { EthExecutionAPI, Bytes } from 'web3-types';\nimport { AsyncFunction, rejectIfTimeout } from 'web3-utils';\nimport { TransactionSendTimeoutError } from 'web3-errors';\n\n// eslint-disable-next-line import/no-cycle\nimport { rejectIfBlockTimeout } from './reject_if_block_timeout.js';\n\n/**\n * An internal function to send a transaction or throws if sending did not finish during the timeout during the blocks-timeout.\n * @param web3Context - the context to read the configurations from\n * @param sendTransactionFunc - the function that will send the transaction (could be sendTransaction or sendRawTransaction)\n * @param transactionHash - to be used inside the exception message if there will be any exceptions.\n * @returns the Promise<string> returned by the `sendTransactionFunc`.\n */\nexport async function trySendTransaction(\n\tweb3Context: Web3Context<EthExecutionAPI>,\n\tsendTransactionFunc: AsyncFunction<string>,\n\ttransactionHash?: Bytes,\n): Promise<string> {\n\tconst [timeoutId, rejectOnTimeout] = rejectIfTimeout(\n\t\tweb3Context.transactionSendTimeout,\n\t\tnew TransactionSendTimeoutError({\n\t\t\tnumberOfSeconds: web3Context.transactionSendTimeout / 1000,\n\t\t\ttransactionHash,\n\t\t}),\n\t);\n\n\tconst [rejectOnBlockTimeout, blockTimeoutResourceCleaner] = await rejectIfBlockTimeout(\n\t\tweb3Context,\n\t\ttransactionHash,\n\t);\n\n\ttry {\n\t\t// If an error happened here, do not catch it, just clear the resources before raising it to the caller function.\n\t\treturn await Promise.race([\n\t\t\tsendTransactionFunc(), // this is the function that will send the transaction\n\t\t\trejectOnTimeout, // this will throw an error on Transaction Send Timeout\n\t\t\trejectOnBlockTimeout, // this will throw an error on Transaction Block Timeout\n\t\t]);\n\t} finally {\n\t\tclearTimeout(timeoutId);\n\t\tblockTimeoutResourceCleaner.clean();\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,MAAAA,YAAA,GAAAC,OAAA;AACA,MAAAC,aAAA,GAAAD,OAAA;AAEA;AACA,MAAAE,4BAAA,GAAAF,OAAA;AAEA;;;;;;;AAOA,SAAsBG,kBAAkBA,CACvCC,WAAyC,EACzCC,mBAA0C,EAC1CC,eAAuB;;IAEvB,MAAM,CAACC,SAAS,EAAEC,eAAe,CAAC,GAAG,IAAAT,YAAA,CAAAU,eAAe,EACnDL,WAAW,CAACM,sBAAsB,EAClC,IAAIT,aAAA,CAAAU,2BAA2B,CAAC;MAC/BC,eAAe,EAAER,WAAW,CAACM,sBAAsB,GAAG,IAAI;MAC1DJ;KACA,CAAC,CACF;IAED,MAAM,CAACO,oBAAoB,EAAEC,2BAA2B,CAAC,GAAG,MAAM,IAAAZ,4BAAA,CAAAa,oBAAoB,EACrFX,WAAW,EACXE,eAAe,CACf;IAED,IAAI;MACH;MACA,OAAO,MAAMU,OAAO,CAACC,IAAI,CAAC,CACzBZ,mBAAmB,EAAE,EACrBG,eAAe,EACfK,oBAAoB,CAAE;MAAA,CACtB,CAAC;KACF,SAAS;MACTK,YAAY,CAACX,SAAS,CAAC;MACvBO,2BAA2B,CAACK,KAAK,EAAE;;EAErC,CAAC;;AA7BDC,OAAA,CAAAjB,kBAAA,GAAAA,kBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}