{"ast":null,"code":"var _jsxFileName = \"/home/ryoitsu/Documents/test/react-todo-app/src/components/Wallets.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Web3\n} = require('web3');\nconst ethRPC = new Web3(new Web3.providers.HttpProvider(\"https://mainnet.infura.io/v3/ff42bd19bf6e4ca9a401fbf0a8a36f15\"));\nconst optRPC = new Web3(new Web3.providers.HttpProvider(\"https://optimism-mainnet.infura.io/v3/ff42bd19bf6e4ca9a401fbf0a8a36f15\"));\nconst arbRPC = new Web3(new Web3.providers.HttpProvider(\"https://arbitrum-mainnet.infura.io/v3/ff42bd19bf6e4ca9a401fbf0a8a36f15\"));\nconst starkRPC = new Web3(new Web3.providers.HttpProvider(\"https://free-rpc.nethermind.io/mainnet-juno\"));\nconst bscRPC = new Web3(new Web3.providers.HttpProvider(\"https://bnb-mainnet.g.alchemy.com/v2/Wflh86IAxtX-p7SFc--_YxhsIINWRfPR\"));\nclass Chain {\n  constructor(rpc, tokenName, mainTokenAddress) {\n    this.rpc = rpc;\n    this.tokenName = tokenName;\n    this.mainTokenAddress = mainTokenAddress;\n  }\n}\n\n// The minimum ABI required to get the ERC20 Token balance\nconst minABI = [\n// balanceOf\n{\n  constant: true,\n  inputs: [{\n    name: '_owner',\n    type: 'address'\n  }],\n  name: 'balanceOf',\n  outputs: [{\n    name: 'balance',\n    type: 'uint256'\n  }],\n  type: 'function'\n}];\nclass Wallets extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chains = new Map();\n    this.chains.set('ETH', new Chain(ethRPC, 'ETH', null));\n    this.chains.set('OPT', new Chain(optRPC, 'OPT', \"0x4200000000000000000000000000000000000042\"));\n    this.chains.set('ARB', new Chain(arbRPC, 'ARB', \"0x912ce59144191c1204e64559fe8253a0e49e6548\"));\n    this.chains.set('STRK', new Chain(starkRPC, 'STRK', '0x04718f5a0Fc34cC1AF16A1cdee98fFB20C31f5cD61D6Ab07201858f4287c938D'));\n    this.chains.set('BSC', new Chain(bscRPC, 'BNB', null));\n    this.getBalanceGasToken.bind(this);\n  }\n  getBalanceGasToken(address, chain) {\n    chain.rpc.eth.getBalance(address).then(balance => console.log(bscRPC.utils.fromWei(balance, \"ether\") + chain.tokenName));\n  }\n  render() {\n    {\n      this.getBalanceGasToken(\"0x045E33392aE862fbcDf880a6aaE90807C3c784bd323378884861182cdA264762\", this.chains.get('STRK'));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n}\n;\nexport default Wallets;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Web3","require","ethRPC","providers","HttpProvider","optRPC","arbRPC","starkRPC","bscRPC","Chain","constructor","rpc","tokenName","mainTokenAddress","minABI","constant","inputs","name","type","outputs","Wallets","props","chains","Map","set","getBalanceGasToken","bind","address","chain","eth","getBalance","then","balance","console","log","utils","fromWei","render","get","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/src/components/Wallets.jsx"],"sourcesContent":["import React, { Component } from 'react';\nconst {Web3} = require('web3');\n\nconst ethRPC = new Web3(new Web3.providers.HttpProvider(\"https://mainnet.infura.io/v3/ff42bd19bf6e4ca9a401fbf0a8a36f15\"));\nconst optRPC = new Web3(new Web3.providers.HttpProvider(\"https://optimism-mainnet.infura.io/v3/ff42bd19bf6e4ca9a401fbf0a8a36f15\"));\nconst arbRPC = new Web3(new Web3.providers.HttpProvider(\"https://arbitrum-mainnet.infura.io/v3/ff42bd19bf6e4ca9a401fbf0a8a36f15\"));\nconst starkRPC = new Web3(new Web3.providers.HttpProvider(\"https://free-rpc.nethermind.io/mainnet-juno\"));\nconst bscRPC = new Web3(new Web3.providers.HttpProvider(\"https://bnb-mainnet.g.alchemy.com/v2/Wflh86IAxtX-p7SFc--_YxhsIINWRfPR\"));\n\nclass Chain{\n  constructor(rpc, tokenName, mainTokenAddress){\n    this.rpc = rpc;\n    this.tokenName = tokenName;\n    this.mainTokenAddress = mainTokenAddress;\n  }\n}\n\n// The minimum ABI required to get the ERC20 Token balance\nconst minABI = [\n  // balanceOf\n  {\n    constant: true,\n    inputs: [{ name: '_owner', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: 'balance', type: 'uint256'}],\n    type: 'function',\n  },\n];\n\n\nclass Wallets extends React.Component{\n\n\n\n  constructor(props){\n    super(props);\n    this.chains = new Map();\n    this.chains.set('ETH', new Chain(ethRPC, 'ETH', null));\n    this.chains.set('OPT', new Chain(optRPC, 'OPT', \"0x4200000000000000000000000000000000000042\"));\n    this.chains.set('ARB', new Chain(arbRPC, 'ARB', \"0x912ce59144191c1204e64559fe8253a0e49e6548\"));\n    this.chains.set('STRK', new Chain(starkRPC, 'STRK', '0x04718f5a0Fc34cC1AF16A1cdee98fFB20C31f5cD61D6Ab07201858f4287c938D'));\n    this.chains.set('BSC', new Chain(bscRPC, 'BNB', null));\n    this.getBalanceGasToken.bind(this);\n  }\n\n\n\n  getBalanceGasToken(address, chain){\n    chain.rpc.eth.getBalance(address).then((balance) => console.log(bscRPC.utils.fromWei(balance, \"ether\") + chain.tokenName));\n  }\n\n\n  render(){\n  {this.getBalanceGasToken(\"0x045E33392aE862fbcDf880a6aaE90807C3c784bd323378884861182cdA264762\", this.chains.get('STRK'));}\n    return (\n      <div></div>\n\n    );\n  }\n};\nexport default Wallets;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}