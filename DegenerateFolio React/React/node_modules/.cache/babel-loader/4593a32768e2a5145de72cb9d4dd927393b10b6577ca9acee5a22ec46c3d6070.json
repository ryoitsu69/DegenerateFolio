{"ast":null,"code":"\"use strict\";\n\nfunction loadSVGImage(image, url, delay) {\n  return new Promise(async resolve => {\n    if (delay) {\n      await new Promise(resolve2 => setTimeout(resolve2, 100));\n    }\n    image.onload = () => {\n      resolve();\n    };\n    image.src = `data:image/svg+xml;charset=utf8,${encodeURIComponent(url)}`;\n    image.crossOrigin = \"anonymous\";\n  });\n}\nexport { loadSVGImage };","map":{"version":3,"names":["loadSVGImage","image","url","delay","Promise","resolve","resolve2","setTimeout","onload","src","encodeURIComponent","crossOrigin"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/scene/text-html/utils/loadSVGImage.ts"],"sourcesContent":["/**\n * This function loads an SVG image into an HTMLImageElement.\n * The image can then be uploaded as texture to the GPU.\n * iOS has a bug where embedded fonts are not available immediately after the image loads,\n * so we wait an arbitrary amount of time before resolving the promise.\n * @param image - The image to load the SVG into\n * @param url - The url to load the SVG from\n * @param delay - Whether to delay the load\n * @returns - A promise that resolves when the image has loaded\n */\nexport function loadSVGImage(image: HTMLImageElement, url: string, delay: boolean)\n{\n    return new Promise<void>(async (resolve) =>\n    {\n        // Safari has a known bug where embedded fonts are not available\n        // immediately after the image loads, to compensate we wait an\n        // arbitrary amount of time\n        // @see https://bugs.webkit.org/show_bug.cgi?id=219770\n        if (delay)\n        {\n            await new Promise<void>((resolve) => setTimeout(resolve, 100));\n        }\n\n        image.onload = () =>\n        {\n            resolve();\n        };\n\n        image.src = `data:image/svg+xml;charset=utf8,${encodeURIComponent(url)}`;\n        image.crossOrigin = 'anonymous';\n    });\n}\n"],"mappings":";;AAUgB,SAAAA,aAAaC,KAAyB,EAAAC,GAAA,EAAaC,KACnE;EACW,WAAIC,OAAc,OAAOC,OAChC;IAKI,IAAIF,KACJ;MACI,MAAM,IAAIC,OAAc,CAACE,QAAA,IAAYC,UAAW,CAAAD,QAAA,EAAS,GAAG,CAAC;IAAA;IAGjEL,KAAA,CAAMO,MAAA,GAAS,MACf;MACYH,OAAA;IAAA,CACZ;IAEAJ,KAAA,CAAMQ,GAAM,sCAAmCC,kBAAmB,CAAAR,GAAG,CAAC;IACtED,KAAA,CAAMU,WAAc;EAAA,CACvB;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}