{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateTransactionForSigning = exports.validateGas = exports.validateFeeMarketGas = exports.validateLegacyGas = exports.validateHardfork = exports.validateBaseChain = exports.validateChainInfo = exports.validateCustomChainInfo = exports.validateTransactionCall = exports.isTransactionCall = exports.validateTransactionWithSender = exports.isTransactionWithSender = exports.isTransactionLegacyUnsigned = exports.isTransaction2930Unsigned = exports.isTransaction1559Unsigned = exports.isAccessList = exports.isAccessListEntry = exports.isBaseTransaction = void 0;\nconst web3_types_1 = require(\"web3-types\");\nconst web3_validator_1 = require(\"web3-validator\");\nconst web3_errors_1 = require(\"web3-errors\");\nconst format_transaction_js_1 = require(\"./utils/format_transaction.js\");\nfunction isBaseTransaction(value) {\n  if (!(0, web3_validator_1.isNullish)(value.to) && !(0, web3_validator_1.isAddress)(value.to)) return false;\n  if (!(0, web3_validator_1.isHexStrict)(value.type) && !(0, web3_validator_1.isNullish)(value.type) && value.type.length !== 2) return false;\n  if (!(0, web3_validator_1.isHexStrict)(value.nonce)) return false;\n  if (!(0, web3_validator_1.isHexStrict)(value.gas)) return false;\n  if (!(0, web3_validator_1.isHexStrict)(value.value)) return false;\n  if (!(0, web3_validator_1.isHexStrict)(value.input)) return false;\n  if (value.chainId && !(0, web3_validator_1.isHexStrict)(value.chainId)) return false;\n  return true;\n}\nexports.isBaseTransaction = isBaseTransaction;\nfunction isAccessListEntry(value) {\n  if (!(0, web3_validator_1.isNullish)(value.address) && !(0, web3_validator_1.isAddress)(value.address)) return false;\n  if (!(0, web3_validator_1.isNullish)(value.storageKeys) && !value.storageKeys.every(storageKey => (0, web3_validator_1.isHexString32Bytes)(storageKey))) return false;\n  return true;\n}\nexports.isAccessListEntry = isAccessListEntry;\nfunction isAccessList(value) {\n  if (!Array.isArray(value) || !value.every(accessListEntry => isAccessListEntry(accessListEntry))) return false;\n  return true;\n}\nexports.isAccessList = isAccessList;\nfunction isTransaction1559Unsigned(value) {\n  if (!isBaseTransaction(value)) return false;\n  if (!(0, web3_validator_1.isHexStrict)(value.maxFeePerGas)) return false;\n  if (!(0, web3_validator_1.isHexStrict)(value.maxPriorityFeePerGas)) return false;\n  if (!isAccessList(value.accessList)) return false;\n  return true;\n}\nexports.isTransaction1559Unsigned = isTransaction1559Unsigned;\nfunction isTransaction2930Unsigned(value) {\n  if (!isBaseTransaction(value)) return false;\n  if (!(0, web3_validator_1.isHexStrict)(value.gasPrice)) return false;\n  if (!isAccessList(value.accessList)) return false;\n  return true;\n}\nexports.isTransaction2930Unsigned = isTransaction2930Unsigned;\nfunction isTransactionLegacyUnsigned(value) {\n  if (!isBaseTransaction(value)) return false;\n  if (!(0, web3_validator_1.isHexStrict)(value.gasPrice)) return false;\n  return true;\n}\nexports.isTransactionLegacyUnsigned = isTransactionLegacyUnsigned;\nfunction isTransactionWithSender(value) {\n  if (!(0, web3_validator_1.isAddress)(value.from)) return false;\n  if (!isBaseTransaction(value)) return false;\n  if (!isTransaction1559Unsigned(value) && !isTransaction2930Unsigned(value) && !isTransactionLegacyUnsigned(value)) return false;\n  return true;\n}\nexports.isTransactionWithSender = isTransactionWithSender;\nfunction validateTransactionWithSender(value) {\n  if (!isTransactionWithSender(value)) throw new web3_errors_1.InvalidTransactionWithSender(value);\n}\nexports.validateTransactionWithSender = validateTransactionWithSender;\nfunction isTransactionCall(value) {\n  if (!(0, web3_validator_1.isNullish)(value.from) && !(0, web3_validator_1.isAddress)(value.from)) return false;\n  if (!(0, web3_validator_1.isAddress)(value.to)) return false;\n  if (!(0, web3_validator_1.isNullish)(value.gas) && !(0, web3_validator_1.isHexStrict)(value.gas)) return false;\n  if (!(0, web3_validator_1.isNullish)(value.gasPrice) && !(0, web3_validator_1.isHexStrict)(value.gasPrice)) return false;\n  if (!(0, web3_validator_1.isNullish)(value.value) && !(0, web3_validator_1.isHexStrict)(value.value)) return false;\n  if (!(0, web3_validator_1.isNullish)(value.data) && !(0, web3_validator_1.isHexStrict)(value.data)) return false;\n  if (!(0, web3_validator_1.isNullish)(value.input) && !(0, web3_validator_1.isHexStrict)(value.input)) return false;\n  if (!(0, web3_validator_1.isNullish)(value.type)) return false;\n  if (isTransaction1559Unsigned(value)) return false;\n  if (isTransaction2930Unsigned(value)) return false;\n  return true;\n}\nexports.isTransactionCall = isTransactionCall;\nfunction validateTransactionCall(value) {\n  if (!isTransactionCall(value)) throw new web3_errors_1.InvalidTransactionCall(value);\n}\nexports.validateTransactionCall = validateTransactionCall;\nconst validateCustomChainInfo = transaction => {\n  if (!(0, web3_validator_1.isNullish)(transaction.common)) {\n    if ((0, web3_validator_1.isNullish)(transaction.common.customChain)) throw new web3_errors_1.MissingCustomChainError();\n    if ((0, web3_validator_1.isNullish)(transaction.common.customChain.chainId)) throw new web3_errors_1.MissingCustomChainIdError();\n    if (!(0, web3_validator_1.isNullish)(transaction.chainId) && transaction.chainId !== transaction.common.customChain.chainId) throw new web3_errors_1.ChainIdMismatchError({\n      txChainId: transaction.chainId,\n      customChainId: transaction.common.customChain.chainId\n    });\n  }\n};\nexports.validateCustomChainInfo = validateCustomChainInfo;\nconst validateChainInfo = transaction => {\n  if (!(0, web3_validator_1.isNullish)(transaction.common) && !(0, web3_validator_1.isNullish)(transaction.chain) && !(0, web3_validator_1.isNullish)(transaction.hardfork)) {\n    throw new web3_errors_1.CommonOrChainAndHardforkError();\n  }\n  if (!(0, web3_validator_1.isNullish)(transaction.chain) && (0, web3_validator_1.isNullish)(transaction.hardfork) || !(0, web3_validator_1.isNullish)(transaction.hardfork) && (0, web3_validator_1.isNullish)(transaction.chain)) throw new web3_errors_1.MissingChainOrHardforkError({\n    chain: transaction.chain,\n    hardfork: transaction.hardfork\n  });\n};\nexports.validateChainInfo = validateChainInfo;\nconst validateBaseChain = transaction => {\n  if (!(0, web3_validator_1.isNullish)(transaction.common)) if (!(0, web3_validator_1.isNullish)(transaction.common.baseChain)) if (!(0, web3_validator_1.isNullish)(transaction.chain) && transaction.chain !== transaction.common.baseChain) {\n    throw new web3_errors_1.ChainMismatchError({\n      txChain: transaction.chain,\n      baseChain: transaction.common.baseChain\n    });\n  }\n};\nexports.validateBaseChain = validateBaseChain;\nconst validateHardfork = transaction => {\n  if (!(0, web3_validator_1.isNullish)(transaction.common)) if (!(0, web3_validator_1.isNullish)(transaction.common.hardfork)) if (!(0, web3_validator_1.isNullish)(transaction.hardfork) && transaction.hardfork !== transaction.common.hardfork) {\n    throw new web3_errors_1.HardforkMismatchError({\n      txHardfork: transaction.hardfork,\n      commonHardfork: transaction.common.hardfork\n    });\n  }\n};\nexports.validateHardfork = validateHardfork;\nconst validateLegacyGas = transaction => {\n  if (\n  // This check is verifying gas and gasPrice aren't less than 0.\n  (0, web3_validator_1.isNullish)(transaction.gas) || !(0, web3_validator_1.isUInt)(transaction.gas) || (0, web3_validator_1.isNullish)(transaction.gasPrice) || !(0, web3_validator_1.isUInt)(transaction.gasPrice)) throw new web3_errors_1.InvalidGasOrGasPrice({\n    gas: transaction.gas,\n    gasPrice: transaction.gasPrice\n  });\n  if (!(0, web3_validator_1.isNullish)(transaction.maxFeePerGas) || !(0, web3_validator_1.isNullish)(transaction.maxPriorityFeePerGas)) throw new web3_errors_1.UnsupportedFeeMarketError({\n    maxFeePerGas: transaction.maxFeePerGas,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n  });\n};\nexports.validateLegacyGas = validateLegacyGas;\nconst validateFeeMarketGas = transaction => {\n  // These errors come from 1.x, so they must be checked before\n  // InvalidMaxPriorityFeePerGasOrMaxFeePerGas to throw the same error\n  // for the same code executing in 1.x\n  if (!(0, web3_validator_1.isNullish)(transaction.gasPrice) && transaction.type === '0x2') throw new web3_errors_1.Eip1559GasPriceError(transaction.gasPrice);\n  if (transaction.type === '0x0' || transaction.type === '0x1') throw new web3_errors_1.UnsupportedFeeMarketError({\n    maxFeePerGas: transaction.maxFeePerGas,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n  });\n  if ((0, web3_validator_1.isNullish)(transaction.maxFeePerGas) || !(0, web3_validator_1.isUInt)(transaction.maxFeePerGas) || (0, web3_validator_1.isNullish)(transaction.maxPriorityFeePerGas) || !(0, web3_validator_1.isUInt)(transaction.maxPriorityFeePerGas)) throw new web3_errors_1.InvalidMaxPriorityFeePerGasOrMaxFeePerGas({\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n    maxFeePerGas: transaction.maxFeePerGas\n  });\n};\nexports.validateFeeMarketGas = validateFeeMarketGas;\n/**\n * This method checks if all required gas properties are present for either\n * legacy gas (type 0x0 and 0x1) OR fee market transactions (0x2)\n */\nconst validateGas = transaction => {\n  const gasPresent = !(0, web3_validator_1.isNullish)(transaction.gas) || !(0, web3_validator_1.isNullish)(transaction.gasLimit);\n  const legacyGasPresent = gasPresent && !(0, web3_validator_1.isNullish)(transaction.gasPrice);\n  const feeMarketGasPresent = gasPresent && !(0, web3_validator_1.isNullish)(transaction.maxPriorityFeePerGas) && !(0, web3_validator_1.isNullish)(transaction.maxFeePerGas);\n  if (!legacyGasPresent && !feeMarketGasPresent) throw new web3_errors_1.MissingGasError({\n    gas: transaction.gas,\n    gasPrice: transaction.gasPrice,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n    maxFeePerGas: transaction.maxFeePerGas\n  });\n  if (legacyGasPresent && feeMarketGasPresent) throw new web3_errors_1.TransactionGasMismatchError({\n    gas: transaction.gas,\n    gasPrice: transaction.gasPrice,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n    maxFeePerGas: transaction.maxFeePerGas\n  });\n  (legacyGasPresent ? exports.validateLegacyGas : exports.validateFeeMarketGas)(transaction);\n  (!(0, web3_validator_1.isNullish)(transaction.type) && transaction.type > '0x1' ? exports.validateFeeMarketGas : exports.validateLegacyGas)(transaction);\n};\nexports.validateGas = validateGas;\nconst validateTransactionForSigning = (transaction, overrideMethod) => {\n  if (!(0, web3_validator_1.isNullish)(overrideMethod)) {\n    overrideMethod(transaction);\n    return;\n  }\n  if (typeof transaction !== 'object' || (0, web3_validator_1.isNullish)(transaction)) throw new web3_errors_1.InvalidTransactionObjectError(transaction);\n  (0, exports.validateCustomChainInfo)(transaction);\n  (0, exports.validateChainInfo)(transaction);\n  (0, exports.validateBaseChain)(transaction);\n  (0, exports.validateHardfork)(transaction);\n  const formattedTransaction = (0, format_transaction_js_1.formatTransaction)(transaction, web3_types_1.ETH_DATA_FORMAT);\n  (0, exports.validateGas)(formattedTransaction);\n  if ((0, web3_validator_1.isNullish)(formattedTransaction.nonce) || (0, web3_validator_1.isNullish)(formattedTransaction.chainId) || formattedTransaction.nonce.startsWith('-') || formattedTransaction.chainId.startsWith('-')) throw new web3_errors_1.InvalidNonceOrChainIdError({\n    nonce: transaction.nonce,\n    chainId: transaction.chainId\n  });\n};\nexports.validateTransactionForSigning = validateTransactionForSigning;","map":{"version":3,"names":["web3_types_1","require","web3_validator_1","web3_errors_1","format_transaction_js_1","isBaseTransaction","value","isNullish","to","isAddress","isHexStrict","type","length","nonce","gas","input","chainId","exports","isAccessListEntry","address","storageKeys","every","storageKey","isHexString32Bytes","isAccessList","Array","isArray","accessListEntry","isTransaction1559Unsigned","maxFeePerGas","maxPriorityFeePerGas","accessList","isTransaction2930Unsigned","gasPrice","isTransactionLegacyUnsigned","isTransactionWithSender","from","validateTransactionWithSender","InvalidTransactionWithSender","isTransactionCall","data","validateTransactionCall","InvalidTransactionCall","validateCustomChainInfo","transaction","common","customChain","MissingCustomChainError","MissingCustomChainIdError","ChainIdMismatchError","txChainId","customChainId","validateChainInfo","chain","hardfork","CommonOrChainAndHardforkError","MissingChainOrHardforkError","validateBaseChain","baseChain","ChainMismatchError","txChain","validateHardfork","HardforkMismatchError","txHardfork","commonHardfork","validateLegacyGas","isUInt","InvalidGasOrGasPrice","UnsupportedFeeMarketError","validateFeeMarketGas","Eip1559GasPriceError","InvalidMaxPriorityFeePerGasOrMaxFeePerGas","validateGas","gasPresent","gasLimit","legacyGasPresent","feeMarketGasPresent","MissingGasError","TransactionGasMismatchError","validateTransactionForSigning","overrideMethod","InvalidTransactionObjectError","formattedTransaction","formatTransaction","ETH_DATA_FORMAT","startsWith","InvalidNonceOrChainIdError"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/web3-eth/src/validation.ts"],"sourcesContent":["﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport {\n\tAccessList,\n\tAccessListEntry,\n\tBaseTransactionAPI,\n\tTransaction1559UnsignedAPI,\n\tTransaction2930UnsignedAPI,\n\tTransactionCall,\n\tTransactionLegacyUnsignedAPI,\n\tTransaction,\n\tTransactionWithSenderAPI,\n\tETH_DATA_FORMAT,\n} from 'web3-types';\nimport { isAddress, isHexStrict, isHexString32Bytes, isNullish, isUInt } from 'web3-validator';\nimport {\n\tChainMismatchError,\n\tHardforkMismatchError,\n\tChainIdMismatchError,\n\tCommonOrChainAndHardforkError,\n\tEip1559GasPriceError,\n\tInvalidGasOrGasPrice,\n\tInvalidMaxPriorityFeePerGasOrMaxFeePerGas,\n\tInvalidNonceOrChainIdError,\n\tInvalidTransactionCall,\n\tInvalidTransactionObjectError,\n\tInvalidTransactionWithSender,\n\tMissingChainOrHardforkError,\n\tMissingCustomChainError,\n\tMissingCustomChainIdError,\n\tMissingGasError,\n\tTransactionGasMismatchError,\n\tUnsupportedFeeMarketError,\n} from 'web3-errors';\nimport { formatTransaction } from './utils/format_transaction.js';\nimport { InternalTransaction } from './types.js';\n\nexport function isBaseTransaction(value: BaseTransactionAPI): boolean {\n\tif (!isNullish(value.to) && !isAddress(value.to)) return false;\n\tif (!isHexStrict(value.type) && !isNullish(value.type) && value.type.length !== 2) return false;\n\tif (!isHexStrict(value.nonce)) return false;\n\tif (!isHexStrict(value.gas)) return false;\n\tif (!isHexStrict(value.value)) return false;\n\tif (!isHexStrict(value.input)) return false;\n\tif (value.chainId && !isHexStrict(value.chainId)) return false;\n\n\treturn true;\n}\n\nexport function isAccessListEntry(value: AccessListEntry): boolean {\n\tif (!isNullish(value.address) && !isAddress(value.address)) return false;\n\tif (\n\t\t!isNullish(value.storageKeys) &&\n\t\t!value.storageKeys.every(storageKey => isHexString32Bytes(storageKey))\n\t)\n\t\treturn false;\n\n\treturn true;\n}\n\nexport function isAccessList(value: AccessList): boolean {\n\tif (\n\t\t!Array.isArray(value) ||\n\t\t!value.every(accessListEntry => isAccessListEntry(accessListEntry))\n\t)\n\t\treturn false;\n\n\treturn true;\n}\n\nexport function isTransaction1559Unsigned(value: Transaction1559UnsignedAPI): boolean {\n\tif (!isBaseTransaction(value)) return false;\n\tif (!isHexStrict(value.maxFeePerGas)) return false;\n\tif (!isHexStrict(value.maxPriorityFeePerGas)) return false;\n\tif (!isAccessList(value.accessList)) return false;\n\n\treturn true;\n}\n\nexport function isTransaction2930Unsigned(value: Transaction2930UnsignedAPI): boolean {\n\tif (!isBaseTransaction(value)) return false;\n\tif (!isHexStrict(value.gasPrice)) return false;\n\tif (!isAccessList(value.accessList)) return false;\n\n\treturn true;\n}\n\nexport function isTransactionLegacyUnsigned(value: TransactionLegacyUnsignedAPI): boolean {\n\tif (!isBaseTransaction(value)) return false;\n\tif (!isHexStrict(value.gasPrice)) return false;\n\n\treturn true;\n}\n\nexport function isTransactionWithSender(value: TransactionWithSenderAPI): boolean {\n\tif (!isAddress(value.from)) return false;\n\tif (!isBaseTransaction(value)) return false;\n\tif (\n\t\t!isTransaction1559Unsigned(value as Transaction1559UnsignedAPI) &&\n\t\t!isTransaction2930Unsigned(value as Transaction2930UnsignedAPI) &&\n\t\t!isTransactionLegacyUnsigned(value as TransactionLegacyUnsignedAPI)\n\t)\n\t\treturn false;\n\n\treturn true;\n}\n\nexport function validateTransactionWithSender(value: TransactionWithSenderAPI) {\n\tif (!isTransactionWithSender(value)) throw new InvalidTransactionWithSender(value);\n}\n\nexport function isTransactionCall(value: TransactionCall): boolean {\n\tif (!isNullish(value.from) && !isAddress(value.from)) return false;\n\tif (!isAddress(value.to)) return false;\n\tif (!isNullish(value.gas) && !isHexStrict(value.gas)) return false;\n\tif (!isNullish(value.gasPrice) && !isHexStrict(value.gasPrice)) return false;\n\tif (!isNullish(value.value) && !isHexStrict(value.value)) return false;\n\tif (!isNullish(value.data) && !isHexStrict(value.data)) return false;\n\tif (!isNullish(value.input) && !isHexStrict(value.input)) return false;\n\tif (!isNullish(value.type)) return false;\n\tif (isTransaction1559Unsigned(value as Transaction1559UnsignedAPI)) return false;\n\tif (isTransaction2930Unsigned(value as Transaction2930UnsignedAPI)) return false;\n\n\treturn true;\n}\n\nexport function validateTransactionCall(value: TransactionCall) {\n\tif (!isTransactionCall(value)) throw new InvalidTransactionCall(value);\n}\n\nexport const validateCustomChainInfo = (transaction: InternalTransaction) => {\n\tif (!isNullish(transaction.common)) {\n\t\tif (isNullish(transaction.common.customChain)) throw new MissingCustomChainError();\n\t\tif (isNullish(transaction.common.customChain.chainId))\n\t\t\tthrow new MissingCustomChainIdError();\n\t\tif (\n\t\t\t!isNullish(transaction.chainId) &&\n\t\t\ttransaction.chainId !== transaction.common.customChain.chainId\n\t\t)\n\t\t\tthrow new ChainIdMismatchError({\n\t\t\t\ttxChainId: transaction.chainId,\n\t\t\t\tcustomChainId: transaction.common.customChain.chainId,\n\t\t\t});\n\t}\n};\nexport const validateChainInfo = (transaction: InternalTransaction) => {\n\tif (\n\t\t!isNullish(transaction.common) &&\n\t\t!isNullish(transaction.chain) &&\n\t\t!isNullish(transaction.hardfork)\n\t) {\n\t\tthrow new CommonOrChainAndHardforkError();\n\t}\n\tif (\n\t\t(!isNullish(transaction.chain) && isNullish(transaction.hardfork)) ||\n\t\t(!isNullish(transaction.hardfork) && isNullish(transaction.chain))\n\t)\n\t\tthrow new MissingChainOrHardforkError({\n\t\t\tchain: transaction.chain,\n\t\t\thardfork: transaction.hardfork,\n\t\t});\n};\nexport const validateBaseChain = (transaction: InternalTransaction) => {\n\tif (!isNullish(transaction.common))\n\t\tif (!isNullish(transaction.common.baseChain))\n\t\t\tif (\n\t\t\t\t!isNullish(transaction.chain) &&\n\t\t\t\ttransaction.chain !== transaction.common.baseChain\n\t\t\t) {\n\t\t\t\tthrow new ChainMismatchError({\n\t\t\t\t\ttxChain: transaction.chain,\n\t\t\t\t\tbaseChain: transaction.common.baseChain,\n\t\t\t\t});\n\t\t\t}\n};\nexport const validateHardfork = (transaction: InternalTransaction) => {\n\tif (!isNullish(transaction.common))\n\t\tif (!isNullish(transaction.common.hardfork))\n\t\t\tif (\n\t\t\t\t!isNullish(transaction.hardfork) &&\n\t\t\t\ttransaction.hardfork !== transaction.common.hardfork\n\t\t\t) {\n\t\t\t\tthrow new HardforkMismatchError({\n\t\t\t\t\ttxHardfork: transaction.hardfork,\n\t\t\t\t\tcommonHardfork: transaction.common.hardfork,\n\t\t\t\t});\n\t\t\t}\n};\n\nexport const validateLegacyGas = (transaction: InternalTransaction) => {\n\tif (\n\t\t// This check is verifying gas and gasPrice aren't less than 0.\n\t\tisNullish(transaction.gas) ||\n\t\t!isUInt(transaction.gas) ||\n\t\tisNullish(transaction.gasPrice) ||\n\t\t!isUInt(transaction.gasPrice)\n\t)\n\t\tthrow new InvalidGasOrGasPrice({\n\t\t\tgas: transaction.gas,\n\t\t\tgasPrice: transaction.gasPrice,\n\t\t});\n\tif (!isNullish(transaction.maxFeePerGas) || !isNullish(transaction.maxPriorityFeePerGas))\n\t\tthrow new UnsupportedFeeMarketError({\n\t\t\tmaxFeePerGas: transaction.maxFeePerGas,\n\t\t\tmaxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n\t\t});\n};\n\nexport const validateFeeMarketGas = (transaction: InternalTransaction) => {\n\t// These errors come from 1.x, so they must be checked before\n\t// InvalidMaxPriorityFeePerGasOrMaxFeePerGas to throw the same error\n\t// for the same code executing in 1.x\n\tif (!isNullish(transaction.gasPrice) && transaction.type === '0x2')\n\t\tthrow new Eip1559GasPriceError(transaction.gasPrice);\n\tif (transaction.type === '0x0' || transaction.type === '0x1')\n\t\tthrow new UnsupportedFeeMarketError({\n\t\t\tmaxFeePerGas: transaction.maxFeePerGas,\n\t\t\tmaxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n\t\t});\n\n\tif (\n\t\tisNullish(transaction.maxFeePerGas) ||\n\t\t!isUInt(transaction.maxFeePerGas) ||\n\t\tisNullish(transaction.maxPriorityFeePerGas) ||\n\t\t!isUInt(transaction.maxPriorityFeePerGas)\n\t)\n\t\tthrow new InvalidMaxPriorityFeePerGasOrMaxFeePerGas({\n\t\t\tmaxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n\t\t\tmaxFeePerGas: transaction.maxFeePerGas,\n\t\t});\n};\n\n/**\n * This method checks if all required gas properties are present for either\n * legacy gas (type 0x0 and 0x1) OR fee market transactions (0x2)\n */\nexport const validateGas = (transaction: InternalTransaction) => {\n\tconst gasPresent = !isNullish(transaction.gas) || !isNullish(transaction.gasLimit);\n\tconst legacyGasPresent = gasPresent && !isNullish(transaction.gasPrice);\n\tconst feeMarketGasPresent =\n\t\tgasPresent &&\n\t\t!isNullish(transaction.maxPriorityFeePerGas) &&\n\t\t!isNullish(transaction.maxFeePerGas);\n\n\tif (!legacyGasPresent && !feeMarketGasPresent)\n\t\tthrow new MissingGasError({\n\t\t\tgas: transaction.gas,\n\t\t\tgasPrice: transaction.gasPrice,\n\t\t\tmaxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n\t\t\tmaxFeePerGas: transaction.maxFeePerGas,\n\t\t});\n\n\tif (legacyGasPresent && feeMarketGasPresent)\n\t\tthrow new TransactionGasMismatchError({\n\t\t\tgas: transaction.gas,\n\t\t\tgasPrice: transaction.gasPrice,\n\t\t\tmaxPriorityFeePerGas: transaction.maxPriorityFeePerGas,\n\t\t\tmaxFeePerGas: transaction.maxFeePerGas,\n\t\t});\n\n\t(legacyGasPresent ? validateLegacyGas : validateFeeMarketGas)(transaction);\n\t(!isNullish(transaction.type) && transaction.type > '0x1'\n\t\t? validateFeeMarketGas\n\t\t: validateLegacyGas)(transaction);\n};\n\nexport const validateTransactionForSigning = (\n\ttransaction: InternalTransaction,\n\toverrideMethod?: (transaction: InternalTransaction) => void,\n) => {\n\tif (!isNullish(overrideMethod)) {\n\t\toverrideMethod(transaction);\n\t\treturn;\n\t}\n\n\tif (typeof transaction !== 'object' || isNullish(transaction))\n\t\tthrow new InvalidTransactionObjectError(transaction);\n\n\tvalidateCustomChainInfo(transaction);\n\tvalidateChainInfo(transaction);\n\tvalidateBaseChain(transaction);\n\tvalidateHardfork(transaction);\n\n\tconst formattedTransaction = formatTransaction(transaction as Transaction, ETH_DATA_FORMAT);\n\tvalidateGas(formattedTransaction);\n\n\tif (\n\t\tisNullish(formattedTransaction.nonce) ||\n\t\tisNullish(formattedTransaction.chainId) ||\n\t\tformattedTransaction.nonce.startsWith('-') ||\n\t\tformattedTransaction.chainId.startsWith('-')\n\t)\n\t\tthrow new InvalidNonceOrChainIdError({\n\t\t\tnonce: transaction.nonce,\n\t\t\tchainId: transaction.chainId,\n\t\t});\n};\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAiBA,MAAAA,YAAA,GAAAC,OAAA;AAYA,MAAAC,gBAAA,GAAAD,OAAA;AACA,MAAAE,aAAA,GAAAF,OAAA;AAmBA,MAAAG,uBAAA,GAAAH,OAAA;AAGA,SAAgBI,iBAAiBA,CAACC,KAAyB;EAC1D,IAAI,CAAC,IAAAJ,gBAAA,CAAAK,SAAS,EAACD,KAAK,CAACE,EAAE,CAAC,IAAI,CAAC,IAAAN,gBAAA,CAAAO,SAAS,EAACH,KAAK,CAACE,EAAE,CAAC,EAAE,OAAO,KAAK;EAC9D,IAAI,CAAC,IAAAN,gBAAA,CAAAQ,WAAW,EAACJ,KAAK,CAACK,IAAI,CAAC,IAAI,CAAC,IAAAT,gBAAA,CAAAK,SAAS,EAACD,KAAK,CAACK,IAAI,CAAC,IAAIL,KAAK,CAACK,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;EAC/F,IAAI,CAAC,IAAAV,gBAAA,CAAAQ,WAAW,EAACJ,KAAK,CAACO,KAAK,CAAC,EAAE,OAAO,KAAK;EAC3C,IAAI,CAAC,IAAAX,gBAAA,CAAAQ,WAAW,EAACJ,KAAK,CAACQ,GAAG,CAAC,EAAE,OAAO,KAAK;EACzC,IAAI,CAAC,IAAAZ,gBAAA,CAAAQ,WAAW,EAACJ,KAAK,CAACA,KAAK,CAAC,EAAE,OAAO,KAAK;EAC3C,IAAI,CAAC,IAAAJ,gBAAA,CAAAQ,WAAW,EAACJ,KAAK,CAACS,KAAK,CAAC,EAAE,OAAO,KAAK;EAC3C,IAAIT,KAAK,CAACU,OAAO,IAAI,CAAC,IAAAd,gBAAA,CAAAQ,WAAW,EAACJ,KAAK,CAACU,OAAO,CAAC,EAAE,OAAO,KAAK;EAE9D,OAAO,IAAI;AACZ;AAVAC,OAAA,CAAAZ,iBAAA,GAAAA,iBAAA;AAYA,SAAgBa,iBAAiBA,CAACZ,KAAsB;EACvD,IAAI,CAAC,IAAAJ,gBAAA,CAAAK,SAAS,EAACD,KAAK,CAACa,OAAO,CAAC,IAAI,CAAC,IAAAjB,gBAAA,CAAAO,SAAS,EAACH,KAAK,CAACa,OAAO,CAAC,EAAE,OAAO,KAAK;EACxE,IACC,CAAC,IAAAjB,gBAAA,CAAAK,SAAS,EAACD,KAAK,CAACc,WAAW,CAAC,IAC7B,CAACd,KAAK,CAACc,WAAW,CAACC,KAAK,CAACC,UAAU,IAAI,IAAApB,gBAAA,CAAAqB,kBAAkB,EAACD,UAAU,CAAC,CAAC,EAEtE,OAAO,KAAK;EAEb,OAAO,IAAI;AACZ;AATAL,OAAA,CAAAC,iBAAA,GAAAA,iBAAA;AAWA,SAAgBM,YAAYA,CAAClB,KAAiB;EAC7C,IACC,CAACmB,KAAK,CAACC,OAAO,CAACpB,KAAK,CAAC,IACrB,CAACA,KAAK,CAACe,KAAK,CAACM,eAAe,IAAIT,iBAAiB,CAACS,eAAe,CAAC,CAAC,EAEnE,OAAO,KAAK;EAEb,OAAO,IAAI;AACZ;AARAV,OAAA,CAAAO,YAAA,GAAAA,YAAA;AAUA,SAAgBI,yBAAyBA,CAACtB,KAAiC;EAC1E,IAAI,CAACD,iBAAiB,CAACC,KAAK,CAAC,EAAE,OAAO,KAAK;EAC3C,IAAI,CAAC,IAAAJ,gBAAA,CAAAQ,WAAW,EAACJ,KAAK,CAACuB,YAAY,CAAC,EAAE,OAAO,KAAK;EAClD,IAAI,CAAC,IAAA3B,gBAAA,CAAAQ,WAAW,EAACJ,KAAK,CAACwB,oBAAoB,CAAC,EAAE,OAAO,KAAK;EAC1D,IAAI,CAACN,YAAY,CAAClB,KAAK,CAACyB,UAAU,CAAC,EAAE,OAAO,KAAK;EAEjD,OAAO,IAAI;AACZ;AAPAd,OAAA,CAAAW,yBAAA,GAAAA,yBAAA;AASA,SAAgBI,yBAAyBA,CAAC1B,KAAiC;EAC1E,IAAI,CAACD,iBAAiB,CAACC,KAAK,CAAC,EAAE,OAAO,KAAK;EAC3C,IAAI,CAAC,IAAAJ,gBAAA,CAAAQ,WAAW,EAACJ,KAAK,CAAC2B,QAAQ,CAAC,EAAE,OAAO,KAAK;EAC9C,IAAI,CAACT,YAAY,CAAClB,KAAK,CAACyB,UAAU,CAAC,EAAE,OAAO,KAAK;EAEjD,OAAO,IAAI;AACZ;AANAd,OAAA,CAAAe,yBAAA,GAAAA,yBAAA;AAQA,SAAgBE,2BAA2BA,CAAC5B,KAAmC;EAC9E,IAAI,CAACD,iBAAiB,CAACC,KAAK,CAAC,EAAE,OAAO,KAAK;EAC3C,IAAI,CAAC,IAAAJ,gBAAA,CAAAQ,WAAW,EAACJ,KAAK,CAAC2B,QAAQ,CAAC,EAAE,OAAO,KAAK;EAE9C,OAAO,IAAI;AACZ;AALAhB,OAAA,CAAAiB,2BAAA,GAAAA,2BAAA;AAOA,SAAgBC,uBAAuBA,CAAC7B,KAA+B;EACtE,IAAI,CAAC,IAAAJ,gBAAA,CAAAO,SAAS,EAACH,KAAK,CAAC8B,IAAI,CAAC,EAAE,OAAO,KAAK;EACxC,IAAI,CAAC/B,iBAAiB,CAACC,KAAK,CAAC,EAAE,OAAO,KAAK;EAC3C,IACC,CAACsB,yBAAyB,CAACtB,KAAmC,CAAC,IAC/D,CAAC0B,yBAAyB,CAAC1B,KAAmC,CAAC,IAC/D,CAAC4B,2BAA2B,CAAC5B,KAAqC,CAAC,EAEnE,OAAO,KAAK;EAEb,OAAO,IAAI;AACZ;AAXAW,OAAA,CAAAkB,uBAAA,GAAAA,uBAAA;AAaA,SAAgBE,6BAA6BA,CAAC/B,KAA+B;EAC5E,IAAI,CAAC6B,uBAAuB,CAAC7B,KAAK,CAAC,EAAE,MAAM,IAAIH,aAAA,CAAAmC,4BAA4B,CAAChC,KAAK,CAAC;AACnF;AAFAW,OAAA,CAAAoB,6BAAA,GAAAA,6BAAA;AAIA,SAAgBE,iBAAiBA,CAACjC,KAAsB;EACvD,IAAI,CAAC,IAAAJ,gBAAA,CAAAK,SAAS,EAACD,KAAK,CAAC8B,IAAI,CAAC,IAAI,CAAC,IAAAlC,gBAAA,CAAAO,SAAS,EAACH,KAAK,CAAC8B,IAAI,CAAC,EAAE,OAAO,KAAK;EAClE,IAAI,CAAC,IAAAlC,gBAAA,CAAAO,SAAS,EAACH,KAAK,CAACE,EAAE,CAAC,EAAE,OAAO,KAAK;EACtC,IAAI,CAAC,IAAAN,gBAAA,CAAAK,SAAS,EAACD,KAAK,CAACQ,GAAG,CAAC,IAAI,CAAC,IAAAZ,gBAAA,CAAAQ,WAAW,EAACJ,KAAK,CAACQ,GAAG,CAAC,EAAE,OAAO,KAAK;EAClE,IAAI,CAAC,IAAAZ,gBAAA,CAAAK,SAAS,EAACD,KAAK,CAAC2B,QAAQ,CAAC,IAAI,CAAC,IAAA/B,gBAAA,CAAAQ,WAAW,EAACJ,KAAK,CAAC2B,QAAQ,CAAC,EAAE,OAAO,KAAK;EAC5E,IAAI,CAAC,IAAA/B,gBAAA,CAAAK,SAAS,EAACD,KAAK,CAACA,KAAK,CAAC,IAAI,CAAC,IAAAJ,gBAAA,CAAAQ,WAAW,EAACJ,KAAK,CAACA,KAAK,CAAC,EAAE,OAAO,KAAK;EACtE,IAAI,CAAC,IAAAJ,gBAAA,CAAAK,SAAS,EAACD,KAAK,CAACkC,IAAI,CAAC,IAAI,CAAC,IAAAtC,gBAAA,CAAAQ,WAAW,EAACJ,KAAK,CAACkC,IAAI,CAAC,EAAE,OAAO,KAAK;EACpE,IAAI,CAAC,IAAAtC,gBAAA,CAAAK,SAAS,EAACD,KAAK,CAACS,KAAK,CAAC,IAAI,CAAC,IAAAb,gBAAA,CAAAQ,WAAW,EAACJ,KAAK,CAACS,KAAK,CAAC,EAAE,OAAO,KAAK;EACtE,IAAI,CAAC,IAAAb,gBAAA,CAAAK,SAAS,EAACD,KAAK,CAACK,IAAI,CAAC,EAAE,OAAO,KAAK;EACxC,IAAIiB,yBAAyB,CAACtB,KAAmC,CAAC,EAAE,OAAO,KAAK;EAChF,IAAI0B,yBAAyB,CAAC1B,KAAmC,CAAC,EAAE,OAAO,KAAK;EAEhF,OAAO,IAAI;AACZ;AAbAW,OAAA,CAAAsB,iBAAA,GAAAA,iBAAA;AAeA,SAAgBE,uBAAuBA,CAACnC,KAAsB;EAC7D,IAAI,CAACiC,iBAAiB,CAACjC,KAAK,CAAC,EAAE,MAAM,IAAIH,aAAA,CAAAuC,sBAAsB,CAACpC,KAAK,CAAC;AACvE;AAFAW,OAAA,CAAAwB,uBAAA,GAAAA,uBAAA;AAIO,MAAME,uBAAuB,GAAIC,WAAgC,IAAI;EAC3E,IAAI,CAAC,IAAA1C,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACC,MAAM,CAAC,EAAE;IACnC,IAAI,IAAA3C,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACC,MAAM,CAACC,WAAW,CAAC,EAAE,MAAM,IAAI3C,aAAA,CAAA4C,uBAAuB,EAAE;IAClF,IAAI,IAAA7C,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACC,MAAM,CAACC,WAAW,CAAC9B,OAAO,CAAC,EACpD,MAAM,IAAIb,aAAA,CAAA6C,yBAAyB,EAAE;IACtC,IACC,CAAC,IAAA9C,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAAC5B,OAAO,CAAC,IAC/B4B,WAAW,CAAC5B,OAAO,KAAK4B,WAAW,CAACC,MAAM,CAACC,WAAW,CAAC9B,OAAO,EAE9D,MAAM,IAAIb,aAAA,CAAA8C,oBAAoB,CAAC;MAC9BC,SAAS,EAAEN,WAAW,CAAC5B,OAAO;MAC9BmC,aAAa,EAAEP,WAAW,CAACC,MAAM,CAACC,WAAW,CAAC9B;KAC9C,CAAC;;AAEL,CAAC;AAdYC,OAAA,CAAA0B,uBAAuB,GAAAA,uBAAA;AAe7B,MAAMS,iBAAiB,GAAIR,WAAgC,IAAI;EACrE,IACC,CAAC,IAAA1C,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACC,MAAM,CAAC,IAC9B,CAAC,IAAA3C,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACS,KAAK,CAAC,IAC7B,CAAC,IAAAnD,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACU,QAAQ,CAAC,EAC/B;IACD,MAAM,IAAInD,aAAA,CAAAoD,6BAA6B,EAAE;;EAE1C,IACE,CAAC,IAAArD,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACS,KAAK,CAAC,IAAI,IAAAnD,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACU,QAAQ,CAAC,IAChE,CAAC,IAAApD,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACU,QAAQ,CAAC,IAAI,IAAApD,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACS,KAAK,CAAE,EAElE,MAAM,IAAIlD,aAAA,CAAAqD,2BAA2B,CAAC;IACrCH,KAAK,EAAET,WAAW,CAACS,KAAK;IACxBC,QAAQ,EAAEV,WAAW,CAACU;GACtB,CAAC;AACJ,CAAC;AAhBYrC,OAAA,CAAAmC,iBAAiB,GAAAA,iBAAA;AAiBvB,MAAMK,iBAAiB,GAAIb,WAAgC,IAAI;EACrE,IAAI,CAAC,IAAA1C,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACC,MAAM,CAAC,EACjC,IAAI,CAAC,IAAA3C,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACC,MAAM,CAACa,SAAS,CAAC,EAC3C,IACC,CAAC,IAAAxD,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACS,KAAK,CAAC,IAC7BT,WAAW,CAACS,KAAK,KAAKT,WAAW,CAACC,MAAM,CAACa,SAAS,EACjD;IACD,MAAM,IAAIvD,aAAA,CAAAwD,kBAAkB,CAAC;MAC5BC,OAAO,EAAEhB,WAAW,CAACS,KAAK;MAC1BK,SAAS,EAAEd,WAAW,CAACC,MAAM,CAACa;KAC9B,CAAC;;AAEN,CAAC;AAZYzC,OAAA,CAAAwC,iBAAiB,GAAAA,iBAAA;AAavB,MAAMI,gBAAgB,GAAIjB,WAAgC,IAAI;EACpE,IAAI,CAAC,IAAA1C,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACC,MAAM,CAAC,EACjC,IAAI,CAAC,IAAA3C,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACC,MAAM,CAACS,QAAQ,CAAC,EAC1C,IACC,CAAC,IAAApD,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACU,QAAQ,CAAC,IAChCV,WAAW,CAACU,QAAQ,KAAKV,WAAW,CAACC,MAAM,CAACS,QAAQ,EACnD;IACD,MAAM,IAAInD,aAAA,CAAA2D,qBAAqB,CAAC;MAC/BC,UAAU,EAAEnB,WAAW,CAACU,QAAQ;MAChCU,cAAc,EAAEpB,WAAW,CAACC,MAAM,CAACS;KACnC,CAAC;;AAEN,CAAC;AAZYrC,OAAA,CAAA4C,gBAAgB,GAAAA,gBAAA;AActB,MAAMI,iBAAiB,GAAIrB,WAAgC,IAAI;EACrE;EACC;EACA,IAAA1C,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAAC9B,GAAG,CAAC,IAC1B,CAAC,IAAAZ,gBAAA,CAAAgE,MAAM,EAACtB,WAAW,CAAC9B,GAAG,CAAC,IACxB,IAAAZ,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACX,QAAQ,CAAC,IAC/B,CAAC,IAAA/B,gBAAA,CAAAgE,MAAM,EAACtB,WAAW,CAACX,QAAQ,CAAC,EAE7B,MAAM,IAAI9B,aAAA,CAAAgE,oBAAoB,CAAC;IAC9BrD,GAAG,EAAE8B,WAAW,CAAC9B,GAAG;IACpBmB,QAAQ,EAAEW,WAAW,CAACX;GACtB,CAAC;EACH,IAAI,CAAC,IAAA/B,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACf,YAAY,CAAC,IAAI,CAAC,IAAA3B,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACd,oBAAoB,CAAC,EACvF,MAAM,IAAI3B,aAAA,CAAAiE,yBAAyB,CAAC;IACnCvC,YAAY,EAAEe,WAAW,CAACf,YAAY;IACtCC,oBAAoB,EAAEc,WAAW,CAACd;GAClC,CAAC;AACJ,CAAC;AAjBYb,OAAA,CAAAgD,iBAAiB,GAAAA,iBAAA;AAmBvB,MAAMI,oBAAoB,GAAIzB,WAAgC,IAAI;EACxE;EACA;EACA;EACA,IAAI,CAAC,IAAA1C,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACX,QAAQ,CAAC,IAAIW,WAAW,CAACjC,IAAI,KAAK,KAAK,EACjE,MAAM,IAAIR,aAAA,CAAAmE,oBAAoB,CAAC1B,WAAW,CAACX,QAAQ,CAAC;EACrD,IAAIW,WAAW,CAACjC,IAAI,KAAK,KAAK,IAAIiC,WAAW,CAACjC,IAAI,KAAK,KAAK,EAC3D,MAAM,IAAIR,aAAA,CAAAiE,yBAAyB,CAAC;IACnCvC,YAAY,EAAEe,WAAW,CAACf,YAAY;IACtCC,oBAAoB,EAAEc,WAAW,CAACd;GAClC,CAAC;EAEH,IACC,IAAA5B,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACf,YAAY,CAAC,IACnC,CAAC,IAAA3B,gBAAA,CAAAgE,MAAM,EAACtB,WAAW,CAACf,YAAY,CAAC,IACjC,IAAA3B,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACd,oBAAoB,CAAC,IAC3C,CAAC,IAAA5B,gBAAA,CAAAgE,MAAM,EAACtB,WAAW,CAACd,oBAAoB,CAAC,EAEzC,MAAM,IAAI3B,aAAA,CAAAoE,yCAAyC,CAAC;IACnDzC,oBAAoB,EAAEc,WAAW,CAACd,oBAAoB;IACtDD,YAAY,EAAEe,WAAW,CAACf;GAC1B,CAAC;AACJ,CAAC;AAtBYZ,OAAA,CAAAoD,oBAAoB,GAAAA,oBAAA;AAwBjC;;;;AAIO,MAAMG,WAAW,GAAI5B,WAAgC,IAAI;EAC/D,MAAM6B,UAAU,GAAG,CAAC,IAAAvE,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAAC9B,GAAG,CAAC,IAAI,CAAC,IAAAZ,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAAC8B,QAAQ,CAAC;EAClF,MAAMC,gBAAgB,GAAGF,UAAU,IAAI,CAAC,IAAAvE,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACX,QAAQ,CAAC;EACvE,MAAM2C,mBAAmB,GACxBH,UAAU,IACV,CAAC,IAAAvE,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACd,oBAAoB,CAAC,IAC5C,CAAC,IAAA5B,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACf,YAAY,CAAC;EAErC,IAAI,CAAC8C,gBAAgB,IAAI,CAACC,mBAAmB,EAC5C,MAAM,IAAIzE,aAAA,CAAA0E,eAAe,CAAC;IACzB/D,GAAG,EAAE8B,WAAW,CAAC9B,GAAG;IACpBmB,QAAQ,EAAEW,WAAW,CAACX,QAAQ;IAC9BH,oBAAoB,EAAEc,WAAW,CAACd,oBAAoB;IACtDD,YAAY,EAAEe,WAAW,CAACf;GAC1B,CAAC;EAEH,IAAI8C,gBAAgB,IAAIC,mBAAmB,EAC1C,MAAM,IAAIzE,aAAA,CAAA2E,2BAA2B,CAAC;IACrChE,GAAG,EAAE8B,WAAW,CAAC9B,GAAG;IACpBmB,QAAQ,EAAEW,WAAW,CAACX,QAAQ;IAC9BH,oBAAoB,EAAEc,WAAW,CAACd,oBAAoB;IACtDD,YAAY,EAAEe,WAAW,CAACf;GAC1B,CAAC;EAEH,CAAC8C,gBAAgB,GAAG1D,OAAA,CAAAgD,iBAAiB,GAAGhD,OAAA,CAAAoD,oBAAoB,EAAEzB,WAAW,CAAC;EAC1E,CAAC,CAAC,IAAA1C,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAACjC,IAAI,CAAC,IAAIiC,WAAW,CAACjC,IAAI,GAAG,KAAK,GACtDM,OAAA,CAAAoD,oBAAoB,GACpBpD,OAAA,CAAAgD,iBAAiB,EAAErB,WAAW,CAAC;AACnC,CAAC;AA5BY3B,OAAA,CAAAuD,WAAW,GAAAA,WAAA;AA8BjB,MAAMO,6BAA6B,GAAGA,CAC5CnC,WAAgC,EAChCoC,cAA2D,KACxD;EACH,IAAI,CAAC,IAAA9E,gBAAA,CAAAK,SAAS,EAACyE,cAAc,CAAC,EAAE;IAC/BA,cAAc,CAACpC,WAAW,CAAC;IAC3B;;EAGD,IAAI,OAAOA,WAAW,KAAK,QAAQ,IAAI,IAAA1C,gBAAA,CAAAK,SAAS,EAACqC,WAAW,CAAC,EAC5D,MAAM,IAAIzC,aAAA,CAAA8E,6BAA6B,CAACrC,WAAW,CAAC;EAErD,IAAA3B,OAAA,CAAA0B,uBAAuB,EAACC,WAAW,CAAC;EACpC,IAAA3B,OAAA,CAAAmC,iBAAiB,EAACR,WAAW,CAAC;EAC9B,IAAA3B,OAAA,CAAAwC,iBAAiB,EAACb,WAAW,CAAC;EAC9B,IAAA3B,OAAA,CAAA4C,gBAAgB,EAACjB,WAAW,CAAC;EAE7B,MAAMsC,oBAAoB,GAAG,IAAA9E,uBAAA,CAAA+E,iBAAiB,EAACvC,WAA0B,EAAE5C,YAAA,CAAAoF,eAAe,CAAC;EAC3F,IAAAnE,OAAA,CAAAuD,WAAW,EAACU,oBAAoB,CAAC;EAEjC,IACC,IAAAhF,gBAAA,CAAAK,SAAS,EAAC2E,oBAAoB,CAACrE,KAAK,CAAC,IACrC,IAAAX,gBAAA,CAAAK,SAAS,EAAC2E,oBAAoB,CAAClE,OAAO,CAAC,IACvCkE,oBAAoB,CAACrE,KAAK,CAACwE,UAAU,CAAC,GAAG,CAAC,IAC1CH,oBAAoB,CAAClE,OAAO,CAACqE,UAAU,CAAC,GAAG,CAAC,EAE5C,MAAM,IAAIlF,aAAA,CAAAmF,0BAA0B,CAAC;IACpCzE,KAAK,EAAE+B,WAAW,CAAC/B,KAAK;IACxBG,OAAO,EAAE4B,WAAW,CAAC5B;GACrB,CAAC;AACJ,CAAC;AA9BYC,OAAA,CAAA8D,6BAA6B,GAAAA,6BAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}