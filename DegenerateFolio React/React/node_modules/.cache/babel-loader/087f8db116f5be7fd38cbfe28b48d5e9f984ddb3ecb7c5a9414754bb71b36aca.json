{"ast":null,"code":"import { u8aToU8a } from '@polkadot/util';\nimport { sr25519Sign as wasmSign } from '@polkadot/wasm-crypto';\n/**\n * @name sr25519Sign\n * @description Returns message signature of `message`, using the supplied pair\n */\nexport function sr25519Sign(message, {\n  publicKey,\n  secretKey\n}) {\n  if (publicKey?.length !== 32) {\n    throw new Error('Expected a valid publicKey, 32-bytes');\n  } else if (secretKey?.length !== 64) {\n    throw new Error('Expected a valid secretKey, 64-bytes');\n  }\n  return wasmSign(publicKey, secretKey, u8aToU8a(message));\n}","map":{"version":3,"names":["u8aToU8a","sr25519Sign","wasmSign","message","publicKey","secretKey","length","Error"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/sr25519/sign.js"],"sourcesContent":["import { u8aToU8a } from '@polkadot/util';\nimport { sr25519Sign as wasmSign } from '@polkadot/wasm-crypto';\n/**\n * @name sr25519Sign\n * @description Returns message signature of `message`, using the supplied pair\n */\nexport function sr25519Sign(message, { publicKey, secretKey }) {\n    if (publicKey?.length !== 32) {\n        throw new Error('Expected a valid publicKey, 32-bytes');\n    }\n    else if (secretKey?.length !== 64) {\n        throw new Error('Expected a valid secretKey, 64-bytes');\n    }\n    return wasmSign(publicKey, secretKey, u8aToU8a(message));\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,WAAW,IAAIC,QAAQ,QAAQ,uBAAuB;AAC/D;AACA;AACA;AACA;AACA,OAAO,SAASD,WAAWA,CAACE,OAAO,EAAE;EAAEC,SAAS;EAAEC;AAAU,CAAC,EAAE;EAC3D,IAAID,SAAS,EAAEE,MAAM,KAAK,EAAE,EAAE;IAC1B,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;EAC3D,CAAC,MACI,IAAIF,SAAS,EAAEC,MAAM,KAAK,EAAE,EAAE;IAC/B,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;EAC3D;EACA,OAAOL,QAAQ,CAACE,SAAS,EAAEC,SAAS,EAAEL,QAAQ,CAACG,OAAO,CAAC,CAAC;AAC5D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}