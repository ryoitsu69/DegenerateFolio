{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InvalidPropertiesForTransactionTypeError = exports.LocalWalletNotAvailableError = exports.TransactionSigningError = exports.TransactionReceiptMissingBlockNumberError = exports.TransactionMissingReceiptOrBlockHashError = exports.TransactionBlockTimeoutError = exports.TransactionPollingTimeoutError = exports.TransactionSendTimeoutError = exports.TransactionDataAndInputError = exports.UnsupportedTransactionTypeError = exports.Eip1559NotSupportedError = exports.UnableToPopulateNonceError = exports.InvalidNonceOrChainIdError = exports.InvalidTransactionObjectError = exports.UnsupportedFeeMarketError = exports.Eip1559GasPriceError = exports.InvalidMaxPriorityFeePerGasOrMaxFeePerGas = exports.InvalidGasOrGasPrice = exports.TransactionGasMismatchError = exports.TransactionGasMismatchInnerError = exports.MissingGasError = exports.MissingGasInnerError = exports.MissingChainOrHardforkError = exports.CommonOrChainAndHardforkError = exports.HardforkMismatchError = exports.ChainMismatchError = exports.ChainIdMismatchError = exports.MissingCustomChainIdError = exports.MissingCustomChainError = exports.InvalidTransactionCall = exports.InvalidTransactionWithReceiver = exports.InvalidTransactionWithSender = exports.TransactionNotFound = exports.UndefinedRawTransactionError = exports.TransactionOutOfGasError = exports.TransactionRevertedWithoutReasonError = exports.ContractCodeNotStoredError = exports.NoContractAddressFoundError = exports.TransactionRevertWithCustomError = exports.TransactionRevertInstructionError = exports.RevertInstructionError = exports.TransactionError = void 0;\nconst error_codes_js_1 = require(\"../error_codes.js\");\nconst web3_error_base_js_1 = require(\"../web3_error_base.js\");\nclass TransactionError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(message, receipt) {\n    super(message);\n    this.receipt = receipt;\n    this.code = error_codes_js_1.ERR_TX;\n  }\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      receipt: this.receipt\n    });\n  }\n}\nexports.TransactionError = TransactionError;\nclass RevertInstructionError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(reason, signature) {\n    super(`Your request got reverted with the following reason string: ${reason}`);\n    this.reason = reason;\n    this.signature = signature;\n    this.code = error_codes_js_1.ERR_TX_REVERT_INSTRUCTION;\n  }\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      reason: this.reason,\n      signature: this.signature\n    });\n  }\n}\nexports.RevertInstructionError = RevertInstructionError;\nclass TransactionRevertInstructionError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(reason, signature, receipt, data) {\n    super(`Transaction has been reverted by the EVM${receipt === undefined ? '' : `:\\n ${web3_error_base_js_1.BaseWeb3Error.convertToString(receipt)}`}`);\n    this.reason = reason;\n    this.signature = signature;\n    this.receipt = receipt;\n    this.data = data;\n    this.code = error_codes_js_1.ERR_TX_REVERT_TRANSACTION;\n  }\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      reason: this.reason,\n      signature: this.signature,\n      receipt: this.receipt,\n      data: this.data\n    });\n  }\n}\nexports.TransactionRevertInstructionError = TransactionRevertInstructionError;\n/**\n * This error is used when a transaction to a smart contract fails and\n * a custom user error (https://blog.soliditylang.org/2021/04/21/custom-errors/)\n * is able to be parsed from the revert reason\n */\nclass TransactionRevertWithCustomError extends TransactionRevertInstructionError {\n  constructor(reason, customErrorName, customErrorDecodedSignature, customErrorArguments, signature, receipt, data) {\n    super(reason);\n    this.reason = reason;\n    this.customErrorName = customErrorName;\n    this.customErrorDecodedSignature = customErrorDecodedSignature;\n    this.customErrorArguments = customErrorArguments;\n    this.signature = signature;\n    this.receipt = receipt;\n    this.data = data;\n    this.code = error_codes_js_1.ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR;\n  }\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      reason: this.reason,\n      customErrorName: this.customErrorName,\n      customErrorDecodedSignature: this.customErrorDecodedSignature,\n      customErrorArguments: this.customErrorArguments,\n      signature: this.signature,\n      receipt: this.receipt,\n      data: this.data\n    });\n  }\n}\nexports.TransactionRevertWithCustomError = TransactionRevertWithCustomError;\nclass NoContractAddressFoundError extends TransactionError {\n  constructor(receipt) {\n    super(\"The transaction receipt didn't contain a contract address.\", receipt);\n    this.code = error_codes_js_1.ERR_TX_NO_CONTRACT_ADDRESS;\n  }\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      receipt: this.receipt\n    });\n  }\n}\nexports.NoContractAddressFoundError = NoContractAddressFoundError;\nclass ContractCodeNotStoredError extends TransactionError {\n  constructor(receipt) {\n    super(\"The contract code couldn't be stored, please check your gas limit.\", receipt);\n    this.code = error_codes_js_1.ERR_TX_CONTRACT_NOT_STORED;\n  }\n}\nexports.ContractCodeNotStoredError = ContractCodeNotStoredError;\nclass TransactionRevertedWithoutReasonError extends TransactionError {\n  constructor(receipt) {\n    super(`Transaction has been reverted by the EVM${receipt === undefined ? '' : `:\\n ${web3_error_base_js_1.BaseWeb3Error.convertToString(receipt)}`}`, receipt);\n    this.code = error_codes_js_1.ERR_TX_REVERT_WITHOUT_REASON;\n  }\n}\nexports.TransactionRevertedWithoutReasonError = TransactionRevertedWithoutReasonError;\nclass TransactionOutOfGasError extends TransactionError {\n  constructor(receipt) {\n    super(`Transaction ran out of gas. Please provide more gas:\\n ${JSON.stringify(receipt, undefined, 2)}`, receipt);\n    this.code = error_codes_js_1.ERR_TX_OUT_OF_GAS;\n  }\n}\nexports.TransactionOutOfGasError = TransactionOutOfGasError;\nclass UndefinedRawTransactionError extends TransactionError {\n  constructor() {\n    super(`Raw transaction undefined`);\n    this.code = error_codes_js_1.ERR_RAW_TX_UNDEFINED;\n  }\n}\nexports.UndefinedRawTransactionError = UndefinedRawTransactionError;\nclass TransactionNotFound extends TransactionError {\n  constructor() {\n    super('Transaction not found');\n    this.code = error_codes_js_1.ERR_TX_NOT_FOUND;\n  }\n}\nexports.TransactionNotFound = TransactionNotFound;\nclass InvalidTransactionWithSender extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(value, 'invalid transaction with invalid sender');\n    this.code = error_codes_js_1.ERR_TX_INVALID_SENDER;\n  }\n}\nexports.InvalidTransactionWithSender = InvalidTransactionWithSender;\nclass InvalidTransactionWithReceiver extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(value, 'invalid transaction with invalid receiver');\n    this.code = error_codes_js_1.ERR_TX_INVALID_RECEIVER;\n  }\n}\nexports.InvalidTransactionWithReceiver = InvalidTransactionWithReceiver;\nclass InvalidTransactionCall extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(value, 'invalid transaction call');\n    this.code = error_codes_js_1.ERR_TX_INVALID_CALL;\n  }\n}\nexports.InvalidTransactionCall = InvalidTransactionCall;\nclass MissingCustomChainError extends web3_error_base_js_1.InvalidValueError {\n  constructor() {\n    super('MissingCustomChainError', 'If tx.common is provided it must have tx.common.customChain');\n    this.code = error_codes_js_1.ERR_TX_MISSING_CUSTOM_CHAIN;\n  }\n}\nexports.MissingCustomChainError = MissingCustomChainError;\nclass MissingCustomChainIdError extends web3_error_base_js_1.InvalidValueError {\n  constructor() {\n    super('MissingCustomChainIdError', 'If tx.common is provided it must have tx.common.customChain and tx.common.customChain.chainId');\n    this.code = error_codes_js_1.ERR_TX_MISSING_CUSTOM_CHAIN_ID;\n  }\n}\nexports.MissingCustomChainIdError = MissingCustomChainIdError;\nclass ChainIdMismatchError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(JSON.stringify(value),\n    // https://github.com/ChainSafe/web3.js/blob/8783f4d64e424456bdc53b34ef1142d0a7cee4d7/packages/web3-eth-accounts/src/index.js#L176\n    'Chain Id doesnt match in tx.chainId tx.common.customChain.chainId');\n    this.code = error_codes_js_1.ERR_TX_CHAIN_ID_MISMATCH;\n  }\n}\nexports.ChainIdMismatchError = ChainIdMismatchError;\nclass ChainMismatchError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(JSON.stringify(value), 'Chain doesnt match in tx.chain tx.common.basechain');\n    this.code = error_codes_js_1.ERR_TX_CHAIN_MISMATCH;\n  }\n}\nexports.ChainMismatchError = ChainMismatchError;\nclass HardforkMismatchError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(JSON.stringify(value), 'hardfork doesnt match in tx.hardfork tx.common.hardfork');\n    this.code = error_codes_js_1.ERR_TX_HARDFORK_MISMATCH;\n  }\n}\nexports.HardforkMismatchError = HardforkMismatchError;\nclass CommonOrChainAndHardforkError extends web3_error_base_js_1.InvalidValueError {\n  constructor() {\n    super('CommonOrChainAndHardforkError', 'Please provide the common object or the chain and hardfork property but not all together.');\n    this.code = error_codes_js_1.ERR_TX_INVALID_CHAIN_INFO;\n  }\n}\nexports.CommonOrChainAndHardforkError = CommonOrChainAndHardforkError;\nclass MissingChainOrHardforkError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b;\n    super('MissingChainOrHardforkError', `When specifying chain and hardfork, both values must be defined. Received \"chain\": ${(_a = value.chain) !== null && _a !== void 0 ? _a : 'undefined'}, \"hardfork\": ${(_b = value.hardfork) !== null && _b !== void 0 ? _b : 'undefined'}`);\n    this.code = error_codes_js_1.ERR_TX_MISSING_CHAIN_INFO;\n  }\n}\nexports.MissingChainOrHardforkError = MissingChainOrHardforkError;\nclass MissingGasInnerError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor() {\n    super('Missing properties in transaction, either define \"gas\" and \"gasPrice\" for type 0 transactions or \"gas\", \"maxPriorityFeePerGas\" and \"maxFeePerGas\" for type 2 transactions');\n    this.code = error_codes_js_1.ERR_TX_MISSING_GAS_INNER_ERROR;\n  }\n}\nexports.MissingGasInnerError = MissingGasInnerError;\nclass MissingGasError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b, _c, _d;\n    super(`gas: ${(_a = value.gas) !== null && _a !== void 0 ? _a : 'undefined'}, gasPrice: ${(_b = value.gasPrice) !== null && _b !== void 0 ? _b : 'undefined'}, maxPriorityFeePerGas: ${(_c = value.maxPriorityFeePerGas) !== null && _c !== void 0 ? _c : 'undefined'}, maxFeePerGas: ${(_d = value.maxFeePerGas) !== null && _d !== void 0 ? _d : 'undefined'}`, '\"gas\" is missing');\n    this.code = error_codes_js_1.ERR_TX_MISSING_GAS;\n    this.innerError = new MissingGasInnerError();\n  }\n}\nexports.MissingGasError = MissingGasError;\nclass TransactionGasMismatchInnerError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor() {\n    super('Missing properties in transaction, either define \"gas\" and \"gasPrice\" for type 0 transactions or \"gas\", \"maxPriorityFeePerGas\" and \"maxFeePerGas\" for type 2 transactions, not both');\n    this.code = error_codes_js_1.ERR_TX_GAS_MISMATCH_INNER_ERROR;\n  }\n}\nexports.TransactionGasMismatchInnerError = TransactionGasMismatchInnerError;\nclass TransactionGasMismatchError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b, _c, _d;\n    super(`gas: ${(_a = value.gas) !== null && _a !== void 0 ? _a : 'undefined'}, gasPrice: ${(_b = value.gasPrice) !== null && _b !== void 0 ? _b : 'undefined'}, maxPriorityFeePerGas: ${(_c = value.maxPriorityFeePerGas) !== null && _c !== void 0 ? _c : 'undefined'}, maxFeePerGas: ${(_d = value.maxFeePerGas) !== null && _d !== void 0 ? _d : 'undefined'}`, 'transaction must specify legacy or fee market gas properties, not both');\n    this.code = error_codes_js_1.ERR_TX_GAS_MISMATCH;\n    this.innerError = new TransactionGasMismatchInnerError();\n  }\n}\nexports.TransactionGasMismatchError = TransactionGasMismatchError;\nclass InvalidGasOrGasPrice extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b;\n    super(`gas: ${(_a = value.gas) !== null && _a !== void 0 ? _a : 'undefined'}, gasPrice: ${(_b = value.gasPrice) !== null && _b !== void 0 ? _b : 'undefined'}`, 'Gas or gasPrice is lower than 0');\n    this.code = error_codes_js_1.ERR_TX_INVALID_LEGACY_GAS;\n  }\n}\nexports.InvalidGasOrGasPrice = InvalidGasOrGasPrice;\nclass InvalidMaxPriorityFeePerGasOrMaxFeePerGas extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b;\n    super(`maxPriorityFeePerGas: ${(_a = value.maxPriorityFeePerGas) !== null && _a !== void 0 ? _a : 'undefined'}, maxFeePerGas: ${(_b = value.maxFeePerGas) !== null && _b !== void 0 ? _b : 'undefined'}`, 'maxPriorityFeePerGas or maxFeePerGas is lower than 0');\n    this.code = error_codes_js_1.ERR_TX_INVALID_FEE_MARKET_GAS;\n  }\n}\nexports.InvalidMaxPriorityFeePerGasOrMaxFeePerGas = InvalidMaxPriorityFeePerGasOrMaxFeePerGas;\nclass Eip1559GasPriceError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(value, \"eip-1559 transactions don't support gasPrice\");\n    this.code = error_codes_js_1.ERR_TX_INVALID_FEE_MARKET_GAS_PRICE;\n  }\n}\nexports.Eip1559GasPriceError = Eip1559GasPriceError;\nclass UnsupportedFeeMarketError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b;\n    super(`maxPriorityFeePerGas: ${(_a = value.maxPriorityFeePerGas) !== null && _a !== void 0 ? _a : 'undefined'}, maxFeePerGas: ${(_b = value.maxFeePerGas) !== null && _b !== void 0 ? _b : 'undefined'}`, \"pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas\");\n    this.code = error_codes_js_1.ERR_TX_INVALID_LEGACY_FEE_MARKET;\n  }\n}\nexports.UnsupportedFeeMarketError = UnsupportedFeeMarketError;\nclass InvalidTransactionObjectError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(value, 'invalid transaction object');\n    this.code = error_codes_js_1.ERR_TX_INVALID_OBJECT;\n  }\n}\nexports.InvalidTransactionObjectError = InvalidTransactionObjectError;\nclass InvalidNonceOrChainIdError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b;\n    super(`nonce: ${(_a = value.nonce) !== null && _a !== void 0 ? _a : 'undefined'}, chainId: ${(_b = value.chainId) !== null && _b !== void 0 ? _b : 'undefined'}`, 'Nonce or chainId is lower than 0');\n    this.code = error_codes_js_1.ERR_TX_INVALID_NONCE_OR_CHAIN_ID;\n  }\n}\nexports.InvalidNonceOrChainIdError = InvalidNonceOrChainIdError;\nclass UnableToPopulateNonceError extends web3_error_base_js_1.InvalidValueError {\n  constructor() {\n    super('UnableToPopulateNonceError', 'unable to populate nonce, no from address available');\n    this.code = error_codes_js_1.ERR_TX_UNABLE_TO_POPULATE_NONCE;\n  }\n}\nexports.UnableToPopulateNonceError = UnableToPopulateNonceError;\nclass Eip1559NotSupportedError extends web3_error_base_js_1.InvalidValueError {\n  constructor() {\n    super('Eip1559NotSupportedError', \"Network doesn't support eip-1559\");\n    this.code = error_codes_js_1.ERR_TX_UNSUPPORTED_EIP_1559;\n  }\n}\nexports.Eip1559NotSupportedError = Eip1559NotSupportedError;\nclass UnsupportedTransactionTypeError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(value, 'unsupported transaction type');\n    this.code = error_codes_js_1.ERR_TX_UNSUPPORTED_TYPE;\n  }\n}\nexports.UnsupportedTransactionTypeError = UnsupportedTransactionTypeError;\nclass TransactionDataAndInputError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b;\n    super(`data: ${(_a = value.data) !== null && _a !== void 0 ? _a : 'undefined'}, input: ${(_b = value.input) !== null && _b !== void 0 ? _b : 'undefined'}`, 'You can\\'t have \"data\" and \"input\" as properties of transactions at the same time, please use either \"data\" or \"input\" instead.');\n    this.code = error_codes_js_1.ERR_TX_DATA_AND_INPUT;\n  }\n}\nexports.TransactionDataAndInputError = TransactionDataAndInputError;\nclass TransactionSendTimeoutError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(value) {\n    super(`The connected Ethereum Node did not respond within ${value.numberOfSeconds} seconds, please make sure your transaction was properly sent and you are connected to a healthy Node. Be aware that transaction might still be pending or mined!\\n\\tTransaction Hash: ${value.transactionHash ? value.transactionHash.toString() : 'not available'}`);\n    this.code = error_codes_js_1.ERR_TX_SEND_TIMEOUT;\n  }\n}\nexports.TransactionSendTimeoutError = TransactionSendTimeoutError;\nfunction transactionTimeoutHint(transactionHash) {\n  return `Please make sure your transaction was properly sent and there are no previous pending transaction for the same account. However, be aware that it might still be mined!\\n\\tTransaction Hash: ${transactionHash ? transactionHash.toString() : 'not available'}`;\n}\nclass TransactionPollingTimeoutError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(value) {\n    super(`Transaction was not mined within ${value.numberOfSeconds} seconds. ${transactionTimeoutHint(value.transactionHash)}`);\n    this.code = error_codes_js_1.ERR_TX_POLLING_TIMEOUT;\n  }\n}\nexports.TransactionPollingTimeoutError = TransactionPollingTimeoutError;\nclass TransactionBlockTimeoutError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(value) {\n    super(`Transaction started at ${value.starterBlockNumber} but was not mined within ${value.numberOfBlocks} blocks. ${transactionTimeoutHint(value.transactionHash)}`);\n    this.code = error_codes_js_1.ERR_TX_BLOCK_TIMEOUT;\n  }\n}\nexports.TransactionBlockTimeoutError = TransactionBlockTimeoutError;\nclass TransactionMissingReceiptOrBlockHashError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    var _a, _b;\n    super(`receipt: ${JSON.stringify(value.receipt)}, blockHash: ${(_a = value.blockHash) === null || _a === void 0 ? void 0 : _a.toString()}, transactionHash: ${(_b = value.transactionHash) === null || _b === void 0 ? void 0 : _b.toString()}`, `Receipt missing or blockHash null`);\n    this.code = error_codes_js_1.ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL;\n  }\n}\nexports.TransactionMissingReceiptOrBlockHashError = TransactionMissingReceiptOrBlockHashError;\nclass TransactionReceiptMissingBlockNumberError extends web3_error_base_js_1.InvalidValueError {\n  constructor(value) {\n    super(`receipt: ${JSON.stringify(value.receipt)}`, `Receipt missing block number`);\n    this.code = error_codes_js_1.ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER;\n  }\n}\nexports.TransactionReceiptMissingBlockNumberError = TransactionReceiptMissingBlockNumberError;\nclass TransactionSigningError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(errorDetails) {\n    super(`Invalid signature. \"${errorDetails}\"`);\n    this.code = error_codes_js_1.ERR_TX_SIGNING;\n  }\n}\nexports.TransactionSigningError = TransactionSigningError;\nclass LocalWalletNotAvailableError extends web3_error_base_js_1.InvalidValueError {\n  constructor() {\n    super('LocalWalletNotAvailableError', `Attempted to index account in local wallet, but no wallet is available`);\n    this.code = error_codes_js_1.ERR_TX_LOCAL_WALLET_NOT_AVAILABLE;\n  }\n}\nexports.LocalWalletNotAvailableError = LocalWalletNotAvailableError;\nclass InvalidPropertiesForTransactionTypeError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(validationError, txType) {\n    const invalidPropertyNames = [];\n    validationError.forEach(error => invalidPropertyNames.push(error.keyword));\n    super(`The following properties are invalid for the transaction type ${txType}: ${invalidPropertyNames.join(', ')}`);\n    this.code = error_codes_js_1.ERR_TX_INVALID_PROPERTIES_FOR_TYPE;\n  }\n}\nexports.InvalidPropertiesForTransactionTypeError = InvalidPropertiesForTransactionTypeError;","map":{"version":3,"names":["error_codes_js_1","require","web3_error_base_js_1","TransactionError","BaseWeb3Error","constructor","message","receipt","code","ERR_TX","toJSON","Object","assign","exports","RevertInstructionError","reason","signature","ERR_TX_REVERT_INSTRUCTION","TransactionRevertInstructionError","data","undefined","convertToString","ERR_TX_REVERT_TRANSACTION","TransactionRevertWithCustomError","customErrorName","customErrorDecodedSignature","customErrorArguments","ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR","NoContractAddressFoundError","ERR_TX_NO_CONTRACT_ADDRESS","ContractCodeNotStoredError","ERR_TX_CONTRACT_NOT_STORED","TransactionRevertedWithoutReasonError","ERR_TX_REVERT_WITHOUT_REASON","TransactionOutOfGasError","JSON","stringify","ERR_TX_OUT_OF_GAS","UndefinedRawTransactionError","ERR_RAW_TX_UNDEFINED","TransactionNotFound","ERR_TX_NOT_FOUND","InvalidTransactionWithSender","InvalidValueError","value","ERR_TX_INVALID_SENDER","InvalidTransactionWithReceiver","ERR_TX_INVALID_RECEIVER","InvalidTransactionCall","ERR_TX_INVALID_CALL","MissingCustomChainError","ERR_TX_MISSING_CUSTOM_CHAIN","MissingCustomChainIdError","ERR_TX_MISSING_CUSTOM_CHAIN_ID","ChainIdMismatchError","ERR_TX_CHAIN_ID_MISMATCH","ChainMismatchError","ERR_TX_CHAIN_MISMATCH","HardforkMismatchError","ERR_TX_HARDFORK_MISMATCH","CommonOrChainAndHardforkError","ERR_TX_INVALID_CHAIN_INFO","MissingChainOrHardforkError","_a","chain","_b","hardfork","ERR_TX_MISSING_CHAIN_INFO","MissingGasInnerError","ERR_TX_MISSING_GAS_INNER_ERROR","MissingGasError","gas","gasPrice","_c","maxPriorityFeePerGas","_d","maxFeePerGas","ERR_TX_MISSING_GAS","innerError","TransactionGasMismatchInnerError","ERR_TX_GAS_MISMATCH_INNER_ERROR","TransactionGasMismatchError","ERR_TX_GAS_MISMATCH","InvalidGasOrGasPrice","ERR_TX_INVALID_LEGACY_GAS","InvalidMaxPriorityFeePerGasOrMaxFeePerGas","ERR_TX_INVALID_FEE_MARKET_GAS","Eip1559GasPriceError","ERR_TX_INVALID_FEE_MARKET_GAS_PRICE","UnsupportedFeeMarketError","ERR_TX_INVALID_LEGACY_FEE_MARKET","InvalidTransactionObjectError","ERR_TX_INVALID_OBJECT","InvalidNonceOrChainIdError","nonce","chainId","ERR_TX_INVALID_NONCE_OR_CHAIN_ID","UnableToPopulateNonceError","ERR_TX_UNABLE_TO_POPULATE_NONCE","Eip1559NotSupportedError","ERR_TX_UNSUPPORTED_EIP_1559","UnsupportedTransactionTypeError","ERR_TX_UNSUPPORTED_TYPE","TransactionDataAndInputError","input","ERR_TX_DATA_AND_INPUT","TransactionSendTimeoutError","numberOfSeconds","transactionHash","toString","ERR_TX_SEND_TIMEOUT","transactionTimeoutHint","TransactionPollingTimeoutError","ERR_TX_POLLING_TIMEOUT","TransactionBlockTimeoutError","starterBlockNumber","numberOfBlocks","ERR_TX_BLOCK_TIMEOUT","TransactionMissingReceiptOrBlockHashError","blockHash","ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL","TransactionReceiptMissingBlockNumberError","ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER","TransactionSigningError","errorDetails","ERR_TX_SIGNING","LocalWalletNotAvailableError","ERR_TX_LOCAL_WALLET_NOT_AVAILABLE","InvalidPropertiesForTransactionTypeError","validationError","txType","invalidPropertyNames","forEach","error","push","keyword","join","ERR_TX_INVALID_PROPERTIES_FOR_TYPE"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/web3-errors/src/errors/transaction_errors.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable max-classes-per-file */\n\nimport {\n\tBytes,\n\tHexString,\n\tNumbers,\n\tTransactionReceipt,\n\tWeb3ValidationErrorObject,\n} from 'web3-types';\nimport {\n\tERR_RAW_TX_UNDEFINED,\n\tERR_TX,\n\tERR_TX_BLOCK_TIMEOUT,\n\tERR_TX_CONTRACT_NOT_STORED,\n\tERR_TX_CHAIN_ID_MISMATCH,\n\tERR_TX_DATA_AND_INPUT,\n\tERR_TX_GAS_MISMATCH,\n\tERR_TX_CHAIN_MISMATCH,\n\tERR_TX_HARDFORK_MISMATCH,\n\tERR_TX_INVALID_CALL,\n\tERR_TX_INVALID_CHAIN_INFO,\n\tERR_TX_INVALID_FEE_MARKET_GAS,\n\tERR_TX_INVALID_FEE_MARKET_GAS_PRICE,\n\tERR_TX_INVALID_LEGACY_FEE_MARKET,\n\tERR_TX_INVALID_LEGACY_GAS,\n\tERR_TX_INVALID_NONCE_OR_CHAIN_ID,\n\tERR_TX_INVALID_OBJECT,\n\tERR_TX_INVALID_SENDER,\n\tERR_TX_INVALID_RECEIVER,\n\tERR_TX_LOCAL_WALLET_NOT_AVAILABLE,\n\tERR_TX_MISSING_CHAIN_INFO,\n\tERR_TX_MISSING_CUSTOM_CHAIN,\n\tERR_TX_MISSING_CUSTOM_CHAIN_ID,\n\tERR_TX_MISSING_GAS,\n\tERR_TX_NO_CONTRACT_ADDRESS,\n\tERR_TX_NOT_FOUND,\n\tERR_TX_OUT_OF_GAS,\n\tERR_TX_POLLING_TIMEOUT,\n\tERR_TX_RECEIPT_MISSING_BLOCK_NUMBER,\n\tERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL,\n\tERR_TX_REVERT_INSTRUCTION,\n\tERR_TX_REVERT_TRANSACTION,\n\tERR_TX_REVERT_WITHOUT_REASON,\n\tERR_TX_SEND_TIMEOUT,\n\tERR_TX_SIGNING,\n\tERR_TX_UNABLE_TO_POPULATE_NONCE,\n\tERR_TX_UNSUPPORTED_EIP_1559,\n\tERR_TX_UNSUPPORTED_TYPE,\n\tERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR,\n\tERR_TX_INVALID_PROPERTIES_FOR_TYPE,\n\tERR_TX_MISSING_GAS_INNER_ERROR,\n\tERR_TX_GAS_MISMATCH_INNER_ERROR,\n} from '../error_codes.js';\nimport { InvalidValueError, BaseWeb3Error } from '../web3_error_base.js';\n\nexport class TransactionError<ReceiptType = TransactionReceipt> extends BaseWeb3Error {\n\tpublic code = ERR_TX;\n\n\tpublic constructor(message: string, public receipt?: ReceiptType) {\n\t\tsuper(message);\n\t}\n\n\tpublic toJSON() {\n\t\treturn { ...super.toJSON(), receipt: this.receipt };\n\t}\n}\n\nexport class RevertInstructionError extends BaseWeb3Error {\n\tpublic code = ERR_TX_REVERT_INSTRUCTION;\n\n\tpublic constructor(public reason: string, public signature: string) {\n\t\tsuper(`Your request got reverted with the following reason string: ${reason}`);\n\t}\n\n\tpublic toJSON() {\n\t\treturn { ...super.toJSON(), reason: this.reason, signature: this.signature };\n\t}\n}\n\nexport class TransactionRevertInstructionError<\n\tReceiptType = TransactionReceipt,\n> extends BaseWeb3Error {\n\tpublic code = ERR_TX_REVERT_TRANSACTION;\n\n\tpublic constructor(\n\t\tpublic reason: string,\n\t\tpublic signature?: string,\n\t\tpublic receipt?: ReceiptType,\n\t\tpublic data?: string,\n\t) {\n\t\tsuper(\n\t\t\t`Transaction has been reverted by the EVM${\n\t\t\t\treceipt === undefined ? '' : `:\\n ${BaseWeb3Error.convertToString(receipt)}`\n\t\t\t}`,\n\t\t);\n\t}\n\n\tpublic toJSON() {\n\t\treturn {\n\t\t\t...super.toJSON(),\n\t\t\treason: this.reason,\n\t\t\tsignature: this.signature,\n\t\t\treceipt: this.receipt,\n\t\t\tdata: this.data,\n\t\t};\n\t}\n}\n\n/**\n * This error is used when a transaction to a smart contract fails and\n * a custom user error (https://blog.soliditylang.org/2021/04/21/custom-errors/)\n * is able to be parsed from the revert reason\n */\nexport class TransactionRevertWithCustomError<\n\tReceiptType = TransactionReceipt,\n> extends TransactionRevertInstructionError<ReceiptType> {\n\tpublic code = ERR_TX_REVERT_TRANSACTION_CUSTOM_ERROR;\n\n\tpublic constructor(\n\t\tpublic reason: string,\n\t\tpublic customErrorName: string,\n\t\tpublic customErrorDecodedSignature: string,\n\t\tpublic customErrorArguments: Record<string, unknown>,\n\t\tpublic signature?: string,\n\t\tpublic receipt?: ReceiptType,\n\t\tpublic data?: string,\n\t) {\n\t\tsuper(reason);\n\t}\n\n\tpublic toJSON() {\n\t\treturn {\n\t\t\t...super.toJSON(),\n\t\t\treason: this.reason,\n\t\t\tcustomErrorName: this.customErrorName,\n\t\t\tcustomErrorDecodedSignature: this.customErrorDecodedSignature,\n\t\t\tcustomErrorArguments: this.customErrorArguments,\n\t\t\tsignature: this.signature,\n\t\t\treceipt: this.receipt,\n\t\t\tdata: this.data,\n\t\t};\n\t}\n}\n\nexport class NoContractAddressFoundError extends TransactionError {\n\tpublic constructor(receipt: TransactionReceipt) {\n\t\tsuper(\"The transaction receipt didn't contain a contract address.\", receipt);\n\t\tthis.code = ERR_TX_NO_CONTRACT_ADDRESS;\n\t}\n\n\tpublic toJSON() {\n\t\treturn { ...super.toJSON(), receipt: this.receipt };\n\t}\n}\n\nexport class ContractCodeNotStoredError extends TransactionError {\n\tpublic constructor(receipt: TransactionReceipt) {\n\t\tsuper(\"The contract code couldn't be stored, please check your gas limit.\", receipt);\n\t\tthis.code = ERR_TX_CONTRACT_NOT_STORED;\n\t}\n}\n\nexport class TransactionRevertedWithoutReasonError<\n\tReceiptType = TransactionReceipt,\n> extends TransactionError<ReceiptType> {\n\tpublic constructor(receipt?: ReceiptType) {\n\t\tsuper(\n\t\t\t`Transaction has been reverted by the EVM${\n\t\t\t\treceipt === undefined ? '' : `:\\n ${BaseWeb3Error.convertToString(receipt)}`\n\t\t\t}`,\n\t\t\treceipt,\n\t\t);\n\t\tthis.code = ERR_TX_REVERT_WITHOUT_REASON;\n\t}\n}\n\nexport class TransactionOutOfGasError extends TransactionError {\n\tpublic constructor(receipt: TransactionReceipt) {\n\t\tsuper(\n\t\t\t`Transaction ran out of gas. Please provide more gas:\\n ${JSON.stringify(\n\t\t\t\treceipt,\n\t\t\t\tundefined,\n\t\t\t\t2,\n\t\t\t)}`,\n\t\t\treceipt,\n\t\t);\n\t\tthis.code = ERR_TX_OUT_OF_GAS;\n\t}\n}\n\nexport class UndefinedRawTransactionError extends TransactionError {\n\tpublic constructor() {\n\t\tsuper(`Raw transaction undefined`);\n\t\tthis.code = ERR_RAW_TX_UNDEFINED;\n\t}\n}\nexport class TransactionNotFound extends TransactionError {\n\tpublic constructor() {\n\t\tsuper('Transaction not found');\n\t\tthis.code = ERR_TX_NOT_FOUND;\n\t}\n}\n\nexport class InvalidTransactionWithSender extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_SENDER;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'invalid transaction with invalid sender');\n\t}\n}\nexport class InvalidTransactionWithReceiver extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_RECEIVER;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'invalid transaction with invalid receiver');\n\t}\n}\nexport class InvalidTransactionCall extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_CALL;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'invalid transaction call');\n\t}\n}\n\nexport class MissingCustomChainError extends InvalidValueError {\n\tpublic code = ERR_TX_MISSING_CUSTOM_CHAIN;\n\n\tpublic constructor() {\n\t\tsuper(\n\t\t\t'MissingCustomChainError',\n\t\t\t'If tx.common is provided it must have tx.common.customChain',\n\t\t);\n\t}\n}\n\nexport class MissingCustomChainIdError extends InvalidValueError {\n\tpublic code = ERR_TX_MISSING_CUSTOM_CHAIN_ID;\n\n\tpublic constructor() {\n\t\tsuper(\n\t\t\t'MissingCustomChainIdError',\n\t\t\t'If tx.common is provided it must have tx.common.customChain and tx.common.customChain.chainId',\n\t\t);\n\t}\n}\n\nexport class ChainIdMismatchError extends InvalidValueError {\n\tpublic code = ERR_TX_CHAIN_ID_MISMATCH;\n\n\tpublic constructor(value: { txChainId: unknown; customChainId: unknown }) {\n\t\tsuper(\n\t\t\tJSON.stringify(value),\n\t\t\t// https://github.com/ChainSafe/web3.js/blob/8783f4d64e424456bdc53b34ef1142d0a7cee4d7/packages/web3-eth-accounts/src/index.js#L176\n\t\t\t'Chain Id doesnt match in tx.chainId tx.common.customChain.chainId',\n\t\t);\n\t}\n}\n\nexport class ChainMismatchError extends InvalidValueError {\n\tpublic code = ERR_TX_CHAIN_MISMATCH;\n\n\tpublic constructor(value: { txChain: unknown; baseChain: unknown }) {\n\t\tsuper(JSON.stringify(value), 'Chain doesnt match in tx.chain tx.common.basechain');\n\t}\n}\n\nexport class HardforkMismatchError extends InvalidValueError {\n\tpublic code = ERR_TX_HARDFORK_MISMATCH;\n\n\tpublic constructor(value: { txHardfork: unknown; commonHardfork: unknown }) {\n\t\tsuper(JSON.stringify(value), 'hardfork doesnt match in tx.hardfork tx.common.hardfork');\n\t}\n}\n\nexport class CommonOrChainAndHardforkError extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_CHAIN_INFO;\n\n\tpublic constructor() {\n\t\tsuper(\n\t\t\t'CommonOrChainAndHardforkError',\n\t\t\t'Please provide the common object or the chain and hardfork property but not all together.',\n\t\t);\n\t}\n}\n\nexport class MissingChainOrHardforkError extends InvalidValueError {\n\tpublic code = ERR_TX_MISSING_CHAIN_INFO;\n\n\tpublic constructor(value: { chain: string | undefined; hardfork: string | undefined }) {\n\t\tsuper(\n\t\t\t'MissingChainOrHardforkError',\n\t\t\t`When specifying chain and hardfork, both values must be defined. Received \"chain\": ${\n\t\t\t\tvalue.chain ?? 'undefined'\n\t\t\t}, \"hardfork\": ${value.hardfork ?? 'undefined'}`,\n\t\t);\n\t}\n}\n\nexport class MissingGasInnerError extends BaseWeb3Error {\n\tpublic code = ERR_TX_MISSING_GAS_INNER_ERROR;\n\n\tpublic constructor() {\n\t\tsuper(\n\t\t\t'Missing properties in transaction, either define \"gas\" and \"gasPrice\" for type 0 transactions or \"gas\", \"maxPriorityFeePerGas\" and \"maxFeePerGas\" for type 2 transactions',\n\t\t);\n\t}\n}\n\nexport class MissingGasError extends InvalidValueError {\n\tpublic code = ERR_TX_MISSING_GAS;\n\n\tpublic constructor(value: {\n\t\tgas: Numbers | undefined;\n\t\tgasPrice: Numbers | undefined;\n\t\tmaxPriorityFeePerGas: Numbers | undefined;\n\t\tmaxFeePerGas: Numbers | undefined;\n\t}) {\n\t\tsuper(\n\t\t\t`gas: ${value.gas ?? 'undefined'}, gasPrice: ${\n\t\t\t\tvalue.gasPrice ?? 'undefined'\n\t\t\t}, maxPriorityFeePerGas: ${value.maxPriorityFeePerGas ?? 'undefined'}, maxFeePerGas: ${\n\t\t\t\tvalue.maxFeePerGas ?? 'undefined'\n\t\t\t}`,\n\t\t\t'\"gas\" is missing',\n\t\t);\n\t\tthis.innerError = new MissingGasInnerError();\n\t}\n}\n\nexport class TransactionGasMismatchInnerError extends BaseWeb3Error {\n\tpublic code = ERR_TX_GAS_MISMATCH_INNER_ERROR;\n\n\tpublic constructor() {\n\t\tsuper(\n\t\t\t'Missing properties in transaction, either define \"gas\" and \"gasPrice\" for type 0 transactions or \"gas\", \"maxPriorityFeePerGas\" and \"maxFeePerGas\" for type 2 transactions, not both',\n\t\t);\n\t}\n}\n\nexport class TransactionGasMismatchError extends InvalidValueError {\n\tpublic code = ERR_TX_GAS_MISMATCH;\n\n\tpublic constructor(value: {\n\t\tgas: Numbers | undefined;\n\t\tgasPrice: Numbers | undefined;\n\t\tmaxPriorityFeePerGas: Numbers | undefined;\n\t\tmaxFeePerGas: Numbers | undefined;\n\t}) {\n\t\tsuper(\n\t\t\t`gas: ${value.gas ?? 'undefined'}, gasPrice: ${\n\t\t\t\tvalue.gasPrice ?? 'undefined'\n\t\t\t}, maxPriorityFeePerGas: ${value.maxPriorityFeePerGas ?? 'undefined'}, maxFeePerGas: ${\n\t\t\t\tvalue.maxFeePerGas ?? 'undefined'\n\t\t\t}`,\n\t\t\t'transaction must specify legacy or fee market gas properties, not both',\n\t\t);\n\t\tthis.innerError = new TransactionGasMismatchInnerError();\n\t}\n}\n\nexport class InvalidGasOrGasPrice extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_LEGACY_GAS;\n\n\tpublic constructor(value: { gas: Numbers | undefined; gasPrice: Numbers | undefined }) {\n\t\tsuper(\n\t\t\t`gas: ${value.gas ?? 'undefined'}, gasPrice: ${value.gasPrice ?? 'undefined'}`,\n\t\t\t'Gas or gasPrice is lower than 0',\n\t\t);\n\t}\n}\n\nexport class InvalidMaxPriorityFeePerGasOrMaxFeePerGas extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_FEE_MARKET_GAS;\n\n\tpublic constructor(value: {\n\t\tmaxPriorityFeePerGas: Numbers | undefined;\n\t\tmaxFeePerGas: Numbers | undefined;\n\t}) {\n\t\tsuper(\n\t\t\t`maxPriorityFeePerGas: ${value.maxPriorityFeePerGas ?? 'undefined'}, maxFeePerGas: ${\n\t\t\t\tvalue.maxFeePerGas ?? 'undefined'\n\t\t\t}`,\n\t\t\t'maxPriorityFeePerGas or maxFeePerGas is lower than 0',\n\t\t);\n\t}\n}\n\nexport class Eip1559GasPriceError extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_FEE_MARKET_GAS_PRICE;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, \"eip-1559 transactions don't support gasPrice\");\n\t}\n}\n\nexport class UnsupportedFeeMarketError extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_LEGACY_FEE_MARKET;\n\n\tpublic constructor(value: {\n\t\tmaxPriorityFeePerGas: Numbers | undefined;\n\t\tmaxFeePerGas: Numbers | undefined;\n\t}) {\n\t\tsuper(\n\t\t\t`maxPriorityFeePerGas: ${value.maxPriorityFeePerGas ?? 'undefined'}, maxFeePerGas: ${\n\t\t\t\tvalue.maxFeePerGas ?? 'undefined'\n\t\t\t}`,\n\t\t\t\"pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas\",\n\t\t);\n\t}\n}\n\nexport class InvalidTransactionObjectError extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_OBJECT;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'invalid transaction object');\n\t}\n}\n\nexport class InvalidNonceOrChainIdError extends InvalidValueError {\n\tpublic code = ERR_TX_INVALID_NONCE_OR_CHAIN_ID;\n\n\tpublic constructor(value: { nonce: Numbers | undefined; chainId: Numbers | undefined }) {\n\t\tsuper(\n\t\t\t`nonce: ${value.nonce ?? 'undefined'}, chainId: ${value.chainId ?? 'undefined'}`,\n\t\t\t'Nonce or chainId is lower than 0',\n\t\t);\n\t}\n}\n\nexport class UnableToPopulateNonceError extends InvalidValueError {\n\tpublic code = ERR_TX_UNABLE_TO_POPULATE_NONCE;\n\n\tpublic constructor() {\n\t\tsuper('UnableToPopulateNonceError', 'unable to populate nonce, no from address available');\n\t}\n}\n\nexport class Eip1559NotSupportedError extends InvalidValueError {\n\tpublic code = ERR_TX_UNSUPPORTED_EIP_1559;\n\n\tpublic constructor() {\n\t\tsuper('Eip1559NotSupportedError', \"Network doesn't support eip-1559\");\n\t}\n}\n\nexport class UnsupportedTransactionTypeError extends InvalidValueError {\n\tpublic code = ERR_TX_UNSUPPORTED_TYPE;\n\n\tpublic constructor(value: unknown) {\n\t\tsuper(value, 'unsupported transaction type');\n\t}\n}\n\nexport class TransactionDataAndInputError extends InvalidValueError {\n\tpublic code = ERR_TX_DATA_AND_INPUT;\n\n\tpublic constructor(value: { data: HexString | undefined; input: HexString | undefined }) {\n\t\tsuper(\n\t\t\t`data: ${value.data ?? 'undefined'}, input: ${value.input ?? 'undefined'}`,\n\t\t\t'You can\\'t have \"data\" and \"input\" as properties of transactions at the same time, please use either \"data\" or \"input\" instead.',\n\t\t);\n\t}\n}\n\nexport class TransactionSendTimeoutError extends BaseWeb3Error {\n\tpublic code = ERR_TX_SEND_TIMEOUT;\n\n\tpublic constructor(value: { numberOfSeconds: number; transactionHash?: Bytes }) {\n\t\tsuper(\n\t\t\t`The connected Ethereum Node did not respond within ${\n\t\t\t\tvalue.numberOfSeconds\n\t\t\t} seconds, please make sure your transaction was properly sent and you are connected to a healthy Node. Be aware that transaction might still be pending or mined!\\n\\tTransaction Hash: ${\n\t\t\t\tvalue.transactionHash ? value.transactionHash.toString() : 'not available'\n\t\t\t}`,\n\t\t);\n\t}\n}\n\nfunction transactionTimeoutHint(transactionHash?: Bytes) {\n\treturn `Please make sure your transaction was properly sent and there are no previous pending transaction for the same account. However, be aware that it might still be mined!\\n\\tTransaction Hash: ${\n\t\ttransactionHash ? transactionHash.toString() : 'not available'\n\t}`;\n}\n\nexport class TransactionPollingTimeoutError extends BaseWeb3Error {\n\tpublic code = ERR_TX_POLLING_TIMEOUT;\n\n\tpublic constructor(value: { numberOfSeconds: number; transactionHash: Bytes }) {\n\t\tsuper(\n\t\t\t`Transaction was not mined within ${\n\t\t\t\tvalue.numberOfSeconds\n\t\t\t} seconds. ${transactionTimeoutHint(value.transactionHash)}`,\n\t\t);\n\t}\n}\n\nexport class TransactionBlockTimeoutError extends BaseWeb3Error {\n\tpublic code = ERR_TX_BLOCK_TIMEOUT;\n\n\tpublic constructor(value: {\n\t\tstarterBlockNumber: number;\n\t\tnumberOfBlocks: number;\n\t\ttransactionHash?: Bytes;\n\t}) {\n\t\tsuper(\n\t\t\t`Transaction started at ${value.starterBlockNumber} but was not mined within ${\n\t\t\t\tvalue.numberOfBlocks\n\t\t\t} blocks. ${transactionTimeoutHint(value.transactionHash)}`,\n\t\t);\n\t}\n}\n\nexport class TransactionMissingReceiptOrBlockHashError extends InvalidValueError {\n\tpublic code = ERR_TX_RECEIPT_MISSING_OR_BLOCKHASH_NULL;\n\n\tpublic constructor(value: {\n\t\treceipt: TransactionReceipt;\n\t\tblockHash: Bytes;\n\t\ttransactionHash: Bytes;\n\t}) {\n\t\tsuper(\n\t\t\t`receipt: ${JSON.stringify(\n\t\t\t\tvalue.receipt,\n\t\t\t)}, blockHash: ${value.blockHash?.toString()}, transactionHash: ${value.transactionHash?.toString()}`,\n\t\t\t`Receipt missing or blockHash null`,\n\t\t);\n\t}\n}\n\nexport class TransactionReceiptMissingBlockNumberError extends InvalidValueError {\n\tpublic code = ERR_TX_RECEIPT_MISSING_BLOCK_NUMBER;\n\n\tpublic constructor(value: { receipt: TransactionReceipt }) {\n\t\tsuper(`receipt: ${JSON.stringify(value.receipt)}`, `Receipt missing block number`);\n\t}\n}\n\nexport class TransactionSigningError extends BaseWeb3Error {\n\tpublic code = ERR_TX_SIGNING;\n\tpublic constructor(errorDetails: string) {\n\t\tsuper(`Invalid signature. \"${errorDetails}\"`);\n\t}\n}\n\nexport class LocalWalletNotAvailableError extends InvalidValueError {\n\tpublic code = ERR_TX_LOCAL_WALLET_NOT_AVAILABLE;\n\n\tpublic constructor() {\n\t\tsuper(\n\t\t\t'LocalWalletNotAvailableError',\n\t\t\t`Attempted to index account in local wallet, but no wallet is available`,\n\t\t);\n\t}\n}\nexport class InvalidPropertiesForTransactionTypeError extends BaseWeb3Error {\n\tpublic code = ERR_TX_INVALID_PROPERTIES_FOR_TYPE;\n\n\tpublic constructor(\n\t\tvalidationError: Web3ValidationErrorObject[],\n\t\ttxType: '0x0' | '0x1' | '0x2',\n\t) {\n\t\tconst invalidPropertyNames: string[] = [];\n\t\tvalidationError.forEach(error => invalidPropertyNames.push(error.keyword));\n\t\tsuper(\n\t\t\t`The following properties are invalid for the transaction type ${txType}: ${invalidPropertyNames.join(\n\t\t\t\t', ',\n\t\t\t)}`,\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}