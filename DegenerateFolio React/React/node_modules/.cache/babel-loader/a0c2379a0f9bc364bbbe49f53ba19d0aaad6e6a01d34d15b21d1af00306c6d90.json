{"ast":null,"code":"import { map, switchMap } from 'rxjs';\nimport { createHeaderExtended } from '../type/index.js';\nimport { memo } from '../util/index.js';\nimport { getAuthorDetails } from './util.js';\n/**\n * @name subscribeNewHeads\n * @returns A header with the current header (including extracted author)\n * @description An observable of the current block header and it's author\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.chain.subscribeNewHeads((header) => {\n *   console.log(`block #${header.number} was authored by ${header.author}`);\n * });\n * ```\n */\nexport function subscribeNewHeads(instanceId, api) {\n  return memo(instanceId, () => api.rpc.chain.subscribeNewHeads().pipe(switchMap(header => getAuthorDetails(api, header)), map(_ref => {\n    let [header, validators, author] = _ref;\n    header.createdAtHash = header.hash;\n    return createHeaderExtended(header.registry, header, validators, author);\n  })));\n}","map":{"version":3,"names":["map","switchMap","createHeaderExtended","memo","getAuthorDetails","subscribeNewHeads","instanceId","api","rpc","chain","pipe","header","_ref","validators","author","createdAtHash","hash","registry"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/chain/subscribeNewHeads.js"],"sourcesContent":["import { map, switchMap } from 'rxjs';\nimport { createHeaderExtended } from '../type/index.js';\nimport { memo } from '../util/index.js';\nimport { getAuthorDetails } from './util.js';\n/**\n * @name subscribeNewHeads\n * @returns A header with the current header (including extracted author)\n * @description An observable of the current block header and it's author\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.chain.subscribeNewHeads((header) => {\n *   console.log(`block #${header.number} was authored by ${header.author}`);\n * });\n * ```\n */\nexport function subscribeNewHeads(instanceId, api) {\n    return memo(instanceId, () => api.rpc.chain.subscribeNewHeads().pipe(switchMap((header) => getAuthorDetails(api, header)), map(([header, validators, author]) => {\n        header.createdAtHash = header.hash;\n        return createHeaderExtended(header.registry, header, validators, author);\n    })));\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,SAAS,QAAQ,MAAM;AACrC,SAASC,oBAAoB,QAAQ,kBAAkB;AACvD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,gBAAgB,QAAQ,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAACC,UAAU,EAAEC,GAAG,EAAE;EAC/C,OAAOJ,IAAI,CAACG,UAAU,EAAE,MAAMC,GAAG,CAACC,GAAG,CAACC,KAAK,CAACJ,iBAAiB,CAAC,CAAC,CAACK,IAAI,CAACT,SAAS,CAAEU,MAAM,IAAKP,gBAAgB,CAACG,GAAG,EAAEI,MAAM,CAAC,CAAC,EAAEX,GAAG,CAACY,IAAA,IAAkC;IAAA,IAAjC,CAACD,MAAM,EAAEE,UAAU,EAAEC,MAAM,CAAC,GAAAF,IAAA;IACxJD,MAAM,CAACI,aAAa,GAAGJ,MAAM,CAACK,IAAI;IAClC,OAAOd,oBAAoB,CAACS,MAAM,CAACM,QAAQ,EAAEN,MAAM,EAAEE,UAAU,EAAEC,MAAM,CAAC;EAC5E,CAAC,CAAC,CAAC,CAAC;AACR","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}