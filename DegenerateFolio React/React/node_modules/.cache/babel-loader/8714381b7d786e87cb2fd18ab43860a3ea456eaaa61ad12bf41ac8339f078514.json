{"ast":null,"code":"import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n  rpc,\n  runtime,\n  types: {\n    AuthorityIndex: 'u64',\n    AuthorityList: 'Vec<NextAuthority>',\n    AuthoritySet: {\n      currentAuthorities: 'AuthorityList',\n      setId: 'u64',\n      pendingStandardChanges: 'ForkTreePendingChange',\n      pendingForcedChanges: 'Vec<PendingChange>',\n      authoritySetChanges: 'AuthoritySetChanges'\n    },\n    ForkTreePendingChange: {\n      roots: 'Vec<ForkTreePendingChangeNode>',\n      bestFinalizedNumber: 'Option<BlockNumber>'\n    },\n    ForkTreePendingChangeNode: {\n      hash: 'BlockHash',\n      number: 'BlockNumber',\n      data: 'PendingChange',\n      // actual data, here PendingChange\n      children: 'Vec<ForkTreePendingChangeNode>'\n    },\n    AuthoritySetChange: '(U64, BlockNumber)',\n    AuthoritySetChanges: 'Vec<AuthoritySetChange>',\n    AuthorityWeight: 'u64',\n    DelayKind: {\n      _enum: {\n        Finalized: 'Null',\n        Best: 'DelayKindBest'\n      }\n    },\n    DelayKindBest: {\n      medianLastFinalized: 'BlockNumber'\n    },\n    EncodedFinalityProofs: 'Bytes',\n    GrandpaEquivocation: {\n      _enum: {\n        Prevote: 'GrandpaEquivocationValue',\n        Precommit: 'GrandpaEquivocationValue'\n      }\n    },\n    GrandpaEquivocationProof: {\n      setId: 'SetId',\n      equivocation: 'GrandpaEquivocation'\n    },\n    GrandpaEquivocationValue: {\n      roundNumber: 'u64',\n      identity: 'AuthorityId',\n      first: '(GrandpaPrevote, AuthoritySignature)',\n      second: '(GrandpaPrevote, AuthoritySignature)'\n    },\n    GrandpaPrevote: {\n      targetHash: 'Hash',\n      targetNumber: 'BlockNumber'\n    },\n    GrandpaCommit: {\n      targetHash: 'BlockHash',\n      targetNumber: 'BlockNumber',\n      precommits: 'Vec<GrandpaSignedPrecommit>'\n    },\n    GrandpaPrecommit: {\n      targetHash: 'BlockHash',\n      targetNumber: 'BlockNumber'\n    },\n    GrandpaSignedPrecommit: {\n      precommit: 'GrandpaPrecommit',\n      signature: 'AuthoritySignature',\n      id: 'AuthorityId'\n    },\n    GrandpaJustification: {\n      round: 'u64',\n      commit: 'GrandpaCommit',\n      votesAncestries: 'Vec<Header>'\n    },\n    JustificationNotification: 'Bytes',\n    KeyOwnerProof: 'MembershipProof',\n    NextAuthority: '(AuthorityId, AuthorityWeight)',\n    PendingChange: {\n      nextAuthorities: 'AuthorityList',\n      delay: 'BlockNumber',\n      canonHeight: 'BlockNumber',\n      canonHash: 'BlockHash',\n      delayKind: 'DelayKind'\n    },\n    PendingPause: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber'\n    },\n    PendingResume: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber'\n    },\n    Precommits: {\n      currentWeight: 'u32',\n      missing: 'BTreeSet<AuthorityId>'\n    },\n    Prevotes: {\n      currentWeight: 'u32',\n      missing: 'BTreeSet<AuthorityId>'\n    },\n    ReportedRoundStates: {\n      setId: 'u32',\n      best: 'RoundState',\n      background: 'Vec<RoundState>'\n    },\n    RoundState: {\n      round: 'u32',\n      totalWeight: 'u32',\n      thresholdWeight: 'u32',\n      prevotes: 'Prevotes',\n      precommits: 'Precommits'\n    },\n    SetId: 'u64',\n    StoredPendingChange: {\n      scheduledAt: 'BlockNumber',\n      delay: 'BlockNumber',\n      nextAuthorities: 'AuthorityList'\n    },\n    StoredState: {\n      _enum: {\n        Live: 'Null',\n        PendingPause: 'PendingPause',\n        Paused: 'Null',\n        PendingResume: 'PendingResume'\n      }\n    }\n  }\n};","map":{"version":3,"names":["rpc","runtime","types","AuthorityIndex","AuthorityList","AuthoritySet","currentAuthorities","setId","pendingStandardChanges","pendingForcedChanges","authoritySetChanges","ForkTreePendingChange","roots","bestFinalizedNumber","ForkTreePendingChangeNode","hash","number","data","children","AuthoritySetChange","AuthoritySetChanges","AuthorityWeight","DelayKind","_enum","Finalized","Best","DelayKindBest","medianLastFinalized","EncodedFinalityProofs","GrandpaEquivocation","Prevote","Precommit","GrandpaEquivocationProof","equivocation","GrandpaEquivocationValue","roundNumber","identity","first","second","GrandpaPrevote","targetHash","targetNumber","GrandpaCommit","precommits","GrandpaPrecommit","GrandpaSignedPrecommit","precommit","signature","id","GrandpaJustification","round","commit","votesAncestries","JustificationNotification","KeyOwnerProof","NextAuthority","PendingChange","nextAuthorities","delay","canonHeight","canonHash","delayKind","PendingPause","scheduledAt","PendingResume","Precommits","currentWeight","missing","Prevotes","ReportedRoundStates","best","background","RoundState","totalWeight","thresholdWeight","prevotes","SetId","StoredPendingChange","StoredState","Live","Paused"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/interfaces/grandpa/definitions.js"],"sourcesContent":["import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        AuthorityIndex: 'u64',\n        AuthorityList: 'Vec<NextAuthority>',\n        AuthoritySet: {\n            currentAuthorities: 'AuthorityList',\n            setId: 'u64',\n            pendingStandardChanges: 'ForkTreePendingChange',\n            pendingForcedChanges: 'Vec<PendingChange>',\n            authoritySetChanges: 'AuthoritySetChanges'\n        },\n        ForkTreePendingChange: {\n            roots: 'Vec<ForkTreePendingChangeNode>',\n            bestFinalizedNumber: 'Option<BlockNumber>'\n        },\n        ForkTreePendingChangeNode: {\n            hash: 'BlockHash',\n            number: 'BlockNumber',\n            data: 'PendingChange', // actual data, here PendingChange\n            children: 'Vec<ForkTreePendingChangeNode>'\n        },\n        AuthoritySetChange: '(U64, BlockNumber)',\n        AuthoritySetChanges: 'Vec<AuthoritySetChange>',\n        AuthorityWeight: 'u64',\n        DelayKind: {\n            _enum: {\n                Finalized: 'Null',\n                Best: 'DelayKindBest'\n            }\n        },\n        DelayKindBest: {\n            medianLastFinalized: 'BlockNumber'\n        },\n        EncodedFinalityProofs: 'Bytes',\n        GrandpaEquivocation: {\n            _enum: {\n                Prevote: 'GrandpaEquivocationValue',\n                Precommit: 'GrandpaEquivocationValue'\n            }\n        },\n        GrandpaEquivocationProof: {\n            setId: 'SetId',\n            equivocation: 'GrandpaEquivocation'\n        },\n        GrandpaEquivocationValue: {\n            roundNumber: 'u64',\n            identity: 'AuthorityId',\n            first: '(GrandpaPrevote, AuthoritySignature)',\n            second: '(GrandpaPrevote, AuthoritySignature)'\n        },\n        GrandpaPrevote: {\n            targetHash: 'Hash',\n            targetNumber: 'BlockNumber'\n        },\n        GrandpaCommit: {\n            targetHash: 'BlockHash',\n            targetNumber: 'BlockNumber',\n            precommits: 'Vec<GrandpaSignedPrecommit>'\n        },\n        GrandpaPrecommit: {\n            targetHash: 'BlockHash',\n            targetNumber: 'BlockNumber'\n        },\n        GrandpaSignedPrecommit: {\n            precommit: 'GrandpaPrecommit',\n            signature: 'AuthoritySignature',\n            id: 'AuthorityId'\n        },\n        GrandpaJustification: {\n            round: 'u64',\n            commit: 'GrandpaCommit',\n            votesAncestries: 'Vec<Header>'\n        },\n        JustificationNotification: 'Bytes',\n        KeyOwnerProof: 'MembershipProof',\n        NextAuthority: '(AuthorityId, AuthorityWeight)',\n        PendingChange: {\n            nextAuthorities: 'AuthorityList',\n            delay: 'BlockNumber',\n            canonHeight: 'BlockNumber',\n            canonHash: 'BlockHash',\n            delayKind: 'DelayKind'\n        },\n        PendingPause: {\n            scheduledAt: 'BlockNumber',\n            delay: 'BlockNumber'\n        },\n        PendingResume: {\n            scheduledAt: 'BlockNumber',\n            delay: 'BlockNumber'\n        },\n        Precommits: {\n            currentWeight: 'u32',\n            missing: 'BTreeSet<AuthorityId>'\n        },\n        Prevotes: {\n            currentWeight: 'u32',\n            missing: 'BTreeSet<AuthorityId>'\n        },\n        ReportedRoundStates: {\n            setId: 'u32',\n            best: 'RoundState',\n            background: 'Vec<RoundState>'\n        },\n        RoundState: {\n            round: 'u32',\n            totalWeight: 'u32',\n            thresholdWeight: 'u32',\n            prevotes: 'Prevotes',\n            precommits: 'Precommits'\n        },\n        SetId: 'u64',\n        StoredPendingChange: {\n            scheduledAt: 'BlockNumber',\n            delay: 'BlockNumber',\n            nextAuthorities: 'AuthorityList'\n        },\n        StoredState: {\n            _enum: {\n                Live: 'Null',\n                PendingPause: 'PendingPause',\n                Paused: 'Null',\n                PendingResume: 'PendingResume'\n            }\n        }\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}