{"ast":null,"code":"import { GL_TYPES } from '../../texture/const.mjs';\n\"use strict\";\nconst infoMap = {\n  uint8x2: GL_TYPES.UNSIGNED_BYTE,\n  uint8x4: GL_TYPES.UNSIGNED_BYTE,\n  sint8x2: GL_TYPES.BYTE,\n  sint8x4: GL_TYPES.BYTE,\n  unorm8x2: GL_TYPES.UNSIGNED_BYTE,\n  unorm8x4: GL_TYPES.UNSIGNED_BYTE,\n  snorm8x2: GL_TYPES.BYTE,\n  snorm8x4: GL_TYPES.BYTE,\n  uint16x2: GL_TYPES.UNSIGNED_SHORT,\n  uint16x4: GL_TYPES.UNSIGNED_SHORT,\n  sint16x2: GL_TYPES.SHORT,\n  sint16x4: GL_TYPES.SHORT,\n  unorm16x2: GL_TYPES.UNSIGNED_SHORT,\n  unorm16x4: GL_TYPES.UNSIGNED_SHORT,\n  snorm16x2: GL_TYPES.SHORT,\n  snorm16x4: GL_TYPES.SHORT,\n  float16x2: GL_TYPES.HALF_FLOAT,\n  float16x4: GL_TYPES.HALF_FLOAT,\n  float32: GL_TYPES.FLOAT,\n  float32x2: GL_TYPES.FLOAT,\n  float32x3: GL_TYPES.FLOAT,\n  float32x4: GL_TYPES.FLOAT,\n  uint32: GL_TYPES.UNSIGNED_INT,\n  uint32x2: GL_TYPES.UNSIGNED_INT,\n  uint32x3: GL_TYPES.UNSIGNED_INT,\n  uint32x4: GL_TYPES.UNSIGNED_INT,\n  sint32: GL_TYPES.INT,\n  sint32x2: GL_TYPES.INT,\n  sint32x3: GL_TYPES.INT,\n  sint32x4: GL_TYPES.INT\n};\nfunction getGlTypeFromFormat(format) {\n  return infoMap[format] ?? infoMap.float32;\n}\nexport { getGlTypeFromFormat };","map":{"version":3,"names":["infoMap","uint8x2","GL_TYPES","UNSIGNED_BYTE","uint8x4","sint8x2","BYTE","sint8x4","unorm8x2","unorm8x4","snorm8x2","snorm8x4","uint16x2","UNSIGNED_SHORT","uint16x4","sint16x2","SHORT","sint16x4","unorm16x2","unorm16x4","snorm16x2","snorm16x4","float16x2","HALF_FLOAT","float16x4","float32","FLOAT","float32x2","float32x3","float32x4","uint32","UNSIGNED_INT","uint32x2","uint32x3","uint32x4","sint32","INT","sint32x2","sint32x3","sint32x4","getGlTypeFromFormat","format"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/renderers/gl/geometry/utils/getGlTypeFromFormat.ts"],"sourcesContent":["import { GL_TYPES } from '../../texture/const';\n\nimport type { VertexFormat } from '../../../shared/geometry/const';\n\nconst infoMap = {\n    uint8x2: GL_TYPES.UNSIGNED_BYTE,\n    uint8x4: GL_TYPES.UNSIGNED_BYTE,\n    sint8x2: GL_TYPES.BYTE,\n    sint8x4: GL_TYPES.BYTE,\n    unorm8x2: GL_TYPES.UNSIGNED_BYTE,\n    unorm8x4: GL_TYPES.UNSIGNED_BYTE,\n    snorm8x2: GL_TYPES.BYTE,\n    snorm8x4: GL_TYPES.BYTE,\n    uint16x2: GL_TYPES.UNSIGNED_SHORT,\n    uint16x4: GL_TYPES.UNSIGNED_SHORT,\n    sint16x2: GL_TYPES.SHORT,\n    sint16x4: GL_TYPES.SHORT,\n    unorm16x2: GL_TYPES.UNSIGNED_SHORT,\n    unorm16x4: GL_TYPES.UNSIGNED_SHORT,\n    snorm16x2: GL_TYPES.SHORT,\n    snorm16x4: GL_TYPES.SHORT,\n    float16x2: GL_TYPES.HALF_FLOAT,\n    float16x4: GL_TYPES.HALF_FLOAT,\n    float32: GL_TYPES.FLOAT,\n    float32x2: GL_TYPES.FLOAT,\n    float32x3: GL_TYPES.FLOAT,\n    float32x4: GL_TYPES.FLOAT,\n    uint32: GL_TYPES.UNSIGNED_INT,\n    uint32x2: GL_TYPES.UNSIGNED_INT,\n    uint32x3: GL_TYPES.UNSIGNED_INT,\n    uint32x4: GL_TYPES.UNSIGNED_INT,\n    sint32: GL_TYPES.INT,\n    sint32x2: GL_TYPES.INT,\n    sint32x3: GL_TYPES.INT,\n    sint32x4: GL_TYPES.INT\n};\n\nexport function getGlTypeFromFormat(format: VertexFormat): number\n{\n    return infoMap[format] ?? infoMap.float32;\n}\n"],"mappings":";;AAIA,MAAMA,OAAU;EACZC,OAAA,EAASC,QAAS,CAAAC,aAAA;EAClBC,OAAA,EAASF,QAAS,CAAAC,aAAA;EAClBE,OAAA,EAASH,QAAS,CAAAI,IAAA;EAClBC,OAAA,EAASL,QAAS,CAAAI,IAAA;EAClBE,QAAA,EAAUN,QAAS,CAAAC,aAAA;EACnBM,QAAA,EAAUP,QAAS,CAAAC,aAAA;EACnBO,QAAA,EAAUR,QAAS,CAAAI,IAAA;EACnBK,QAAA,EAAUT,QAAS,CAAAI,IAAA;EACnBM,QAAA,EAAUV,QAAS,CAAAW,cAAA;EACnBC,QAAA,EAAUZ,QAAS,CAAAW,cAAA;EACnBE,QAAA,EAAUb,QAAS,CAAAc,KAAA;EACnBC,QAAA,EAAUf,QAAS,CAAAc,KAAA;EACnBE,SAAA,EAAWhB,QAAS,CAAAW,cAAA;EACpBM,SAAA,EAAWjB,QAAS,CAAAW,cAAA;EACpBO,SAAA,EAAWlB,QAAS,CAAAc,KAAA;EACpBK,SAAA,EAAWnB,QAAS,CAAAc,KAAA;EACpBM,SAAA,EAAWpB,QAAS,CAAAqB,UAAA;EACpBC,SAAA,EAAWtB,QAAS,CAAAqB,UAAA;EACpBE,OAAA,EAASvB,QAAS,CAAAwB,KAAA;EAClBC,SAAA,EAAWzB,QAAS,CAAAwB,KAAA;EACpBE,SAAA,EAAW1B,QAAS,CAAAwB,KAAA;EACpBG,SAAA,EAAW3B,QAAS,CAAAwB,KAAA;EACpBI,MAAA,EAAQ5B,QAAS,CAAA6B,YAAA;EACjBC,QAAA,EAAU9B,QAAS,CAAA6B,YAAA;EACnBE,QAAA,EAAU/B,QAAS,CAAA6B,YAAA;EACnBG,QAAA,EAAUhC,QAAS,CAAA6B,YAAA;EACnBI,MAAA,EAAQjC,QAAS,CAAAkC,GAAA;EACjBC,QAAA,EAAUnC,QAAS,CAAAkC,GAAA;EACnBE,QAAA,EAAUpC,QAAS,CAAAkC,GAAA;EACnBG,QAAA,EAAUrC,QAAS,CAAAkC;AACvB;AAEO,SAASI,oBAAoBC,MACpC;EACW,OAAAzC,OAAA,CAAQyC,MAAM,KAAKzC,OAAQ,CAAAyB,OAAA;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}