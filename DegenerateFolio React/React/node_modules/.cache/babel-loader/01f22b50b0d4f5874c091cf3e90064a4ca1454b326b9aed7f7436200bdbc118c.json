{"ast":null,"code":"\"use strict\";\n\nconst WGSL_ALIGN_SIZE_DATA = {\n  i32: {\n    align: 4,\n    size: 4\n  },\n  u32: {\n    align: 4,\n    size: 4\n  },\n  f32: {\n    align: 4,\n    size: 4\n  },\n  f16: {\n    align: 2,\n    size: 2\n  },\n  \"vec2<i32>\": {\n    align: 8,\n    size: 8\n  },\n  \"vec2<u32>\": {\n    align: 8,\n    size: 8\n  },\n  \"vec2<f32>\": {\n    align: 8,\n    size: 8\n  },\n  \"vec2<f16>\": {\n    align: 4,\n    size: 4\n  },\n  \"vec3<i32>\": {\n    align: 16,\n    size: 12\n  },\n  \"vec3<u32>\": {\n    align: 16,\n    size: 12\n  },\n  \"vec3<f32>\": {\n    align: 16,\n    size: 12\n  },\n  \"vec3<f16>\": {\n    align: 8,\n    size: 6\n  },\n  \"vec4<i32>\": {\n    align: 16,\n    size: 16\n  },\n  \"vec4<u32>\": {\n    align: 16,\n    size: 16\n  },\n  \"vec4<f32>\": {\n    align: 16,\n    size: 16\n  },\n  \"vec4<f16>\": {\n    align: 8,\n    size: 8\n  },\n  \"mat2x2<f32>\": {\n    align: 8,\n    size: 16\n  },\n  \"mat2x2<f16>\": {\n    align: 4,\n    size: 8\n  },\n  \"mat3x2<f32>\": {\n    align: 8,\n    size: 24\n  },\n  \"mat3x2<f16>\": {\n    align: 4,\n    size: 12\n  },\n  \"mat4x2<f32>\": {\n    align: 8,\n    size: 32\n  },\n  \"mat4x2<f16>\": {\n    align: 4,\n    size: 16\n  },\n  \"mat2x3<f32>\": {\n    align: 16,\n    size: 32\n  },\n  \"mat2x3<f16>\": {\n    align: 8,\n    size: 16\n  },\n  \"mat3x3<f32>\": {\n    align: 16,\n    size: 48\n  },\n  \"mat3x3<f16>\": {\n    align: 8,\n    size: 24\n  },\n  \"mat4x3<f32>\": {\n    align: 16,\n    size: 64\n  },\n  \"mat4x3<f16>\": {\n    align: 8,\n    size: 32\n  },\n  \"mat2x4<f32>\": {\n    align: 16,\n    size: 32\n  },\n  \"mat2x4<f16>\": {\n    align: 8,\n    size: 16\n  },\n  \"mat3x4<f32>\": {\n    align: 16,\n    size: 48\n  },\n  \"mat3x4<f16>\": {\n    align: 8,\n    size: 24\n  },\n  \"mat4x4<f32>\": {\n    align: 16,\n    size: 64\n  },\n  \"mat4x4<f16>\": {\n    align: 8,\n    size: 32\n  }\n};\nfunction createUboElementsWGSL(uniformData) {\n  const uboElements = uniformData.map(data => ({\n    data,\n    offset: 0,\n    size: 0\n  }));\n  let offset = 0;\n  for (let i = 0; i < uboElements.length; i++) {\n    const uboElement = uboElements[i];\n    let size = WGSL_ALIGN_SIZE_DATA[uboElement.data.type].size;\n    const align = WGSL_ALIGN_SIZE_DATA[uboElement.data.type].align;\n    if (!WGSL_ALIGN_SIZE_DATA[uboElement.data.type]) {\n      throw new Error(`[Pixi.js] WebGPU UniformBuffer: Unknown type ${uboElement.data.type}`);\n    }\n    if (uboElement.data.size > 1) {\n      size = Math.max(size, align) * uboElement.data.size;\n    }\n    offset = Math.ceil(offset / align) * align;\n    uboElement.size = size;\n    uboElement.offset = offset;\n    offset += size;\n  }\n  offset = Math.ceil(offset / 16) * 16;\n  return {\n    uboElements,\n    size: offset\n  };\n}\nexport { WGSL_ALIGN_SIZE_DATA, createUboElementsWGSL };","map":{"version":3,"names":["WGSL_ALIGN_SIZE_DATA","i32","align","size","u32","f32","f16","createUboElementsWGSL","uniformData","uboElements","map","data","offset","i","length","uboElement","type","Error","Math","max","ceil"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/renderers/gpu/shader/utils/createUboElementsWGSL.ts"],"sourcesContent":["import type { UboElement, UboLayout, UNIFORM_TYPES, UniformData } from '../../../shared/shader/types';\n\nexport const WGSL_ALIGN_SIZE_DATA: Record<UNIFORM_TYPES | string, {align: number, size: number}> = {\n    i32: { align: 4, size: 4 },\n    u32: { align: 4, size: 4 },\n    f32: { align: 4, size: 4 },\n    f16: { align: 2, size: 2 },\n    'vec2<i32>': { align: 8, size: 8 },\n    'vec2<u32>': { align: 8, size: 8 },\n    'vec2<f32>': { align: 8, size: 8 },\n    'vec2<f16>': { align: 4, size: 4 },\n    'vec3<i32>': { align: 16, size: 12 },\n    'vec3<u32>': { align: 16, size: 12 },\n    'vec3<f32>': { align: 16, size: 12 },\n    'vec3<f16>': { align: 8, size: 6 },\n    'vec4<i32>': { align: 16, size: 16 },\n    'vec4<u32>': { align: 16, size: 16 },\n    'vec4<f32>': { align: 16, size: 16 },\n    'vec4<f16>': { align: 8, size: 8 },\n    'mat2x2<f32>': { align: 8, size: 16 },\n    'mat2x2<f16>': { align: 4, size: 8 },\n    'mat3x2<f32>': { align: 8, size: 24 },\n    'mat3x2<f16>': { align: 4, size: 12 },\n    'mat4x2<f32>': { align: 8, size: 32 },\n    'mat4x2<f16>': { align: 4, size: 16 },\n    'mat2x3<f32>': { align: 16, size: 32 },\n    'mat2x3<f16>': { align: 8, size: 16 },\n    'mat3x3<f32>': { align: 16, size: 48 },\n    'mat3x3<f16>': { align: 8, size: 24 },\n    'mat4x3<f32>': { align: 16, size: 64 },\n    'mat4x3<f16>': { align: 8, size: 32 },\n    'mat2x4<f32>': { align: 16, size: 32 },\n    'mat2x4<f16>': { align: 8, size: 16 },\n    'mat3x4<f32>': { align: 16, size: 48 },\n    'mat3x4<f16>': { align: 8, size: 24 },\n    'mat4x4<f32>': { align: 16, size: 64 },\n    'mat4x4<f16>': { align: 8, size: 32 },\n};\n\nexport function createUboElementsWGSL(uniformData: UniformData[]): UboLayout\n{\n    const uboElements: UboElement[] = uniformData.map((data: UniformData) =>\n        ({\n            data,\n            offset: 0,\n            size: 0,\n        }));\n\n    let offset = 0;\n\n    for (let i = 0; i < uboElements.length; i++)\n    {\n        const uboElement = uboElements[i];\n\n        let size = WGSL_ALIGN_SIZE_DATA[uboElement.data.type].size;\n        const align = WGSL_ALIGN_SIZE_DATA[uboElement.data.type].align;\n\n        if (!WGSL_ALIGN_SIZE_DATA[uboElement.data.type])\n        {\n            throw new Error(`[Pixi.js] WebGPU UniformBuffer: Unknown type ${uboElement.data.type}`);\n        }\n\n        if (uboElement.data.size > 1)\n        {\n            size = Math.max(size, align) * uboElement.data.size;\n        }\n\n        offset = Math.ceil((offset) / align) * align;\n\n        // TODO deal with Arrays\n        uboElement.size = size;\n\n        uboElement.offset = offset;\n\n        offset += size;\n    }\n\n    // must align to 16 bits!\n    offset = Math.ceil(offset / 16) * 16;\n\n    return { uboElements, size: offset };\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}