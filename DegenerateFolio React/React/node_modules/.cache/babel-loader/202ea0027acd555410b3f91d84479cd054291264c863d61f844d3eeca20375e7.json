{"ast":null,"code":"\"use strict\";\n\nfunction generateGPULayout(maxTextures) {\n  const gpuLayout = [];\n  let bindIndex = 0;\n  for (let i = 0; i < maxTextures; i++) {\n    gpuLayout[bindIndex] = {\n      texture: {\n        sampleType: \"float\",\n        viewDimension: \"2d\",\n        multisampled: false\n      },\n      binding: bindIndex,\n      visibility: GPUShaderStage.FRAGMENT\n    };\n    bindIndex++;\n    gpuLayout[bindIndex] = {\n      sampler: {\n        type: \"filtering\"\n      },\n      binding: bindIndex,\n      visibility: GPUShaderStage.FRAGMENT\n    };\n    bindIndex++;\n  }\n  return gpuLayout;\n}\nexport { generateGPULayout };","map":{"version":3,"names":["generateGPULayout","maxTextures","gpuLayout","bindIndex","i","texture","sampleType","viewDimension","multisampled","binding","visibility","GPUShaderStage","FRAGMENT","sampler","type"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/batcher/gpu/generateGPULayout.ts"],"sourcesContent":["export function generateGPULayout(maxTextures: number): GPUBindGroupLayoutEntry[]\n{\n    const gpuLayout: GPUBindGroupLayoutEntry[] = [];\n\n    let bindIndex = 0;\n\n    for (let i = 0; i < maxTextures; i++)\n    {\n        gpuLayout[bindIndex] = {\n            texture: {\n                sampleType: 'float',\n                viewDimension: '2d',\n                multisampled: false,\n            },\n            binding: bindIndex,\n            visibility: GPUShaderStage.FRAGMENT,\n        };\n        bindIndex++;\n\n        gpuLayout[bindIndex] = {\n            sampler: {\n                type: 'filtering',\n            },\n            binding: bindIndex,\n            visibility: GPUShaderStage.FRAGMENT,\n        };\n\n        bindIndex++;\n    }\n\n    return gpuLayout;\n}\n"],"mappings":";;AAAO,SAASA,kBAAkBC,WAClC;EACI,MAAMC,SAAA,GAAuC,EAAC;EAE9C,IAAIC,SAAY;EAEhB,SAASC,CAAI,MAAGA,CAAI,GAAAH,WAAA,EAAaG,CACjC;IACIF,SAAA,CAAUC,SAAS,CAAI;MACnBE,OAAS;QACLC,UAAY;QACZC,aAAe;QACfC,YAAc;MAAA,CAClB;MACAC,OAAS,EAAAN,SAAA;MACTO,UAAA,EAAYC,cAAe,CAAAC;IAAA,CAC/B;IACAT,SAAA;IAEAD,SAAA,CAAUC,SAAS,CAAI;MACnBU,OAAS;QACLC,IAAM;MAAA,CACV;MACAL,OAAS,EAAAN,SAAA;MACTO,UAAA,EAAYC,cAAe,CAAAC;IAAA,CAC/B;IAEAT,SAAA;EAAA;EAGG,OAAAD,SAAA;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}