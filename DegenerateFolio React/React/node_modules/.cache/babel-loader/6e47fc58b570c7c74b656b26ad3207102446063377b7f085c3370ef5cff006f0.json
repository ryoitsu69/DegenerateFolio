{"ast":null,"code":"import { isU8a } from '@polkadot/util';\nimport { sr25519PairFromU8a } from './pair/fromU8a.js';\nimport { sr25519KeypairToU8a } from './pair/toU8a.js';\nexport function createDeriveFn(derive) {\n  return (keypair, chainCode) => {\n    if (!isU8a(chainCode) || chainCode.length !== 32) {\n      throw new Error('Invalid chainCode passed to derive');\n    }\n    return sr25519PairFromU8a(derive(sr25519KeypairToU8a(keypair), chainCode));\n  };\n}","map":{"version":3,"names":["isU8a","sr25519PairFromU8a","sr25519KeypairToU8a","createDeriveFn","derive","keypair","chainCode","length","Error"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/sr25519/derive.js"],"sourcesContent":["import { isU8a } from '@polkadot/util';\nimport { sr25519PairFromU8a } from './pair/fromU8a.js';\nimport { sr25519KeypairToU8a } from './pair/toU8a.js';\nexport function createDeriveFn(derive) {\n    return (keypair, chainCode) => {\n        if (!isU8a(chainCode) || chainCode.length !== 32) {\n            throw new Error('Invalid chainCode passed to derive');\n        }\n        return sr25519PairFromU8a(derive(sr25519KeypairToU8a(keypair), chainCode));\n    };\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SAASC,kBAAkB,QAAQ,mBAAmB;AACtD,SAASC,mBAAmB,QAAQ,iBAAiB;AACrD,OAAO,SAASC,cAAcA,CAACC,MAAM,EAAE;EACnC,OAAO,CAACC,OAAO,EAAEC,SAAS,KAAK;IAC3B,IAAI,CAACN,KAAK,CAACM,SAAS,CAAC,IAAIA,SAAS,CAACC,MAAM,KAAK,EAAE,EAAE;MAC9C,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;IACzD;IACA,OAAOP,kBAAkB,CAACG,MAAM,CAACF,mBAAmB,CAACG,OAAO,CAAC,EAAEC,SAAS,CAAC,CAAC;EAC9E,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}