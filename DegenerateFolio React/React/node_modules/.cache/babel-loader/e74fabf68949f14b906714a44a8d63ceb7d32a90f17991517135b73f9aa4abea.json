{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HttpBatchClient = void 0;\nconst json_rpc_1 = require(\"@cosmjs/json-rpc\");\nconst http_1 = require(\"./http\");\nconst rpcclient_1 = require(\"./rpcclient\");\n// Those values are private and can change any time.\n// Does a user need to know them? I don't think so. You either set\n// a custom value or leave the option field unset.\nconst defaultHttpBatchClientOptions = {\n  dispatchInterval: 20,\n  batchSizeLimit: 20\n};\nclass HttpBatchClient {\n  constructor(endpoint, options = {}) {\n    this.queue = [];\n    this.options = {\n      batchSizeLimit: options.batchSizeLimit ?? defaultHttpBatchClientOptions.batchSizeLimit,\n      dispatchInterval: options.dispatchInterval ?? defaultHttpBatchClientOptions.dispatchInterval\n    };\n    if (typeof endpoint === \"string\") {\n      if (!(0, rpcclient_1.hasProtocol)(endpoint)) {\n        throw new Error(\"Endpoint URL is missing a protocol. Expected 'https://' or 'http://'.\");\n      }\n      this.url = endpoint;\n    } else {\n      this.url = endpoint.url;\n      this.headers = endpoint.headers;\n    }\n    this.timer = setInterval(() => this.tick(), options.dispatchInterval);\n    this.validate();\n  }\n  disconnect() {\n    this.timer && clearInterval(this.timer);\n    this.timer = undefined;\n  }\n  async execute(request) {\n    return new Promise((resolve, reject) => {\n      this.queue.push({\n        request,\n        resolve,\n        reject\n      });\n      if (this.queue.length >= this.options.batchSizeLimit) {\n        // this train is full, let's go\n        this.tick();\n      }\n    });\n  }\n  validate() {\n    if (!this.options.batchSizeLimit || !Number.isSafeInteger(this.options.batchSizeLimit) || this.options.batchSizeLimit < 1) {\n      throw new Error(\"batchSizeLimit must be a safe integer >= 1\");\n    }\n  }\n  /**\n   * This is called in an interval where promise rejections cannot be handled.\n   * So this is not async and HTTP errors need to be handled by the queued promises.\n   */\n  tick() {\n    // Avoid race conditions\n    const batch = this.queue.splice(0, this.options.batchSizeLimit);\n    if (!batch.length) return;\n    const requests = batch.map(s => s.request);\n    const requestIds = requests.map(request => request.id);\n    (0, http_1.http)(\"POST\", this.url, this.headers, requests).then(raw => {\n      // Requests with a single entry return as an object\n      const arr = Array.isArray(raw) ? raw : [raw];\n      arr.forEach(el => {\n        const req = batch.find(s => s.request.id === el.id);\n        if (!req) return;\n        const {\n          reject,\n          resolve\n        } = req;\n        const response = (0, json_rpc_1.parseJsonRpcResponse)(el);\n        if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {\n          reject(new Error(JSON.stringify(response.error)));\n        } else {\n          resolve(response);\n        }\n      });\n    }, error => {\n      for (const requestId of requestIds) {\n        const req = batch.find(s => s.request.id === requestId);\n        if (!req) return;\n        req.reject(error);\n      }\n    });\n  }\n}\nexports.HttpBatchClient = HttpBatchClient;","map":{"version":3,"names":["json_rpc_1","require","http_1","rpcclient_1","defaultHttpBatchClientOptions","dispatchInterval","batchSizeLimit","HttpBatchClient","constructor","endpoint","options","queue","hasProtocol","Error","url","headers","timer","setInterval","tick","validate","disconnect","clearInterval","undefined","execute","request","Promise","resolve","reject","push","length","Number","isSafeInteger","batch","splice","requests","map","s","requestIds","id","http","then","raw","arr","Array","isArray","forEach","el","req","find","response","parseJsonRpcResponse","isJsonRpcErrorResponse","JSON","stringify","error","requestId","exports"],"sources":["../../src/rpcclients/httpbatchclient.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}