{"ast":null,"code":"\"use strict\";\n\nlet supportedGPUCompressedTextureFormats;\nasync function getSupportedGPUCompressedTextureFormats() {\n  if (supportedGPUCompressedTextureFormats) return supportedGPUCompressedTextureFormats;\n  const adapter = await navigator.gpu.requestAdapter();\n  supportedGPUCompressedTextureFormats = [...(adapter.features.has(\"texture-compression-bc\") ? [\n  // BC compressed formats usable if \"texture-compression-bc\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  \"bc1-rgba-unorm\", \"bc1-rgba-unorm-srgb\", \"bc2-rgba-unorm\", \"bc2-rgba-unorm-srgb\", \"bc3-rgba-unorm\", \"bc3-rgba-unorm-srgb\", \"bc4-r-unorm\", \"bc4-r-snorm\", \"bc5-rg-unorm\", \"bc5-rg-snorm\", \"bc6h-rgb-ufloat\", \"bc6h-rgb-float\", \"bc7-rgba-unorm\", \"bc7-rgba-unorm-srgb\"] : []), ...(adapter.features.has(\"texture-compression-etc2\") ? [\n  // ETC2 compressed formats usable if \"texture-compression-etc2\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  \"etc2-rgb8unorm\", \"etc2-rgb8unorm-srgb\", \"etc2-rgb8a1unorm\", \"etc2-rgb8a1unorm-srgb\", \"etc2-rgba8unorm\", \"etc2-rgba8unorm-srgb\", \"eac-r11unorm\", \"eac-r11snorm\", \"eac-rg11unorm\", \"eac-rg11snorm\"] : []), ...(adapter.features.has(\"texture-compression-astc\") ? [\n  // ASTC compressed formats usable if \"texture-compression-astc\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  \"astc-4x4-unorm\", \"astc-4x4-unorm-srgb\", \"astc-5x4-unorm\", \"astc-5x4-unorm-srgb\", \"astc-5x5-unorm\", \"astc-5x5-unorm-srgb\", \"astc-6x5-unorm\", \"astc-6x5-unorm-srgb\", \"astc-6x6-unorm\", \"astc-6x6-unorm-srgb\", \"astc-8x5-unorm\", \"astc-8x5-unorm-srgb\", \"astc-8x6-unorm\", \"astc-8x6-unorm-srgb\", \"astc-8x8-unorm\", \"astc-8x8-unorm-srgb\", \"astc-10x5-unorm\", \"astc-10x5-unorm-srgb\", \"astc-10x6-unorm\", \"astc-10x6-unorm-srgb\", \"astc-10x8-unorm\", \"astc-10x8-unorm-srgb\", \"astc-10x10-unorm\", \"astc-10x10-unorm-srgb\", \"astc-12x10-unorm\", \"astc-12x10-unorm-srgb\", \"astc-12x12-unorm\", \"astc-12x12-unorm-srgb\"] : [])];\n  return supportedGPUCompressedTextureFormats;\n}\nexport { getSupportedGPUCompressedTextureFormats };","map":{"version":3,"names":["supportedGPUCompressedTextureFormats","getSupportedGPUCompressedTextureFormats","adapter","navigator","gpu","requestAdapter","features","has"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/renderers/gpu/texture/utils/getSupportedGPUCompressedTextureFormats.ts"],"sourcesContent":["import type { TEXTURE_FORMATS } from '../../../shared/texture/const';\n\nlet supportedGPUCompressedTextureFormats: TEXTURE_FORMATS[];\n\nexport async function getSupportedGPUCompressedTextureFormats(): Promise<TEXTURE_FORMATS[]>\n{\n    if (supportedGPUCompressedTextureFormats) return supportedGPUCompressedTextureFormats;\n\n    const adapter = await navigator.gpu.requestAdapter();\n\n    supportedGPUCompressedTextureFormats = [\n        ...adapter.features.has('texture-compression-bc') ? [\n            // BC compressed formats usable if \"texture-compression-bc\" is both\n            // supported by the device/user agent and enabled in requestDevice.\n            'bc1-rgba-unorm',\n            'bc1-rgba-unorm-srgb',\n            'bc2-rgba-unorm',\n            'bc2-rgba-unorm-srgb',\n            'bc3-rgba-unorm',\n            'bc3-rgba-unorm-srgb',\n            'bc4-r-unorm',\n            'bc4-r-snorm',\n            'bc5-rg-unorm',\n            'bc5-rg-snorm',\n            'bc6h-rgb-ufloat',\n            'bc6h-rgb-float',\n            'bc7-rgba-unorm',\n            'bc7-rgba-unorm-srgb',\n        ] : [],\n        ...adapter.features.has('texture-compression-etc2') ? [\n            // ETC2 compressed formats usable if \"texture-compression-etc2\" is both\n            // supported by the device/user agent and enabled in requestDevice.\n            'etc2-rgb8unorm',\n            'etc2-rgb8unorm-srgb',\n            'etc2-rgb8a1unorm',\n            'etc2-rgb8a1unorm-srgb',\n            'etc2-rgba8unorm',\n            'etc2-rgba8unorm-srgb',\n            'eac-r11unorm',\n            'eac-r11snorm',\n            'eac-rg11unorm',\n            'eac-rg11snorm',\n        ] : [],\n        ...adapter.features.has('texture-compression-astc') ? [\n            // ASTC compressed formats usable if \"texture-compression-astc\" is both\n            // supported by the device/user agent and enabled in requestDevice.\n            'astc-4x4-unorm',\n            'astc-4x4-unorm-srgb',\n            'astc-5x4-unorm',\n            'astc-5x4-unorm-srgb',\n            'astc-5x5-unorm',\n            'astc-5x5-unorm-srgb',\n            'astc-6x5-unorm',\n            'astc-6x5-unorm-srgb',\n            'astc-6x6-unorm',\n            'astc-6x6-unorm-srgb',\n            'astc-8x5-unorm',\n            'astc-8x5-unorm-srgb',\n            'astc-8x6-unorm',\n            'astc-8x6-unorm-srgb',\n            'astc-8x8-unorm',\n            'astc-8x8-unorm-srgb',\n            'astc-10x5-unorm',\n            'astc-10x5-unorm-srgb',\n            'astc-10x6-unorm',\n            'astc-10x6-unorm-srgb',\n            'astc-10x8-unorm',\n            'astc-10x8-unorm-srgb',\n            'astc-10x10-unorm',\n            'astc-10x10-unorm-srgb',\n            'astc-12x10-unorm',\n            'astc-12x10-unorm-srgb',\n            'astc-12x12-unorm',\n            'astc-12x12-unorm-srgb',\n        ] : [],\n    ] as TEXTURE_FORMATS[];\n\n    return supportedGPUCompressedTextureFormats;\n}\n"],"mappings":";;AAEA,IAAIA,oCAAA;AAEJ,eAAsBC,uCACtBA,CAAA;EACQ,IAAAD,oCAAA,EAA6C,OAAAA,oCAAA;EAEjD,MAAME,OAAU,SAAMC,SAAU,CAAAC,GAAA,CAAIC,cAAe;EAEZL,oCAAA,IACnC,IAAGE,OAAA,CAAQI,QAAS,CAAAC,GAAA,CAAI,wBAAwB,CAAI;EAAA;EAAA;EAGhD,kBACA,uBACA,kBACA,uBACA,kBACA,uBACA,eACA,eACA,gBACA,gBACA,mBACA,kBACA,kBACA,yBACA,EAAC,GACL,IAAGL,OAAA,CAAQI,QAAS,CAAAC,GAAA,CAAI,0BAA0B,CAAI;EAAA;EAAA;EAGlD,kBACA,uBACA,oBACA,yBACA,mBACA,wBACA,gBACA,gBACA,iBACA,mBACA,EAAC,GACL,IAAGL,OAAA,CAAQI,QAAS,CAAAC,GAAA,CAAI,0BAA0B,CAAI;EAAA;EAAA;EAGlD,kBACA,uBACA,kBACA,uBACA,kBACA,uBACA,kBACA,uBACA,kBACA,uBACA,kBACA,uBACA,kBACA,uBACA,kBACA,uBACA,mBACA,wBACA,mBACA,wBACA,mBACA,wBACA,oBACA,yBACA,oBACA,yBACA,oBACA,2BACA,EAAC,EACT;EAEO,OAAAP,oCAAA;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}