{"ast":null,"code":"const GRANDPA_V2_V3 = {\n  generate_key_ownership_proof: {\n    description: 'Generates a proof of key ownership for the given authority in the given set.',\n    params: [{\n      name: 'setId',\n      type: 'SetId'\n    }, {\n      name: 'authorityId',\n      type: 'AuthorityId'\n    }],\n    type: 'Option<OpaqueKeyOwnershipProof>'\n  },\n  grandpa_authorities: {\n    description: 'Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.',\n    params: [],\n    type: 'AuthorityList'\n  },\n  submit_report_equivocation_unsigned_extrinsic: {\n    description: 'Submits an unsigned extrinsic to report an equivocation.',\n    params: [{\n      name: 'equivocationProof',\n      type: 'GrandpaEquivocationProof'\n    }, {\n      name: 'keyOwnerProof',\n      type: 'OpaqueKeyOwnershipProof'\n    }],\n    type: 'Option<Null>'\n  }\n};\nexport const runtime = {\n  GrandpaApi: [{\n    methods: {\n      current_set_id: {\n        description: 'Get current GRANDPA authority set id.',\n        params: [],\n        type: 'SetId'\n      },\n      ...GRANDPA_V2_V3\n    },\n    version: 3\n  }, {\n    methods: GRANDPA_V2_V3,\n    version: 2\n  }]\n};","map":{"version":3,"names":["GRANDPA_V2_V3","generate_key_ownership_proof","description","params","name","type","grandpa_authorities","submit_report_equivocation_unsigned_extrinsic","runtime","GrandpaApi","methods","current_set_id","version"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/interfaces/grandpa/runtime.js"],"sourcesContent":["const GRANDPA_V2_V3 = {\n    generate_key_ownership_proof: {\n        description: 'Generates a proof of key ownership for the given authority in the given set.',\n        params: [\n            {\n                name: 'setId',\n                type: 'SetId'\n            },\n            {\n                name: 'authorityId',\n                type: 'AuthorityId'\n            }\n        ],\n        type: 'Option<OpaqueKeyOwnershipProof>'\n    },\n    grandpa_authorities: {\n        description: 'Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.',\n        params: [],\n        type: 'AuthorityList'\n    },\n    submit_report_equivocation_unsigned_extrinsic: {\n        description: 'Submits an unsigned extrinsic to report an equivocation.',\n        params: [\n            {\n                name: 'equivocationProof',\n                type: 'GrandpaEquivocationProof'\n            },\n            {\n                name: 'keyOwnerProof',\n                type: 'OpaqueKeyOwnershipProof'\n            }\n        ],\n        type: 'Option<Null>'\n    }\n};\nexport const runtime = {\n    GrandpaApi: [\n        {\n            methods: {\n                current_set_id: {\n                    description: 'Get current GRANDPA authority set id.',\n                    params: [],\n                    type: 'SetId'\n                },\n                ...GRANDPA_V2_V3\n            },\n            version: 3\n        },\n        {\n            methods: GRANDPA_V2_V3,\n            version: 2\n        }\n    ]\n};\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG;EAClBC,4BAA4B,EAAE;IAC1BC,WAAW,EAAE,8EAA8E;IAC3FC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE;IACV,CAAC,EACD;MACID,IAAI,EAAE,aAAa;MACnBC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDC,mBAAmB,EAAE;IACjBJ,WAAW,EAAE,uJAAuJ;IACpKC,MAAM,EAAE,EAAE;IACVE,IAAI,EAAE;EACV,CAAC;EACDE,6CAA6C,EAAE;IAC3CL,WAAW,EAAE,0DAA0D;IACvEC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,mBAAmB;MACzBC,IAAI,EAAE;IACV,CAAC,EACD;MACID,IAAI,EAAE,eAAe;MACrBC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV;AACJ,CAAC;AACD,OAAO,MAAMG,OAAO,GAAG;EACnBC,UAAU,EAAE,CACR;IACIC,OAAO,EAAE;MACLC,cAAc,EAAE;QACZT,WAAW,EAAE,uCAAuC;QACpDC,MAAM,EAAE,EAAE;QACVE,IAAI,EAAE;MACV,CAAC;MACD,GAAGL;IACP,CAAC;IACDY,OAAO,EAAE;EACb,CAAC,EACD;IACIF,OAAO,EAAEV,aAAa;IACtBY,OAAO,EAAE;EACb,CAAC;AAET,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}