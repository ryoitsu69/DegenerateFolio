{"ast":null,"code":"import { getAttributeInfoFromFormat } from '../../../shared/geometry/utils/getAttributeInfoFromFormat.mjs';\nimport { mapGlToVertexFormat } from './mapType.mjs';\n\"use strict\";\nfunction extractAttributesFromGlProgram(program, gl, sortAttributes = false) {\n  const attributes = {};\n  const totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < totalAttributes; i++) {\n    const attribData = gl.getActiveAttrib(program, i);\n    if (attribData.name.startsWith(\"gl_\")) {\n      continue;\n    }\n    const format = mapGlToVertexFormat(gl, attribData.type);\n    attributes[attribData.name] = {\n      location: 0,\n      // set further down..\n      format,\n      stride: getAttributeInfoFromFormat(format).stride,\n      offset: 0,\n      instance: false,\n      start: 0\n    };\n  }\n  const keys = Object.keys(attributes);\n  if (sortAttributes) {\n    keys.sort((a, b) => a > b ? 1 : -1);\n    for (let i = 0; i < keys.length; i++) {\n      attributes[keys[i]].location = i;\n      gl.bindAttribLocation(program, i, keys[i]);\n    }\n    gl.linkProgram(program);\n  } else {\n    for (let i = 0; i < keys.length; i++) {\n      attributes[keys[i]].location = gl.getAttribLocation(program, keys[i]);\n    }\n  }\n  return attributes;\n}\nexport { extractAttributesFromGlProgram };","map":{"version":3,"names":["extractAttributesFromGlProgram","program","gl","sortAttributes","attributes","totalAttributes","getProgramParameter","ACTIVE_ATTRIBUTES","i","attribData","getActiveAttrib","name","startsWith","format","mapGlToVertexFormat","type","location","stride","getAttributeInfoFromFormat","offset","instance","start","keys","Object","sort","a","b","length","bindAttribLocation","linkProgram","getAttribLocation"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/renderers/gl/shader/program/extractAttributesFromGlProgram.ts"],"sourcesContent":["import { getAttributeInfoFromFormat } from '../../../shared/geometry/utils/getAttributeInfoFromFormat';\nimport { mapGlToVertexFormat } from './mapType';\n\nimport type { Attribute } from '../../../shared/geometry/Geometry';\n\nexport type ExtractedAttributeData = Omit<Attribute, 'buffer'>;\n\n/**\n * returns the attribute data from the program\n * @private\n * @param {WebGLProgram} [program] - the WebGL program\n * @param {WebGLRenderingContext} [gl] - the WebGL context\n * @returns {object} the attribute data for this program\n */\n\nexport function extractAttributesFromGlProgram(\n    program: WebGLProgram,\n    gl: WebGLRenderingContextBase,\n    sortAttributes = false\n): Record<string, ExtractedAttributeData>\n{\n    const attributes: {[key: string]: ExtractedAttributeData} = {};\n\n    const totalAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    for (let i = 0; i < totalAttributes; i++)\n    {\n        const attribData = gl.getActiveAttrib(program, i);\n\n        // ignore the default ones!\n        if (attribData.name.startsWith('gl_'))\n        {\n            continue;\n        }\n\n        const format = mapGlToVertexFormat(gl, attribData.type);\n\n        attributes[attribData.name] = {\n            location: 0, // set further down..\n            format,\n            stride: getAttributeInfoFromFormat(format).stride,\n            offset: 0,\n            instance: false,\n            start: 0,\n        };\n    }\n\n    const keys = Object.keys(attributes);\n\n    if (sortAttributes)\n    {\n        keys.sort((a, b) => (a > b) ? 1 : -1); // eslint-disable-line no-confusing-arrow\n\n        for (let i = 0; i < keys.length; i++)\n        {\n            attributes[keys[i]].location = i;\n\n            gl.bindAttribLocation(program, i, keys[i]);\n        }\n\n        gl.linkProgram(program);\n    }\n    else\n    {\n        for (let i = 0; i < keys.length; i++)\n        {\n            attributes[keys[i]].location = gl.getAttribLocation(program, keys[i]);\n        }\n    }\n\n    return attributes;\n}\n"],"mappings":";;;AAeO,SAASA,8BACZA,CAAAC,OAAA,EACAC,EACA,EAAAC,cAAA,GAAiB,KAErB;EACI,MAAMC,UAAA,GAAsD,EAAC;EAE7D,MAAMC,eAAkB,GAAAH,EAAA,CAAGI,mBAAoB,CAAAL,OAAA,EAASC,EAAA,CAAGK,iBAAiB;EAE5E,SAASC,CAAI,MAAGA,CAAI,GAAAH,eAAA,EAAiBG,CACrC;IACI,MAAMC,UAAa,GAAAP,EAAA,CAAGQ,eAAgB,CAAAT,OAAA,EAASO,CAAC;IAGhD,IAAIC,UAAW,CAAAE,IAAA,CAAKC,UAAW,MAAK,CACpC;MACI;IAAA;IAGJ,MAAMC,MAAS,GAAAC,mBAAA,CAAoBZ,EAAI,EAAAO,UAAA,CAAWM,IAAI;IAE3CX,UAAA,CAAAK,UAAA,CAAWE,IAAI,CAAI;MAC1BK,QAAU;MAAA;MACVH,MAAA;MACAI,MAAA,EAAQC,0BAA2B,CAAAL,MAAM,CAAE,CAAAI,MAAA;MAC3CE,MAAQ;MACRC,QAAU;MACVC,KAAO;IAAA,CACX;EAAA;EAGE,MAAAC,IAAA,GAAOC,MAAO,CAAAD,IAAA,CAAKlB,UAAU;EAEnC,IAAID,cACJ;IACImB,IAAA,CAAKE,IAAA,CAAK,CAACC,CAAA,EAAGC,CAAA,KAAOD,CAAI,GAAAC,CAAA,GAAK,IAAI,CAAE;IAEpC,SAASlB,CAAI,MAAGA,CAAI,GAAAc,IAAA,CAAKK,MAAA,EAAQnB,CACjC;MACIJ,UAAA,CAAWkB,IAAK,CAAAd,CAAC,CAAC,EAAEQ,QAAW,GAAAR,CAAA;MAE/BN,EAAA,CAAG0B,kBAAmB,CAAA3B,OAAA,EAASO,CAAG,EAAAc,IAAA,CAAKd,CAAC,CAAC;IAAA;IAG7CN,EAAA,CAAG2B,WAAA,CAAY5B,OAAO;EAAA,CAG1B;IACI,SAASO,CAAI,MAAGA,CAAI,GAAAc,IAAA,CAAKK,MAAA,EAAQnB,CACjC;MACeJ,UAAA,CAAAkB,IAAA,CAAKd,CAAC,CAAC,CAAE,CAAAQ,QAAA,GAAWd,EAAA,CAAG4B,iBAAkB,CAAA7B,OAAA,EAASqB,IAAK,CAAAd,CAAC,CAAC;IAAA;EACxE;EAGG,OAAAJ,UAAA;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}