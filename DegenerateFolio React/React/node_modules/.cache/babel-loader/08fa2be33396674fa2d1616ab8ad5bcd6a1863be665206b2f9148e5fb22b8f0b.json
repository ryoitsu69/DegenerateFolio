{"ast":null,"code":"import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n  rpc,\n  runtime,\n  types: {\n    AllowedSlots: {\n      _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']\n    },\n    BabeAuthorityWeight: 'u64',\n    BabeEpochConfiguration: {\n      c: '(u64, u64)',\n      allowedSlots: 'AllowedSlots'\n    },\n    BabeBlockWeight: 'u32',\n    BabeEquivocationProof: {\n      offender: 'AuthorityId',\n      slotNumber: 'SlotNumber',\n      firstHeader: 'Header',\n      secondHeader: 'Header'\n    },\n    BabeGenesisConfiguration: {\n      slotDuration: 'u64',\n      epochLength: 'u64',\n      c: '(u64, u64)',\n      genesisAuthorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',\n      randomness: 'Randomness',\n      allowedSlots: 'AllowedSlots'\n    },\n    BabeGenesisConfigurationV1: {\n      slotDuration: 'u64',\n      epochLength: 'u64',\n      c: '(u64, u64)',\n      genesisAuthorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',\n      randomness: 'Randomness',\n      secondarySlots: 'bool'\n    },\n    BabeWeight: 'u64',\n    MaybeRandomness: 'Option<Randomness>',\n    MaybeVrf: 'Option<VrfData>',\n    Epoch: {\n      epochIndex: 'u64',\n      startSlot: 'Slot',\n      duration: 'u64',\n      authorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',\n      randomness: 'Hash',\n      // [u8; VRF_OUTPUT_LENGTH],\n      config: 'BabeEpochConfiguration'\n    },\n    EpochAuthorship: {\n      primary: 'Vec<u64>',\n      secondary: 'Vec<u64>',\n      secondary_vrf: 'Vec<u64>'\n    },\n    NextConfigDescriptor: {\n      _enum: {\n        V0: 'Null',\n        V1: 'NextConfigDescriptorV1'\n      }\n    },\n    NextConfigDescriptorV1: {\n      c: '(u64, u64)',\n      allowedSlots: 'AllowedSlots'\n    },\n    OpaqueKeyOwnershipProof: 'Bytes',\n    Randomness: 'Hash',\n    // [u8; RANDOMNESS_LENGTH],\n    RawBabePreDigest: {\n      _enum: {\n        Phantom: 'Null',\n        // index starts at 1... empty slot at 0\n        Primary: 'RawBabePreDigestPrimary',\n        SecondaryPlain: 'RawBabePreDigestSecondaryPlain',\n        SecondaryVRF: 'RawBabePreDigestSecondaryVRF'\n      }\n    },\n    RawBabePreDigestPrimary: {\n      authorityIndex: 'u32',\n      // AuthorityIndex (also in aura)\n      slotNumber: 'SlotNumber',\n      vrfOutput: 'VrfOutput',\n      vrfProof: 'VrfProof'\n    },\n    RawBabePreDigestSecondaryPlain: {\n      authorityIndex: 'u32',\n      // AuthorityIndex (also in aura)\n      slotNumber: 'SlotNumber'\n    },\n    RawBabePreDigestSecondaryVRF: {\n      authorityIndex: 'u32',\n      slotNumber: 'SlotNumber',\n      vrfOutput: 'VrfOutput',\n      vrfProof: 'VrfProof'\n    },\n    RawBabePreDigestTo159: {\n      _enum: {\n        Primary: 'RawBabePreDigestPrimaryTo159',\n        Secondary: 'RawBabePreDigestSecondaryTo159'\n      }\n    },\n    RawBabePreDigestPrimaryTo159: {\n      authorityIndex: 'u32',\n      slotNumber: 'SlotNumber',\n      weight: 'BabeBlockWeight',\n      vrfOutput: 'VrfOutput',\n      vrfProof: 'VrfProof'\n    },\n    RawBabePreDigestSecondaryTo159: {\n      authorityIndex: 'u32',\n      slotNumber: 'SlotNumber',\n      weight: 'BabeBlockWeight'\n    },\n    // a cross old/new compatible version of the digest, that is _only_ useful\n    // for partial parsing and extraction of the author. This assumes that all\n    // entries has the authorityIndex in the first position - and that it is all\n    // we are interested in\n    RawBabePreDigestCompat: {\n      _enum: {\n        Zero: 'u32',\n        One: 'u32',\n        Two: 'u32',\n        Three: 'u32'\n      }\n    },\n    SlotNumber: 'u64',\n    VrfData: '[u8; 32]',\n    VrfOutput: '[u8; 32]',\n    VrfProof: '[u8; 64]'\n  }\n};","map":{"version":3,"names":["rpc","runtime","types","AllowedSlots","_enum","BabeAuthorityWeight","BabeEpochConfiguration","c","allowedSlots","BabeBlockWeight","BabeEquivocationProof","offender","slotNumber","firstHeader","secondHeader","BabeGenesisConfiguration","slotDuration","epochLength","genesisAuthorities","randomness","BabeGenesisConfigurationV1","secondarySlots","BabeWeight","MaybeRandomness","MaybeVrf","Epoch","epochIndex","startSlot","duration","authorities","config","EpochAuthorship","primary","secondary","secondary_vrf","NextConfigDescriptor","V0","V1","NextConfigDescriptorV1","OpaqueKeyOwnershipProof","Randomness","RawBabePreDigest","Phantom","Primary","SecondaryPlain","SecondaryVRF","RawBabePreDigestPrimary","authorityIndex","vrfOutput","vrfProof","RawBabePreDigestSecondaryPlain","RawBabePreDigestSecondaryVRF","RawBabePreDigestTo159","Secondary","RawBabePreDigestPrimaryTo159","weight","RawBabePreDigestSecondaryTo159","RawBabePreDigestCompat","Zero","One","Two","Three","SlotNumber","VrfData","VrfOutput","VrfProof"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/interfaces/babe/definitions.js"],"sourcesContent":["import { rpc } from './rpc.js';\nimport { runtime } from './runtime.js';\nexport default {\n    rpc,\n    runtime,\n    types: {\n        AllowedSlots: {\n            _enum: ['PrimarySlots', 'PrimaryAndSecondaryPlainSlots', 'PrimaryAndSecondaryVRFSlots']\n        },\n        BabeAuthorityWeight: 'u64',\n        BabeEpochConfiguration: {\n            c: '(u64, u64)',\n            allowedSlots: 'AllowedSlots'\n        },\n        BabeBlockWeight: 'u32',\n        BabeEquivocationProof: {\n            offender: 'AuthorityId',\n            slotNumber: 'SlotNumber',\n            firstHeader: 'Header',\n            secondHeader: 'Header'\n        },\n        BabeGenesisConfiguration: {\n            slotDuration: 'u64',\n            epochLength: 'u64',\n            c: '(u64, u64)',\n            genesisAuthorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',\n            randomness: 'Randomness',\n            allowedSlots: 'AllowedSlots'\n        },\n        BabeGenesisConfigurationV1: {\n            slotDuration: 'u64',\n            epochLength: 'u64',\n            c: '(u64, u64)',\n            genesisAuthorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',\n            randomness: 'Randomness',\n            secondarySlots: 'bool'\n        },\n        BabeWeight: 'u64',\n        MaybeRandomness: 'Option<Randomness>',\n        MaybeVrf: 'Option<VrfData>',\n        Epoch: {\n            epochIndex: 'u64',\n            startSlot: 'Slot',\n            duration: 'u64',\n            authorities: 'Vec<(AuthorityId, BabeAuthorityWeight)>',\n            randomness: 'Hash', // [u8; VRF_OUTPUT_LENGTH],\n            config: 'BabeEpochConfiguration'\n        },\n        EpochAuthorship: {\n            primary: 'Vec<u64>',\n            secondary: 'Vec<u64>',\n            secondary_vrf: 'Vec<u64>'\n        },\n        NextConfigDescriptor: {\n            _enum: {\n                V0: 'Null',\n                V1: 'NextConfigDescriptorV1'\n            }\n        },\n        NextConfigDescriptorV1: {\n            c: '(u64, u64)',\n            allowedSlots: 'AllowedSlots'\n        },\n        OpaqueKeyOwnershipProof: 'Bytes',\n        Randomness: 'Hash', // [u8; RANDOMNESS_LENGTH],\n        RawBabePreDigest: {\n            _enum: {\n                Phantom: 'Null', // index starts at 1... empty slot at 0\n                Primary: 'RawBabePreDigestPrimary',\n                SecondaryPlain: 'RawBabePreDigestSecondaryPlain',\n                SecondaryVRF: 'RawBabePreDigestSecondaryVRF'\n            }\n        },\n        RawBabePreDigestPrimary: {\n            authorityIndex: 'u32', // AuthorityIndex (also in aura)\n            slotNumber: 'SlotNumber',\n            vrfOutput: 'VrfOutput',\n            vrfProof: 'VrfProof'\n        },\n        RawBabePreDigestSecondaryPlain: {\n            authorityIndex: 'u32', // AuthorityIndex (also in aura)\n            slotNumber: 'SlotNumber'\n        },\n        RawBabePreDigestSecondaryVRF: {\n            authorityIndex: 'u32',\n            slotNumber: 'SlotNumber',\n            vrfOutput: 'VrfOutput',\n            vrfProof: 'VrfProof'\n        },\n        RawBabePreDigestTo159: {\n            _enum: {\n                Primary: 'RawBabePreDigestPrimaryTo159',\n                Secondary: 'RawBabePreDigestSecondaryTo159'\n            }\n        },\n        RawBabePreDigestPrimaryTo159: {\n            authorityIndex: 'u32',\n            slotNumber: 'SlotNumber',\n            weight: 'BabeBlockWeight',\n            vrfOutput: 'VrfOutput',\n            vrfProof: 'VrfProof'\n        },\n        RawBabePreDigestSecondaryTo159: {\n            authorityIndex: 'u32',\n            slotNumber: 'SlotNumber',\n            weight: 'BabeBlockWeight'\n        },\n        // a cross old/new compatible version of the digest, that is _only_ useful\n        // for partial parsing and extraction of the author. This assumes that all\n        // entries has the authorityIndex in the first position - and that it is all\n        // we are interested in\n        RawBabePreDigestCompat: {\n            _enum: {\n                Zero: 'u32',\n                One: 'u32',\n                Two: 'u32',\n                Three: 'u32'\n            }\n        },\n        SlotNumber: 'u64',\n        VrfData: '[u8; 32]',\n        VrfOutput: '[u8; 32]',\n        VrfProof: '[u8; 64]'\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}