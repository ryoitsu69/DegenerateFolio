{"ast":null,"code":"import { DOMAdapter } from '../../../../../environment/adapter.mjs';\n\"use strict\";\nlet context;\nfunction getTestContext() {\n  if (!context || context?.isContextLost()) {\n    const canvas = DOMAdapter.get().createCanvas();\n    context = canvas.getContext(\"webgl\", {});\n  }\n  return context;\n}\nexport { getTestContext };","map":{"version":3,"names":["context","getTestContext","isContextLost","canvas","DOMAdapter","get","createCanvas","getContext"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/renderers/gl/shader/program/getTestContext.ts"],"sourcesContent":["import { DOMAdapter } from '../../../../../environment/adapter';\n\nimport type { GlRenderingContext } from '../../context/GlRenderingContext';\n\nlet context: GlRenderingContext;\n\n/**\n * returns a little WebGL context to use for program inspection.\n * @static\n * @private\n * @returns {WebGLRenderingContext} a gl context to test with\n */\nexport function getTestContext(): GlRenderingContext\n{\n    if (!context || context?.isContextLost())\n    {\n        const canvas = DOMAdapter.get().createCanvas();\n\n        context = canvas.getContext('webgl', {}) as GlRenderingContext;\n    }\n\n    return context;\n}\n"],"mappings":";;AAIA,IAAIA,OAAA;AAQG,SAASC,cAChBA,CAAA;EACI,IAAI,CAACD,OAAA,IAAWA,OAAS,EAAAE,aAAA,EACzB;IACI,MAAMC,MAAS,GAAAC,UAAA,CAAWC,GAAI,GAAEC,YAAa;IAE7CN,OAAA,GAAUG,MAAO,CAAAI,UAAA,CAAW,OAAS,IAAE;EAAA;EAGpC,OAAAP,OAAA;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}