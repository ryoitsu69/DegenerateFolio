{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Web3Subscription = void 0;\n// eslint-disable-next-line max-classes-per-file\nconst web3_types_1 = require(\"web3-types\");\nconst web3_utils_1 = require(\"web3-utils\");\nconst web3_errors_1 = require(\"web3-errors\");\n// eslint-disable-next-line import/no-cycle\nconst web3_subscription_manager_js_1 = require(\"./web3_subscription_manager.js\");\nconst web3_event_emitter_js_1 = require(\"./web3_event_emitter.js\");\nclass Web3Subscription extends web3_event_emitter_js_1.Web3EventEmitter {\n  constructor(args, options) {\n    var _a;\n    super();\n    this.args = args;\n    const {\n      requestManager\n    } = options;\n    const {\n      subscriptionManager\n    } = options;\n    if (requestManager && subscriptionManager) {\n      throw new web3_errors_1.SubscriptionError('Only requestManager or subscriptionManager should be provided at Subscription constructor');\n    }\n    if (!requestManager && !subscriptionManager) {\n      throw new web3_errors_1.SubscriptionError('Either requestManager or subscriptionManager should be provided at Subscription constructor');\n    }\n    if (requestManager) {\n      // eslint-disable-next-line deprecation/deprecation\n      this._subscriptionManager = new web3_subscription_manager_js_1.Web3SubscriptionManager(requestManager, {}, true);\n    } else {\n      this._subscriptionManager = subscriptionManager;\n    }\n    this._returnFormat = (_a = options === null || options === void 0 ? void 0 : options.returnFormat) !== null && _a !== void 0 ? _a : web3_types_1.DEFAULT_RETURN_FORMAT;\n  }\n  get id() {\n    return this._id;\n  }\n  get lastBlock() {\n    return this._lastBlock;\n  }\n  subscribe() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this._subscriptionManager.addSubscription(this);\n    });\n  }\n  processSubscriptionData(data) {\n    var _a, _b;\n    if (data === null || data === void 0 ? void 0 : data.data) {\n      // for EIP-1193 provider\n      this._processSubscriptionResult((_b = (_a = data === null || data === void 0 ? void 0 : data.data) === null || _a === void 0 ? void 0 : _a.result) !== null && _b !== void 0 ? _b : data === null || data === void 0 ? void 0 : data.data);\n    } else if (data && web3_utils_1.jsonRpc.isResponseWithNotification(data)) {\n      this._processSubscriptionResult(data === null || data === void 0 ? void 0 : data.params.result);\n    }\n  }\n  sendSubscriptionRequest() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this._id = yield this._subscriptionManager.requestManager.send({\n        method: 'eth_subscribe',\n        params: this._buildSubscriptionParams()\n      });\n      this.emit('connected', this._id);\n      return this._id;\n    });\n  }\n  get returnFormat() {\n    return this._returnFormat;\n  }\n  get subscriptionManager() {\n    return this._subscriptionManager;\n  }\n  resubscribe() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.unsubscribe();\n      yield this.subscribe();\n    });\n  }\n  unsubscribe() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.id) {\n        return;\n      }\n      yield this._subscriptionManager.removeSubscription(this);\n    });\n  }\n  sendUnsubscribeRequest() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._subscriptionManager.requestManager.send({\n        method: 'eth_unsubscribe',\n        params: [this.id]\n      });\n      this._id = undefined;\n    });\n  }\n  // eslint-disable-next-line class-methods-use-this\n  formatSubscriptionResult(data) {\n    return data;\n  }\n  _processSubscriptionResult(data) {\n    this.emit('data', this.formatSubscriptionResult(data));\n  }\n  _processSubscriptionError(error) {\n    this.emit('error', error);\n  }\n  // eslint-disable-next-line class-methods-use-this\n  _buildSubscriptionParams() {\n    // This should be overridden in the subclass\n    throw new Error('Implement in the child class');\n  }\n}\nexports.Web3Subscription = Web3Subscription;","map":{"version":3,"names":["web3_types_1","require","web3_utils_1","web3_errors_1","web3_subscription_manager_js_1","web3_event_emitter_js_1","Web3Subscription","Web3EventEmitter","constructor","args","options","requestManager","subscriptionManager","SubscriptionError","_subscriptionManager","Web3SubscriptionManager","_returnFormat","_a","returnFormat","DEFAULT_RETURN_FORMAT","id","_id","lastBlock","_lastBlock","subscribe","addSubscription","processSubscriptionData","data","_processSubscriptionResult","_b","result","jsonRpc","isResponseWithNotification","params","sendSubscriptionRequest","send","method","_buildSubscriptionParams","emit","resubscribe","unsubscribe","removeSubscription","sendUnsubscribeRequest","undefined","formatSubscriptionResult","_processSubscriptionError","error","Error","exports"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/web3-core/src/web3_subscriptions.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// eslint-disable-next-line max-classes-per-file\nimport {\n\tBlockOutput,\n\tDEFAULT_RETURN_FORMAT,\n\tDataFormat,\n\tEthExecutionAPI,\n\tJsonRpcSubscriptionResult,\n\tJsonRpcSubscriptionResultOld,\n\tJsonRpcNotification,\n\tLog,\n\tHexString,\n\tWeb3APIParams,\n\tWeb3APISpec,\n} from 'web3-types';\nimport { jsonRpc } from 'web3-utils';\nimport { SubscriptionError } from 'web3-errors';\n\n// eslint-disable-next-line import/no-cycle\nimport { Web3SubscriptionManager } from './web3_subscription_manager.js';\nimport { Web3EventEmitter, Web3EventMap } from './web3_event_emitter.js';\nimport { Web3RequestManager } from './web3_request_manager.js';\n\ntype CommonSubscriptionEvents = {\n\tdata: unknown; // Fires on each incoming block header.\n\terror: Error; // Fires when an error in the subscription occurs.\n\tconnected: string; // Fires once after the subscription successfully connected. Returns the subscription id.\n};\n\nexport abstract class Web3Subscription<\n\tEventMap extends Web3EventMap,\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tArgsType = any,\n\tAPI extends Web3APISpec = EthExecutionAPI,\n\t// The following generic type is just to define the type `CombinedEventMap` and use it inside the class\n\t// \tit combines the user passed `EventMap` with the `CommonSubscriptionEvents`\n\t//\tHowever, this type definition could be refactored depending on the closure of\n\t//\t[Permit type alias declarations inside a class](https://github.com/microsoft/TypeScript/issues/7061)\n\tCombinedEventMap extends CommonSubscriptionEvents = EventMap & CommonSubscriptionEvents,\n> extends Web3EventEmitter<CombinedEventMap> {\n\tprivate readonly _subscriptionManager: Web3SubscriptionManager<API>;\n\tprivate readonly _lastBlock?: BlockOutput;\n\tprivate readonly _returnFormat: DataFormat;\n\tprotected _id?: HexString;\n\n\tpublic constructor(\n\t\targs: ArgsType,\n\t\toptions: { subscriptionManager: Web3SubscriptionManager; returnFormat?: DataFormat },\n\t);\n\t/**\n\t * @deprecated This constructor overloading should not be used\n\t */\n\tpublic constructor(\n\t\targs: ArgsType,\n\t\toptions: { requestManager: Web3RequestManager<API>; returnFormat?: DataFormat },\n\t);\n\tpublic constructor(\n\t\tpublic readonly args: ArgsType,\n\t\toptions: (\n\t\t\t| { subscriptionManager: Web3SubscriptionManager }\n\t\t\t| { requestManager: Web3RequestManager<API> }\n\t\t) & {\n\t\t\treturnFormat?: DataFormat;\n\t\t},\n\t) {\n\t\tsuper();\n\t\tconst { requestManager } = options as { requestManager: Web3RequestManager<API> };\n\t\tconst { subscriptionManager } = options as { subscriptionManager: Web3SubscriptionManager };\n\t\tif (requestManager && subscriptionManager) {\n\t\t\tthrow new SubscriptionError(\n\t\t\t\t'Only requestManager or subscriptionManager should be provided at Subscription constructor',\n\t\t\t);\n\t\t}\n\t\tif (!requestManager && !subscriptionManager) {\n\t\t\tthrow new SubscriptionError(\n\t\t\t\t'Either requestManager or subscriptionManager should be provided at Subscription constructor',\n\t\t\t);\n\t\t}\n\t\tif (requestManager) {\n\t\t\t// eslint-disable-next-line deprecation/deprecation\n\t\t\tthis._subscriptionManager = new Web3SubscriptionManager(requestManager, {}, true);\n\t\t} else {\n\t\t\tthis._subscriptionManager = subscriptionManager;\n\t\t}\n\n\t\tthis._returnFormat = options?.returnFormat ?? (DEFAULT_RETURN_FORMAT as DataFormat);\n\t}\n\n\tpublic get id() {\n\t\treturn this._id;\n\t}\n\n\tpublic get lastBlock() {\n\t\treturn this._lastBlock;\n\t}\n\n\tpublic async subscribe(): Promise<string> {\n\t\treturn this._subscriptionManager.addSubscription(this);\n\t}\n\n\tpublic processSubscriptionData(\n\t\tdata:\n\t\t\t| JsonRpcSubscriptionResult\n\t\t\t| JsonRpcSubscriptionResultOld<Log>\n\t\t\t| JsonRpcNotification<Log>,\n\t) {\n\t\tif (data?.data) {\n\t\t\t// for EIP-1193 provider\n\t\t\tthis._processSubscriptionResult(data?.data?.result ?? data?.data);\n\t\t} else if (\n\t\t\tdata &&\n\t\t\tjsonRpc.isResponseWithNotification(\n\t\t\t\tdata as unknown as JsonRpcSubscriptionResult | JsonRpcNotification<Log>,\n\t\t\t)\n\t\t) {\n\t\t\tthis._processSubscriptionResult(data?.params.result);\n\t\t}\n\t}\n\n\tpublic async sendSubscriptionRequest(): Promise<string> {\n\t\tthis._id = await this._subscriptionManager.requestManager.send({\n\t\t\tmethod: 'eth_subscribe',\n\t\t\tparams: this._buildSubscriptionParams(),\n\t\t});\n\n\t\tthis.emit('connected', this._id);\n\t\treturn this._id;\n\t}\n\n\tprotected get returnFormat() {\n\t\treturn this._returnFormat;\n\t}\n\n\tprotected get subscriptionManager() {\n\t\treturn this._subscriptionManager;\n\t}\n\n\tpublic async resubscribe() {\n\t\tawait this.unsubscribe();\n\t\tawait this.subscribe();\n\t}\n\n\tpublic async unsubscribe() {\n\t\tif (!this.id) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this._subscriptionManager.removeSubscription(this);\n\t}\n\n\tpublic async sendUnsubscribeRequest() {\n\t\tawait this._subscriptionManager.requestManager.send({\n\t\t\tmethod: 'eth_unsubscribe',\n\t\t\tparams: [this.id] as Web3APIParams<API, 'eth_unsubscribe'>,\n\t\t});\n\t\tthis._id = undefined;\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tprotected formatSubscriptionResult(data: CombinedEventMap['data']) {\n\t\treturn data;\n\t}\n\n\tpublic _processSubscriptionResult(data: CombinedEventMap['data'] | unknown) {\n\t\tthis.emit('data', this.formatSubscriptionResult(data));\n\t}\n\n\tpublic _processSubscriptionError(error: Error) {\n\t\tthis.emit('error', error);\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tprotected _buildSubscriptionParams(): Web3APIParams<API, 'eth_subscribe'> {\n\t\t// This should be overridden in the subclass\n\t\tthrow new Error('Implement in the child class');\n\t}\n}\n\nexport type Web3SubscriptionConstructor<\n\tAPI extends Web3APISpec,\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tSubscriptionType extends Web3Subscription<any, any, API> = Web3Subscription<any, any, API>,\n> =\n\t| (new (\n\t\t\t// We accept any type of arguments here and don't deal with this type internally\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\targs: any,\n\t\t\toptions:\n\t\t\t\t| { subscriptionManager: Web3SubscriptionManager<API>; returnFormat?: DataFormat }\n\t\t\t\t| { requestManager: Web3RequestManager<API>; returnFormat?: DataFormat },\n\t  ) => SubscriptionType)\n\t| (new (\n\t\t\targs: any,\n\t\t\toptions: {\n\t\t\t\tsubscriptionManager: Web3SubscriptionManager<API>;\n\t\t\t\treturnFormat?: DataFormat;\n\t\t\t},\n\t  ) => SubscriptionType)\n\t| (new (\n\t\t\targs: any,\n\t\t\toptions: { requestManager: Web3RequestManager<API>; returnFormat?: DataFormat },\n\t  ) => SubscriptionType);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}