{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QueryClientImpl = exports.QueryConnectionParamsResponse = exports.QueryConnectionParamsRequest = exports.QueryConnectionConsensusStateResponse = exports.QueryConnectionConsensusStateRequest = exports.QueryConnectionClientStateResponse = exports.QueryConnectionClientStateRequest = exports.QueryClientConnectionsResponse = exports.QueryClientConnectionsRequest = exports.QueryConnectionsResponse = exports.QueryConnectionsRequest = exports.QueryConnectionResponse = exports.QueryConnectionRequest = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst pagination_1 = require(\"../../../../cosmos/base/query/v1beta1/pagination\");\nconst connection_1 = require(\"./connection\");\nconst client_1 = require(\"../../client/v1/client\");\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.core.connection.v1\";\nfunction createBaseQueryConnectionRequest() {\n  return {\n    connectionId: \"\"\n  };\n}\nexports.QueryConnectionRequest = {\n  typeUrl: \"/ibc.core.connection.v1.QueryConnectionRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryConnectionRequest();\n    if ((0, helpers_1.isSet)(object.connectionId)) obj.connectionId = String(object.connectionId);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryConnectionRequest();\n    message.connectionId = object.connectionId ?? \"\";\n    return message;\n  }\n};\nfunction createBaseQueryConnectionResponse() {\n  return {\n    connection: undefined,\n    proof: new Uint8Array(),\n    proofHeight: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryConnectionResponse = {\n  typeUrl: \"/ibc.core.connection.v1.QueryConnectionResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.connection !== undefined) {\n      connection_1.ConnectionEnd.encode(message.connection, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connection = connection_1.ConnectionEnd.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryConnectionResponse();\n    if ((0, helpers_1.isSet)(object.connection)) obj.connection = connection_1.ConnectionEnd.fromJSON(object.connection);\n    if ((0, helpers_1.isSet)(object.proof)) obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n    if ((0, helpers_1.isSet)(object.proofHeight)) obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connection !== undefined && (obj.connection = message.connection ? connection_1.ConnectionEnd.toJSON(message.connection) : undefined);\n    message.proof !== undefined && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryConnectionResponse();\n    if (object.connection !== undefined && object.connection !== null) {\n      message.connection = connection_1.ConnectionEnd.fromPartial(object.connection);\n    }\n    message.proof = object.proof ?? new Uint8Array();\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryConnectionsRequest() {\n  return {\n    pagination: undefined\n  };\n}\nexports.QueryConnectionsRequest = {\n  typeUrl: \"/ibc.core.connection.v1.QueryConnectionsRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.pagination !== undefined) {\n      pagination_1.PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryConnectionsRequest();\n    if ((0, helpers_1.isSet)(object.pagination)) obj.pagination = pagination_1.PageRequest.fromJSON(object.pagination);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageRequest.toJSON(message.pagination) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryConnectionsRequest();\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryConnectionsResponse() {\n  return {\n    connections: [],\n    pagination: undefined,\n    height: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryConnectionsResponse = {\n  typeUrl: \"/ibc.core.connection.v1.QueryConnectionsResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    for (const v of message.connections) {\n      connection_1.IdentifiedConnection.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.pagination !== undefined) {\n      pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.height !== undefined) {\n      client_1.Height.encode(message.height, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connections.push(connection_1.IdentifiedConnection.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.height = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryConnectionsResponse();\n    if (Array.isArray(object?.connections)) obj.connections = object.connections.map(e => connection_1.IdentifiedConnection.fromJSON(e));\n    if ((0, helpers_1.isSet)(object.pagination)) obj.pagination = pagination_1.PageResponse.fromJSON(object.pagination);\n    if ((0, helpers_1.isSet)(object.height)) obj.height = client_1.Height.fromJSON(object.height);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.connections) {\n      obj.connections = message.connections.map(e => e ? connection_1.IdentifiedConnection.toJSON(e) : undefined);\n    } else {\n      obj.connections = [];\n    }\n    message.pagination !== undefined && (obj.pagination = message.pagination ? pagination_1.PageResponse.toJSON(message.pagination) : undefined);\n    message.height !== undefined && (obj.height = message.height ? client_1.Height.toJSON(message.height) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryConnectionsResponse();\n    message.connections = object.connections?.map(e => connection_1.IdentifiedConnection.fromPartial(e)) || [];\n    if (object.pagination !== undefined && object.pagination !== null) {\n      message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);\n    }\n    if (object.height !== undefined && object.height !== null) {\n      message.height = client_1.Height.fromPartial(object.height);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryClientConnectionsRequest() {\n  return {\n    clientId: \"\"\n  };\n}\nexports.QueryClientConnectionsRequest = {\n  typeUrl: \"/ibc.core.connection.v1.QueryClientConnectionsRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryClientConnectionsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryClientConnectionsRequest();\n    if ((0, helpers_1.isSet)(object.clientId)) obj.clientId = String(object.clientId);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryClientConnectionsRequest();\n    message.clientId = object.clientId ?? \"\";\n    return message;\n  }\n};\nfunction createBaseQueryClientConnectionsResponse() {\n  return {\n    connectionPaths: [],\n    proof: new Uint8Array(),\n    proofHeight: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryClientConnectionsResponse = {\n  typeUrl: \"/ibc.core.connection.v1.QueryClientConnectionsResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    for (const v of message.connectionPaths) {\n      writer.uint32(10).string(v);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryClientConnectionsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionPaths.push(reader.string());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryClientConnectionsResponse();\n    if (Array.isArray(object?.connectionPaths)) obj.connectionPaths = object.connectionPaths.map(e => String(e));\n    if ((0, helpers_1.isSet)(object.proof)) obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n    if ((0, helpers_1.isSet)(object.proofHeight)) obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.connectionPaths) {\n      obj.connectionPaths = message.connectionPaths.map(e => e);\n    } else {\n      obj.connectionPaths = [];\n    }\n    message.proof !== undefined && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryClientConnectionsResponse();\n    message.connectionPaths = object.connectionPaths?.map(e => e) || [];\n    message.proof = object.proof ?? new Uint8Array();\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryConnectionClientStateRequest() {\n  return {\n    connectionId: \"\"\n  };\n}\nexports.QueryConnectionClientStateRequest = {\n  typeUrl: \"/ibc.core.connection.v1.QueryConnectionClientStateRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionClientStateRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryConnectionClientStateRequest();\n    if ((0, helpers_1.isSet)(object.connectionId)) obj.connectionId = String(object.connectionId);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryConnectionClientStateRequest();\n    message.connectionId = object.connectionId ?? \"\";\n    return message;\n  }\n};\nfunction createBaseQueryConnectionClientStateResponse() {\n  return {\n    identifiedClientState: undefined,\n    proof: new Uint8Array(),\n    proofHeight: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryConnectionClientStateResponse = {\n  typeUrl: \"/ibc.core.connection.v1.QueryConnectionClientStateResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.identifiedClientState !== undefined) {\n      client_1.IdentifiedClientState.encode(message.identifiedClientState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(18).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionClientStateResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.identifiedClientState = client_1.IdentifiedClientState.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.proof = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryConnectionClientStateResponse();\n    if ((0, helpers_1.isSet)(object.identifiedClientState)) obj.identifiedClientState = client_1.IdentifiedClientState.fromJSON(object.identifiedClientState);\n    if ((0, helpers_1.isSet)(object.proof)) obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n    if ((0, helpers_1.isSet)(object.proofHeight)) obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.identifiedClientState !== undefined && (obj.identifiedClientState = message.identifiedClientState ? client_1.IdentifiedClientState.toJSON(message.identifiedClientState) : undefined);\n    message.proof !== undefined && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryConnectionClientStateResponse();\n    if (object.identifiedClientState !== undefined && object.identifiedClientState !== null) {\n      message.identifiedClientState = client_1.IdentifiedClientState.fromPartial(object.identifiedClientState);\n    }\n    message.proof = object.proof ?? new Uint8Array();\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryConnectionConsensusStateRequest() {\n  return {\n    connectionId: \"\",\n    revisionNumber: BigInt(0),\n    revisionHeight: BigInt(0)\n  };\n}\nexports.QueryConnectionConsensusStateRequest = {\n  typeUrl: \"/ibc.core.connection.v1.QueryConnectionConsensusStateRequest\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (message.revisionNumber !== BigInt(0)) {\n      writer.uint32(16).uint64(message.revisionNumber);\n    }\n    if (message.revisionHeight !== BigInt(0)) {\n      writer.uint32(24).uint64(message.revisionHeight);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionConsensusStateRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.revisionNumber = reader.uint64();\n          break;\n        case 3:\n          message.revisionHeight = reader.uint64();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryConnectionConsensusStateRequest();\n    if ((0, helpers_1.isSet)(object.connectionId)) obj.connectionId = String(object.connectionId);\n    if ((0, helpers_1.isSet)(object.revisionNumber)) obj.revisionNumber = BigInt(object.revisionNumber.toString());\n    if ((0, helpers_1.isSet)(object.revisionHeight)) obj.revisionHeight = BigInt(object.revisionHeight.toString());\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    message.revisionNumber !== undefined && (obj.revisionNumber = (message.revisionNumber || BigInt(0)).toString());\n    message.revisionHeight !== undefined && (obj.revisionHeight = (message.revisionHeight || BigInt(0)).toString());\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryConnectionConsensusStateRequest();\n    message.connectionId = object.connectionId ?? \"\";\n    if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n      message.revisionNumber = BigInt(object.revisionNumber.toString());\n    }\n    if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n      message.revisionHeight = BigInt(object.revisionHeight.toString());\n    }\n    return message;\n  }\n};\nfunction createBaseQueryConnectionConsensusStateResponse() {\n  return {\n    consensusState: undefined,\n    clientId: \"\",\n    proof: new Uint8Array(),\n    proofHeight: client_1.Height.fromPartial({})\n  };\n}\nexports.QueryConnectionConsensusStateResponse = {\n  typeUrl: \"/ibc.core.connection.v1.QueryConnectionConsensusStateResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.consensusState !== undefined) {\n      any_1.Any.encode(message.consensusState, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.clientId !== \"\") {\n      writer.uint32(18).string(message.clientId);\n    }\n    if (message.proof.length !== 0) {\n      writer.uint32(26).bytes(message.proof);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionConsensusStateResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.consensusState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.clientId = reader.string();\n          break;\n        case 3:\n          message.proof = reader.bytes();\n          break;\n        case 4:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryConnectionConsensusStateResponse();\n    if ((0, helpers_1.isSet)(object.consensusState)) obj.consensusState = any_1.Any.fromJSON(object.consensusState);\n    if ((0, helpers_1.isSet)(object.clientId)) obj.clientId = String(object.clientId);\n    if ((0, helpers_1.isSet)(object.proof)) obj.proof = (0, helpers_1.bytesFromBase64)(object.proof);\n    if ((0, helpers_1.isSet)(object.proofHeight)) obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.consensusState !== undefined && (obj.consensusState = message.consensusState ? any_1.Any.toJSON(message.consensusState) : undefined);\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.proof !== undefined && (obj.proof = (0, helpers_1.base64FromBytes)(message.proof !== undefined ? message.proof : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryConnectionConsensusStateResponse();\n    if (object.consensusState !== undefined && object.consensusState !== null) {\n      message.consensusState = any_1.Any.fromPartial(object.consensusState);\n    }\n    message.clientId = object.clientId ?? \"\";\n    message.proof = object.proof ?? new Uint8Array();\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    }\n    return message;\n  }\n};\nfunction createBaseQueryConnectionParamsRequest() {\n  return {};\n}\nexports.QueryConnectionParamsRequest = {\n  typeUrl: \"/ibc.core.connection.v1.QueryConnectionParamsRequest\",\n  encode(_, writer = binary_1.BinaryWriter.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionParamsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    const obj = createBaseQueryConnectionParamsRequest();\n    return obj;\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseQueryConnectionParamsRequest();\n    return message;\n  }\n};\nfunction createBaseQueryConnectionParamsResponse() {\n  return {\n    params: undefined\n  };\n}\nexports.QueryConnectionParamsResponse = {\n  typeUrl: \"/ibc.core.connection.v1.QueryConnectionParamsResponse\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.params !== undefined) {\n      client_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseQueryConnectionParamsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.params = client_1.Params.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseQueryConnectionParamsResponse();\n    if ((0, helpers_1.isSet)(object.params)) obj.params = client_1.Params.fromJSON(object.params);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.params !== undefined && (obj.params = message.params ? client_1.Params.toJSON(message.params) : undefined);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseQueryConnectionParamsResponse();\n    if (object.params !== undefined && object.params !== null) {\n      message.params = client_1.Params.fromPartial(object.params);\n    }\n    return message;\n  }\n};\nclass QueryClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n    this.Connection = this.Connection.bind(this);\n    this.Connections = this.Connections.bind(this);\n    this.ClientConnections = this.ClientConnections.bind(this);\n    this.ConnectionClientState = this.ConnectionClientState.bind(this);\n    this.ConnectionConsensusState = this.ConnectionConsensusState.bind(this);\n    this.ConnectionParams = this.ConnectionParams.bind(this);\n  }\n  Connection(request) {\n    const data = exports.QueryConnectionRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"Connection\", data);\n    return promise.then(data => exports.QueryConnectionResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  Connections(request = {\n    pagination: pagination_1.PageRequest.fromPartial({})\n  }) {\n    const data = exports.QueryConnectionsRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"Connections\", data);\n    return promise.then(data => exports.QueryConnectionsResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  ClientConnections(request) {\n    const data = exports.QueryClientConnectionsRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ClientConnections\", data);\n    return promise.then(data => exports.QueryClientConnectionsResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  ConnectionClientState(request) {\n    const data = exports.QueryConnectionClientStateRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ConnectionClientState\", data);\n    return promise.then(data => exports.QueryConnectionClientStateResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  ConnectionConsensusState(request) {\n    const data = exports.QueryConnectionConsensusStateRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ConnectionConsensusState\", data);\n    return promise.then(data => exports.QueryConnectionConsensusStateResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  ConnectionParams(request = {}) {\n    const data = exports.QueryConnectionParamsRequest.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Query\", \"ConnectionParams\", data);\n    return promise.then(data => exports.QueryConnectionParamsResponse.decode(new binary_1.BinaryReader(data)));\n  }\n}\nexports.QueryClientImpl = QueryClientImpl;","map":{"version":3,"names":["pagination_1","require","connection_1","client_1","any_1","binary_1","helpers_1","exports","protobufPackage","createBaseQueryConnectionRequest","connectionId","QueryConnectionRequest","typeUrl","encode","message","writer","BinaryWriter","create","uint32","string","decode","input","length","reader","BinaryReader","end","undefined","len","pos","tag","skipType","fromJSON","object","obj","isSet","String","toJSON","fromPartial","createBaseQueryConnectionResponse","connection","proof","Uint8Array","proofHeight","Height","QueryConnectionResponse","ConnectionEnd","fork","ldelim","bytes","bytesFromBase64","base64FromBytes","createBaseQueryConnectionsRequest","pagination","QueryConnectionsRequest","PageRequest","createBaseQueryConnectionsResponse","connections","height","QueryConnectionsResponse","v","IdentifiedConnection","PageResponse","push","Array","isArray","map","e","createBaseQueryClientConnectionsRequest","clientId","QueryClientConnectionsRequest","createBaseQueryClientConnectionsResponse","connectionPaths","QueryClientConnectionsResponse","createBaseQueryConnectionClientStateRequest","QueryConnectionClientStateRequest","createBaseQueryConnectionClientStateResponse","identifiedClientState","QueryConnectionClientStateResponse","IdentifiedClientState","createBaseQueryConnectionConsensusStateRequest","revisionNumber","BigInt","revisionHeight","QueryConnectionConsensusStateRequest","uint64","toString","createBaseQueryConnectionConsensusStateResponse","consensusState","QueryConnectionConsensusStateResponse","Any","createBaseQueryConnectionParamsRequest","QueryConnectionParamsRequest","_","createBaseQueryConnectionParamsResponse","params","QueryConnectionParamsResponse","Params","QueryClientImpl","constructor","rpc","Connection","bind","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionParams","request","data","finish","promise","then"],"sources":["../../../../../src/ibc/core/connection/v1/query.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}