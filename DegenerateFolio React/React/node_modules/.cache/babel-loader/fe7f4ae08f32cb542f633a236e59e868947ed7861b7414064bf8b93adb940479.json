{"ast":null,"code":"import { AbstractText, ensureOptions } from './AbstractText.mjs';\nimport { CanvasTextMetrics } from './canvas/CanvasTextMetrics.mjs';\nimport { TextStyle } from './TextStyle.mjs';\n\"use strict\";\nclass Text extends AbstractText {\n  constructor(...args) {\n    const options = ensureOptions(args, \"Text\");\n    super(options, TextStyle);\n    this.renderPipeId = \"text\";\n  }\n  _updateBounds() {\n    const bounds = this._bounds;\n    const padding = this._style.padding;\n    const anchor = this._anchor;\n    const canvasMeasurement = CanvasTextMetrics.measureText(this._text, this._style);\n    const {\n      width,\n      height\n    } = canvasMeasurement;\n    bounds.minX = -anchor._x * width - padding;\n    bounds.maxX = bounds.minX + width + padding * 2;\n    bounds.minY = -anchor._y * height - padding;\n    bounds.maxY = bounds.minY + height + padding * 2;\n  }\n}\nexport { Text };","map":{"version":3,"names":["Text","AbstractText","constructor","args","options","ensureOptions","TextStyle","renderPipeId","_updateBounds","bounds","_bounds","padding","_style","anchor","_anchor","canvasMeasurement","CanvasTextMetrics","measureText","_text","width","height","minX","_x","maxX","minY","_y","maxY"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/scene/text/Text.ts"],"sourcesContent":["import { AbstractText, ensureOptions } from './AbstractText';\nimport { CanvasTextMetrics } from './canvas/CanvasTextMetrics';\nimport { TextStyle } from './TextStyle';\n\nimport type { View } from '../../rendering/renderers/shared/view/View';\nimport type { TextOptions, TextString } from './AbstractText';\nimport type { TextStyleOptions } from './TextStyle';\n\n/**\n * A Text Object will create a line or multiple lines of text.\n *\n * To split a line you can use '\\n' in your text string, or, on the `style` object,\n * change its `wordWrap` property to true and and givae the `wordWrapWidth` property a value.\n *\n * The primary advantage of this class over BitmapText is that you have great control over the style of the text,\n * which you can change at runtime.\n *\n * The primary disadvantages is that each piece of text has it's own texture, which can use more memory.\n * When text changes, this texture has to be re-generated and re-uploaded to the GPU, taking up time.\n * @example\n * import { Text } from 'pixi.js';\n *\n * const text = new Text({\n *     text: 'Hello Pixi!',\n *     style: {\n *         fontFamily: 'Arial',\n *         fontSize: 24,\n *         fill: 0xff1010,\n *         align: 'center',\n *     }\n * });\n * @memberof scene\n */\nexport class Text\n    extends AbstractText<TextStyle, TextStyleOptions>\n    implements View\n{\n    public readonly renderPipeId: string = 'text';\n\n    /**\n     * @param {text.TextOptions} options - The options of the text.\n     */\n    constructor(options?: TextOptions);\n    /** @deprecated since 8.0.0 */\n    constructor(text?: TextString, options?: Partial<TextStyle>);\n    constructor(...args: [TextOptions?] | [TextString, Partial<TextStyle>])\n    {\n        const options = ensureOptions(args, 'Text');\n\n        super(options, TextStyle);\n    }\n\n    protected _updateBounds()\n    {\n        const bounds = this._bounds;\n        const padding = this._style.padding;\n        const anchor = this._anchor;\n\n        const canvasMeasurement = CanvasTextMetrics.measureText(\n            this._text,\n            this._style\n        );\n\n        const { width, height } = canvasMeasurement;\n\n        bounds.minX = (-anchor._x * width) - padding;\n        bounds.maxX = bounds.minX + width + (padding * 2);\n        bounds.minY = (-anchor._y * height) - padding;\n        bounds.maxY = bounds.minY + height + (padding * 2);\n    }\n}\n"],"mappings":";;;;AAiCO,MAAMA,IAAA,SACDC,YAEZ;EASIC,YAAA,GAAeC,IACf;IACU,MAAAC,OAAA,GAAUC,aAAc,CAAAF,IAAA,EAAM,MAAM;IAE1C,MAAMC,OAAA,EAASE,SAAS;IAZ5B,KAAgBC,YAAuB;EAAA;EAe7BC,aACVA,CAAA;IACI,MAAMC,MAAA,GAAS,IAAK,CAAAC,OAAA;IACd,MAAAC,OAAA,GAAU,KAAKC,MAAO,CAAAD,OAAA;IAC5B,MAAME,MAAA,GAAS,IAAK,CAAAC,OAAA;IAEpB,MAAMC,iBAAA,GAAoBC,iBAAkB,CAAAC,WAAA,CACxC,IAAK,CAAAC,KAAA,EACL,IAAK,CAAAN,MAAA,CACT;IAEM;MAAEO,KAAO;MAAAC;IAAA,CAAW,GAAAL,iBAAA;IAE1BN,MAAA,CAAOY,IAAQ,IAACR,MAAO,CAAAS,EAAA,GAAKH,KAAS,GAAAR,OAAA;IACrCF,MAAA,CAAOc,IAAO,GAAAd,MAAA,CAAOY,IAAO,GAAAF,KAAA,GAASR,OAAU;IAC/CF,MAAA,CAAOe,IAAQ,IAACX,MAAO,CAAAY,EAAA,GAAKL,MAAU,GAAAT,OAAA;IACtCF,MAAA,CAAOiB,IAAO,GAAAjB,MAAA,CAAOe,IAAO,GAAAJ,MAAA,GAAUT,OAAU;EAAA;AAExD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}