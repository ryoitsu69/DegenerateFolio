{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RequestAlreadySentError = exports.PendingRequestsOnReconnectingError = exports.MaxAttemptsReachedOnReconnectingError = exports.ConnectionCloseError = exports.ConnectionNotOpenError = exports.ConnectionTimeoutError = exports.InvalidConnectionError = exports.ConnectionError = void 0;\nconst error_codes_js_1 = require(\"../error_codes.js\");\nconst web3_error_base_js_1 = require(\"../web3_error_base.js\");\nclass ConnectionError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(message, event) {\n    super(message);\n    this.code = error_codes_js_1.ERR_CONN;\n    if (event) {\n      this.errorCode = event.code;\n      this.errorReason = event.reason;\n    }\n  }\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      errorCode: this.errorCode,\n      errorReason: this.errorReason\n    });\n  }\n}\nexports.ConnectionError = ConnectionError;\nclass InvalidConnectionError extends ConnectionError {\n  constructor(host, event) {\n    super(\"CONNECTION ERROR: Couldn't connect to node \".concat(host, \".\"), event);\n    this.host = host;\n    this.code = error_codes_js_1.ERR_CONN_INVALID;\n  }\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      host: this.host\n    });\n  }\n}\nexports.InvalidConnectionError = InvalidConnectionError;\nclass ConnectionTimeoutError extends ConnectionError {\n  constructor(duration) {\n    super(\"CONNECTION TIMEOUT: timeout of \".concat(duration, \"ms achieved\"));\n    this.duration = duration;\n    this.code = error_codes_js_1.ERR_CONN_TIMEOUT;\n  }\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      duration: this.duration\n    });\n  }\n}\nexports.ConnectionTimeoutError = ConnectionTimeoutError;\nclass ConnectionNotOpenError extends ConnectionError {\n  constructor(event) {\n    super('Connection not open', event);\n    this.code = error_codes_js_1.ERR_CONN_NOT_OPEN;\n  }\n}\nexports.ConnectionNotOpenError = ConnectionNotOpenError;\nclass ConnectionCloseError extends ConnectionError {\n  constructor(event) {\n    var _a, _b;\n    super(\"CONNECTION ERROR: The connection got closed with the close code \".concat((_a = event === null || event === void 0 ? void 0 : event.code) !== null && _a !== void 0 ? _a : '', \" and the following reason string \").concat((_b = event === null || event === void 0 ? void 0 : event.reason) !== null && _b !== void 0 ? _b : ''), event);\n    this.code = error_codes_js_1.ERR_CONN_CLOSE;\n  }\n}\nexports.ConnectionCloseError = ConnectionCloseError;\nclass MaxAttemptsReachedOnReconnectingError extends ConnectionError {\n  constructor(numberOfAttempts) {\n    super(\"Maximum number of reconnect attempts reached! (\".concat(numberOfAttempts, \")\"));\n    this.code = error_codes_js_1.ERR_CONN_MAX_ATTEMPTS;\n  }\n}\nexports.MaxAttemptsReachedOnReconnectingError = MaxAttemptsReachedOnReconnectingError;\nclass PendingRequestsOnReconnectingError extends ConnectionError {\n  constructor() {\n    super('CONNECTION ERROR: Provider started to reconnect before the response got received!');\n    this.code = error_codes_js_1.ERR_CONN_PENDING_REQUESTS;\n  }\n}\nexports.PendingRequestsOnReconnectingError = PendingRequestsOnReconnectingError;\nclass RequestAlreadySentError extends ConnectionError {\n  constructor(id) {\n    super(\"Request already sent with following id: \".concat(id));\n    this.code = error_codes_js_1.ERR_REQ_ALREADY_SENT;\n  }\n}\nexports.RequestAlreadySentError = RequestAlreadySentError;","map":{"version":3,"names":["error_codes_js_1","require","web3_error_base_js_1","ConnectionError","BaseWeb3Error","constructor","message","event","code","ERR_CONN","errorCode","errorReason","reason","toJSON","Object","assign","exports","InvalidConnectionError","host","concat","ERR_CONN_INVALID","ConnectionTimeoutError","duration","ERR_CONN_TIMEOUT","ConnectionNotOpenError","ERR_CONN_NOT_OPEN","ConnectionCloseError","_a","_b","ERR_CONN_CLOSE","MaxAttemptsReachedOnReconnectingError","numberOfAttempts","ERR_CONN_MAX_ATTEMPTS","PendingRequestsOnReconnectingError","ERR_CONN_PENDING_REQUESTS","RequestAlreadySentError","id","ERR_REQ_ALREADY_SENT"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/web3-errors/src/errors/connection_errors.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable max-classes-per-file */\n\nimport { ConnectionEvent } from 'web3-types';\nimport {\n\tERR_CONN,\n\tERR_CONN_INVALID,\n\tERR_CONN_TIMEOUT,\n\tERR_CONN_NOT_OPEN,\n\tERR_CONN_CLOSE,\n\tERR_CONN_MAX_ATTEMPTS,\n\tERR_CONN_PENDING_REQUESTS,\n\tERR_REQ_ALREADY_SENT,\n} from '../error_codes.js';\nimport { BaseWeb3Error } from '../web3_error_base.js';\n\nexport class ConnectionError extends BaseWeb3Error {\n\tpublic code = ERR_CONN;\n\tpublic errorCode?: number;\n\tpublic errorReason?: string;\n\n\tpublic constructor(message: string, event?: ConnectionEvent) {\n\t\tsuper(message);\n\n\t\tif (event) {\n\t\t\tthis.errorCode = event.code;\n\t\t\tthis.errorReason = event.reason;\n\t\t}\n\t}\n\n\tpublic toJSON() {\n\t\treturn { ...super.toJSON(), errorCode: this.errorCode, errorReason: this.errorReason };\n\t}\n}\n\nexport class InvalidConnectionError extends ConnectionError {\n\tpublic constructor(public host: string, event?: ConnectionEvent) {\n\t\tsuper(`CONNECTION ERROR: Couldn't connect to node ${host}.`, event);\n\t\tthis.code = ERR_CONN_INVALID;\n\t}\n\n\tpublic toJSON() {\n\t\treturn { ...super.toJSON(), host: this.host };\n\t}\n}\n\nexport class ConnectionTimeoutError extends ConnectionError {\n\tpublic constructor(public duration: number) {\n\t\tsuper(`CONNECTION TIMEOUT: timeout of ${duration}ms achieved`);\n\t\tthis.code = ERR_CONN_TIMEOUT;\n\t}\n\n\tpublic toJSON() {\n\t\treturn { ...super.toJSON(), duration: this.duration };\n\t}\n}\n\nexport class ConnectionNotOpenError extends ConnectionError {\n\tpublic constructor(event?: ConnectionEvent) {\n\t\tsuper('Connection not open', event);\n\t\tthis.code = ERR_CONN_NOT_OPEN;\n\t}\n}\n\nexport class ConnectionCloseError extends ConnectionError {\n\tpublic constructor(event?: ConnectionEvent) {\n\t\tsuper(\n\t\t\t`CONNECTION ERROR: The connection got closed with the close code ${\n\t\t\t\tevent?.code ?? ''\n\t\t\t} and the following reason string ${event?.reason ?? ''}`,\n\t\t\tevent,\n\t\t);\n\t\tthis.code = ERR_CONN_CLOSE;\n\t}\n}\n\nexport class MaxAttemptsReachedOnReconnectingError extends ConnectionError {\n\tpublic constructor(numberOfAttempts: number) {\n\t\tsuper(`Maximum number of reconnect attempts reached! (${numberOfAttempts})`);\n\t\tthis.code = ERR_CONN_MAX_ATTEMPTS;\n\t}\n}\n\nexport class PendingRequestsOnReconnectingError extends ConnectionError {\n\tpublic constructor() {\n\t\tsuper('CONNECTION ERROR: Provider started to reconnect before the response got received!');\n\t\tthis.code = ERR_CONN_PENDING_REQUESTS;\n\t}\n}\n\nexport class RequestAlreadySentError extends ConnectionError {\n\tpublic constructor(id: number | string) {\n\t\tsuper(`Request already sent with following id: ${id}`);\n\t\tthis.code = ERR_REQ_ALREADY_SENT;\n\t}\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}