{"ast":null,"code":"import { base58Decode } from '../base58/index.js';\nimport { checkAddressChecksum } from './checksum.js';\nimport { defaults } from './defaults.js';\n/**\n * @name checkAddress\n * @summary Validates an ss58 address.\n * @description\n * From the provided input, validate that the address is a valid input.\n */\nexport function checkAddress(address, prefix) {\n  let decoded;\n  try {\n    decoded = base58Decode(address);\n  } catch (error) {\n    return [false, error.message];\n  }\n  const [isValid,,, ss58Decoded] = checkAddressChecksum(decoded);\n  if (ss58Decoded !== prefix) {\n    return [false, \"Prefix mismatch, expected \".concat(prefix, \", found \").concat(ss58Decoded)];\n  } else if (!defaults.allowedEncodedLengths.includes(decoded.length)) {\n    return [false, 'Invalid decoded address length'];\n  }\n  return [isValid, isValid ? null : 'Invalid decoded address checksum'];\n}","map":{"version":3,"names":["base58Decode","checkAddressChecksum","defaults","checkAddress","address","prefix","decoded","error","message","isValid","ss58Decoded","concat","allowedEncodedLengths","includes","length"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/address/check.js"],"sourcesContent":["import { base58Decode } from '../base58/index.js';\nimport { checkAddressChecksum } from './checksum.js';\nimport { defaults } from './defaults.js';\n/**\n * @name checkAddress\n * @summary Validates an ss58 address.\n * @description\n * From the provided input, validate that the address is a valid input.\n */\nexport function checkAddress(address, prefix) {\n    let decoded;\n    try {\n        decoded = base58Decode(address);\n    }\n    catch (error) {\n        return [false, error.message];\n    }\n    const [isValid, , , ss58Decoded] = checkAddressChecksum(decoded);\n    if (ss58Decoded !== prefix) {\n        return [false, `Prefix mismatch, expected ${prefix}, found ${ss58Decoded}`];\n    }\n    else if (!defaults.allowedEncodedLengths.includes(decoded.length)) {\n        return [false, 'Invalid decoded address length'];\n    }\n    return [isValid, isValid ? null : 'Invalid decoded address checksum'];\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,oBAAoB;AACjD,SAASC,oBAAoB,QAAQ,eAAe;AACpD,SAASC,QAAQ,QAAQ,eAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,OAAO,EAAEC,MAAM,EAAE;EAC1C,IAAIC,OAAO;EACX,IAAI;IACAA,OAAO,GAAGN,YAAY,CAACI,OAAO,CAAC;EACnC,CAAC,CACD,OAAOG,KAAK,EAAE;IACV,OAAO,CAAC,KAAK,EAAEA,KAAK,CAACC,OAAO,CAAC;EACjC;EACA,MAAM,CAACC,OAAO,IAAMC,WAAW,CAAC,GAAGT,oBAAoB,CAACK,OAAO,CAAC;EAChE,IAAII,WAAW,KAAKL,MAAM,EAAE;IACxB,OAAO,CAAC,KAAK,+BAAAM,MAAA,CAA+BN,MAAM,cAAAM,MAAA,CAAWD,WAAW,EAAG;EAC/E,CAAC,MACI,IAAI,CAACR,QAAQ,CAACU,qBAAqB,CAACC,QAAQ,CAACP,OAAO,CAACQ,MAAM,CAAC,EAAE;IAC/D,OAAO,CAAC,KAAK,EAAE,gCAAgC,CAAC;EACpD;EACA,OAAO,CAACL,OAAO,EAAEA,OAAO,GAAG,IAAI,GAAG,kCAAkC,CAAC;AACzE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}