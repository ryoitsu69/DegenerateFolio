{"ast":null,"code":"export const rpc = {\n  getKeys: {\n    description: 'Returns the keys with prefix from a child storage, leave empty to get all the keys',\n    params: [{\n      name: 'childKey',\n      type: 'PrefixedStorageKey'\n    }, {\n      name: 'prefix',\n      type: 'StorageKey'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'at',\n      type: 'Hash'\n    }],\n    type: 'Vec<StorageKey>'\n  },\n  getKeysPaged: {\n    alias: ['childstate_getKeysPagedAt'],\n    description: 'Returns the keys with prefix from a child storage with pagination support',\n    params: [{\n      name: 'childKey',\n      type: 'PrefixedStorageKey'\n    }, {\n      name: 'prefix',\n      type: 'StorageKey'\n    }, {\n      name: 'count',\n      type: 'u32'\n    }, {\n      isOptional: true,\n      name: 'startKey',\n      type: 'StorageKey'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'at',\n      type: 'Hash'\n    }],\n    type: 'Vec<StorageKey>'\n  },\n  getStorage: {\n    description: 'Returns a child storage entry at a specific block state',\n    params: [{\n      name: 'childKey',\n      type: 'PrefixedStorageKey'\n    }, {\n      name: 'key',\n      type: 'StorageKey'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'at',\n      type: 'Hash'\n    }],\n    type: 'Option<StorageData>'\n  },\n  getStorageEntries: {\n    description: 'Returns child storage entries for multiple keys at a specific block state',\n    params: [{\n      name: 'childKey',\n      type: 'PrefixedStorageKey'\n    }, {\n      name: 'keys',\n      type: 'Vec<StorageKey>'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'at',\n      type: 'Hash'\n    }],\n    type: 'Vec<Option<StorageData>>'\n  },\n  getStorageHash: {\n    description: 'Returns the hash of a child storage entry at a block state',\n    params: [{\n      name: 'childKey',\n      type: 'PrefixedStorageKey'\n    }, {\n      name: 'key',\n      type: 'StorageKey'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'at',\n      type: 'Hash'\n    }],\n    type: 'Option<Hash>'\n  },\n  getStorageSize: {\n    description: 'Returns the size of a child storage entry at a block state',\n    params: [{\n      name: 'childKey',\n      type: 'PrefixedStorageKey'\n    }, {\n      name: 'key',\n      type: 'StorageKey'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'at',\n      type: 'Hash'\n    }],\n    type: 'Option<u64>'\n  }\n};","map":{"version":3,"names":["rpc","getKeys","description","params","name","type","isHistoric","isOptional","getKeysPaged","alias","getStorage","getStorageEntries","getStorageHash","getStorageSize"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/interfaces/childstate/rpc.js"],"sourcesContent":["export const rpc = {\n    getKeys: {\n        description: 'Returns the keys with prefix from a child storage, leave empty to get all the keys',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'prefix',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Vec<StorageKey>'\n    },\n    getKeysPaged: {\n        alias: ['childstate_getKeysPagedAt'],\n        description: 'Returns the keys with prefix from a child storage with pagination support',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'prefix',\n                type: 'StorageKey'\n            },\n            {\n                name: 'count',\n                type: 'u32'\n            },\n            {\n                isOptional: true,\n                name: 'startKey',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Vec<StorageKey>'\n    },\n    getStorage: {\n        description: 'Returns a child storage entry at a specific block state',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Option<StorageData>'\n    },\n    getStorageEntries: {\n        description: 'Returns child storage entries for multiple keys at a specific block state',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'keys',\n                type: 'Vec<StorageKey>'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Vec<Option<StorageData>>'\n    },\n    getStorageHash: {\n        description: 'Returns the hash of a child storage entry at a block state',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Option<Hash>'\n    },\n    getStorageSize: {\n        description: 'Returns the size of a child storage entry at a block state',\n        params: [\n            {\n                name: 'childKey',\n                type: 'PrefixedStorageKey'\n            },\n            {\n                name: 'key',\n                type: 'StorageKey'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'Hash'\n            }\n        ],\n        type: 'Option<u64>'\n    }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,GAAG,GAAG;EACfC,OAAO,EAAE;IACLC,WAAW,EAAE,oFAAoF;IACjGC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;IACV,CAAC,EACD;MACID,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE;IACV,CAAC,EACD;MACIC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBH,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDG,YAAY,EAAE;IACVC,KAAK,EAAE,CAAC,2BAA2B,CAAC;IACpCP,WAAW,EAAE,2EAA2E;IACxFC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;IACV,CAAC,EACD;MACID,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE;IACV,CAAC,EACD;MACID,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE;IACV,CAAC,EACD;MACIE,UAAU,EAAE,IAAI;MAChBH,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;IACV,CAAC,EACD;MACIC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBH,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDK,UAAU,EAAE;IACRR,WAAW,EAAE,yDAAyD;IACtEC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;IACV,CAAC,EACD;MACID,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;IACV,CAAC,EACD;MACIC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBH,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDM,iBAAiB,EAAE;IACfT,WAAW,EAAE,2EAA2E;IACxFC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;IACV,CAAC,EACD;MACID,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE;IACV,CAAC,EACD;MACIC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBH,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDO,cAAc,EAAE;IACZV,WAAW,EAAE,4DAA4D;IACzEC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;IACV,CAAC,EACD;MACID,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;IACV,CAAC,EACD;MACIC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBH,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDQ,cAAc,EAAE;IACZX,WAAW,EAAE,4DAA4D;IACzEC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE;IACV,CAAC,EACD;MACID,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;IACV,CAAC,EACD;MACIC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBH,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}