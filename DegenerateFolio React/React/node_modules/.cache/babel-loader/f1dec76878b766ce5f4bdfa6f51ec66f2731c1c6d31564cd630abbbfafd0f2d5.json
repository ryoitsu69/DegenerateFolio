{"ast":null,"code":"export function extractAuthor(digest, sessionValidators) {\n  const [citem] = digest.logs.filter(e => e.isConsensus);\n  const [pitem] = digest.logs.filter(e => e.isPreRuntime);\n  const [sitem] = digest.logs.filter(e => e.isSeal);\n  let accountId;\n  try {\n    // This is critical to be first for BABE (before Consensus)\n    // If not first, we end up dropping the author at session-end\n    if (pitem) {\n      const [engine, data] = pitem.asPreRuntime;\n      accountId = engine.extractAuthor(data, sessionValidators);\n    }\n    if (!accountId && citem) {\n      const [engine, data] = citem.asConsensus;\n      accountId = engine.extractAuthor(data, sessionValidators);\n    }\n    // SEAL, still used in e.g. Kulupu for pow\n    if (!accountId && sitem) {\n      const [engine, data] = sitem.asSeal;\n      accountId = engine.extractAuthor(data, sessionValidators);\n    }\n  } catch {\n    // ignore\n  }\n  return accountId;\n}","map":{"version":3,"names":["extractAuthor","digest","sessionValidators","citem","logs","filter","e","isConsensus","pitem","isPreRuntime","sitem","isSeal","accountId","engine","data","asPreRuntime","asConsensus","asSeal"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/type/util.js"],"sourcesContent":["export function extractAuthor(digest, sessionValidators) {\n    const [citem] = digest.logs.filter((e) => e.isConsensus);\n    const [pitem] = digest.logs.filter((e) => e.isPreRuntime);\n    const [sitem] = digest.logs.filter((e) => e.isSeal);\n    let accountId;\n    try {\n        // This is critical to be first for BABE (before Consensus)\n        // If not first, we end up dropping the author at session-end\n        if (pitem) {\n            const [engine, data] = pitem.asPreRuntime;\n            accountId = engine.extractAuthor(data, sessionValidators);\n        }\n        if (!accountId && citem) {\n            const [engine, data] = citem.asConsensus;\n            accountId = engine.extractAuthor(data, sessionValidators);\n        }\n        // SEAL, still used in e.g. Kulupu for pow\n        if (!accountId && sitem) {\n            const [engine, data] = sitem.asSeal;\n            accountId = engine.extractAuthor(data, sessionValidators);\n        }\n    }\n    catch {\n        // ignore\n    }\n    return accountId;\n}\n"],"mappings":"AAAA,OAAO,SAASA,aAAaA,CAACC,MAAM,EAAEC,iBAAiB,EAAE;EACrD,MAAM,CAACC,KAAK,CAAC,GAAGF,MAAM,CAACG,IAAI,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,WAAW,CAAC;EACxD,MAAM,CAACC,KAAK,CAAC,GAAGP,MAAM,CAACG,IAAI,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACG,YAAY,CAAC;EACzD,MAAM,CAACC,KAAK,CAAC,GAAGT,MAAM,CAACG,IAAI,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACK,MAAM,CAAC;EACnD,IAAIC,SAAS;EACb,IAAI;IACA;IACA;IACA,IAAIJ,KAAK,EAAE;MACP,MAAM,CAACK,MAAM,EAAEC,IAAI,CAAC,GAAGN,KAAK,CAACO,YAAY;MACzCH,SAAS,GAAGC,MAAM,CAACb,aAAa,CAACc,IAAI,EAAEZ,iBAAiB,CAAC;IAC7D;IACA,IAAI,CAACU,SAAS,IAAIT,KAAK,EAAE;MACrB,MAAM,CAACU,MAAM,EAAEC,IAAI,CAAC,GAAGX,KAAK,CAACa,WAAW;MACxCJ,SAAS,GAAGC,MAAM,CAACb,aAAa,CAACc,IAAI,EAAEZ,iBAAiB,CAAC;IAC7D;IACA;IACA,IAAI,CAACU,SAAS,IAAIF,KAAK,EAAE;MACrB,MAAM,CAACG,MAAM,EAAEC,IAAI,CAAC,GAAGJ,KAAK,CAACO,MAAM;MACnCL,SAAS,GAAGC,MAAM,CAACb,aAAa,CAACc,IAAI,EAAEZ,iBAAiB,CAAC;IAC7D;EACJ,CAAC,CACD,MAAM;IACF;EAAA;EAEJ,OAAOU,SAAS;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}