{"ast":null,"code":"import { Bounds } from '../../../scene/container/bounds/Bounds.mjs';\nimport { getGlobalBounds } from '../../../scene/container/bounds/getGlobalBounds.mjs';\n\"use strict\";\nconst tempBounds = new Bounds();\nfunction addMaskBounds(mask, bounds, skipUpdateTransform) {\n  const boundsToMask = tempBounds;\n  mask.measurable = true;\n  getGlobalBounds(mask, skipUpdateTransform, boundsToMask);\n  bounds.addBoundsMask(boundsToMask);\n  mask.measurable = false;\n}\nexport { addMaskBounds };","map":{"version":3,"names":["tempBounds","Bounds","addMaskBounds","mask","bounds","skipUpdateTransform","boundsToMask","measurable","getGlobalBounds","addBoundsMask"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/mask/utils/addMaskBounds.ts"],"sourcesContent":["import { Bounds } from '../../../scene/container/bounds/Bounds';\nimport { getGlobalBounds } from '../../../scene/container/bounds/getGlobalBounds';\n\nimport type { Container } from '../../../scene/container/Container';\n\nconst tempBounds = new Bounds();\n\nexport function addMaskBounds(mask: Container, bounds: Bounds, skipUpdateTransform: boolean): void\n{\n    const boundsToMask = tempBounds;\n\n    mask.measurable = true;\n\n    getGlobalBounds(mask, skipUpdateTransform, boundsToMask);\n\n    bounds.addBoundsMask(boundsToMask);\n\n    mask.measurable = false;\n}\n\n"],"mappings":";;;AAKA,MAAMA,UAAA,GAAa,IAAIC,MAAO;AAEd,SAAAC,cAAcC,IAAiB,EAAAC,MAAA,EAAgBC,mBAC/D;EACI,MAAMC,YAAe,GAAAN,UAAA;EAErBG,IAAA,CAAKI,UAAa;EAEFC,eAAA,CAAAL,IAAA,EAAME,mBAAA,EAAqBC,YAAY;EAEvDF,MAAA,CAAOK,aAAA,CAAcH,YAAY;EAEjCH,IAAA,CAAKI,UAAa;AACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}