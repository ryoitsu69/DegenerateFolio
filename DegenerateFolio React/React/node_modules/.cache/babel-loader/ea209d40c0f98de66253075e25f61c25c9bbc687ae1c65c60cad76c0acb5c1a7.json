{"ast":null,"code":"export const rpc = {\n  getBlock: {\n    description: 'Get header and body of a relay chain block',\n    params: [{\n      isHistoric: true,\n      isOptional: true,\n      name: 'hash',\n      type: 'BlockHash'\n    }],\n    type: 'SignedBlock'\n  },\n  getBlockHash: {\n    description: 'Get the block hash for a specific block',\n    params: [{\n      isOptional: true,\n      name: 'blockNumber',\n      type: 'BlockNumber'\n    }],\n    type: 'BlockHash'\n  },\n  getFinalizedHead: {\n    alias: ['chain_getFinalisedHead'],\n    description: 'Get hash of the last finalized block in the canon chain',\n    params: [],\n    type: 'BlockHash'\n  },\n  getHeader: {\n    alias: ['chain_getHead'],\n    description: 'Retrieves the header for a specific block',\n    params: [{\n      isHistoric: true,\n      isOptional: true,\n      name: 'hash',\n      type: 'BlockHash'\n    }],\n    type: 'Header'\n  },\n  subscribeAllHeads: {\n    description: 'Retrieves the newest header via subscription',\n    params: [],\n    pubsub: ['allHead', 'subscribeAllHeads', 'unsubscribeAllHeads'],\n    type: 'Header'\n  },\n  subscribeFinalizedHeads: {\n    alias: ['chain_subscribeFinalisedHeads', 'chain_unsubscribeFinalisedHeads'],\n    description: 'Retrieves the best finalized header via subscription',\n    params: [],\n    pubsub: ['finalizedHead', 'subscribeFinalizedHeads', 'unsubscribeFinalizedHeads'],\n    type: 'Header'\n  },\n  subscribeNewHeads: {\n    alias: ['chain_unsubscribeNewHeads', 'subscribe_newHead', 'unsubscribe_newHead'],\n    description: 'Retrieves the best header via subscription',\n    params: [],\n    // NOTE These still has the aliassed version, compatible with 1.x\n    pubsub: ['newHead', 'subscribeNewHead', 'unsubscribeNewHead'],\n    type: 'Header'\n  }\n};","map":{"version":3,"names":["rpc","getBlock","description","params","isHistoric","isOptional","name","type","getBlockHash","getFinalizedHead","alias","getHeader","subscribeAllHeads","pubsub","subscribeFinalizedHeads","subscribeNewHeads"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/interfaces/chain/rpc.js"],"sourcesContent":["export const rpc = {\n    getBlock: {\n        description: 'Get header and body of a relay chain block',\n        params: [\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'hash',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'SignedBlock'\n    },\n    getBlockHash: {\n        description: 'Get the block hash for a specific block',\n        params: [\n            {\n                isOptional: true,\n                name: 'blockNumber',\n                type: 'BlockNumber'\n            }\n        ],\n        type: 'BlockHash'\n    },\n    getFinalizedHead: {\n        alias: ['chain_getFinalisedHead'],\n        description: 'Get hash of the last finalized block in the canon chain',\n        params: [],\n        type: 'BlockHash'\n    },\n    getHeader: {\n        alias: ['chain_getHead'],\n        description: 'Retrieves the header for a specific block',\n        params: [\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'hash',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Header'\n    },\n    subscribeAllHeads: {\n        description: 'Retrieves the newest header via subscription',\n        params: [],\n        pubsub: [\n            'allHead',\n            'subscribeAllHeads',\n            'unsubscribeAllHeads'\n        ],\n        type: 'Header'\n    },\n    subscribeFinalizedHeads: {\n        alias: ['chain_subscribeFinalisedHeads', 'chain_unsubscribeFinalisedHeads'],\n        description: 'Retrieves the best finalized header via subscription',\n        params: [],\n        pubsub: [\n            'finalizedHead',\n            'subscribeFinalizedHeads',\n            'unsubscribeFinalizedHeads'\n        ],\n        type: 'Header'\n    },\n    subscribeNewHeads: {\n        alias: ['chain_unsubscribeNewHeads', 'subscribe_newHead', 'unsubscribe_newHead'],\n        description: 'Retrieves the best header via subscription',\n        params: [],\n        // NOTE These still has the aliassed version, compatible with 1.x\n        pubsub: [\n            'newHead',\n            'subscribeNewHead',\n            'unsubscribeNewHead'\n        ],\n        type: 'Header'\n    }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,GAAG,GAAG;EACfC,QAAQ,EAAE;IACNC,WAAW,EAAE,4CAA4C;IACzDC,MAAM,EAAE,CACJ;MACIC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBC,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDC,YAAY,EAAE;IACVN,WAAW,EAAE,yCAAyC;IACtDC,MAAM,EAAE,CACJ;MACIE,UAAU,EAAE,IAAI;MAChBC,IAAI,EAAE,aAAa;MACnBC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDE,gBAAgB,EAAE;IACdC,KAAK,EAAE,CAAC,wBAAwB,CAAC;IACjCR,WAAW,EAAE,yDAAyD;IACtEC,MAAM,EAAE,EAAE;IACVI,IAAI,EAAE;EACV,CAAC;EACDI,SAAS,EAAE;IACPD,KAAK,EAAE,CAAC,eAAe,CAAC;IACxBR,WAAW,EAAE,2CAA2C;IACxDC,MAAM,EAAE,CACJ;MACIC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBC,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDK,iBAAiB,EAAE;IACfV,WAAW,EAAE,8CAA8C;IAC3DC,MAAM,EAAE,EAAE;IACVU,MAAM,EAAE,CACJ,SAAS,EACT,mBAAmB,EACnB,qBAAqB,CACxB;IACDN,IAAI,EAAE;EACV,CAAC;EACDO,uBAAuB,EAAE;IACrBJ,KAAK,EAAE,CAAC,+BAA+B,EAAE,iCAAiC,CAAC;IAC3ER,WAAW,EAAE,sDAAsD;IACnEC,MAAM,EAAE,EAAE;IACVU,MAAM,EAAE,CACJ,eAAe,EACf,yBAAyB,EACzB,2BAA2B,CAC9B;IACDN,IAAI,EAAE;EACV,CAAC;EACDQ,iBAAiB,EAAE;IACfL,KAAK,EAAE,CAAC,2BAA2B,EAAE,mBAAmB,EAAE,qBAAqB,CAAC;IAChFR,WAAW,EAAE,4CAA4C;IACzDC,MAAM,EAAE,EAAE;IACV;IACAU,MAAM,EAAE,CACJ,SAAS,EACT,kBAAkB,EAClB,oBAAoB,CACvB;IACDN,IAAI,EAAE;EACV;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}