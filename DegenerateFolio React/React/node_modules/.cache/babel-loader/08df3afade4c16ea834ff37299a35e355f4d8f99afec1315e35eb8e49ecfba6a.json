{"ast":null,"code":"\"use strict\";\n\nlet supportedGLCompressedTextureFormats;\nfunction getSupportedGlCompressedTextureFormats() {\n  if (supportedGLCompressedTextureFormats) return supportedGLCompressedTextureFormats;\n  const canvas = document.createElement(\"canvas\");\n  const gl = canvas.getContext(\"webgl\");\n  if (!gl) {\n    return [];\n  }\n  supportedGLCompressedTextureFormats = [\n  // BC compressed formats usable if \"texture-compression-bc\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  // 'bc6h-rgb-ufloat'\n  // 'bc6h-rgb-float'\n  // 'bc7-rgba-unorm',\n  // 'bc7-rgba-unorm-srgb',\n  ...(gl.getExtension(\"EXT_texture_compression_bptc\") ? [\"bc6h-rgb-ufloat\", \"bc6h-rgb-float\", \"bc7-rgba-unorm\", \"bc7-rgba-unorm-srgb\"] : []),\n  // BC compressed formats usable if \"texture-compression-bc\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  // 'bc1-rgba-unorm',\n  // 'bc1-rgba-unorm-srgb',\n  // 'bc4-r-unorm'\n  // 'bc4-r-snorm'\n  // 'bc5-rg-unorm'\n  // 'bc5-rg-snorm'\n  ...(gl.getExtension(\"WEBGL_compressed_texture_s3tc\") ? [\"bc1-rgba-unorm\", \"bc2-rgba-unorm\", \"bc3-rgba-unorm\"] : []), ...(gl.getExtension(\"WEBGL_compressed_texture_s3tc_srgb\") ? [\"bc1-rgba-unorm-srgb\", \"bc2-rgba-unorm-srgb\", \"bc3-rgba-unorm-srgb\"] : []), ...(gl.getExtension(\"EXT_texture_compression_rgtc\") ? [\"bc4-r-unorm\", \"bc4-r-snorm\", \"bc5-rg-unorm\", \"bc5-rg-snorm\"] : []),\n  // ETC2 compressed formats usable if \"texture-compression-etc2\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  ...(gl.getExtension(\"WEBGL_compressed_texture_etc\") ? [\"etc2-rgb8unorm\", \"etc2-rgb8unorm-srgb\", \"etc2-rgba8unorm\", \"etc2-rgba8unorm-srgb\", \"etc2-rgb8a1unorm\", \"etc2-rgb8a1unorm-srgb\", \"eac-r11unorm\", \"eac-rg11unorm\"] : []),\n  // 'eac-r11snorm',\n  // 'eac-rg11snorm',\n  // ASTC compressed formats usable if \"texture-compression-astc\" is both\n  // supported by the device/user agent and enabled in requestDevice.\n  ...(gl.getExtension(\"WEBGL_compressed_texture_astc\") ? [\"astc-4x4-unorm\", \"astc-4x4-unorm-srgb\", \"astc-5x4-unorm\", \"astc-5x4-unorm-srgb\", \"astc-5x5-unorm\", \"astc-5x5-unorm-srgb\", \"astc-6x5-unorm\", \"astc-6x5-unorm-srgb\", \"astc-6x6-unorm\", \"astc-6x6-unorm-srgb\", \"astc-8x5-unorm\", \"astc-8x5-unorm-srgb\", \"astc-8x6-unorm\", \"astc-8x6-unorm-srgb\", \"astc-8x8-unorm\", \"astc-8x8-unorm-srgb\", \"astc-10x5-unorm\", \"astc-10x5-unorm-srgb\", \"astc-10x6-unorm\", \"astc-10x6-unorm-srgb\", \"astc-10x8-unorm\", \"astc-10x8-unorm-srgb\", \"astc-10x10-unorm\", \"astc-10x10-unorm-srgb\", \"astc-12x10-unorm\", \"astc-12x10-unorm-srgb\", \"astc-12x12-unorm\", \"astc-12x12-unorm-srgb\"] : [])];\n  return supportedGLCompressedTextureFormats;\n}\nexport { getSupportedGlCompressedTextureFormats };","map":{"version":3,"names":["supportedGLCompressedTextureFormats","getSupportedGlCompressedTextureFormats","canvas","document","createElement","gl","getContext","getExtension"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/renderers/gl/texture/utils/getSupportedGlCompressedTextureFormats.ts"],"sourcesContent":["import type { TEXTURE_FORMATS } from '../../../shared/texture/const';\n\nlet supportedGLCompressedTextureFormats: TEXTURE_FORMATS[];\n\nexport function getSupportedGlCompressedTextureFormats(): TEXTURE_FORMATS[]\n{\n    if (supportedGLCompressedTextureFormats) return supportedGLCompressedTextureFormats;\n\n    // TODO: can we use already created context (webgl or webgl2)?\n    const canvas = document.createElement('canvas');\n    const gl = canvas.getContext('webgl');\n\n    if (!gl)\n    {\n        return [];\n    }\n\n    supportedGLCompressedTextureFormats = [\n        // BC compressed formats usable if \"texture-compression-bc\" is both\n        // supported by the device/user agent and enabled in requestDevice.\n        // 'bc6h-rgb-ufloat'\n        // 'bc6h-rgb-float'\n        // 'bc7-rgba-unorm',\n        // 'bc7-rgba-unorm-srgb',\n        ...gl.getExtension('EXT_texture_compression_bptc') ? [\n            'bc6h-rgb-ufloat',\n            'bc6h-rgb-float',\n            'bc7-rgba-unorm',\n            'bc7-rgba-unorm-srgb',\n        ] : [],\n        // BC compressed formats usable if \"texture-compression-bc\" is both\n        // supported by the device/user agent and enabled in requestDevice.\n        // 'bc1-rgba-unorm',\n        // 'bc1-rgba-unorm-srgb',\n        // 'bc4-r-unorm'\n        // 'bc4-r-snorm'\n        // 'bc5-rg-unorm'\n        // 'bc5-rg-snorm'\n        ...gl.getExtension('WEBGL_compressed_texture_s3tc') ? [\n            'bc1-rgba-unorm',\n            'bc2-rgba-unorm',\n            'bc3-rgba-unorm',\n        ] : [],\n        ...gl.getExtension('WEBGL_compressed_texture_s3tc_srgb') ? [\n            'bc1-rgba-unorm-srgb',\n            'bc2-rgba-unorm-srgb',\n            'bc3-rgba-unorm-srgb',\n        ] : [],\n\n        ...gl.getExtension('EXT_texture_compression_rgtc') ? [\n            'bc4-r-unorm',\n            'bc4-r-snorm',\n            'bc5-rg-unorm',\n            'bc5-rg-snorm',\n        ] : [],\n\n        // ETC2 compressed formats usable if \"texture-compression-etc2\" is both\n        // supported by the device/user agent and enabled in requestDevice.\n        ...gl.getExtension('WEBGL_compressed_texture_etc') ? [\n            'etc2-rgb8unorm',\n            'etc2-rgb8unorm-srgb',\n            'etc2-rgba8unorm',\n            'etc2-rgba8unorm-srgb',\n            'etc2-rgb8a1unorm',\n            'etc2-rgb8a1unorm-srgb',\n            'eac-r11unorm',\n            'eac-rg11unorm',\n        ] : [],\n        // 'eac-r11snorm',\n        // 'eac-rg11snorm',\n        // ASTC compressed formats usable if \"texture-compression-astc\" is both\n        // supported by the device/user agent and enabled in requestDevice.\n        ...gl.getExtension('WEBGL_compressed_texture_astc') ? [\n            'astc-4x4-unorm',\n            'astc-4x4-unorm-srgb',\n            'astc-5x4-unorm',\n            'astc-5x4-unorm-srgb',\n            'astc-5x5-unorm',\n            'astc-5x5-unorm-srgb',\n            'astc-6x5-unorm',\n            'astc-6x5-unorm-srgb',\n            'astc-6x6-unorm',\n            'astc-6x6-unorm-srgb',\n            'astc-8x5-unorm',\n            'astc-8x5-unorm-srgb',\n            'astc-8x6-unorm',\n            'astc-8x6-unorm-srgb',\n            'astc-8x8-unorm',\n            'astc-8x8-unorm-srgb',\n            'astc-10x5-unorm',\n            'astc-10x5-unorm-srgb',\n            'astc-10x6-unorm',\n            'astc-10x6-unorm-srgb',\n            'astc-10x8-unorm',\n            'astc-10x8-unorm-srgb',\n            'astc-10x10-unorm',\n            'astc-10x10-unorm-srgb',\n            'astc-12x10-unorm',\n            'astc-12x10-unorm-srgb',\n            'astc-12x12-unorm',\n            'astc-12x12-unorm-srgb'\n        ] : [],\n    ] as TEXTURE_FORMATS[];\n\n    return supportedGLCompressedTextureFormats;\n}\n"],"mappings":";;AAEA,IAAIA,mCAAA;AAEG,SAASC,sCAChBA,CAAA;EACQ,IAAAD,mCAAA,EAA4C,OAAAA,mCAAA;EAG1C,MAAAE,MAAA,GAASC,QAAS,CAAAC,aAAA,CAAc,QAAQ;EACxC,MAAAC,EAAA,GAAKH,MAAO,CAAAI,UAAA,CAAW,OAAO;EAEpC,IAAI,CAACD,EACL;IACI,OAAO,EAAC;EAAA;EAG0BL,mCAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAOlC,IAAGK,EAAA,CAAGE,YAAa,+BAA8B,CAAI,IACjD,mBACA,kBACA,kBACA,yBACA,EAAC;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EASL,IAAGF,EAAA,CAAGE,YAAa,gCAA+B,CAAI,IAClD,kBACA,kBACA,oBACA,EAAC,GACL,IAAGF,EAAA,CAAGE,YAAa,qCAAoC,CAAI,IACvD,uBACA,uBACA,yBACA,EAAC,GAEL,IAAGF,EAAA,CAAGE,YAAa,+BAA8B,CAAI,IACjD,eACA,eACA,gBACA,kBACA,EAAC;EAAA;EAAA;EAIL,IAAGF,EAAA,CAAGE,YAAa,+BAA8B,CAAI,IACjD,kBACA,uBACA,mBACA,wBACA,oBACA,yBACA,gBACA,mBACA,EAAC;EAAA;EAAA;EAAA;EAAA;EAKL,IAAGF,EAAA,CAAGE,YAAa,gCAA+B,CAAI,IAClD,kBACA,uBACA,kBACA,uBACA,kBACA,uBACA,kBACA,uBACA,kBACA,uBACA,kBACA,uBACA,kBACA,uBACA,kBACA,uBACA,mBACA,wBACA,mBACA,wBACA,mBACA,wBACA,oBACA,yBACA,oBACA,yBACA,oBACA,2BACA,EAAC,EACT;EAEO,OAAAP,mCAAA;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}