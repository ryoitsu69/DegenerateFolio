{"ast":null,"code":"import { lazyMethods, logger, objectClear } from '@polkadot/util';\nconst l = logger('api/augment');\nfunction logLength(type, values) {\n  let and = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  return values.length ? \" \".concat(values.length, \" \").concat(type).concat(and.length ? ' and' : '') : '';\n}\nfunction logValues(type, values) {\n  return values.length ? \"\\n\\t\".concat(type.padStart(7), \": \").concat(values.sort().join(', ')) : '';\n}\nfunction warn(prefix, type, _ref) {\n  let [added, removed] = _ref;\n  if (added.length || removed.length) {\n    l.warn(\"api.\".concat(prefix, \": Found\").concat(logLength('added', added, removed)).concat(logLength('removed', removed), \" \").concat(type, \":\").concat(logValues('added', added)).concat(logValues('removed', removed)));\n  }\n}\nfunction findSectionExcludes(a, b) {\n  return a.filter(s => !b.includes(s));\n}\nfunction findSectionIncludes(a, b) {\n  return a.filter(s => b.includes(s));\n}\nfunction extractSections(src, dst) {\n  const srcSections = Object.keys(src);\n  const dstSections = Object.keys(dst);\n  return [findSectionExcludes(srcSections, dstSections), findSectionExcludes(dstSections, srcSections)];\n}\nfunction findMethodExcludes(src, dst) {\n  const srcSections = Object.keys(src);\n  const dstSections = findSectionIncludes(Object.keys(dst), srcSections);\n  const excludes = [];\n  for (let s = 0, scount = dstSections.length; s < scount; s++) {\n    const section = dstSections[s];\n    const srcMethods = Object.keys(src[section]);\n    const dstMethods = Object.keys(dst[section]);\n    for (let d = 0, mcount = dstMethods.length; d < mcount; d++) {\n      const method = dstMethods[d];\n      if (!srcMethods.includes(method)) {\n        excludes.push(\"\".concat(section, \".\").concat(method));\n      }\n    }\n  }\n  return excludes;\n}\nfunction extractMethods(src, dst) {\n  return [findMethodExcludes(dst, src), findMethodExcludes(src, dst)];\n}\n/**\n * @description Takes a decorated api section (e.g. api.tx) and augment it with the details. It does not override what is\n * already available, but rather just adds new missing items into the result object.\n * @internal\n */\nexport function augmentObject(prefix, src, dst) {\n  let fromEmpty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  fromEmpty && objectClear(dst);\n  // NOTE: This part is slightly problematic since it will get the\n  // values for at least all the sections and the names of the methods\n  // (Since methods won't be decorated before lazy, this _may_ be ok)\n  if (prefix && Object.keys(dst).length) {\n    warn(prefix, 'modules', extractSections(src, dst));\n    warn(prefix, 'calls', extractMethods(src, dst));\n  }\n  const sections = Object.keys(src);\n  for (let i = 0, count = sections.length; i < count; i++) {\n    const section = sections[i];\n    const methods = src[section];\n    // We don't set here with a lazy interface, we decorate based\n    // on the top-level structure (this bypasses adding lazy onto lazy)\n    if (!dst[section]) {\n      dst[section] = {};\n    }\n    lazyMethods(dst[section], Object.keys(methods), m => methods[m]);\n  }\n  return dst;\n}","map":{"version":3,"names":["lazyMethods","logger","objectClear","l","logLength","type","values","and","arguments","length","undefined","concat","logValues","padStart","sort","join","warn","prefix","_ref","added","removed","findSectionExcludes","a","b","filter","s","includes","findSectionIncludes","extractSections","src","dst","srcSections","Object","keys","dstSections","findMethodExcludes","excludes","scount","section","srcMethods","dstMethods","d","mcount","method","push","extractMethods","augmentObject","fromEmpty","sections","i","count","methods","m"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api/util/augmentObject.js"],"sourcesContent":["import { lazyMethods, logger, objectClear } from '@polkadot/util';\nconst l = logger('api/augment');\nfunction logLength(type, values, and = []) {\n    return values.length\n        ? ` ${values.length} ${type}${and.length ? ' and' : ''}`\n        : '';\n}\nfunction logValues(type, values) {\n    return values.length\n        ? `\\n\\t${type.padStart(7)}: ${values.sort().join(', ')}`\n        : '';\n}\nfunction warn(prefix, type, [added, removed]) {\n    if (added.length || removed.length) {\n        l.warn(`api.${prefix}: Found${logLength('added', added, removed)}${logLength('removed', removed)} ${type}:${logValues('added', added)}${logValues('removed', removed)}`);\n    }\n}\nfunction findSectionExcludes(a, b) {\n    return a.filter((s) => !b.includes(s));\n}\nfunction findSectionIncludes(a, b) {\n    return a.filter((s) => b.includes(s));\n}\nfunction extractSections(src, dst) {\n    const srcSections = Object.keys(src);\n    const dstSections = Object.keys(dst);\n    return [\n        findSectionExcludes(srcSections, dstSections),\n        findSectionExcludes(dstSections, srcSections)\n    ];\n}\nfunction findMethodExcludes(src, dst) {\n    const srcSections = Object.keys(src);\n    const dstSections = findSectionIncludes(Object.keys(dst), srcSections);\n    const excludes = [];\n    for (let s = 0, scount = dstSections.length; s < scount; s++) {\n        const section = dstSections[s];\n        const srcMethods = Object.keys(src[section]);\n        const dstMethods = Object.keys(dst[section]);\n        for (let d = 0, mcount = dstMethods.length; d < mcount; d++) {\n            const method = dstMethods[d];\n            if (!srcMethods.includes(method)) {\n                excludes.push(`${section}.${method}`);\n            }\n        }\n    }\n    return excludes;\n}\nfunction extractMethods(src, dst) {\n    return [\n        findMethodExcludes(dst, src),\n        findMethodExcludes(src, dst)\n    ];\n}\n/**\n * @description Takes a decorated api section (e.g. api.tx) and augment it with the details. It does not override what is\n * already available, but rather just adds new missing items into the result object.\n * @internal\n */\nexport function augmentObject(prefix, src, dst, fromEmpty = false) {\n    fromEmpty && objectClear(dst);\n    // NOTE: This part is slightly problematic since it will get the\n    // values for at least all the sections and the names of the methods\n    // (Since methods won't be decorated before lazy, this _may_ be ok)\n    if (prefix && Object.keys(dst).length) {\n        warn(prefix, 'modules', extractSections(src, dst));\n        warn(prefix, 'calls', extractMethods(src, dst));\n    }\n    const sections = Object.keys(src);\n    for (let i = 0, count = sections.length; i < count; i++) {\n        const section = sections[i];\n        const methods = src[section];\n        // We don't set here with a lazy interface, we decorate based\n        // on the top-level structure (this bypasses adding lazy onto lazy)\n        if (!dst[section]) {\n            dst[section] = {};\n        }\n        lazyMethods(dst[section], Object.keys(methods), (m) => methods[m]);\n    }\n    return dst;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}