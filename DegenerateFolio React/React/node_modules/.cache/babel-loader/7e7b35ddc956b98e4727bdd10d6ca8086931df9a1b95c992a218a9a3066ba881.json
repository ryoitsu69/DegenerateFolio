{"ast":null,"code":"import { u8aToU8a } from '@polkadot/util';\nconst SEC_LEN = 64;\nconst PUB_LEN = 32;\nconst TOT_LEN = SEC_LEN + PUB_LEN;\nexport function sr25519PairFromU8a(full) {\n  const fullU8a = u8aToU8a(full);\n  if (fullU8a.length !== TOT_LEN) {\n    throw new Error(\"Expected keypair with \".concat(TOT_LEN, \" bytes, found \").concat(fullU8a.length));\n  }\n  return {\n    publicKey: fullU8a.slice(SEC_LEN, TOT_LEN),\n    secretKey: fullU8a.slice(0, SEC_LEN)\n  };\n}","map":{"version":3,"names":["u8aToU8a","SEC_LEN","PUB_LEN","TOT_LEN","sr25519PairFromU8a","full","fullU8a","length","Error","concat","publicKey","slice","secretKey"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/sr25519/pair/fromU8a.js"],"sourcesContent":["import { u8aToU8a } from '@polkadot/util';\nconst SEC_LEN = 64;\nconst PUB_LEN = 32;\nconst TOT_LEN = SEC_LEN + PUB_LEN;\nexport function sr25519PairFromU8a(full) {\n    const fullU8a = u8aToU8a(full);\n    if (fullU8a.length !== TOT_LEN) {\n        throw new Error(`Expected keypair with ${TOT_LEN} bytes, found ${fullU8a.length}`);\n    }\n    return {\n        publicKey: fullU8a.slice(SEC_LEN, TOT_LEN),\n        secretKey: fullU8a.slice(0, SEC_LEN)\n    };\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,MAAMC,OAAO,GAAG,EAAE;AAClB,MAAMC,OAAO,GAAG,EAAE;AAClB,MAAMC,OAAO,GAAGF,OAAO,GAAGC,OAAO;AACjC,OAAO,SAASE,kBAAkBA,CAACC,IAAI,EAAE;EACrC,MAAMC,OAAO,GAAGN,QAAQ,CAACK,IAAI,CAAC;EAC9B,IAAIC,OAAO,CAACC,MAAM,KAAKJ,OAAO,EAAE;IAC5B,MAAM,IAAIK,KAAK,0BAAAC,MAAA,CAA0BN,OAAO,oBAAAM,MAAA,CAAiBH,OAAO,CAACC,MAAM,CAAE,CAAC;EACtF;EACA,OAAO;IACHG,SAAS,EAAEJ,OAAO,CAACK,KAAK,CAACV,OAAO,EAAEE,OAAO,CAAC;IAC1CS,SAAS,EAAEN,OAAO,CAACK,KAAK,CAAC,CAAC,EAAEV,OAAO;EACvC,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}