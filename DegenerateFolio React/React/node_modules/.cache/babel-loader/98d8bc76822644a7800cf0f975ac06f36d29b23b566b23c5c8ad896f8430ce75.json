{"ast":null,"code":"import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { createSignedBlockExtended } from '../type/index.js';\nimport { memo } from '../util/index.js';\nimport { getAuthorDetails } from './util.js';\n/**\n * @name getBlock\n * @param {( Uint8Array | string )} hash - A block hash as U8 array or string.\n * @description Get a specific block (e.g. rpc.chain.getBlock) and extend it with the author\n * @example\n * <BR>\n *\n * ```javascript\n * const { author, block } = await api.derive.chain.getBlock('0x123...456');\n *\n * console.log(`block #${block.header.number} was authored by ${author}`);\n * ```\n */\nexport function getBlock(instanceId, api) {\n  return memo(instanceId, blockHash => combineLatest([api.rpc.chain.getBlock(blockHash), api.queryAt(blockHash)]).pipe(switchMap(([signedBlock, queryAt]) => combineLatest([of(signedBlock), queryAt.system.events(), getAuthorDetails(api, signedBlock.block.header, blockHash)])), map(([signedBlock, events, [, validators, author]]) => createSignedBlockExtended(events.registry, signedBlock, events, validators, author))));\n}","map":{"version":3,"names":["combineLatest","map","of","switchMap","createSignedBlockExtended","memo","getAuthorDetails","getBlock","instanceId","api","blockHash","rpc","chain","queryAt","pipe","signedBlock","system","events","block","header","validators","author","registry"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/chain/getBlock.js"],"sourcesContent":["import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { createSignedBlockExtended } from '../type/index.js';\nimport { memo } from '../util/index.js';\nimport { getAuthorDetails } from './util.js';\n/**\n * @name getBlock\n * @param {( Uint8Array | string )} hash - A block hash as U8 array or string.\n * @description Get a specific block (e.g. rpc.chain.getBlock) and extend it with the author\n * @example\n * <BR>\n *\n * ```javascript\n * const { author, block } = await api.derive.chain.getBlock('0x123...456');\n *\n * console.log(`block #${block.header.number} was authored by ${author}`);\n * ```\n */\nexport function getBlock(instanceId, api) {\n    return memo(instanceId, (blockHash) => combineLatest([\n        api.rpc.chain.getBlock(blockHash),\n        api.queryAt(blockHash)\n    ]).pipe(switchMap(([signedBlock, queryAt]) => combineLatest([\n        of(signedBlock),\n        queryAt.system.events(),\n        getAuthorDetails(api, signedBlock.block.header, blockHash)\n    ])), map(([signedBlock, events, [, validators, author]]) => createSignedBlockExtended(events.registry, signedBlock, events, validators, author))));\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,GAAG,EAAEC,EAAE,EAAEC,SAAS,QAAQ,MAAM;AACxD,SAASC,yBAAyB,QAAQ,kBAAkB;AAC5D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,gBAAgB,QAAQ,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAACC,UAAU,EAAEC,GAAG,EAAE;EACtC,OAAOJ,IAAI,CAACG,UAAU,EAAGE,SAAS,IAAKV,aAAa,CAAC,CACjDS,GAAG,CAACE,GAAG,CAACC,KAAK,CAACL,QAAQ,CAACG,SAAS,CAAC,EACjCD,GAAG,CAACI,OAAO,CAACH,SAAS,CAAC,CACzB,CAAC,CAACI,IAAI,CAACX,SAAS,CAAC,CAAC,CAACY,WAAW,EAAEF,OAAO,CAAC,KAAKb,aAAa,CAAC,CACxDE,EAAE,CAACa,WAAW,CAAC,EACfF,OAAO,CAACG,MAAM,CAACC,MAAM,CAAC,CAAC,EACvBX,gBAAgB,CAACG,GAAG,EAAEM,WAAW,CAACG,KAAK,CAACC,MAAM,EAAET,SAAS,CAAC,CAC7D,CAAC,CAAC,EAAET,GAAG,CAAC,CAAC,CAACc,WAAW,EAAEE,MAAM,EAAE,GAAGG,UAAU,EAAEC,MAAM,CAAC,CAAC,KAAKjB,yBAAyB,CAACa,MAAM,CAACK,QAAQ,EAAEP,WAAW,EAAEE,MAAM,EAAEG,UAAU,EAAEC,MAAM,CAAC,CAAC,CAAC,CAAC;AACtJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}