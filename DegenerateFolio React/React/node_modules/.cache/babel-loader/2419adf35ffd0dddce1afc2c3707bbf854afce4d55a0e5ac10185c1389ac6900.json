{"ast":null,"code":"\"use strict\";\n\nclass BatchTextureArray {\n  constructor() {\n    /** Respective locations for textures. */\n    this.ids = /* @__PURE__ */Object.create(null);\n    this.textures = [];\n    this.count = 0;\n  }\n  /** Clear the textures and their locations. */\n  clear() {\n    for (let i = 0; i < this.count; i++) {\n      const t = this.textures[i];\n      this.textures[i] = null;\n      this.ids[t.uid] = null;\n    }\n    this.count = 0;\n  }\n}\nexport { BatchTextureArray };","map":{"version":3,"names":["BatchTextureArray","constructor","ids","Object","create","textures","count","clear","i","t","uid"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/batcher/shared/BatchTextureArray.ts"],"sourcesContent":["import type { TextureSource } from '../../renderers/shared/texture/sources/TextureSource';\n\n/**\n * Used by the batcher to build texture batches. Holds list of textures and their respective locations.\n * @memberof rendering\n */\nexport class BatchTextureArray\n{\n    /** Inside textures array. */\n    public textures: TextureSource[];\n\n    /** Respective locations for textures. */\n    public ids: Record<number, number> = Object.create(null);\n\n    /** Number of filled elements. */\n    public count: number;\n\n    constructor()\n    {\n        this.textures = [];\n        this.count = 0;\n    }\n\n    /** Clear the textures and their locations. */\n    public clear(): void\n    {\n        for (let i = 0; i < this.count; i++)\n        {\n            const t = this.textures[i];\n\n            this.textures[i] = null;\n            this.ids[t.uid] = null;\n        }\n\n        this.count = 0;\n    }\n}\n"],"mappings":";;AAMO,MAAMA,iBACb;EAUIC,WACAA,CAAA;IANA;IAAO,KAAAC,GAAA,kBAAqCC,MAAA,CAAAC,MAAA,CAAO,IAAI;IAOnD,KAAKC,QAAA,GAAW,EAAC;IACjB,KAAKC,KAAQ;EAAA;EACjB;EAGOC,KACPA,CAAA;IACI,SAASC,CAAI,MAAGA,CAAI,QAAKF,KAAA,EAAOE,CAChC;MACU,MAAAC,CAAA,GAAI,IAAK,CAAAJ,QAAA,CAASG,CAAC;MAEpB,KAAAH,QAAA,CAASG,CAAC,CAAI;MACd,KAAAN,GAAA,CAAIO,CAAE,CAAAC,GAAG,CAAI;IAAA;IAGtB,KAAKJ,KAAQ;EAAA;AAErB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}