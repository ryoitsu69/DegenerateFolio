{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Resolver = void 0;\nconst web3_errors_1 = require(\"web3-errors\");\nconst web3_utils_1 = require(\"web3-utils\");\nconst web3_validator_1 = require(\"web3-validator\");\nconst config_js_1 = require(\"./config.js\");\nconst utils_js_1 = require(\"./utils.js\");\n//  Default public resolver\n//  https://github.com/ensdomains/resolvers/blob/master/contracts/PublicResolver.sol\nclass Resolver {\n  constructor(registry) {\n    this.registry = registry;\n  }\n  getResolverContractAdapter(ENSName) {\n    return __awaiter(this, void 0, void 0, function* () {\n      //  TODO : (Future 4.1.0 TDB) cache resolver contract if frequently queried same ENS name, refresh cache based on TTL and usage, also limit cache size, optional cache with a flag\n      return this.registry.getResolver(ENSName);\n    });\n  }\n  //  https://eips.ethereum.org/EIPS/eip-165\n  // eslint-disable-next-line class-methods-use-this\n  checkInterfaceSupport(resolverContract, methodName) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n      if ((0, web3_utils_1.isNullish)(config_js_1.interfaceIds[methodName])) throw new web3_errors_1.ResolverMethodMissingError((_a = resolverContract.options.address) !== null && _a !== void 0 ? _a : '', methodName);\n      const supported = yield resolverContract.methods.supportsInterface(config_js_1.interfaceIds[methodName]).call();\n      if (!supported) throw new web3_errors_1.ResolverMethodMissingError((_b = resolverContract.options.address) !== null && _b !== void 0 ? _b : '', methodName);\n    });\n  }\n  supportsInterface(ENSName, interfaceId) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const resolverContract = yield this.getResolverContractAdapter(ENSName);\n      let interfaceIdParam = interfaceId;\n      if (!(0, web3_validator_1.isHexStrict)(interfaceIdParam)) {\n        interfaceIdParam = (_a = (0, web3_utils_1.sha3)(interfaceId)) !== null && _a !== void 0 ? _a : '';\n        if (interfaceId === '') throw new Error('Invalid interface Id');\n        interfaceIdParam = interfaceIdParam.slice(0, 10);\n      }\n      return resolverContract.methods.supportsInterface(interfaceIdParam).call();\n    });\n  }\n  // eslint-disable-next-line @typescript-eslint/no-inferrable-types\n  getAddress(ENSName) {\n    let coinType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 60;\n    return __awaiter(this, void 0, void 0, function* () {\n      const resolverContract = yield this.getResolverContractAdapter(ENSName);\n      yield this.checkInterfaceSupport(resolverContract, config_js_1.methodsInInterface.addr);\n      return resolverContract.methods.addr((0, utils_js_1.namehash)(ENSName), coinType).call();\n    });\n  }\n  getPubkey(ENSName) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const resolverContract = yield this.getResolverContractAdapter(ENSName);\n      yield this.checkInterfaceSupport(resolverContract, config_js_1.methodsInInterface.pubkey);\n      return resolverContract.methods.pubkey((0, utils_js_1.namehash)(ENSName)).call();\n    });\n  }\n  getContenthash(ENSName) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const resolverContract = yield this.getResolverContractAdapter(ENSName);\n      yield this.checkInterfaceSupport(resolverContract, config_js_1.methodsInInterface.contenthash);\n      return resolverContract.methods.contenthash((0, utils_js_1.namehash)(ENSName)).call();\n    });\n  }\n  setAddress(ENSName, address, txConfig) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const resolverContract = yield this.getResolverContractAdapter(ENSName);\n      yield this.checkInterfaceSupport(resolverContract, config_js_1.methodsInInterface.setAddr);\n      return resolverContract.methods.setAddr((0, utils_js_1.namehash)(ENSName), address).send(txConfig);\n    });\n  }\n  getText(ENSName, key) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const resolverContract = yield this.getResolverContractAdapter(ENSName);\n      yield this.checkInterfaceSupport(resolverContract, config_js_1.methodsInInterface.text);\n      return resolverContract.methods.text((0, utils_js_1.namehash)(ENSName), key).call();\n    });\n  }\n  getName(address) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const resolverContract = yield this.getResolverContractAdapter(address);\n      yield this.checkInterfaceSupport(resolverContract, config_js_1.methodsInInterface.name);\n      return resolverContract.methods.name((0, utils_js_1.namehash)(address)).call();\n    });\n  }\n}\nexports.Resolver = Resolver;","map":{"version":3,"names":["web3_errors_1","require","web3_utils_1","web3_validator_1","config_js_1","utils_js_1","Resolver","constructor","registry","getResolverContractAdapter","ENSName","getResolver","checkInterfaceSupport","resolverContract","methodName","isNullish","interfaceIds","ResolverMethodMissingError","_a","options","address","supported","methods","supportsInterface","call","_b","interfaceId","interfaceIdParam","isHexStrict","sha3","Error","slice","getAddress","coinType","arguments","length","undefined","methodsInInterface","addr","namehash","getPubkey","pubkey","getContenthash","contenthash","setAddress","txConfig","setAddr","send","getText","key","text","getName","name","exports"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/web3-eth-ens/src/resolver.ts"],"sourcesContent":["ï»¿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { ResolverMethodMissingError } from 'web3-errors';\nimport { Contract } from 'web3-eth-contract';\nimport { isNullish, sha3 } from 'web3-utils';\nimport { isHexStrict } from 'web3-validator';\nimport { Address, PayableCallOptions } from 'web3-types';\nimport { PublicResolverAbi } from './abi/ens/PublicResolver.js';\nimport { interfaceIds, methodsInInterface } from './config.js';\nimport { Registry } from './registry.js';\nimport { namehash } from './utils.js';\n\n\n//  Default public resolver\n//  https://github.com/ensdomains/resolvers/blob/master/contracts/PublicResolver.sol\n\nexport class Resolver {\n\tprivate readonly registry: Registry;\n\n\tpublic constructor(registry: Registry) {\n\t\tthis.registry = registry;\n\t}\n\n\tprivate async getResolverContractAdapter(ENSName: string) {\n\t\t//  TODO : (Future 4.1.0 TDB) cache resolver contract if frequently queried same ENS name, refresh cache based on TTL and usage, also limit cache size, optional cache with a flag\n\t\treturn this.registry.getResolver(ENSName);\n\t}\n\n\t//  https://eips.ethereum.org/EIPS/eip-165\n\t// eslint-disable-next-line class-methods-use-this\n\tpublic async checkInterfaceSupport(\n\t\tresolverContract: Contract<typeof PublicResolverAbi>,\n\t\tmethodName: string,\n\t) {\n\t\tif (isNullish(interfaceIds[methodName]))\n\t\t\tthrow new ResolverMethodMissingError(\n\t\t\t\tresolverContract.options.address ?? '',\n\t\t\t\tmethodName,\n\t\t\t);\n\n\t\tconst supported = await resolverContract.methods\n\t\t\t.supportsInterface(interfaceIds[methodName])\n\t\t\t.call();\n\n\t\tif (!supported)\n\t\t\tthrow new ResolverMethodMissingError(\n\t\t\t\tresolverContract.options.address ?? '',\n\t\t\t\tmethodName,\n\t\t\t);\n\t}\n\n\tpublic async supportsInterface(ENSName: string, interfaceId: string) {\n\t\tconst resolverContract = await this.getResolverContractAdapter(ENSName);\n\n\t\tlet interfaceIdParam = interfaceId;\n\n\t\tif (!isHexStrict(interfaceIdParam)) {\n\t\t\tinterfaceIdParam = sha3(interfaceId) ?? '';\n\n\t\t\tif (interfaceId === '') throw new Error('Invalid interface Id');\n\n\t\t\tinterfaceIdParam = interfaceIdParam.slice(0, 10);\n\t\t}\n\n\t\treturn resolverContract.methods.supportsInterface(interfaceIdParam).call();\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-inferrable-types\n\tpublic async getAddress(ENSName: string, coinType: number = 60) {\n\t\tconst resolverContract = await this.getResolverContractAdapter(ENSName);\n\n\t\tawait this.checkInterfaceSupport(resolverContract, methodsInInterface.addr);\n\n\t\treturn resolverContract.methods.addr(namehash(ENSName), coinType).call();\n\t}\n\n\tpublic async getPubkey(ENSName: string) {\n\t\tconst resolverContract = await this.getResolverContractAdapter(ENSName);\n\n\t\tawait this.checkInterfaceSupport(resolverContract, methodsInInterface.pubkey);\n\n\t\treturn resolverContract.methods.pubkey(namehash(ENSName)).call();\n\t}\n\n\tpublic async getContenthash(ENSName: string) {\n\t\tconst resolverContract = await this.getResolverContractAdapter(ENSName);\n\n\t\tawait this.checkInterfaceSupport(resolverContract, methodsInInterface.contenthash);\n\n\t\treturn resolverContract.methods.contenthash(namehash(ENSName)).call();\n\t}\n\n\tpublic async setAddress(\n\t\tENSName: string,\n\t\taddress: Address,\n\t\ttxConfig: PayableCallOptions,\n\t) {\n\t\tconst resolverContract = await this.getResolverContractAdapter(ENSName);\n\t\tawait this.checkInterfaceSupport(resolverContract, methodsInInterface.setAddr);\n\n\t\treturn resolverContract.methods\n\t\t\t.setAddr(namehash(ENSName), address)\n\t\t\t.send(txConfig);\n\t}\n\n\tpublic async getText(\n\t\tENSName: string,\n\t\tkey: string,\n\t) {\n\t\tconst resolverContract = await this.getResolverContractAdapter(ENSName);\n\t\tawait this.checkInterfaceSupport(resolverContract, methodsInInterface.text);\n\n\t\treturn resolverContract.methods\n\t\t\t.text(namehash(ENSName), key).call()\n\t}\n\n\tpublic async getName(\n\t\taddress: string\n\t) {\n\t\tconst resolverContract = await this.getResolverContractAdapter(address);\n\t\tawait this.checkInterfaceSupport(resolverContract, methodsInInterface.name);\n\n\t\treturn resolverContract.methods\n\t\t\t.name(namehash(address)).call()\n\t}\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,MAAAA,aAAA,GAAAC,OAAA;AAEA,MAAAC,YAAA,GAAAD,OAAA;AACA,MAAAE,gBAAA,GAAAF,OAAA;AAGA,MAAAG,WAAA,GAAAH,OAAA;AAEA,MAAAI,UAAA,GAAAJ,OAAA;AAGA;AACA;AAEA,MAAaK,QAAQ;EAGpBC,YAAmBC,QAAkB;IACpC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EACzB;EAEcC,0BAA0BA,CAACC,OAAe;;MACvD;MACA,OAAO,IAAI,CAACF,QAAQ,CAACG,WAAW,CAACD,OAAO,CAAC;IAC1C,CAAC;;EAED;EACA;EACaE,qBAAqBA,CACjCC,gBAAoD,EACpDC,UAAkB;;;MAElB,IAAI,IAAAZ,YAAA,CAAAa,SAAS,EAACX,WAAA,CAAAY,YAAY,CAACF,UAAU,CAAC,CAAC,EACtC,MAAM,IAAId,aAAA,CAAAiB,0BAA0B,CACnC,CAAAC,EAAA,GAAAL,gBAAgB,CAACM,OAAO,CAACC,OAAO,cAAAF,EAAA,cAAAA,EAAA,GAAI,EAAE,EACtCJ,UAAU,CACV;MAEF,MAAMO,SAAS,GAAG,MAAMR,gBAAgB,CAACS,OAAO,CAC9CC,iBAAiB,CAACnB,WAAA,CAAAY,YAAY,CAACF,UAAU,CAAC,CAAC,CAC3CU,IAAI,EAAE;MAER,IAAI,CAACH,SAAS,EACb,MAAM,IAAIrB,aAAA,CAAAiB,0BAA0B,CACnC,CAAAQ,EAAA,GAAAZ,gBAAgB,CAACM,OAAO,CAACC,OAAO,cAAAK,EAAA,cAAAA,EAAA,GAAI,EAAE,EACtCX,UAAU,CACV;;;EAGUS,iBAAiBA,CAACb,OAAe,EAAEgB,WAAmB;;;MAClE,MAAMb,gBAAgB,GAAG,MAAM,IAAI,CAACJ,0BAA0B,CAACC,OAAO,CAAC;MAEvE,IAAIiB,gBAAgB,GAAGD,WAAW;MAElC,IAAI,CAAC,IAAAvB,gBAAA,CAAAyB,WAAW,EAACD,gBAAgB,CAAC,EAAE;QACnCA,gBAAgB,GAAG,CAAAT,EAAA,OAAAhB,YAAA,CAAA2B,IAAI,EAACH,WAAW,CAAC,cAAAR,EAAA,cAAAA,EAAA,GAAI,EAAE;QAE1C,IAAIQ,WAAW,KAAK,EAAE,EAAE,MAAM,IAAII,KAAK,CAAC,sBAAsB,CAAC;QAE/DH,gBAAgB,GAAGA,gBAAgB,CAACI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;;MAGjD,OAAOlB,gBAAgB,CAACS,OAAO,CAACC,iBAAiB,CAACI,gBAAgB,CAAC,CAACH,IAAI,EAAE;;;EAG3E;EACaQ,UAAUA,CAACtB,OAAe,EAAuB;IAAA,IAArBuB,QAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAmB,EAAE;;MAC7D,MAAMrB,gBAAgB,GAAG,MAAM,IAAI,CAACJ,0BAA0B,CAACC,OAAO,CAAC;MAEvE,MAAM,IAAI,CAACE,qBAAqB,CAACC,gBAAgB,EAAET,WAAA,CAAAiC,kBAAkB,CAACC,IAAI,CAAC;MAE3E,OAAOzB,gBAAgB,CAACS,OAAO,CAACgB,IAAI,CAAC,IAAAjC,UAAA,CAAAkC,QAAQ,EAAC7B,OAAO,CAAC,EAAEuB,QAAQ,CAAC,CAACT,IAAI,EAAE;IACzE,CAAC;;EAEYgB,SAASA,CAAC9B,OAAe;;MACrC,MAAMG,gBAAgB,GAAG,MAAM,IAAI,CAACJ,0BAA0B,CAACC,OAAO,CAAC;MAEvE,MAAM,IAAI,CAACE,qBAAqB,CAACC,gBAAgB,EAAET,WAAA,CAAAiC,kBAAkB,CAACI,MAAM,CAAC;MAE7E,OAAO5B,gBAAgB,CAACS,OAAO,CAACmB,MAAM,CAAC,IAAApC,UAAA,CAAAkC,QAAQ,EAAC7B,OAAO,CAAC,CAAC,CAACc,IAAI,EAAE;IACjE,CAAC;;EAEYkB,cAAcA,CAAChC,OAAe;;MAC1C,MAAMG,gBAAgB,GAAG,MAAM,IAAI,CAACJ,0BAA0B,CAACC,OAAO,CAAC;MAEvE,MAAM,IAAI,CAACE,qBAAqB,CAACC,gBAAgB,EAAET,WAAA,CAAAiC,kBAAkB,CAACM,WAAW,CAAC;MAElF,OAAO9B,gBAAgB,CAACS,OAAO,CAACqB,WAAW,CAAC,IAAAtC,UAAA,CAAAkC,QAAQ,EAAC7B,OAAO,CAAC,CAAC,CAACc,IAAI,EAAE;IACtE,CAAC;;EAEYoB,UAAUA,CACtBlC,OAAe,EACfU,OAAgB,EAChByB,QAA4B;;MAE5B,MAAMhC,gBAAgB,GAAG,MAAM,IAAI,CAACJ,0BAA0B,CAACC,OAAO,CAAC;MACvE,MAAM,IAAI,CAACE,qBAAqB,CAACC,gBAAgB,EAAET,WAAA,CAAAiC,kBAAkB,CAACS,OAAO,CAAC;MAE9E,OAAOjC,gBAAgB,CAACS,OAAO,CAC7BwB,OAAO,CAAC,IAAAzC,UAAA,CAAAkC,QAAQ,EAAC7B,OAAO,CAAC,EAAEU,OAAO,CAAC,CACnC2B,IAAI,CAACF,QAAQ,CAAC;IACjB,CAAC;;EAEYG,OAAOA,CACnBtC,OAAe,EACfuC,GAAW;;MAEX,MAAMpC,gBAAgB,GAAG,MAAM,IAAI,CAACJ,0BAA0B,CAACC,OAAO,CAAC;MACvE,MAAM,IAAI,CAACE,qBAAqB,CAACC,gBAAgB,EAAET,WAAA,CAAAiC,kBAAkB,CAACa,IAAI,CAAC;MAE3E,OAAOrC,gBAAgB,CAACS,OAAO,CAC7B4B,IAAI,CAAC,IAAA7C,UAAA,CAAAkC,QAAQ,EAAC7B,OAAO,CAAC,EAAEuC,GAAG,CAAC,CAACzB,IAAI,EAAE;IACtC,CAAC;;EAEY2B,OAAOA,CACnB/B,OAAe;;MAEf,MAAMP,gBAAgB,GAAG,MAAM,IAAI,CAACJ,0BAA0B,CAACW,OAAO,CAAC;MACvE,MAAM,IAAI,CAACR,qBAAqB,CAACC,gBAAgB,EAAET,WAAA,CAAAiC,kBAAkB,CAACe,IAAI,CAAC;MAE3E,OAAOvC,gBAAgB,CAACS,OAAO,CAC7B8B,IAAI,CAAC,IAAA/C,UAAA,CAAAkC,QAAQ,EAACnB,OAAO,CAAC,CAAC,CAACI,IAAI,EAAE;IACjC,CAAC;;;AA5GF6B,OAAA,CAAA/C,QAAA,GAAAA,QAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}