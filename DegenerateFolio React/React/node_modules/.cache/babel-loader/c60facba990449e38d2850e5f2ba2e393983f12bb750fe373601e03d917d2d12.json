{"ast":null,"code":"import JSONRequest from '../jsonrequest';\nexport default class SetSyncRound extends JSONRequest {\n  constructor(c, intDecoding, round) {\n    super(c, intDecoding);\n    this.round = round;\n    this.round = round;\n  }\n  path() {\n    return \"/v2/ledger/sync/\".concat(this.round);\n  }\n  async do() {\n    let headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await this.c.post(this.path(), headers);\n    return res.body;\n  }\n}","map":{"version":3,"names":["JSONRequest","SetSyncRound","constructor","c","intDecoding","round","path","concat","do","headers","arguments","length","undefined","res","post","body"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/algosdk/src/client/v2/algod/setSyncRound.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class SetSyncRound extends JSONRequest {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private round: number) {\n    super(c, intDecoding);\n\n    this.round = round;\n  }\n\n  path() {\n    return `/v2/ledger/sync/${this.round}`;\n  }\n\n  async do(headers = {}) {\n    const res = await this.c.post(this.path(), headers);\n    return res.body;\n  }\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAIxC,eAAc,MAAOC,YAAa,SAAQD,WAAW;EACnDE,YAAYC,CAAa,EAAEC,WAAwB,EAAUC,KAAa;IACxE,KAAK,CAACF,CAAC,EAAEC,WAAW,CAAC;IADsC,KAAAC,KAAK,GAALA,KAAK;IAGhE,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEAC,IAAIA,CAAA;IACF,0BAAAC,MAAA,CAA0B,IAAI,CAACF,KAAK;EACtC;EAEA,MAAMG,EAAEA,CAAA,EAAa;IAAA,IAAZC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IACnB,MAAMG,GAAG,GAAG,MAAM,IAAI,CAACV,CAAC,CAACW,IAAI,CAAC,IAAI,CAACR,IAAI,EAAE,EAAEG,OAAO,CAAC;IACnD,OAAOI,GAAG,CAACE,IAAI;EACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}