{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeContractErrorData = void 0;\nconst errors_api_js_1 = require(\"./api/errors_api.js\");\nconst parameters_api_js_1 = require(\"./api/parameters_api.js\");\nconst utils_js_1 = require(\"./utils.js\");\nconst decodeContractErrorData = (errorsAbi, error) => {\n  if (error === null || error === void 0 ? void 0 : error.data) {\n    let errorName;\n    let errorSignature;\n    let errorArgs;\n    try {\n      const errorSha = error.data.slice(0, 10);\n      const errorAbi = errorsAbi.find(abi => (0, errors_api_js_1.encodeErrorSignature)(abi).startsWith(errorSha));\n      if (errorAbi === null || errorAbi === void 0 ? void 0 : errorAbi.inputs) {\n        errorName = errorAbi.name;\n        errorSignature = (0, utils_js_1.jsonInterfaceMethodToString)(errorAbi);\n        // decode abi.inputs according to EIP-838\n        errorArgs = (0, parameters_api_js_1.decodeParameters)([...errorAbi.inputs], error.data.substring(10));\n      }\n    } catch (err) {\n      console.error(err);\n    }\n    if (errorName) {\n      error.setDecodedProperties(errorName, errorSignature, errorArgs);\n    }\n  }\n};\nexports.decodeContractErrorData = decodeContractErrorData;","map":{"version":3,"names":["errors_api_js_1","require","parameters_api_js_1","utils_js_1","decodeContractErrorData","errorsAbi","error","data","errorName","errorSignature","errorArgs","errorSha","slice","errorAbi","find","abi","encodeErrorSignature","startsWith","inputs","name","jsonInterfaceMethodToString","decodeParameters","substring","err","console","setDecodedProperties","exports"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/web3-eth-abi/src/decode_contract_error_data.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Eip838ExecutionError } from 'web3-errors';\nimport { AbiErrorFragment } from 'web3-types';\n\nimport { encodeErrorSignature } from './api/errors_api.js';\nimport { decodeParameters } from './api/parameters_api.js';\nimport { jsonInterfaceMethodToString } from './utils.js';\n\nexport const decodeContractErrorData = (\n\terrorsAbi: AbiErrorFragment[],\n\terror: Eip838ExecutionError,\n) => {\n\tif (error?.data) {\n\t\tlet errorName: string | undefined;\n\t\tlet errorSignature: string | undefined;\n\t\tlet errorArgs: { [K in string]: unknown } | undefined;\n\t\ttry {\n\t\t\tconst errorSha = error.data.slice(0, 10);\n\t\t\tconst errorAbi = errorsAbi.find(abi => encodeErrorSignature(abi).startsWith(errorSha));\n\n\t\t\tif (errorAbi?.inputs) {\n\t\t\t\terrorName = errorAbi.name;\n\t\t\t\terrorSignature = jsonInterfaceMethodToString(errorAbi);\n\t\t\t\t// decode abi.inputs according to EIP-838\n\t\t\t\terrorArgs = decodeParameters([...errorAbi.inputs], error.data.substring(10));\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t\tif (errorName) {\n\t\t\terror.setDecodedProperties(errorName, errorSignature, errorArgs);\n\t\t}\n\t}\n};\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA,MAAAA,eAAA,GAAAC,OAAA;AACA,MAAAC,mBAAA,GAAAD,OAAA;AACA,MAAAE,UAAA,GAAAF,OAAA;AAEO,MAAMG,uBAAuB,GAAGA,CACtCC,SAA6B,EAC7BC,KAA2B,KACxB;EACH,IAAIA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,IAAI,EAAE;IAChB,IAAIC,SAA6B;IACjC,IAAIC,cAAkC;IACtC,IAAIC,SAAiD;IACrD,IAAI;MACH,MAAMC,QAAQ,GAAGL,KAAK,CAACC,IAAI,CAACK,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MACxC,MAAMC,QAAQ,GAAGR,SAAS,CAACS,IAAI,CAACC,GAAG,IAAI,IAAAf,eAAA,CAAAgB,oBAAoB,EAACD,GAAG,CAAC,CAACE,UAAU,CAACN,QAAQ,CAAC,CAAC;MAEtF,IAAIE,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEK,MAAM,EAAE;QACrBV,SAAS,GAAGK,QAAQ,CAACM,IAAI;QACzBV,cAAc,GAAG,IAAAN,UAAA,CAAAiB,2BAA2B,EAACP,QAAQ,CAAC;QACtD;QACAH,SAAS,GAAG,IAAAR,mBAAA,CAAAmB,gBAAgB,EAAC,CAAC,GAAGR,QAAQ,CAACK,MAAM,CAAC,EAAEZ,KAAK,CAACC,IAAI,CAACe,SAAS,CAAC,EAAE,CAAC,CAAC;;KAE7E,CAAC,OAAOC,GAAG,EAAE;MACbC,OAAO,CAAClB,KAAK,CAACiB,GAAG,CAAC;;IAEnB,IAAIf,SAAS,EAAE;MACdF,KAAK,CAACmB,oBAAoB,CAACjB,SAAS,EAAEC,cAAc,EAAEC,SAAS,CAAC;;;AAGnE,CAAC;AAzBYgB,OAAA,CAAAtB,uBAAuB,GAAAA,uBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}