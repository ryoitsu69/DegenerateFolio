{"ast":null,"code":"var _jsxFileName = \"/home/ryoitsu/Documents/test/react-todo-app/src/components/Wallets.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Web3\n} = require('web3');\nconst ethRPC = new Web3(new Web3.providers.HttpProvider(\"https://mainnet.infura.io/v3/ff42bd19bf6e4ca9a401fbf0a8a36f15\"));\nconst optRPC = new Web3(new Web3.providers.HttpProvider(\"https://optimism-mainnet.infura.io/v3/ff42bd19bf6e4ca9a401fbf0a8a36f15\"));\nconst arbRPC = new Web3(new Web3.providers.HttpProvider(\"https://arbitrum-mainnet.infura.io/v3/ff42bd19bf6e4ca9a401fbf0a8a36f15\"));\nconst starkRPC = new Web3(new Web3.providers.HttpProvider(\"https://starknet-mainnet.infura.io/v3/ff42bd19bf6e4ca9a401fbf0a8a36f15\"));\nconst bscRPC = new Web3(new Web3.providers.HttpProvider(\"https://bnb-mainnet.g.alchemy.com/v2/Wflh86IAxtX-p7SFc--_YxhsIINWRfPR\"));\nclass Chain {\n  constructor(rpc, tokenName, ethGas) {\n    this.rpc = rpc;\n    this.tokenName = tokenName;\n    this.ethGas = ethGas;\n  }\n}\nclass Wallets extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chains = new Map();\n    this.chains.set('ETH', new Chain(ethRPC, 'ETH'));\n    this.chains.set('OPT', new Chain(optRPC, 'OPT'));\n    this.chains.set('ARB', new Chain(arbRPC, 'ARB'));\n    this.chains.set('STRK', new Chain(starkRPC, 'STRK'));\n    this.chains.set('BSC', new Chain(bscRPC, 'BNB'));\n    this.getBalanceGasToken.bind(this);\n  }\n  getBalanceGasToken(address, chain) {\n    chain.rpc.eth.getBalance(address).then(balance => console.log(bscRPC.utils.fromWei(balance, \"ether\") + chain.tokenName));\n  }\n  render() {\n    {\n      this.getBalanceGasToken(\"0x4AE673F8898408d39966dE7ECC0BD7128b4b912E\", this.chains.get('OPT'));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n}\n;\nexport default Wallets;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Web3","require","ethRPC","providers","HttpProvider","optRPC","arbRPC","starkRPC","bscRPC","Chain","constructor","rpc","tokenName","ethGas","Wallets","props","chains","Map","set","getBalanceGasToken","bind","address","chain","eth","getBalance","then","balance","console","log","utils","fromWei","render","get","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/src/components/Wallets.jsx"],"sourcesContent":["import React, { Component } from 'react';\nconst {Web3} = require('web3');\n\nconst ethRPC = new Web3(new Web3.providers.HttpProvider(\"https://mainnet.infura.io/v3/ff42bd19bf6e4ca9a401fbf0a8a36f15\"));\nconst optRPC = new Web3(new Web3.providers.HttpProvider(\"https://optimism-mainnet.infura.io/v3/ff42bd19bf6e4ca9a401fbf0a8a36f15\"));\nconst arbRPC = new Web3(new Web3.providers.HttpProvider(\"https://arbitrum-mainnet.infura.io/v3/ff42bd19bf6e4ca9a401fbf0a8a36f15\"));\nconst starkRPC = new Web3(new Web3.providers.HttpProvider(\"https://starknet-mainnet.infura.io/v3/ff42bd19bf6e4ca9a401fbf0a8a36f15\"));\nconst bscRPC = new Web3(new Web3.providers.HttpProvider(\"https://bnb-mainnet.g.alchemy.com/v2/Wflh86IAxtX-p7SFc--_YxhsIINWRfPR\"));\n\nclass Chain{\n  constructor(rpc, tokenName, ethGas){\n    this.rpc = rpc;\n    this.tokenName = tokenName;\n    this.ethGas = ethGas;\n  }\n}\n\n\nclass Wallets extends React.Component{\n\n\n\n  constructor(props){\n    super(props);\n    this.chains = new Map();\n    this.chains.set('ETH', new Chain(ethRPC, 'ETH'));\n    this.chains.set('OPT', new Chain(optRPC, 'OPT'));\n    this.chains.set('ARB', new Chain(arbRPC, 'ARB'));\n    this.chains.set('STRK', new Chain(starkRPC, 'STRK'));\n    this.chains.set('BSC', new Chain(bscRPC, 'BNB'));\n    this.getBalanceGasToken.bind(this);\n  }\n\n\n\n  getBalanceGasToken(address, chain){\n    chain.rpc.eth.getBalance(address).then((balance) => console.log(bscRPC.utils.fromWei(balance, \"ether\") + chain.tokenName));\n  }\n\n\n  render(){\n  {this.getBalanceGasToken(\"0x4AE673F8898408d39966dE7ECC0BD7128b4b912E\", this.chains.get('OPT'));}\n    return (\n      <div></div>\n\n    );\n  }\n};\nexport default Wallets;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzC,MAAM;EAACC;AAAI,CAAC,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE9B,MAAMC,MAAM,GAAG,IAAIF,IAAI,CAAC,IAAIA,IAAI,CAACG,SAAS,CAACC,YAAY,CAAC,+DAA+D,CAAC,CAAC;AACzH,MAAMC,MAAM,GAAG,IAAIL,IAAI,CAAC,IAAIA,IAAI,CAACG,SAAS,CAACC,YAAY,CAAC,wEAAwE,CAAC,CAAC;AAClI,MAAME,MAAM,GAAG,IAAIN,IAAI,CAAC,IAAIA,IAAI,CAACG,SAAS,CAACC,YAAY,CAAC,wEAAwE,CAAC,CAAC;AAClI,MAAMG,QAAQ,GAAG,IAAIP,IAAI,CAAC,IAAIA,IAAI,CAACG,SAAS,CAACC,YAAY,CAAC,wEAAwE,CAAC,CAAC;AACpI,MAAMI,MAAM,GAAG,IAAIR,IAAI,CAAC,IAAIA,IAAI,CAACG,SAAS,CAACC,YAAY,CAAC,uEAAuE,CAAC,CAAC;AAEjI,MAAMK,KAAK;EACTC,WAAWA,CAACC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAC;IACjC,IAAI,CAACF,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,MAAM,GAAGA,MAAM;EACtB;AACF;AAGA,MAAMC,OAAO,SAASlB,KAAK,CAACC,SAAS;EAInCa,WAAWA,CAACK,KAAK,EAAC;IAChB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,MAAM,GAAG,IAAIC,GAAG,CAAC,CAAC;IACvB,IAAI,CAACD,MAAM,CAACE,GAAG,CAAC,KAAK,EAAE,IAAIT,KAAK,CAACP,MAAM,EAAE,KAAK,CAAC,CAAC;IAChD,IAAI,CAACc,MAAM,CAACE,GAAG,CAAC,KAAK,EAAE,IAAIT,KAAK,CAACJ,MAAM,EAAE,KAAK,CAAC,CAAC;IAChD,IAAI,CAACW,MAAM,CAACE,GAAG,CAAC,KAAK,EAAE,IAAIT,KAAK,CAACH,MAAM,EAAE,KAAK,CAAC,CAAC;IAChD,IAAI,CAACU,MAAM,CAACE,GAAG,CAAC,MAAM,EAAE,IAAIT,KAAK,CAACF,QAAQ,EAAE,MAAM,CAAC,CAAC;IACpD,IAAI,CAACS,MAAM,CAACE,GAAG,CAAC,KAAK,EAAE,IAAIT,KAAK,CAACD,MAAM,EAAE,KAAK,CAAC,CAAC;IAChD,IAAI,CAACW,kBAAkB,CAACC,IAAI,CAAC,IAAI,CAAC;EACpC;EAIAD,kBAAkBA,CAACE,OAAO,EAAEC,KAAK,EAAC;IAChCA,KAAK,CAACX,GAAG,CAACY,GAAG,CAACC,UAAU,CAACH,OAAO,CAAC,CAACI,IAAI,CAAEC,OAAO,IAAKC,OAAO,CAACC,GAAG,CAACpB,MAAM,CAACqB,KAAK,CAACC,OAAO,CAACJ,OAAO,EAAE,OAAO,CAAC,GAAGJ,KAAK,CAACV,SAAS,CAAC,CAAC;EAC5H;EAGAmB,MAAMA,CAAA,EAAE;IACR;MAAC,IAAI,CAACZ,kBAAkB,CAAC,4CAA4C,EAAE,IAAI,CAACH,MAAM,CAACgB,GAAG,CAAC,KAAK,CAAC,CAAC;IAAC;IAC7F,oBACEjC,OAAA;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAGf;AACF;AAAC;AACD,eAAetB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}