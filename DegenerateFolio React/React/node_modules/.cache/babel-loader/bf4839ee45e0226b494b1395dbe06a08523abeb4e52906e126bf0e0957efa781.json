{"ast":null,"code":"import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nexport function nextElected(instanceId, api) {\n  return memo(instanceId, () => api.query.staking.erasStakers ? api.derive.session.indexes().pipe(\n  // only populate for next era in the last session, so track both here - entries are not\n  // subscriptions, so we need a trigger - currentIndex acts as that trigger to refresh\n  switchMap(({\n    currentEra\n  }) => api.query.staking.erasStakers.keys(currentEra)), map(keys => keys.map(({\n    args: [, accountId]\n  }) => accountId))) : api.query.staking['currentElected']());\n}\n/**\n * @description Retrieve latest list of validators\n */\nexport function validators(instanceId, api) {\n  return memo(instanceId, () =>\n  // Sadly the node-template is (for some obscure reason) not comprehensive, so while the derive works\n  // in all actual real-world deployed chains, it does create some confusion for limited template chains\n  combineLatest([api.query.session ? api.query.session.validators() : of([]), api.query.staking ? api.derive.staking.nextElected() : of([])]).pipe(map(([validators, nextElected]) => ({\n    nextElected: nextElected.length ? nextElected : validators,\n    validators\n  }))));\n}","map":{"version":3,"names":["combineLatest","map","of","switchMap","memo","nextElected","instanceId","api","query","staking","erasStakers","derive","session","indexes","pipe","currentEra","keys","args","accountId","validators","length"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/staking/validators.js"],"sourcesContent":["import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nexport function nextElected(instanceId, api) {\n    return memo(instanceId, () => api.query.staking.erasStakers\n        ? api.derive.session.indexes().pipe(\n        // only populate for next era in the last session, so track both here - entries are not\n        // subscriptions, so we need a trigger - currentIndex acts as that trigger to refresh\n        switchMap(({ currentEra }) => api.query.staking.erasStakers.keys(currentEra)), map((keys) => keys.map(({ args: [, accountId] }) => accountId)))\n        : api.query.staking['currentElected']());\n}\n/**\n * @description Retrieve latest list of validators\n */\nexport function validators(instanceId, api) {\n    return memo(instanceId, () => \n    // Sadly the node-template is (for some obscure reason) not comprehensive, so while the derive works\n    // in all actual real-world deployed chains, it does create some confusion for limited template chains\n    combineLatest([\n        api.query.session\n            ? api.query.session.validators()\n            : of([]),\n        api.query.staking\n            ? api.derive.staking.nextElected()\n            : of([])\n    ]).pipe(map(([validators, nextElected]) => ({\n        nextElected: nextElected.length\n            ? nextElected\n            : validators,\n        validators\n    }))));\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,GAAG,EAAEC,EAAE,EAAEC,SAAS,QAAQ,MAAM;AACxD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,SAASC,WAAWA,CAACC,UAAU,EAAEC,GAAG,EAAE;EACzC,OAAOH,IAAI,CAACE,UAAU,EAAE,MAAMC,GAAG,CAACC,KAAK,CAACC,OAAO,CAACC,WAAW,GACrDH,GAAG,CAACI,MAAM,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI;EACnC;EACA;EACAX,SAAS,CAAC,CAAC;IAAEY;EAAW,CAAC,KAAKR,GAAG,CAACC,KAAK,CAACC,OAAO,CAACC,WAAW,CAACM,IAAI,CAACD,UAAU,CAAC,CAAC,EAAEd,GAAG,CAAEe,IAAI,IAAKA,IAAI,CAACf,GAAG,CAAC,CAAC;IAAEgB,IAAI,EAAE,GAAGC,SAAS;EAAE,CAAC,KAAKA,SAAS,CAAC,CAAC,CAAC,GAC7IX,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAChD;AACA;AACA;AACA;AACA,OAAO,SAASU,UAAUA,CAACb,UAAU,EAAEC,GAAG,EAAE;EACxC,OAAOH,IAAI,CAACE,UAAU,EAAE;EACxB;EACA;EACAN,aAAa,CAAC,CACVO,GAAG,CAACC,KAAK,CAACI,OAAO,GACXL,GAAG,CAACC,KAAK,CAACI,OAAO,CAACO,UAAU,CAAC,CAAC,GAC9BjB,EAAE,CAAC,EAAE,CAAC,EACZK,GAAG,CAACC,KAAK,CAACC,OAAO,GACXF,GAAG,CAACI,MAAM,CAACF,OAAO,CAACJ,WAAW,CAAC,CAAC,GAChCH,EAAE,CAAC,EAAE,CAAC,CACf,CAAC,CAACY,IAAI,CAACb,GAAG,CAAC,CAAC,CAACkB,UAAU,EAAEd,WAAW,CAAC,MAAM;IACxCA,WAAW,EAAEA,WAAW,CAACe,MAAM,GACzBf,WAAW,GACXc,UAAU;IAChBA;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}