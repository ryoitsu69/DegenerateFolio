{"ast":null,"code":"import { Metadata } from '../Metadata.js';\nimport { decorateConstants } from './constants/index.js';\nimport { decorateErrors } from './errors/index.js';\nimport { decorateEvents, filterEventsSome } from './events/index.js';\nimport { decorateExtrinsics, filterCallsSome } from './extrinsics/index.js';\nimport { decorateStorage } from './storage/index.js';\n/**\n * Expands the metadata by decoration into consts, query and tx sections\n */\nexport function expandMetadata(registry, metadata) {\n  if (!(metadata instanceof Metadata)) {\n    throw new Error('You need to pass a valid Metadata instance to Decorated');\n  }\n  const latest = metadata.asLatest;\n  const version = metadata.version;\n  return {\n    consts: decorateConstants(registry, latest, version),\n    errors: decorateErrors(registry, latest, version),\n    events: decorateEvents(registry, latest, version),\n    query: decorateStorage(registry, latest, version),\n    registry,\n    tx: decorateExtrinsics(registry, latest, version)\n  };\n}\nexport { decorateConstants, decorateErrors, decorateEvents, decorateExtrinsics, decorateStorage, filterCallsSome, filterEventsSome };","map":{"version":3,"names":["Metadata","decorateConstants","decorateErrors","decorateEvents","filterEventsSome","decorateExtrinsics","filterCallsSome","decorateStorage","expandMetadata","registry","metadata","Error","latest","asLatest","version","consts","errors","events","query","tx"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/metadata/decorate/index.js"],"sourcesContent":["import { Metadata } from '../Metadata.js';\nimport { decorateConstants } from './constants/index.js';\nimport { decorateErrors } from './errors/index.js';\nimport { decorateEvents, filterEventsSome } from './events/index.js';\nimport { decorateExtrinsics, filterCallsSome } from './extrinsics/index.js';\nimport { decorateStorage } from './storage/index.js';\n/**\n * Expands the metadata by decoration into consts, query and tx sections\n */\nexport function expandMetadata(registry, metadata) {\n    if (!(metadata instanceof Metadata)) {\n        throw new Error('You need to pass a valid Metadata instance to Decorated');\n    }\n    const latest = metadata.asLatest;\n    const version = metadata.version;\n    return {\n        consts: decorateConstants(registry, latest, version),\n        errors: decorateErrors(registry, latest, version),\n        events: decorateEvents(registry, latest, version),\n        query: decorateStorage(registry, latest, version),\n        registry,\n        tx: decorateExtrinsics(registry, latest, version)\n    };\n}\nexport { decorateConstants, decorateErrors, decorateEvents, decorateExtrinsics, decorateStorage, filterCallsSome, filterEventsSome };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,iBAAiB,QAAQ,sBAAsB;AACxD,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,cAAc,EAAEC,gBAAgB,QAAQ,mBAAmB;AACpE,SAASC,kBAAkB,EAAEC,eAAe,QAAQ,uBAAuB;AAC3E,SAASC,eAAe,QAAQ,oBAAoB;AACpD;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAC/C,IAAI,EAAEA,QAAQ,YAAYV,QAAQ,CAAC,EAAE;IACjC,MAAM,IAAIW,KAAK,CAAC,yDAAyD,CAAC;EAC9E;EACA,MAAMC,MAAM,GAAGF,QAAQ,CAACG,QAAQ;EAChC,MAAMC,OAAO,GAAGJ,QAAQ,CAACI,OAAO;EAChC,OAAO;IACHC,MAAM,EAAEd,iBAAiB,CAACQ,QAAQ,EAAEG,MAAM,EAAEE,OAAO,CAAC;IACpDE,MAAM,EAAEd,cAAc,CAACO,QAAQ,EAAEG,MAAM,EAAEE,OAAO,CAAC;IACjDG,MAAM,EAAEd,cAAc,CAACM,QAAQ,EAAEG,MAAM,EAAEE,OAAO,CAAC;IACjDI,KAAK,EAAEX,eAAe,CAACE,QAAQ,EAAEG,MAAM,EAAEE,OAAO,CAAC;IACjDL,QAAQ;IACRU,EAAE,EAAEd,kBAAkB,CAACI,QAAQ,EAAEG,MAAM,EAAEE,OAAO;EACpD,CAAC;AACL;AACA,SAASb,iBAAiB,EAAEC,cAAc,EAAEC,cAAc,EAAEE,kBAAkB,EAAEE,eAAe,EAAED,eAAe,EAAEF,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}