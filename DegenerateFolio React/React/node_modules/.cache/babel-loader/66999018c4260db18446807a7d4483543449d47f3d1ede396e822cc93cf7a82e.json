{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgClientImpl = exports.MsgConnectionOpenConfirmResponse = exports.MsgConnectionOpenConfirm = exports.MsgConnectionOpenAckResponse = exports.MsgConnectionOpenAck = exports.MsgConnectionOpenTryResponse = exports.MsgConnectionOpenTry = exports.MsgConnectionOpenInitResponse = exports.MsgConnectionOpenInit = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst connection_1 = require(\"./connection\");\nconst any_1 = require(\"../../../../google/protobuf/any\");\nconst client_1 = require(\"../../client/v1/client\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.core.connection.v1\";\nfunction createBaseMsgConnectionOpenInit() {\n  return {\n    clientId: \"\",\n    counterparty: connection_1.Counterparty.fromPartial({}),\n    version: undefined,\n    delayPeriod: BigInt(0),\n    signer: \"\"\n  };\n}\nexports.MsgConnectionOpenInit = {\n  typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.counterparty !== undefined) {\n      connection_1.Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.version !== undefined) {\n      connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.delayPeriod !== BigInt(0)) {\n      writer.uint32(32).uint64(message.delayPeriod);\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(42).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenInit();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.version = connection_1.Version.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.delayPeriod = reader.uint64();\n          break;\n        case 5:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseMsgConnectionOpenInit();\n    if ((0, helpers_1.isSet)(object.clientId)) obj.clientId = String(object.clientId);\n    if ((0, helpers_1.isSet)(object.counterparty)) obj.counterparty = connection_1.Counterparty.fromJSON(object.counterparty);\n    if ((0, helpers_1.isSet)(object.version)) obj.version = connection_1.Version.fromJSON(object.version);\n    if ((0, helpers_1.isSet)(object.delayPeriod)) obj.delayPeriod = BigInt(object.delayPeriod.toString());\n    if ((0, helpers_1.isSet)(object.signer)) obj.signer = String(object.signer);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.counterparty !== undefined && (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : undefined);\n    message.version !== undefined && (obj.version = message.version ? connection_1.Version.toJSON(message.version) : undefined);\n    message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || BigInt(0)).toString());\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseMsgConnectionOpenInit();\n    message.clientId = object.clientId ?? \"\";\n    if (object.counterparty !== undefined && object.counterparty !== null) {\n      message.counterparty = connection_1.Counterparty.fromPartial(object.counterparty);\n    }\n    if (object.version !== undefined && object.version !== null) {\n      message.version = connection_1.Version.fromPartial(object.version);\n    }\n    if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n      message.delayPeriod = BigInt(object.delayPeriod.toString());\n    }\n    message.signer = object.signer ?? \"\";\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenInitResponse() {\n  return {};\n}\nexports.MsgConnectionOpenInitResponse = {\n  typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInitResponse\",\n  encode(_, writer = binary_1.BinaryWriter.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenInitResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    const obj = createBaseMsgConnectionOpenInitResponse();\n    return obj;\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgConnectionOpenInitResponse();\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenTry() {\n  return {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    clientState: undefined,\n    counterparty: connection_1.Counterparty.fromPartial({}),\n    delayPeriod: BigInt(0),\n    counterpartyVersions: [],\n    proofHeight: client_1.Height.fromPartial({}),\n    proofInit: new Uint8Array(),\n    proofClient: new Uint8Array(),\n    proofConsensus: new Uint8Array(),\n    consensusHeight: client_1.Height.fromPartial({}),\n    signer: \"\",\n    hostConsensusStateProof: new Uint8Array()\n  };\n}\nexports.MsgConnectionOpenTry = {\n  typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.clientId !== \"\") {\n      writer.uint32(10).string(message.clientId);\n    }\n    if (message.previousConnectionId !== \"\") {\n      writer.uint32(18).string(message.previousConnectionId);\n    }\n    if (message.clientState !== undefined) {\n      any_1.Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.counterparty !== undefined) {\n      connection_1.Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.delayPeriod !== BigInt(0)) {\n      writer.uint32(40).uint64(message.delayPeriod);\n    }\n    for (const v of message.counterpartyVersions) {\n      connection_1.Version.encode(v, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n    }\n    if (message.proofInit.length !== 0) {\n      writer.uint32(66).bytes(message.proofInit);\n    }\n    if (message.proofClient.length !== 0) {\n      writer.uint32(74).bytes(message.proofClient);\n    }\n    if (message.proofConsensus.length !== 0) {\n      writer.uint32(82).bytes(message.proofConsensus);\n    }\n    if (message.consensusHeight !== undefined) {\n      client_1.Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(98).string(message.signer);\n    }\n    if (message.hostConsensusStateProof.length !== 0) {\n      writer.uint32(106).bytes(message.hostConsensusStateProof);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenTry();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.clientId = reader.string();\n          break;\n        case 2:\n          message.previousConnectionId = reader.string();\n          break;\n        case 3:\n          message.clientState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.counterparty = connection_1.Counterparty.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.delayPeriod = reader.uint64();\n          break;\n        case 6:\n          message.counterpartyVersions.push(connection_1.Version.decode(reader, reader.uint32()));\n          break;\n        case 7:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 8:\n          message.proofInit = reader.bytes();\n          break;\n        case 9:\n          message.proofClient = reader.bytes();\n          break;\n        case 10:\n          message.proofConsensus = reader.bytes();\n          break;\n        case 11:\n          message.consensusHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 12:\n          message.signer = reader.string();\n          break;\n        case 13:\n          message.hostConsensusStateProof = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseMsgConnectionOpenTry();\n    if ((0, helpers_1.isSet)(object.clientId)) obj.clientId = String(object.clientId);\n    if ((0, helpers_1.isSet)(object.previousConnectionId)) obj.previousConnectionId = String(object.previousConnectionId);\n    if ((0, helpers_1.isSet)(object.clientState)) obj.clientState = any_1.Any.fromJSON(object.clientState);\n    if ((0, helpers_1.isSet)(object.counterparty)) obj.counterparty = connection_1.Counterparty.fromJSON(object.counterparty);\n    if ((0, helpers_1.isSet)(object.delayPeriod)) obj.delayPeriod = BigInt(object.delayPeriod.toString());\n    if (Array.isArray(object?.counterpartyVersions)) obj.counterpartyVersions = object.counterpartyVersions.map(e => connection_1.Version.fromJSON(e));\n    if ((0, helpers_1.isSet)(object.proofHeight)) obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    if ((0, helpers_1.isSet)(object.proofInit)) obj.proofInit = (0, helpers_1.bytesFromBase64)(object.proofInit);\n    if ((0, helpers_1.isSet)(object.proofClient)) obj.proofClient = (0, helpers_1.bytesFromBase64)(object.proofClient);\n    if ((0, helpers_1.isSet)(object.proofConsensus)) obj.proofConsensus = (0, helpers_1.bytesFromBase64)(object.proofConsensus);\n    if ((0, helpers_1.isSet)(object.consensusHeight)) obj.consensusHeight = client_1.Height.fromJSON(object.consensusHeight);\n    if ((0, helpers_1.isSet)(object.signer)) obj.signer = String(object.signer);\n    if ((0, helpers_1.isSet)(object.hostConsensusStateProof)) obj.hostConsensusStateProof = (0, helpers_1.bytesFromBase64)(object.hostConsensusStateProof);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.clientId !== undefined && (obj.clientId = message.clientId);\n    message.previousConnectionId !== undefined && (obj.previousConnectionId = message.previousConnectionId);\n    message.clientState !== undefined && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n    message.counterparty !== undefined && (obj.counterparty = message.counterparty ? connection_1.Counterparty.toJSON(message.counterparty) : undefined);\n    message.delayPeriod !== undefined && (obj.delayPeriod = (message.delayPeriod || BigInt(0)).toString());\n    if (message.counterpartyVersions) {\n      obj.counterpartyVersions = message.counterpartyVersions.map(e => e ? connection_1.Version.toJSON(e) : undefined);\n    } else {\n      obj.counterpartyVersions = [];\n    }\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.proofInit !== undefined && (obj.proofInit = (0, helpers_1.base64FromBytes)(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n    message.proofClient !== undefined && (obj.proofClient = (0, helpers_1.base64FromBytes)(message.proofClient !== undefined ? message.proofClient : new Uint8Array()));\n    message.proofConsensus !== undefined && (obj.proofConsensus = (0, helpers_1.base64FromBytes)(message.proofConsensus !== undefined ? message.proofConsensus : new Uint8Array()));\n    message.consensusHeight !== undefined && (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    message.hostConsensusStateProof !== undefined && (obj.hostConsensusStateProof = (0, helpers_1.base64FromBytes)(message.hostConsensusStateProof !== undefined ? message.hostConsensusStateProof : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseMsgConnectionOpenTry();\n    message.clientId = object.clientId ?? \"\";\n    message.previousConnectionId = object.previousConnectionId ?? \"\";\n    if (object.clientState !== undefined && object.clientState !== null) {\n      message.clientState = any_1.Any.fromPartial(object.clientState);\n    }\n    if (object.counterparty !== undefined && object.counterparty !== null) {\n      message.counterparty = connection_1.Counterparty.fromPartial(object.counterparty);\n    }\n    if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n      message.delayPeriod = BigInt(object.delayPeriod.toString());\n    }\n    message.counterpartyVersions = object.counterpartyVersions?.map(e => connection_1.Version.fromPartial(e)) || [];\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    }\n    message.proofInit = object.proofInit ?? new Uint8Array();\n    message.proofClient = object.proofClient ?? new Uint8Array();\n    message.proofConsensus = object.proofConsensus ?? new Uint8Array();\n    if (object.consensusHeight !== undefined && object.consensusHeight !== null) {\n      message.consensusHeight = client_1.Height.fromPartial(object.consensusHeight);\n    }\n    message.signer = object.signer ?? \"\";\n    message.hostConsensusStateProof = object.hostConsensusStateProof ?? new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenTryResponse() {\n  return {};\n}\nexports.MsgConnectionOpenTryResponse = {\n  typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTryResponse\",\n  encode(_, writer = binary_1.BinaryWriter.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenTryResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    const obj = createBaseMsgConnectionOpenTryResponse();\n    return obj;\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgConnectionOpenTryResponse();\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenAck() {\n  return {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    version: undefined,\n    clientState: undefined,\n    proofHeight: client_1.Height.fromPartial({}),\n    proofTry: new Uint8Array(),\n    proofClient: new Uint8Array(),\n    proofConsensus: new Uint8Array(),\n    consensusHeight: client_1.Height.fromPartial({}),\n    signer: \"\",\n    hostConsensusStateProof: new Uint8Array()\n  };\n}\nexports.MsgConnectionOpenAck = {\n  typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (message.counterpartyConnectionId !== \"\") {\n      writer.uint32(18).string(message.counterpartyConnectionId);\n    }\n    if (message.version !== undefined) {\n      connection_1.Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.clientState !== undefined) {\n      any_1.Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.proofTry.length !== 0) {\n      writer.uint32(50).bytes(message.proofTry);\n    }\n    if (message.proofClient.length !== 0) {\n      writer.uint32(58).bytes(message.proofClient);\n    }\n    if (message.proofConsensus.length !== 0) {\n      writer.uint32(66).bytes(message.proofConsensus);\n    }\n    if (message.consensusHeight !== undefined) {\n      client_1.Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(82).string(message.signer);\n    }\n    if (message.hostConsensusStateProof.length !== 0) {\n      writer.uint32(90).bytes(message.hostConsensusStateProof);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenAck();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.counterpartyConnectionId = reader.string();\n          break;\n        case 3:\n          message.version = connection_1.Version.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.clientState = any_1.Any.decode(reader, reader.uint32());\n          break;\n        case 5:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 6:\n          message.proofTry = reader.bytes();\n          break;\n        case 7:\n          message.proofClient = reader.bytes();\n          break;\n        case 8:\n          message.proofConsensus = reader.bytes();\n          break;\n        case 9:\n          message.consensusHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 10:\n          message.signer = reader.string();\n          break;\n        case 11:\n          message.hostConsensusStateProof = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseMsgConnectionOpenAck();\n    if ((0, helpers_1.isSet)(object.connectionId)) obj.connectionId = String(object.connectionId);\n    if ((0, helpers_1.isSet)(object.counterpartyConnectionId)) obj.counterpartyConnectionId = String(object.counterpartyConnectionId);\n    if ((0, helpers_1.isSet)(object.version)) obj.version = connection_1.Version.fromJSON(object.version);\n    if ((0, helpers_1.isSet)(object.clientState)) obj.clientState = any_1.Any.fromJSON(object.clientState);\n    if ((0, helpers_1.isSet)(object.proofHeight)) obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    if ((0, helpers_1.isSet)(object.proofTry)) obj.proofTry = (0, helpers_1.bytesFromBase64)(object.proofTry);\n    if ((0, helpers_1.isSet)(object.proofClient)) obj.proofClient = (0, helpers_1.bytesFromBase64)(object.proofClient);\n    if ((0, helpers_1.isSet)(object.proofConsensus)) obj.proofConsensus = (0, helpers_1.bytesFromBase64)(object.proofConsensus);\n    if ((0, helpers_1.isSet)(object.consensusHeight)) obj.consensusHeight = client_1.Height.fromJSON(object.consensusHeight);\n    if ((0, helpers_1.isSet)(object.signer)) obj.signer = String(object.signer);\n    if ((0, helpers_1.isSet)(object.hostConsensusStateProof)) obj.hostConsensusStateProof = (0, helpers_1.bytesFromBase64)(object.hostConsensusStateProof);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    message.counterpartyConnectionId !== undefined && (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n    message.version !== undefined && (obj.version = message.version ? connection_1.Version.toJSON(message.version) : undefined);\n    message.clientState !== undefined && (obj.clientState = message.clientState ? any_1.Any.toJSON(message.clientState) : undefined);\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.proofTry !== undefined && (obj.proofTry = (0, helpers_1.base64FromBytes)(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n    message.proofClient !== undefined && (obj.proofClient = (0, helpers_1.base64FromBytes)(message.proofClient !== undefined ? message.proofClient : new Uint8Array()));\n    message.proofConsensus !== undefined && (obj.proofConsensus = (0, helpers_1.base64FromBytes)(message.proofConsensus !== undefined ? message.proofConsensus : new Uint8Array()));\n    message.consensusHeight !== undefined && (obj.consensusHeight = message.consensusHeight ? client_1.Height.toJSON(message.consensusHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    message.hostConsensusStateProof !== undefined && (obj.hostConsensusStateProof = (0, helpers_1.base64FromBytes)(message.hostConsensusStateProof !== undefined ? message.hostConsensusStateProof : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseMsgConnectionOpenAck();\n    message.connectionId = object.connectionId ?? \"\";\n    message.counterpartyConnectionId = object.counterpartyConnectionId ?? \"\";\n    if (object.version !== undefined && object.version !== null) {\n      message.version = connection_1.Version.fromPartial(object.version);\n    }\n    if (object.clientState !== undefined && object.clientState !== null) {\n      message.clientState = any_1.Any.fromPartial(object.clientState);\n    }\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    }\n    message.proofTry = object.proofTry ?? new Uint8Array();\n    message.proofClient = object.proofClient ?? new Uint8Array();\n    message.proofConsensus = object.proofConsensus ?? new Uint8Array();\n    if (object.consensusHeight !== undefined && object.consensusHeight !== null) {\n      message.consensusHeight = client_1.Height.fromPartial(object.consensusHeight);\n    }\n    message.signer = object.signer ?? \"\";\n    message.hostConsensusStateProof = object.hostConsensusStateProof ?? new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenAckResponse() {\n  return {};\n}\nexports.MsgConnectionOpenAckResponse = {\n  typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAckResponse\",\n  encode(_, writer = binary_1.BinaryWriter.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenAckResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    const obj = createBaseMsgConnectionOpenAckResponse();\n    return obj;\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgConnectionOpenAckResponse();\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenConfirm() {\n  return {\n    connectionId: \"\",\n    proofAck: new Uint8Array(),\n    proofHeight: client_1.Height.fromPartial({}),\n    signer: \"\"\n  };\n}\nexports.MsgConnectionOpenConfirm = {\n  typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.connectionId !== \"\") {\n      writer.uint32(10).string(message.connectionId);\n    }\n    if (message.proofAck.length !== 0) {\n      writer.uint32(18).bytes(message.proofAck);\n    }\n    if (message.proofHeight !== undefined) {\n      client_1.Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.signer !== \"\") {\n      writer.uint32(34).string(message.signer);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenConfirm();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.connectionId = reader.string();\n          break;\n        case 2:\n          message.proofAck = reader.bytes();\n          break;\n        case 3:\n          message.proofHeight = client_1.Height.decode(reader, reader.uint32());\n          break;\n        case 4:\n          message.signer = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseMsgConnectionOpenConfirm();\n    if ((0, helpers_1.isSet)(object.connectionId)) obj.connectionId = String(object.connectionId);\n    if ((0, helpers_1.isSet)(object.proofAck)) obj.proofAck = (0, helpers_1.bytesFromBase64)(object.proofAck);\n    if ((0, helpers_1.isSet)(object.proofHeight)) obj.proofHeight = client_1.Height.fromJSON(object.proofHeight);\n    if ((0, helpers_1.isSet)(object.signer)) obj.signer = String(object.signer);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.connectionId !== undefined && (obj.connectionId = message.connectionId);\n    message.proofAck !== undefined && (obj.proofAck = (0, helpers_1.base64FromBytes)(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n    message.proofHeight !== undefined && (obj.proofHeight = message.proofHeight ? client_1.Height.toJSON(message.proofHeight) : undefined);\n    message.signer !== undefined && (obj.signer = message.signer);\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseMsgConnectionOpenConfirm();\n    message.connectionId = object.connectionId ?? \"\";\n    message.proofAck = object.proofAck ?? new Uint8Array();\n    if (object.proofHeight !== undefined && object.proofHeight !== null) {\n      message.proofHeight = client_1.Height.fromPartial(object.proofHeight);\n    }\n    message.signer = object.signer ?? \"\";\n    return message;\n  }\n};\nfunction createBaseMsgConnectionOpenConfirmResponse() {\n  return {};\n}\nexports.MsgConnectionOpenConfirmResponse = {\n  typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirmResponse\",\n  encode(_, writer = binary_1.BinaryWriter.create()) {\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgConnectionOpenConfirmResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_) {\n    const obj = createBaseMsgConnectionOpenConfirmResponse();\n    return obj;\n  },\n  toJSON(_) {\n    const obj = {};\n    return obj;\n  },\n  fromPartial(_) {\n    const message = createBaseMsgConnectionOpenConfirmResponse();\n    return message;\n  }\n};\nclass MsgClientImpl {\n  constructor(rpc) {\n    this.rpc = rpc;\n    this.ConnectionOpenInit = this.ConnectionOpenInit.bind(this);\n    this.ConnectionOpenTry = this.ConnectionOpenTry.bind(this);\n    this.ConnectionOpenAck = this.ConnectionOpenAck.bind(this);\n    this.ConnectionOpenConfirm = this.ConnectionOpenConfirm.bind(this);\n  }\n  ConnectionOpenInit(request) {\n    const data = exports.MsgConnectionOpenInit.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n    return promise.then(data => exports.MsgConnectionOpenInitResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  ConnectionOpenTry(request) {\n    const data = exports.MsgConnectionOpenTry.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n    return promise.then(data => exports.MsgConnectionOpenTryResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  ConnectionOpenAck(request) {\n    const data = exports.MsgConnectionOpenAck.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n    return promise.then(data => exports.MsgConnectionOpenAckResponse.decode(new binary_1.BinaryReader(data)));\n  }\n  ConnectionOpenConfirm(request) {\n    const data = exports.MsgConnectionOpenConfirm.encode(request).finish();\n    const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n    return promise.then(data => exports.MsgConnectionOpenConfirmResponse.decode(new binary_1.BinaryReader(data)));\n  }\n}\nexports.MsgClientImpl = MsgClientImpl;","map":{"version":3,"names":["connection_1","require","any_1","client_1","binary_1","helpers_1","exports","protobufPackage","createBaseMsgConnectionOpenInit","clientId","counterparty","Counterparty","fromPartial","version","undefined","delayPeriod","BigInt","signer","MsgConnectionOpenInit","typeUrl","encode","message","writer","BinaryWriter","create","uint32","string","fork","ldelim","Version","uint64","decode","input","length","reader","BinaryReader","end","len","pos","tag","skipType","fromJSON","object","obj","isSet","String","toString","toJSON","createBaseMsgConnectionOpenInitResponse","MsgConnectionOpenInitResponse","_","createBaseMsgConnectionOpenTry","previousConnectionId","clientState","counterpartyVersions","proofHeight","Height","proofInit","Uint8Array","proofClient","proofConsensus","consensusHeight","hostConsensusStateProof","MsgConnectionOpenTry","Any","v","bytes","push","Array","isArray","map","e","bytesFromBase64","base64FromBytes","createBaseMsgConnectionOpenTryResponse","MsgConnectionOpenTryResponse","createBaseMsgConnectionOpenAck","connectionId","counterpartyConnectionId","proofTry","MsgConnectionOpenAck","createBaseMsgConnectionOpenAckResponse","MsgConnectionOpenAckResponse","createBaseMsgConnectionOpenConfirm","proofAck","MsgConnectionOpenConfirm","createBaseMsgConnectionOpenConfirmResponse","MsgConnectionOpenConfirmResponse","MsgClientImpl","constructor","rpc","ConnectionOpenInit","bind","ConnectionOpenTry","ConnectionOpenAck","ConnectionOpenConfirm","request","data","finish","promise","then"],"sources":["../../../../../src/ibc/core/connection/v1/tx.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}