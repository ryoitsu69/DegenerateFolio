{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValueAndUpdates = void 0;\nconst xstream_1 = require(\"xstream\");\n/**\n * A read only wrapper around DefaultValueProducer that allows\n * to synchronously get the current value using the .value property\n * and listen to to updates by suscribing to the .updates stream\n */\nclass ValueAndUpdates {\n  get value() {\n    return this.producer.value;\n  }\n  constructor(producer) {\n    this.producer = producer;\n    this.updates = xstream_1.MemoryStream.createWithMemory(this.producer);\n  }\n  /**\n   * Resolves as soon as search value is found.\n   *\n   * @param search either a value or a function that must return true when found\n   * @returns the value of the update that caused the search match\n   */\n  async waitFor(search) {\n    const searchImplementation = typeof search === \"function\" ? search : value => value === search;\n    return new Promise((resolve, reject) => {\n      const subscription = this.updates.subscribe({\n        next: newValue => {\n          if (searchImplementation(newValue)) {\n            resolve(newValue);\n            // MemoryStream.subscribe() calls next with the last value.\n            // Make async to ensure the subscription exists\n            setTimeout(() => subscription.unsubscribe(), 0);\n          }\n        },\n        complete: () => {\n          subscription.unsubscribe();\n          reject(\"Update stream completed without expected value\");\n        },\n        error: error => {\n          reject(error);\n        }\n      });\n    });\n  }\n}\nexports.ValueAndUpdates = ValueAndUpdates;","map":{"version":3,"names":["xstream_1","require","ValueAndUpdates","value","producer","constructor","updates","MemoryStream","createWithMemory","waitFor","search","searchImplementation","Promise","resolve","reject","subscription","subscribe","next","newValue","setTimeout","unsubscribe","complete","error","exports"],"sources":["../src/valueandupdates.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,SAAA,GAAAC,OAAA;AAMA;;;;;AAKA,MAAaC,eAAe;EAG1B,IAAWC,KAAKA,CAAA;IACd,OAAO,IAAI,CAACC,QAAQ,CAACD,KAAK;EAC5B;EAIAE,YAAmBD,QAAiC;IAClD,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACE,OAAO,GAAGN,SAAA,CAAAO,YAAY,CAACC,gBAAgB,CAAC,IAAI,CAACJ,QAAQ,CAAC;EAC7D;EAEA;;;;;;EAMO,MAAMK,OAAOA,CAACC,MAA6B;IAChD,MAAMC,oBAAoB,GACxB,OAAOD,MAAM,KAAK,UAAU,GAAIA,MAA4B,GAAIP,KAAQ,IAAcA,KAAK,KAAKO,MAAM;IAExG,OAAO,IAAIE,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrC,MAAMC,YAAY,GAAG,IAAI,CAACT,OAAO,CAACU,SAAS,CAAC;QAC1CC,IAAI,EAAGC,QAAQ,IAAI;UACjB,IAAIP,oBAAoB,CAACO,QAAQ,CAAC,EAAE;YAClCL,OAAO,CAACK,QAAQ,CAAC;YAEjB;YACA;YACAC,UAAU,CAAC,MAAMJ,YAAY,CAACK,WAAW,EAAE,EAAE,CAAC,CAAC;;QAEnD,CAAC;QACDC,QAAQ,EAAEA,CAAA,KAAK;UACbN,YAAY,CAACK,WAAW,EAAE;UAC1BN,MAAM,CAAC,gDAAgD,CAAC;QAC1D,CAAC;QACDQ,KAAK,EAAGA,KAAK,IAAI;UACfR,MAAM,CAACQ,KAAK,CAAC;QACf;OACD,CAAC;IACJ,CAAC,CAAC;EACJ;;AA5CFC,OAAA,CAAArB,eAAA,GAAAA,eAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}