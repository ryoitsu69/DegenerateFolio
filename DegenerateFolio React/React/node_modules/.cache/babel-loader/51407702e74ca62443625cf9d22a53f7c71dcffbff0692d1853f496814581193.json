{"ast":null,"code":"import { hasBigInt } from '@polkadot/util';\nimport { bip39ToEntropy, isReady } from '@polkadot/wasm-crypto';\nimport { mnemonicToEntropy as jsToEntropy } from './bip39.js';\nexport function mnemonicToEntropy(mnemonic, wordlist, onlyJs) {\n  return !hasBigInt || !wordlist && !onlyJs && isReady() ? bip39ToEntropy(mnemonic) : jsToEntropy(mnemonic, wordlist);\n}","map":{"version":3,"names":["hasBigInt","bip39ToEntropy","isReady","mnemonicToEntropy","jsToEntropy","mnemonic","wordlist","onlyJs"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/mnemonic/toEntropy.js"],"sourcesContent":["import { hasBigInt } from '@polkadot/util';\nimport { bip39ToEntropy, isReady } from '@polkadot/wasm-crypto';\nimport { mnemonicToEntropy as jsToEntropy } from './bip39.js';\nexport function mnemonicToEntropy(mnemonic, wordlist, onlyJs) {\n    return !hasBigInt || (!wordlist && !onlyJs && isReady())\n        ? bip39ToEntropy(mnemonic)\n        : jsToEntropy(mnemonic, wordlist);\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,cAAc,EAAEC,OAAO,QAAQ,uBAAuB;AAC/D,SAASC,iBAAiB,IAAIC,WAAW,QAAQ,YAAY;AAC7D,OAAO,SAASD,iBAAiBA,CAACE,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAE;EAC1D,OAAO,CAACP,SAAS,IAAK,CAACM,QAAQ,IAAI,CAACC,MAAM,IAAIL,OAAO,CAAC,CAAE,GAClDD,cAAc,CAACI,QAAQ,CAAC,GACxBD,WAAW,CAACC,QAAQ,EAAEC,QAAQ,CAAC;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}