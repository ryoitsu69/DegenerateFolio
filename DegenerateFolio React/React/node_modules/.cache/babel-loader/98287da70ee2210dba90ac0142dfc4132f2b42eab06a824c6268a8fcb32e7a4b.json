{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MerkleProof = exports.MerklePath = exports.MerklePrefix = exports.MerkleRoot = exports.protobufPackage = void 0;\n/* eslint-disable */\nconst proofs_1 = require(\"../../../../cosmos/ics23/v1/proofs\");\nconst binary_1 = require(\"../../../../binary\");\nconst helpers_1 = require(\"../../../../helpers\");\nexports.protobufPackage = \"ibc.core.commitment.v1\";\nfunction createBaseMerkleRoot() {\n  return {\n    hash: new Uint8Array()\n  };\n}\nexports.MerkleRoot = {\n  typeUrl: \"/ibc.core.commitment.v1.MerkleRoot\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.hash.length !== 0) {\n      writer.uint32(10).bytes(message.hash);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMerkleRoot();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.hash = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseMerkleRoot();\n    if ((0, helpers_1.isSet)(object.hash)) obj.hash = (0, helpers_1.bytesFromBase64)(object.hash);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.hash !== undefined && (obj.hash = (0, helpers_1.base64FromBytes)(message.hash !== undefined ? message.hash : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseMerkleRoot();\n    message.hash = object.hash ?? new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseMerklePrefix() {\n  return {\n    keyPrefix: new Uint8Array()\n  };\n}\nexports.MerklePrefix = {\n  typeUrl: \"/ibc.core.commitment.v1.MerklePrefix\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    if (message.keyPrefix.length !== 0) {\n      writer.uint32(10).bytes(message.keyPrefix);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMerklePrefix();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.keyPrefix = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseMerklePrefix();\n    if ((0, helpers_1.isSet)(object.keyPrefix)) obj.keyPrefix = (0, helpers_1.bytesFromBase64)(object.keyPrefix);\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    message.keyPrefix !== undefined && (obj.keyPrefix = (0, helpers_1.base64FromBytes)(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseMerklePrefix();\n    message.keyPrefix = object.keyPrefix ?? new Uint8Array();\n    return message;\n  }\n};\nfunction createBaseMerklePath() {\n  return {\n    keyPath: []\n  };\n}\nexports.MerklePath = {\n  typeUrl: \"/ibc.core.commitment.v1.MerklePath\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    for (const v of message.keyPath) {\n      writer.uint32(10).string(v);\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMerklePath();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.keyPath.push(reader.string());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseMerklePath();\n    if (Array.isArray(object?.keyPath)) obj.keyPath = object.keyPath.map(e => String(e));\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.keyPath) {\n      obj.keyPath = message.keyPath.map(e => e);\n    } else {\n      obj.keyPath = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseMerklePath();\n    message.keyPath = object.keyPath?.map(e => e) || [];\n    return message;\n  }\n};\nfunction createBaseMerkleProof() {\n  return {\n    proofs: []\n  };\n}\nexports.MerkleProof = {\n  typeUrl: \"/ibc.core.commitment.v1.MerkleProof\",\n  encode(message, writer = binary_1.BinaryWriter.create()) {\n    for (const v of message.proofs) {\n      proofs_1.CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input, length) {\n    const reader = input instanceof binary_1.BinaryReader ? input : new binary_1.BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMerkleProof();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.proofs.push(proofs_1.CommitmentProof.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object) {\n    const obj = createBaseMerkleProof();\n    if (Array.isArray(object?.proofs)) obj.proofs = object.proofs.map(e => proofs_1.CommitmentProof.fromJSON(e));\n    return obj;\n  },\n  toJSON(message) {\n    const obj = {};\n    if (message.proofs) {\n      obj.proofs = message.proofs.map(e => e ? proofs_1.CommitmentProof.toJSON(e) : undefined);\n    } else {\n      obj.proofs = [];\n    }\n    return obj;\n  },\n  fromPartial(object) {\n    const message = createBaseMerkleProof();\n    message.proofs = object.proofs?.map(e => proofs_1.CommitmentProof.fromPartial(e)) || [];\n    return message;\n  }\n};","map":{"version":3,"names":["proofs_1","require","binary_1","helpers_1","exports","protobufPackage","createBaseMerkleRoot","hash","Uint8Array","MerkleRoot","typeUrl","encode","message","writer","BinaryWriter","create","length","uint32","bytes","decode","input","reader","BinaryReader","end","undefined","len","pos","tag","skipType","fromJSON","object","obj","isSet","bytesFromBase64","toJSON","base64FromBytes","fromPartial","createBaseMerklePrefix","keyPrefix","MerklePrefix","createBaseMerklePath","keyPath","MerklePath","v","string","push","Array","isArray","map","e","String","createBaseMerkleProof","proofs","MerkleProof","CommitmentProof","fork","ldelim"],"sources":["../../../../../src/ibc/core/commitment/v1/commitment.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}