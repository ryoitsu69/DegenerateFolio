{"ast":null,"code":"\"use strict\";\n\nfunction getOrientationOfPoints(points) {\n  const m = points.length;\n  if (m < 6) {\n    return 1;\n  }\n  let area = 0;\n  for (let i = 0, x1 = points[m - 2], y1 = points[m - 1]; i < m; i += 2) {\n    const x2 = points[i];\n    const y2 = points[i + 1];\n    area += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  if (area < 0) {\n    return -1;\n  }\n  return 1;\n}\nexport { getOrientationOfPoints };","map":{"version":3,"names":["getOrientationOfPoints","points","m","length","area","i","x1","y1","x2","y2"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/scene/graphics/shared/utils/getOrientationOfPoints.ts"],"sourcesContent":["export function getOrientationOfPoints(points: number[]): number\n{\n    const m = points.length;\n\n    if (m < 6)\n    {\n        return 1;\n    }\n\n    let area = 0;\n\n    for (let i = 0, x1 = points[m - 2], y1 = points[m - 1]; i < m; i += 2)\n    {\n        const x2 = points[i];\n        const y2 = points[i + 1];\n\n        area += (x2 - x1) * (y2 + y1);\n\n        x1 = x2;\n        y1 = y2;\n    }\n\n    if (area < 0)\n    {\n        return -1;\n    }\n\n    return 1;\n}\n"],"mappings":";;AAAO,SAASA,uBAAuBC,MACvC;EACI,MAAMC,CAAA,GAAID,MAAO,CAAAE,MAAA;EAEjB,IAAID,CAAA,GAAI,CACR;IACW;EAAA;EAGX,IAAIE,IAAO;EAEX,SAASC,CAAI,MAAGC,EAAK,GAAAL,MAAA,CAAOC,CAAA,GAAI,CAAC,GAAGK,EAAK,GAAAN,MAAA,CAAOC,CAAA,GAAI,CAAC,GAAGG,CAAI,GAAAH,CAAA,EAAGG,CAAA,IAAK,CACpE;IACU,MAAAG,EAAA,GAAKP,MAAA,CAAOI,CAAC;IACb,MAAAI,EAAA,GAAKR,MAAO,CAAAI,CAAA,GAAI,CAAC;IAEdD,IAAA,KAAAI,EAAA,GAAKF,EAAA,KAAOG,EAAK,GAAAF,EAAA;IAErBD,EAAA,GAAAE,EAAA;IACAD,EAAA,GAAAE,EAAA;EAAA;EAGT,IAAIL,IAAA,GAAO,CACX;IACW;EAAA;EAGJ;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}