{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkResponseParser = void 0;\nconst web3_errors_1 = require(\"web3-errors\");\nclass ChunkResponseParser {\n  constructor(eventEmitter, autoReconnect) {\n    this.eventEmitter = eventEmitter;\n    this.autoReconnect = autoReconnect;\n    this.chunkTimeout = 1000 * 15;\n  }\n  clearQueues() {\n    if (typeof this._clearQueues === 'function') {\n      this._clearQueues();\n    }\n  }\n  onError(clearQueues) {\n    this._clearQueues = clearQueues;\n  }\n  parseResponse(data) {\n    const returnValues = [];\n    // DE-CHUNKER\n    const dechunkedData = data.replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n    .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n    .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n    .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n    .split('|--|');\n    dechunkedData.forEach(_chunkData => {\n      // prepend the last chunk\n      let chunkData = _chunkData;\n      if (this.lastChunk) {\n        chunkData = this.lastChunk + chunkData;\n      }\n      let result;\n      try {\n        result = JSON.parse(chunkData);\n      } catch (e) {\n        this.lastChunk = chunkData;\n        // start timeout to cancel all requests\n        if (this.lastChunkTimeout) {\n          clearTimeout(this.lastChunkTimeout);\n        }\n        this.lastChunkTimeout = setTimeout(() => {\n          if (this.autoReconnect) return;\n          this.clearQueues();\n          this.eventEmitter.emit('error', new web3_errors_1.InvalidResponseError({\n            id: 1,\n            jsonrpc: '2.0',\n            error: {\n              code: 2,\n              message: 'Chunk timeout'\n            }\n          }));\n        }, this.chunkTimeout);\n        return;\n      }\n      // cancel timeout and set chunk to null\n      clearTimeout(this.lastChunkTimeout);\n      this.lastChunk = undefined;\n      if (result) returnValues.push(result);\n    });\n    return returnValues;\n  }\n}\nexports.ChunkResponseParser = ChunkResponseParser;","map":{"version":3,"names":["web3_errors_1","require","ChunkResponseParser","constructor","eventEmitter","autoReconnect","chunkTimeout","clearQueues","_clearQueues","onError","parseResponse","data","returnValues","dechunkedData","replace","split","forEach","_chunkData","chunkData","lastChunk","result","JSON","parse","e","lastChunkTimeout","clearTimeout","setTimeout","emit","InvalidResponseError","id","jsonrpc","error","code","message","undefined","push","exports"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/web3-utils/src/chunk_response_parser.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { JsonRpcResponse } from 'web3-types';\nimport { InvalidResponseError } from 'web3-errors';\nimport { EventEmitter } from 'eventemitter3';\nimport { Timeout } from './promise_helpers.js';\n\nexport class ChunkResponseParser {\n\tprivate lastChunk: string | undefined;\n\tprivate lastChunkTimeout: Timeout | undefined;\n\tprivate _clearQueues: (() => void) | undefined;\n\tprivate readonly eventEmitter: EventEmitter;\n\tprivate readonly autoReconnect: boolean;\n\tprivate readonly chunkTimeout: number;\n\n\tpublic constructor(eventEmitter: EventEmitter, autoReconnect: boolean) {\n\t\tthis.eventEmitter = eventEmitter;\n\t\tthis.autoReconnect = autoReconnect;\n\t\tthis.chunkTimeout = 1000 * 15;\n\t}\n\tprivate clearQueues(): void {\n\t\tif (typeof this._clearQueues === 'function') {\n\t\t\tthis._clearQueues();\n\t\t}\n\t}\n\n\tpublic onError(clearQueues?: () => void) {\n\t\tthis._clearQueues = clearQueues;\n\t}\n\n\tpublic parseResponse(data: string): JsonRpcResponse[] {\n\t\tconst returnValues: JsonRpcResponse[] = [];\n\n\t\t// DE-CHUNKER\n\t\tconst dechunkedData = data\n\t\t\t.replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n\t\t\t.replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n\t\t\t.replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n\t\t\t.replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n\t\t\t.split('|--|');\n\n\t\tdechunkedData.forEach(_chunkData => {\n\t\t\t// prepend the last chunk\n\t\t\tlet chunkData = _chunkData;\n\t\t\tif (this.lastChunk) {\n\t\t\t\tchunkData = this.lastChunk + chunkData;\n\t\t\t}\n\n\t\t\tlet result;\n\n\t\t\ttry {\n\t\t\t\tresult = JSON.parse(chunkData) as unknown as JsonRpcResponse;\n\t\t\t} catch (e) {\n\t\t\t\tthis.lastChunk = chunkData;\n\n\t\t\t\t// start timeout to cancel all requests\n\t\t\t\tif (this.lastChunkTimeout) {\n\t\t\t\t\tclearTimeout(this.lastChunkTimeout);\n\t\t\t\t}\n\n\t\t\t\tthis.lastChunkTimeout = setTimeout(() => {\n\t\t\t\t\tif (this.autoReconnect) return;\n\t\t\t\t\tthis.clearQueues();\n\t\t\t\t\tthis.eventEmitter.emit(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\tnew InvalidResponseError({\n\t\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t\tjsonrpc: '2.0',\n\t\t\t\t\t\t\terror: { code: 2, message: 'Chunk timeout' },\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}, this.chunkTimeout);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// cancel timeout and set chunk to null\n\t\t\tclearTimeout(this.lastChunkTimeout);\n\t\t\tthis.lastChunk = undefined;\n\n\t\t\tif (result) returnValues.push(result);\n\t\t});\n\n\t\treturn returnValues;\n\t}\n}\n"],"mappings":";;;;;;AAiBA,MAAAA,aAAA,GAAAC,OAAA;AAIA,MAAaC,mBAAmB;EAQ/BC,YAAmBC,YAA0B,EAAEC,aAAsB;IACpE,IAAI,CAACD,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,YAAY,GAAG,IAAI,GAAG,EAAE;EAC9B;EACQC,WAAWA,CAAA;IAClB,IAAI,OAAO,IAAI,CAACC,YAAY,KAAK,UAAU,EAAE;MAC5C,IAAI,CAACA,YAAY,EAAE;;EAErB;EAEOC,OAAOA,CAACF,WAAwB;IACtC,IAAI,CAACC,YAAY,GAAGD,WAAW;EAChC;EAEOG,aAAaA,CAACC,IAAY;IAChC,MAAMC,YAAY,GAAsB,EAAE;IAE1C;IACA,MAAMC,aAAa,GAAGF,IAAI,CACxBG,OAAO,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;IAAA,CAClCA,OAAO,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;IAAA,CACxCA,OAAO,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;IAAA,CACrCA,OAAO,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;IAAA,CACrCC,KAAK,CAAC,MAAM,CAAC;IAEfF,aAAa,CAACG,OAAO,CAACC,UAAU,IAAG;MAClC;MACA,IAAIC,SAAS,GAAGD,UAAU;MAC1B,IAAI,IAAI,CAACE,SAAS,EAAE;QACnBD,SAAS,GAAG,IAAI,CAACC,SAAS,GAAGD,SAAS;;MAGvC,IAAIE,MAAM;MAEV,IAAI;QACHA,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACJ,SAAS,CAA+B;OAC5D,CAAC,OAAOK,CAAC,EAAE;QACX,IAAI,CAACJ,SAAS,GAAGD,SAAS;QAE1B;QACA,IAAI,IAAI,CAACM,gBAAgB,EAAE;UAC1BC,YAAY,CAAC,IAAI,CAACD,gBAAgB,CAAC;;QAGpC,IAAI,CAACA,gBAAgB,GAAGE,UAAU,CAAC,MAAK;UACvC,IAAI,IAAI,CAACrB,aAAa,EAAE;UACxB,IAAI,CAACE,WAAW,EAAE;UAClB,IAAI,CAACH,YAAY,CAACuB,IAAI,CACrB,OAAO,EACP,IAAI3B,aAAA,CAAA4B,oBAAoB,CAAC;YACxBC,EAAE,EAAE,CAAC;YACLC,OAAO,EAAE,KAAK;YACdC,KAAK,EAAE;cAAEC,IAAI,EAAE,CAAC;cAAEC,OAAO,EAAE;YAAe;WAC1C,CAAC,CACF;QACF,CAAC,EAAE,IAAI,CAAC3B,YAAY,CAAC;QACrB;;MAGD;MACAmB,YAAY,CAAC,IAAI,CAACD,gBAAgB,CAAC;MACnC,IAAI,CAACL,SAAS,GAAGe,SAAS;MAE1B,IAAId,MAAM,EAAER,YAAY,CAACuB,IAAI,CAACf,MAAM,CAAC;IACtC,CAAC,CAAC;IAEF,OAAOR,YAAY;EACpB;;AA5EDwB,OAAA,CAAAlC,mBAAA,GAAAA,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}