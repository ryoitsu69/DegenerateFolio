{"ast":null,"code":"import { TYPES } from \"@pixi/constants\";\nimport { Buffer } from \"../geometry/Buffer.mjs\";\nimport { Geometry } from \"../geometry/Geometry.mjs\";\nclass BatchGeometry extends Geometry {\n  /**\n   * @param {boolean} [_static=false] - Optimization flag, where `false`\n   *        is updated every frame, `true` doesn't change frame-to-frame.\n   */\n  constructor(_static = !1) {\n    super(), this._buffer = new Buffer(null, _static, !1), this._indexBuffer = new Buffer(null, _static, !0), this.addAttribute(\"aVertexPosition\", this._buffer, 2, !1, TYPES.FLOAT).addAttribute(\"aTextureCoord\", this._buffer, 2, !1, TYPES.FLOAT).addAttribute(\"aColor\", this._buffer, 4, !0, TYPES.UNSIGNED_BYTE).addAttribute(\"aTextureId\", this._buffer, 1, !0, TYPES.FLOAT).addIndex(this._indexBuffer);\n  }\n}\nexport { BatchGeometry };","map":{"version":3,"names":["BatchGeometry","Geometry","constructor","_static","_buffer","Buffer","_indexBuffer","addAttribute","TYPES","FLOAT","UNSIGNED_BYTE","addIndex"],"sources":["/home/ryoitsu/node_modules/@pixi/core/src/batch/BatchGeometry.ts"],"sourcesContent":["import { TYPES } from '@pixi/constants';\nimport { Buffer } from '../geometry/Buffer';\nimport { Geometry } from '../geometry/Geometry';\n\n/**\n * Geometry used to batch standard PIXI content (e.g. Mesh, Sprite, Graphics objects).\n * @memberof PIXI\n */\nexport class BatchGeometry extends Geometry\n{\n    /**\n     * Buffer used for position, color, texture IDs\n     * @protected\n     */\n    _buffer: Buffer;\n\n    /**\n     * Index buffer data\n     * @protected\n     */\n    _indexBuffer: Buffer;\n\n    /**\n     * @param {boolean} [_static=false] - Optimization flag, where `false`\n     *        is updated every frame, `true` doesn't change frame-to-frame.\n     */\n    constructor(_static = false)\n    {\n        super();\n\n        this._buffer = new Buffer(null, _static, false);\n\n        this._indexBuffer = new Buffer(null, _static, true);\n\n        this.addAttribute('aVertexPosition', this._buffer, 2, false, TYPES.FLOAT)\n            .addAttribute('aTextureCoord', this._buffer, 2, false, TYPES.FLOAT)\n            .addAttribute('aColor', this._buffer, 4, true, TYPES.UNSIGNED_BYTE)\n            .addAttribute('aTextureId', this._buffer, 1, true, TYPES.FLOAT)\n            .addIndex(this._indexBuffer);\n    }\n}\n"],"mappings":";;;AAQO,MAAMA,aAAA,SAAsBC,QAAA,CACnC;EAAA;AAAA;AAAA;AAAA;EAiBIC,YAAYC,OAAA,GAAU,IACtB;IACU,SAED,KAAAC,OAAA,GAAU,IAAIC,MAAA,CAAO,MAAMF,OAAA,EAAS,EAAK,GAE9C,KAAKG,YAAA,GAAe,IAAID,MAAA,CAAO,MAAMF,OAAA,EAAS,EAAI,GAElD,KAAKI,YAAA,CAAa,mBAAmB,KAAKH,OAAA,EAAS,GAAG,IAAOI,KAAA,CAAMC,KAAK,EACnEF,YAAA,CAAa,iBAAiB,KAAKH,OAAA,EAAS,GAAG,IAAOI,KAAA,CAAMC,KAAK,EACjEF,YAAA,CAAa,UAAU,KAAKH,OAAA,EAAS,GAAG,IAAMI,KAAA,CAAME,aAAa,EACjEH,YAAA,CAAa,cAAc,KAAKH,OAAA,EAAS,GAAG,IAAMI,KAAA,CAAMC,KAAK,EAC7DE,QAAA,CAAS,KAAKL,YAAY;EACnC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}