{"ast":null,"code":"import { u8aToU8a } from './toU8a.js';\n/**\n * @name u8aEq\n * @summary Compares two Uint8Arrays for equality.\n * @description\n * For `UInt8Array` (or hex string) input values true if there is a match.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aEq } from '@polkadot/util';\n *\n * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true\n * ```\n */\nexport function u8aEq(a, b) {\n  const u8aa = u8aToU8a(a);\n  const u8ab = u8aToU8a(b);\n  if (u8aa.length === u8ab.length) {\n    const dvA = new DataView(u8aa.buffer, u8aa.byteOffset);\n    const dvB = new DataView(u8ab.buffer, u8ab.byteOffset);\n    const mod = u8aa.length % 4 | 0;\n    const length = u8aa.length - mod | 0;\n    for (let i = 0; i < length; i += 4) {\n      if (dvA.getUint32(i) !== dvB.getUint32(i)) {\n        return false;\n      }\n    }\n    for (let i = length, count = u8aa.length; i < count; i++) {\n      if (u8aa[i] !== u8ab[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}","map":{"version":3,"names":["u8aToU8a","u8aEq","a","b","u8aa","u8ab","length","dvA","DataView","buffer","byteOffset","dvB","mod","i","getUint32","count"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util/u8a/eq.js"],"sourcesContent":["import { u8aToU8a } from './toU8a.js';\n/**\n * @name u8aEq\n * @summary Compares two Uint8Arrays for equality.\n * @description\n * For `UInt8Array` (or hex string) input values true if there is a match.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aEq } from '@polkadot/util';\n *\n * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true\n * ```\n */\nexport function u8aEq(a, b) {\n    const u8aa = u8aToU8a(a);\n    const u8ab = u8aToU8a(b);\n    if (u8aa.length === u8ab.length) {\n        const dvA = new DataView(u8aa.buffer, u8aa.byteOffset);\n        const dvB = new DataView(u8ab.buffer, u8ab.byteOffset);\n        const mod = (u8aa.length % 4) | 0;\n        const length = (u8aa.length - mod) | 0;\n        for (let i = 0; i < length; i += 4) {\n            if (dvA.getUint32(i) !== dvB.getUint32(i)) {\n                return false;\n            }\n        }\n        for (let i = length, count = u8aa.length; i < count; i++) {\n            if (u8aa[i] !== u8ab[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,KAAKA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACxB,MAAMC,IAAI,GAAGJ,QAAQ,CAACE,CAAC,CAAC;EACxB,MAAMG,IAAI,GAAGL,QAAQ,CAACG,CAAC,CAAC;EACxB,IAAIC,IAAI,CAACE,MAAM,KAAKD,IAAI,CAACC,MAAM,EAAE;IAC7B,MAAMC,GAAG,GAAG,IAAIC,QAAQ,CAACJ,IAAI,CAACK,MAAM,EAAEL,IAAI,CAACM,UAAU,CAAC;IACtD,MAAMC,GAAG,GAAG,IAAIH,QAAQ,CAACH,IAAI,CAACI,MAAM,EAAEJ,IAAI,CAACK,UAAU,CAAC;IACtD,MAAME,GAAG,GAAIR,IAAI,CAACE,MAAM,GAAG,CAAC,GAAI,CAAC;IACjC,MAAMA,MAAM,GAAIF,IAAI,CAACE,MAAM,GAAGM,GAAG,GAAI,CAAC;IACtC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,MAAM,EAAEO,CAAC,IAAI,CAAC,EAAE;MAChC,IAAIN,GAAG,CAACO,SAAS,CAACD,CAAC,CAAC,KAAKF,GAAG,CAACG,SAAS,CAACD,CAAC,CAAC,EAAE;QACvC,OAAO,KAAK;MAChB;IACJ;IACA,KAAK,IAAIA,CAAC,GAAGP,MAAM,EAAES,KAAK,GAAGX,IAAI,CAACE,MAAM,EAAEO,CAAC,GAAGE,KAAK,EAAEF,CAAC,EAAE,EAAE;MACtD,IAAIT,IAAI,CAACS,CAAC,CAAC,KAAKR,IAAI,CAACQ,CAAC,CAAC,EAAE;QACrB,OAAO,KAAK;MAChB;IACJ;IACA,OAAO,IAAI;EACf;EACA,OAAO,KAAK;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}