{"ast":null,"code":"import { getTestContext } from './getTestContext.mjs';\n\"use strict\";\nlet maxFragmentPrecision;\nfunction getMaxFragmentPrecision() {\n  if (!maxFragmentPrecision) {\n    maxFragmentPrecision = \"mediump\";\n    const gl = getTestContext();\n    if (gl) {\n      if (gl.getShaderPrecisionFormat) {\n        const shaderFragment = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT);\n        maxFragmentPrecision = shaderFragment.precision ? \"highp\" : \"mediump\";\n      }\n    }\n  }\n  return maxFragmentPrecision;\n}\nexport { getMaxFragmentPrecision };","map":{"version":3,"names":["maxFragmentPrecision","getMaxFragmentPrecision","gl","getTestContext","getShaderPrecisionFormat","shaderFragment","FRAGMENT_SHADER","HIGH_FLOAT","precision"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/rendering/renderers/gl/shader/program/getMaxFragmentPrecision.ts"],"sourcesContent":["import { getTestContext } from './getTestContext';\n\nimport type { PRECISION } from '../const';\n\nlet maxFragmentPrecision: PRECISION;\n\nexport function getMaxFragmentPrecision(): PRECISION\n{\n    if (!maxFragmentPrecision)\n    {\n        maxFragmentPrecision = 'mediump';\n        const gl = getTestContext();\n\n        if (gl)\n        {\n            if (gl.getShaderPrecisionFormat)\n            {\n                const shaderFragment = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT);\n\n                maxFragmentPrecision = shaderFragment.precision ? 'highp' : 'mediump';\n            }\n        }\n    }\n\n    return maxFragmentPrecision;\n}\n"],"mappings":";;AAIA,IAAIA,oBAAA;AAEG,SAASC,uBAChBA,CAAA;EACI,IAAI,CAACD,oBACL;IAC2BA,oBAAA;IACvB,MAAME,EAAA,GAAKC,cAAe;IAE1B,IAAID,EACJ;MACI,IAAIA,EAAA,CAAGE,wBACP;QACI,MAAMC,cAAA,GAAiBH,EAAG,CAAAE,wBAAA,CAAyBF,EAAG,CAAAI,eAAA,EAAiBJ,EAAA,CAAGK,UAAU;QAE7DP,oBAAA,GAAAK,cAAA,CAAeG,SAAA,GAAY,OAAU;MAAA;IAChE;EACJ;EAGG,OAAAR,oBAAA;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}