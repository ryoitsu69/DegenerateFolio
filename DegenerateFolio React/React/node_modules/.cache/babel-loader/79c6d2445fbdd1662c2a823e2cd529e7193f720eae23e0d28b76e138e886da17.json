{"ast":null,"code":"import { xglobal } from '@polkadot/x-global';\nimport { isFunction } from './is/function.js';\nconst DEDUPE = 'Either remove and explicitly install matching versions or dedupe using your package manager.\\nThe following conflicting packages were found:';\nexport const POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG = 'POLKADOTJS_DISABLE_ESM_CJS_WARNING';\n/** @internal */\nfunction getEntry(name) {\n  const _global = xglobal;\n  if (!_global.__polkadotjs) {\n    _global.__polkadotjs = {};\n  }\n  if (!_global.__polkadotjs[name]) {\n    _global.__polkadotjs[name] = [];\n  }\n  return _global.__polkadotjs[name];\n}\n/** @internal */\nfunction formatDisplay(all, fmt) {\n  let max = 0;\n  for (let i = 0, count = all.length; i < count; i++) {\n    max = Math.max(max, all[i].version.length);\n  }\n  return all.map(d => `\\t${fmt(d.version.padEnd(max), d).join('\\t')}`).join('\\n');\n}\n/** @internal */\nfunction formatInfo(version, {\n  name\n}) {\n  return [version, name];\n}\n/** @internal */\nfunction formatVersion(version, {\n  path,\n  type\n}) {\n  let extracted;\n  if (path && path.length >= 5) {\n    const nmIndex = path.indexOf('node_modules');\n    extracted = nmIndex === -1 ? path : path.substring(nmIndex);\n  } else {\n    extracted = '<unknown>';\n  }\n  return [`${`${type || ''}`.padStart(3)} ${version}`, extracted];\n}\n/** @internal */\nfunction getPath(infoPath, pathOrFn) {\n  if (infoPath) {\n    return infoPath;\n  } else if (isFunction(pathOrFn)) {\n    try {\n      return pathOrFn() || '';\n    } catch {\n      return '';\n    }\n  }\n  return pathOrFn || '';\n}\n/** @internal */\nfunction warn(pre, all, fmt) {\n  console.warn(`${pre}\\n${DEDUPE}\\n${formatDisplay(all, fmt)}`);\n}\n/**\n * @name detectPackage\n * @summary Checks that a specific package is only imported once\n * @description A `@polkadot/*` version detection utility, checking for one occurrence of a package in addition to checking for dependency versions.\n */\nexport function detectPackage({\n  name,\n  path,\n  type,\n  version\n}, pathOrFn, deps = []) {\n  if (!name.startsWith('@polkadot')) {\n    throw new Error(`Invalid package descriptor ${name}`);\n  }\n  const entry = getEntry(name);\n  entry.push({\n    path: getPath(path, pathOrFn),\n    type,\n    version\n  });\n  // if we have more than one entry at DIFFERENT version types then warn. If there is more than one entry at the same\n  // version and ESM/CJS dual warnings are disabled, then do not display warnings\n  const entriesSameVersion = entry.every(e => e.version === version);\n  const esmCjsWarningDisabled = xglobal.process?.env?.[POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG] === '1';\n  const multipleEntries = entry.length !== 1;\n  const disableWarnings = esmCjsWarningDisabled && entriesSameVersion;\n  if (multipleEntries && !disableWarnings) {\n    warn(`${name} has multiple versions, ensure that there is only one installed.`, entry, formatVersion);\n  } else {\n    const mismatches = deps.filter(d => d && d.version !== version);\n    if (mismatches.length) {\n      warn(`${name} requires direct dependencies exactly matching version ${version}.`, mismatches, formatInfo);\n    }\n  }\n}","map":{"version":3,"names":["xglobal","isFunction","DEDUPE","POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG","getEntry","name","_global","__polkadotjs","formatDisplay","all","fmt","max","i","count","length","Math","version","map","d","padEnd","join","formatInfo","formatVersion","path","type","extracted","nmIndex","indexOf","substring","padStart","getPath","infoPath","pathOrFn","warn","pre","console","detectPackage","deps","startsWith","Error","entry","push","entriesSameVersion","every","e","esmCjsWarningDisabled","process","env","multipleEntries","disableWarnings","mismatches","filter"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util/versionDetect.js"],"sourcesContent":["import { xglobal } from '@polkadot/x-global';\nimport { isFunction } from './is/function.js';\nconst DEDUPE = 'Either remove and explicitly install matching versions or dedupe using your package manager.\\nThe following conflicting packages were found:';\nexport const POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG = 'POLKADOTJS_DISABLE_ESM_CJS_WARNING';\n/** @internal */\nfunction getEntry(name) {\n    const _global = xglobal;\n    if (!_global.__polkadotjs) {\n        _global.__polkadotjs = {};\n    }\n    if (!_global.__polkadotjs[name]) {\n        _global.__polkadotjs[name] = [];\n    }\n    return _global.__polkadotjs[name];\n}\n/** @internal */\nfunction formatDisplay(all, fmt) {\n    let max = 0;\n    for (let i = 0, count = all.length; i < count; i++) {\n        max = Math.max(max, all[i].version.length);\n    }\n    return all\n        .map((d) => `\\t${fmt(d.version.padEnd(max), d).join('\\t')}`)\n        .join('\\n');\n}\n/** @internal */\nfunction formatInfo(version, { name }) {\n    return [\n        version,\n        name\n    ];\n}\n/** @internal */\nfunction formatVersion(version, { path, type }) {\n    let extracted;\n    if (path && path.length >= 5) {\n        const nmIndex = path.indexOf('node_modules');\n        extracted = nmIndex === -1\n            ? path\n            : path.substring(nmIndex);\n    }\n    else {\n        extracted = '<unknown>';\n    }\n    return [\n        `${`${type || ''}`.padStart(3)} ${version}`,\n        extracted\n    ];\n}\n/** @internal */\nfunction getPath(infoPath, pathOrFn) {\n    if (infoPath) {\n        return infoPath;\n    }\n    else if (isFunction(pathOrFn)) {\n        try {\n            return pathOrFn() || '';\n        }\n        catch {\n            return '';\n        }\n    }\n    return pathOrFn || '';\n}\n/** @internal */\nfunction warn(pre, all, fmt) {\n    console.warn(`${pre}\\n${DEDUPE}\\n${formatDisplay(all, fmt)}`);\n}\n/**\n * @name detectPackage\n * @summary Checks that a specific package is only imported once\n * @description A `@polkadot/*` version detection utility, checking for one occurrence of a package in addition to checking for dependency versions.\n */\nexport function detectPackage({ name, path, type, version }, pathOrFn, deps = []) {\n    if (!name.startsWith('@polkadot')) {\n        throw new Error(`Invalid package descriptor ${name}`);\n    }\n    const entry = getEntry(name);\n    entry.push({ path: getPath(path, pathOrFn), type, version });\n    // if we have more than one entry at DIFFERENT version types then warn. If there is more than one entry at the same\n    // version and ESM/CJS dual warnings are disabled, then do not display warnings\n    const entriesSameVersion = entry.every((e) => e.version === version);\n    const esmCjsWarningDisabled = xglobal.process?.env?.[POLKADOTJS_DISABLE_ESM_CJS_WARNING_FLAG] === '1';\n    const multipleEntries = entry.length !== 1;\n    const disableWarnings = esmCjsWarningDisabled && entriesSameVersion;\n    if (multipleEntries && !disableWarnings) {\n        warn(`${name} has multiple versions, ensure that there is only one installed.`, entry, formatVersion);\n    }\n    else {\n        const mismatches = deps.filter((d) => d && d.version !== version);\n        if (mismatches.length) {\n            warn(`${name} requires direct dependencies exactly matching version ${version}.`, mismatches, formatInfo);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}