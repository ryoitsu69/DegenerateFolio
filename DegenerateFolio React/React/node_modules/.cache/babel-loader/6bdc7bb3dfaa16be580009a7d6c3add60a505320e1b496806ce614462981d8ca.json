{"ast":null,"code":"/**\n * @name arrayFlatten\n * @summary Merge T[][] into T[]\n * @description\n * Returns a new array with all arrays merged into one\n * @example\n * <BR>\n *\n * ```javascript\n * import { arrayFlatten } from '@polkadot/util';\n *\n * arrayFlatten([[1, 2], [3, 4], [5]]); // [1, 2, 3, 4, 5]\n * ```\n */\nexport function arrayFlatten(arrays) {\n  const num = arrays.length;\n  // shortcuts for the empty & single-entry case\n  if (num === 0) {\n    return [];\n  } else if (num === 1) {\n    return arrays[0];\n  }\n  // pre-allocate based on the combined size\n  let size = 0;\n  for (let i = 0; i < num; i++) {\n    size += arrays[i].length;\n  }\n  const output = new Array(size);\n  let i = -1;\n  for (let j = 0; j < num; j++) {\n    const a = arrays[j];\n    // instead of pushing, we just set the entries\n    for (let e = 0, count = a.length; e < count; e++) {\n      output[++i] = a[e];\n    }\n  }\n  return output;\n}","map":{"version":3,"names":["arrayFlatten","arrays","num","length","size","i","output","Array","j","a","e","count"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util/array/flatten.js"],"sourcesContent":["/**\n * @name arrayFlatten\n * @summary Merge T[][] into T[]\n * @description\n * Returns a new array with all arrays merged into one\n * @example\n * <BR>\n *\n * ```javascript\n * import { arrayFlatten } from '@polkadot/util';\n *\n * arrayFlatten([[1, 2], [3, 4], [5]]); // [1, 2, 3, 4, 5]\n * ```\n */\nexport function arrayFlatten(arrays) {\n    const num = arrays.length;\n    // shortcuts for the empty & single-entry case\n    if (num === 0) {\n        return [];\n    }\n    else if (num === 1) {\n        return arrays[0];\n    }\n    // pre-allocate based on the combined size\n    let size = 0;\n    for (let i = 0; i < num; i++) {\n        size += arrays[i].length;\n    }\n    const output = new Array(size);\n    let i = -1;\n    for (let j = 0; j < num; j++) {\n        const a = arrays[j];\n        // instead of pushing, we just set the entries\n        for (let e = 0, count = a.length; e < count; e++) {\n            output[++i] = a[e];\n        }\n    }\n    return output;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,YAAYA,CAACC,MAAM,EAAE;EACjC,MAAMC,GAAG,GAAGD,MAAM,CAACE,MAAM;EACzB;EACA,IAAID,GAAG,KAAK,CAAC,EAAE;IACX,OAAO,EAAE;EACb,CAAC,MACI,IAAIA,GAAG,KAAK,CAAC,EAAE;IAChB,OAAOD,MAAM,CAAC,CAAC,CAAC;EACpB;EACA;EACA,IAAIG,IAAI,GAAG,CAAC;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,EAAEG,CAAC,EAAE,EAAE;IAC1BD,IAAI,IAAIH,MAAM,CAACI,CAAC,CAAC,CAACF,MAAM;EAC5B;EACA,MAAMG,MAAM,GAAG,IAAIC,KAAK,CAACH,IAAI,CAAC;EAC9B,IAAIC,CAAC,GAAG,CAAC,CAAC;EACV,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,GAAG,EAAEM,CAAC,EAAE,EAAE;IAC1B,MAAMC,CAAC,GAAGR,MAAM,CAACO,CAAC,CAAC;IACnB;IACA,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEC,KAAK,GAAGF,CAAC,CAACN,MAAM,EAAEO,CAAC,GAAGC,KAAK,EAAED,CAAC,EAAE,EAAE;MAC9CJ,MAAM,CAAC,EAAED,CAAC,CAAC,GAAGI,CAAC,CAACC,CAAC,CAAC;IACtB;EACJ;EACA,OAAOJ,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}