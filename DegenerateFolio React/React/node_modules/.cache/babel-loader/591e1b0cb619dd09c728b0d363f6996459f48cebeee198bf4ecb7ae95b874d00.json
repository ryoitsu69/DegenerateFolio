{"ast":null,"code":"\"use strict\";\n\nfunction mixHexColors(color1, color2, ratio) {\n  const r1 = color1 >> 16 & 255;\n  const g1 = color1 >> 8 & 255;\n  const b1 = color1 & 255;\n  const r2 = color2 >> 16 & 255;\n  const g2 = color2 >> 8 & 255;\n  const b2 = color2 & 255;\n  const r = r1 + (r2 - r1) * ratio;\n  const g = g1 + (g2 - g1) * ratio;\n  const b = b1 + (b2 - b1) * ratio;\n  return (r << 16) + (g << 8) + b;\n}\nexport { mixHexColors };","map":{"version":3,"names":["mixHexColors","color1","color2","ratio","r1","g1","b1","r2","g2","b2","r","g","b"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/scene/container/utils/mixHexColors.ts"],"sourcesContent":["export function mixHexColors(color1: number, color2: number, ratio: number): number\n{\n    const r1 = (color1 >> 16) & 0xFF;\n    const g1 = (color1 >> 8) & 0xFF;\n    const b1 = color1 & 0xFF;\n\n    const r2 = (color2 >> 16) & 0xFF;\n    const g2 = (color2 >> 8) & 0xFF;\n    const b2 = color2 & 0xFF;\n\n    const r = r1 + ((r2 - r1) * ratio);\n    const g = g1 + ((g2 - g1) * ratio);\n    const b = b1 + ((b2 - b1) * ratio);\n\n    return (r << 16) + (g << 8) + b;\n}\n\n"],"mappings":";;AAAgB,SAAAA,aAAaC,MAAgB,EAAAC,MAAA,EAAgBC,KAC7D;EACU,MAAAC,EAAA,GAAMH,MAAA,IAAU,EAAM;EACtB,MAAAI,EAAA,GAAMJ,MAAA,IAAU,CAAK;EAC3B,MAAMK,EAAA,GAAKL,MAAS;EAEd,MAAAM,EAAA,GAAML,MAAA,IAAU,EAAM;EACtB,MAAAM,EAAA,GAAMN,MAAA,IAAU,CAAK;EAC3B,MAAMO,EAAA,GAAKP,MAAS;EAEd,MAAAQ,CAAA,GAAIN,EAAO,IAAAG,EAAA,GAAKH,EAAM,IAAAD,KAAA;EACtB,MAAAQ,CAAA,GAAIN,EAAO,IAAAG,EAAA,GAAKH,EAAM,IAAAF,KAAA;EACtB,MAAAS,CAAA,GAAIN,EAAO,IAAAG,EAAA,GAAKH,EAAM,IAAAH,KAAA;EAEpB,QAAAO,CAAA,IAAK,EAAO,KAAAC,CAAA,IAAK,CAAK,IAAAC,CAAA;AAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}