{"ast":null,"code":"import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nexport function nextElected(instanceId, api) {\n  return memo(instanceId, () => api.query.staking.erasStakers ? api.derive.session.indexes().pipe(\n  // only populate for next era in the last session, so track both here - entries are not\n  // subscriptions, so we need a trigger - currentIndex acts as that trigger to refresh\n  switchMap(_ref => {\n    let {\n      currentEra\n    } = _ref;\n    return api.query.staking.erasStakers.keys(currentEra);\n  }), map(keys => keys.map(_ref2 => {\n    let {\n      args: [, accountId]\n    } = _ref2;\n    return accountId;\n  }))) : api.query.staking['currentElected']());\n}\n/**\n * @description Retrieve latest list of validators\n */\nexport function validators(instanceId, api) {\n  return memo(instanceId, () =>\n  // Sadly the node-template is (for some obscure reason) not comprehensive, so while the derive works\n  // in all actual real-world deployed chains, it does create some confusion for limited template chains\n  combineLatest([api.query.session ? api.query.session.validators() : of([]), api.query.staking ? api.derive.staking.nextElected() : of([])]).pipe(map(_ref3 => {\n    let [validators, nextElected] = _ref3;\n    return {\n      nextElected: nextElected.length ? nextElected : validators,\n      validators\n    };\n  })));\n}","map":{"version":3,"names":["combineLatest","map","of","switchMap","memo","nextElected","instanceId","api","query","staking","erasStakers","derive","session","indexes","pipe","_ref","currentEra","keys","_ref2","args","accountId","validators","_ref3","length"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/staking/validators.js"],"sourcesContent":["import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { memo } from '../util/index.js';\nexport function nextElected(instanceId, api) {\n    return memo(instanceId, () => api.query.staking.erasStakers\n        ? api.derive.session.indexes().pipe(\n        // only populate for next era in the last session, so track both here - entries are not\n        // subscriptions, so we need a trigger - currentIndex acts as that trigger to refresh\n        switchMap(({ currentEra }) => api.query.staking.erasStakers.keys(currentEra)), map((keys) => keys.map(({ args: [, accountId] }) => accountId)))\n        : api.query.staking['currentElected']());\n}\n/**\n * @description Retrieve latest list of validators\n */\nexport function validators(instanceId, api) {\n    return memo(instanceId, () => \n    // Sadly the node-template is (for some obscure reason) not comprehensive, so while the derive works\n    // in all actual real-world deployed chains, it does create some confusion for limited template chains\n    combineLatest([\n        api.query.session\n            ? api.query.session.validators()\n            : of([]),\n        api.query.staking\n            ? api.derive.staking.nextElected()\n            : of([])\n    ]).pipe(map(([validators, nextElected]) => ({\n        nextElected: nextElected.length\n            ? nextElected\n            : validators,\n        validators\n    }))));\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,GAAG,EAAEC,EAAE,EAAEC,SAAS,QAAQ,MAAM;AACxD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,SAASC,WAAWA,CAACC,UAAU,EAAEC,GAAG,EAAE;EACzC,OAAOH,IAAI,CAACE,UAAU,EAAE,MAAMC,GAAG,CAACC,KAAK,CAACC,OAAO,CAACC,WAAW,GACrDH,GAAG,CAACI,MAAM,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI;EACnC;EACA;EACAX,SAAS,CAACY,IAAA;IAAA,IAAC;MAAEC;IAAW,CAAC,GAAAD,IAAA;IAAA,OAAKR,GAAG,CAACC,KAAK,CAACC,OAAO,CAACC,WAAW,CAACO,IAAI,CAACD,UAAU,CAAC;EAAA,EAAC,EAAEf,GAAG,CAAEgB,IAAI,IAAKA,IAAI,CAAChB,GAAG,CAACiB,KAAA;IAAA,IAAC;MAAEC,IAAI,EAAE,GAAGC,SAAS;IAAE,CAAC,GAAAF,KAAA;IAAA,OAAKE,SAAS;EAAA,EAAC,CAAC,CAAC,GAC7Ib,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAChD;AACA;AACA;AACA;AACA,OAAO,SAASY,UAAUA,CAACf,UAAU,EAAEC,GAAG,EAAE;EACxC,OAAOH,IAAI,CAACE,UAAU,EAAE;EACxB;EACA;EACAN,aAAa,CAAC,CACVO,GAAG,CAACC,KAAK,CAACI,OAAO,GACXL,GAAG,CAACC,KAAK,CAACI,OAAO,CAACS,UAAU,CAAC,CAAC,GAC9BnB,EAAE,CAAC,EAAE,CAAC,EACZK,GAAG,CAACC,KAAK,CAACC,OAAO,GACXF,GAAG,CAACI,MAAM,CAACF,OAAO,CAACJ,WAAW,CAAC,CAAC,GAChCH,EAAE,CAAC,EAAE,CAAC,CACf,CAAC,CAACY,IAAI,CAACb,GAAG,CAACqB,KAAA;IAAA,IAAC,CAACD,UAAU,EAAEhB,WAAW,CAAC,GAAAiB,KAAA;IAAA,OAAM;MACxCjB,WAAW,EAAEA,WAAW,CAACkB,MAAM,GACzBlB,WAAW,GACXgB,UAAU;MAChBA;IACJ,CAAC;EAAA,CAAC,CAAC,CAAC,CAAC;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}