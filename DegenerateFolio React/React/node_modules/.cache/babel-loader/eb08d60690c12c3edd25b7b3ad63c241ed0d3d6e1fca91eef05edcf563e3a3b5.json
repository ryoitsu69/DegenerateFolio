{"ast":null,"code":"import { getTypeDef, TypeDefInfo } from '@polkadot/types-create';\nfunction extractSubSingle(_, _ref) {\n  let {\n    sub\n  } = _ref;\n  const {\n    lookupName,\n    type\n  } = sub;\n  return extractTypes([lookupName || type]);\n}\nfunction extractSubArray(_, _ref2) {\n  let {\n    sub\n  } = _ref2;\n  return extractTypes(sub.map(_ref3 => {\n    let {\n      lookupName,\n      type\n    } = _ref3;\n    return lookupName || type;\n  }));\n}\nfunction unhandled(type, _ref4) {\n  let {\n    info\n  } = _ref4;\n  throw new Error(\"Unhandled: Unable to create and validate type from \".concat(type, \" (info=\").concat(TypeDefInfo[info], \")\"));\n}\nconst mapping = {\n  [TypeDefInfo.BTreeMap]: extractSubArray,\n  [TypeDefInfo.BTreeSet]: extractSubSingle,\n  [TypeDefInfo.Compact]: extractSubSingle,\n  [TypeDefInfo.DoNotConstruct]: unhandled,\n  [TypeDefInfo.Enum]: extractSubArray,\n  [TypeDefInfo.HashMap]: extractSubArray,\n  [TypeDefInfo.Int]: unhandled,\n  [TypeDefInfo.Linkage]: extractSubSingle,\n  [TypeDefInfo.Null]: unhandled,\n  [TypeDefInfo.Option]: extractSubSingle,\n  [TypeDefInfo.Plain]: (_, typeDef) => typeDef.lookupName || typeDef.type,\n  [TypeDefInfo.Range]: extractSubSingle,\n  [TypeDefInfo.RangeInclusive]: extractSubSingle,\n  [TypeDefInfo.Result]: extractSubArray,\n  [TypeDefInfo.Set]: extractSubArray,\n  [TypeDefInfo.Si]: unhandled,\n  [TypeDefInfo.Struct]: extractSubArray,\n  [TypeDefInfo.Tuple]: extractSubArray,\n  [TypeDefInfo.UInt]: unhandled,\n  [TypeDefInfo.Vec]: extractSubSingle,\n  [TypeDefInfo.VecFixed]: extractSubSingle,\n  [TypeDefInfo.WrapperKeepOpaque]: extractSubSingle,\n  [TypeDefInfo.WrapperOpaque]: extractSubSingle\n};\n/** @internal */\nexport function extractTypes(types) {\n  const count = types.length;\n  const result = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const type = types[i];\n    const typeDef = getTypeDef(type);\n    result[i] = mapping[typeDef.info](type, typeDef);\n  }\n  return result;\n}","map":{"version":3,"names":["getTypeDef","TypeDefInfo","extractSubSingle","_","_ref","sub","lookupName","type","extractTypes","extractSubArray","_ref2","map","_ref3","unhandled","_ref4","info","Error","concat","mapping","BTreeMap","BTreeSet","Compact","DoNotConstruct","Enum","HashMap","Int","Linkage","Null","Option","Plain","typeDef","Range","RangeInclusive","Result","Set","Si","Struct","Tuple","UInt","Vec","VecFixed","WrapperKeepOpaque","WrapperOpaque","types","count","length","result","Array","i"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/metadata/util/extractTypes.js"],"sourcesContent":["import { getTypeDef, TypeDefInfo } from '@polkadot/types-create';\nfunction extractSubSingle(_, { sub }) {\n    const { lookupName, type } = sub;\n    return extractTypes([lookupName || type]);\n}\nfunction extractSubArray(_, { sub }) {\n    return extractTypes(sub.map(({ lookupName, type }) => lookupName || type));\n}\nfunction unhandled(type, { info }) {\n    throw new Error(`Unhandled: Unable to create and validate type from ${type} (info=${TypeDefInfo[info]})`);\n}\nconst mapping = {\n    [TypeDefInfo.BTreeMap]: extractSubArray,\n    [TypeDefInfo.BTreeSet]: extractSubSingle,\n    [TypeDefInfo.Compact]: extractSubSingle,\n    [TypeDefInfo.DoNotConstruct]: unhandled,\n    [TypeDefInfo.Enum]: extractSubArray,\n    [TypeDefInfo.HashMap]: extractSubArray,\n    [TypeDefInfo.Int]: unhandled,\n    [TypeDefInfo.Linkage]: extractSubSingle,\n    [TypeDefInfo.Null]: unhandled,\n    [TypeDefInfo.Option]: extractSubSingle,\n    [TypeDefInfo.Plain]: (_, typeDef) => typeDef.lookupName || typeDef.type,\n    [TypeDefInfo.Range]: extractSubSingle,\n    [TypeDefInfo.RangeInclusive]: extractSubSingle,\n    [TypeDefInfo.Result]: extractSubArray,\n    [TypeDefInfo.Set]: extractSubArray,\n    [TypeDefInfo.Si]: unhandled,\n    [TypeDefInfo.Struct]: extractSubArray,\n    [TypeDefInfo.Tuple]: extractSubArray,\n    [TypeDefInfo.UInt]: unhandled,\n    [TypeDefInfo.Vec]: extractSubSingle,\n    [TypeDefInfo.VecFixed]: extractSubSingle,\n    [TypeDefInfo.WrapperKeepOpaque]: extractSubSingle,\n    [TypeDefInfo.WrapperOpaque]: extractSubSingle\n};\n/** @internal */\nexport function extractTypes(types) {\n    const count = types.length;\n    const result = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const type = types[i];\n        const typeDef = getTypeDef(type);\n        result[i] = mapping[typeDef.info](type, typeDef);\n    }\n    return result;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}