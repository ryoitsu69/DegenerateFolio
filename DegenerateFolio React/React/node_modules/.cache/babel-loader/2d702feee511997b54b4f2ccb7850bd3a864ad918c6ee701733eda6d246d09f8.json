{"ast":null,"code":"import { base64Decode, unzlibSync } from '@polkadot/wasm-util';\nimport { bytes, lenIn, lenOut } from './cjs/bytes.js';\nexport { packageInfo } from './packageInfo.js';\n/**\n * @name wasmBytes\n * @description\n * The decoded WASM interface as exposed by this package.\n *\n * The build process will output into cjs/* into a compressed base64 format.\n * Upon loading the exposed bytes will be decoded and decompressed from this\n * specific format and returned.\n */\nexport const wasmBytes = /*#__PURE__*/unzlibSync(base64Decode(bytes, new Uint8Array(lenIn)), new Uint8Array(lenOut));","map":{"version":3,"names":["base64Decode","unzlibSync","bytes","lenIn","lenOut","packageInfo","wasmBytes","Uint8Array"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/wasm-crypto-wasm/bundle.js"],"sourcesContent":["import { base64Decode, unzlibSync } from '@polkadot/wasm-util';\nimport { bytes, lenIn, lenOut } from './cjs/bytes.js';\nexport { packageInfo } from './packageInfo.js';\n/**\n * @name wasmBytes\n * @description\n * The decoded WASM interface as exposed by this package.\n *\n * The build process will output into cjs/* into a compressed base64 format.\n * Upon loading the exposed bytes will be decoded and decompressed from this\n * specific format and returned.\n */\nexport const wasmBytes = /*#__PURE__*/ unzlibSync(base64Decode(bytes, new Uint8Array(lenIn)), new Uint8Array(lenOut));\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,qBAAqB;AAC9D,SAASC,KAAK,EAAEC,KAAK,EAAEC,MAAM,QAAQ,gBAAgB;AACrD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAG,aAAcL,UAAU,CAACD,YAAY,CAACE,KAAK,EAAE,IAAIK,UAAU,CAACJ,KAAK,CAAC,CAAC,EAAE,IAAII,UAAU,CAACH,MAAM,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}