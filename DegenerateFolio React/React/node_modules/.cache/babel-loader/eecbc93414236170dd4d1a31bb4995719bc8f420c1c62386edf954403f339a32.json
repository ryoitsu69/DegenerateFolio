{"ast":null,"code":"import { BN, BN_ONE, BN_TWO, bnToBn, bnToU8a } from '../bn/index.js';\nimport { u8aConcatStrict } from '../u8a/index.js';\nconst MAX_U8 = BN_TWO.pow(new BN(8 - 2)).isub(BN_ONE);\nconst MAX_U16 = BN_TWO.pow(new BN(16 - 2)).isub(BN_ONE);\nconst MAX_U32 = BN_TWO.pow(new BN(32 - 2)).isub(BN_ONE);\nconst BL_16 = {\n  bitLength: 16\n};\nconst BL_32 = {\n  bitLength: 32\n};\n/**\n * @name compactToU8a\n * @description Encodes a number into a compact representation\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactToU8a } from '@polkadot/util';\n *\n * console.log(compactToU8a(511, 32)); // Uint8Array([0b11111101, 0b00000111])\n * ```\n */\nexport function compactToU8a(value) {\n  const bn = bnToBn(value);\n  if (bn.lte(MAX_U8)) {\n    return new Uint8Array([bn.toNumber() << 2]);\n  } else if (bn.lte(MAX_U16)) {\n    return bnToU8a(bn.shln(2).iadd(BN_ONE), BL_16);\n  } else if (bn.lte(MAX_U32)) {\n    return bnToU8a(bn.shln(2).iadd(BN_TWO), BL_32);\n  }\n  const u8a = bnToU8a(bn);\n  let length = u8a.length;\n  // adjust to the minimum number of bytes\n  while (u8a[length - 1] === 0) {\n    length--;\n  }\n  if (length < 4) {\n    throw new Error('Invalid length, previous checks match anything less than 2^30');\n  }\n  return u8aConcatStrict([\n  // subtract 4 as minimum (also catered for in decoding)\n  new Uint8Array([(length - 4 << 2) + 0b11]), u8a.subarray(0, length)]);\n}","map":{"version":3,"names":["BN","BN_ONE","BN_TWO","bnToBn","bnToU8a","u8aConcatStrict","MAX_U8","pow","isub","MAX_U16","MAX_U32","BL_16","bitLength","BL_32","compactToU8a","value","bn","lte","Uint8Array","toNumber","shln","iadd","u8a","length","Error","subarray"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util/compact/toU8a.js"],"sourcesContent":["import { BN, BN_ONE, BN_TWO, bnToBn, bnToU8a } from '../bn/index.js';\nimport { u8aConcatStrict } from '../u8a/index.js';\nconst MAX_U8 = BN_TWO.pow(new BN(8 - 2)).isub(BN_ONE);\nconst MAX_U16 = BN_TWO.pow(new BN(16 - 2)).isub(BN_ONE);\nconst MAX_U32 = BN_TWO.pow(new BN(32 - 2)).isub(BN_ONE);\nconst BL_16 = { bitLength: 16 };\nconst BL_32 = { bitLength: 32 };\n/**\n * @name compactToU8a\n * @description Encodes a number into a compact representation\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactToU8a } from '@polkadot/util';\n *\n * console.log(compactToU8a(511, 32)); // Uint8Array([0b11111101, 0b00000111])\n * ```\n */\nexport function compactToU8a(value) {\n    const bn = bnToBn(value);\n    if (bn.lte(MAX_U8)) {\n        return new Uint8Array([bn.toNumber() << 2]);\n    }\n    else if (bn.lte(MAX_U16)) {\n        return bnToU8a(bn.shln(2).iadd(BN_ONE), BL_16);\n    }\n    else if (bn.lte(MAX_U32)) {\n        return bnToU8a(bn.shln(2).iadd(BN_TWO), BL_32);\n    }\n    const u8a = bnToU8a(bn);\n    let length = u8a.length;\n    // adjust to the minimum number of bytes\n    while (u8a[length - 1] === 0) {\n        length--;\n    }\n    if (length < 4) {\n        throw new Error('Invalid length, previous checks match anything less than 2^30');\n    }\n    return u8aConcatStrict([\n        // subtract 4 as minimum (also catered for in decoding)\n        new Uint8Array([((length - 4) << 2) + 0b11]),\n        u8a.subarray(0, length)\n    ]);\n}\n"],"mappings":"AAAA,SAASA,EAAE,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,QAAQ,gBAAgB;AACpE,SAASC,eAAe,QAAQ,iBAAiB;AACjD,MAAMC,MAAM,GAAGJ,MAAM,CAACK,GAAG,CAAC,IAAIP,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAACQ,IAAI,CAACP,MAAM,CAAC;AACrD,MAAMQ,OAAO,GAAGP,MAAM,CAACK,GAAG,CAAC,IAAIP,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAACQ,IAAI,CAACP,MAAM,CAAC;AACvD,MAAMS,OAAO,GAAGR,MAAM,CAACK,GAAG,CAAC,IAAIP,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAACQ,IAAI,CAACP,MAAM,CAAC;AACvD,MAAMU,KAAK,GAAG;EAAEC,SAAS,EAAE;AAAG,CAAC;AAC/B,MAAMC,KAAK,GAAG;EAAED,SAAS,EAAE;AAAG,CAAC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,YAAYA,CAACC,KAAK,EAAE;EAChC,MAAMC,EAAE,GAAGb,MAAM,CAACY,KAAK,CAAC;EACxB,IAAIC,EAAE,CAACC,GAAG,CAACX,MAAM,CAAC,EAAE;IAChB,OAAO,IAAIY,UAAU,CAAC,CAACF,EAAE,CAACG,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;EAC/C,CAAC,MACI,IAAIH,EAAE,CAACC,GAAG,CAACR,OAAO,CAAC,EAAE;IACtB,OAAOL,OAAO,CAACY,EAAE,CAACI,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,CAACpB,MAAM,CAAC,EAAEU,KAAK,CAAC;EAClD,CAAC,MACI,IAAIK,EAAE,CAACC,GAAG,CAACP,OAAO,CAAC,EAAE;IACtB,OAAON,OAAO,CAACY,EAAE,CAACI,IAAI,CAAC,CAAC,CAAC,CAACC,IAAI,CAACnB,MAAM,CAAC,EAAEW,KAAK,CAAC;EAClD;EACA,MAAMS,GAAG,GAAGlB,OAAO,CAACY,EAAE,CAAC;EACvB,IAAIO,MAAM,GAAGD,GAAG,CAACC,MAAM;EACvB;EACA,OAAOD,GAAG,CAACC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;IAC1BA,MAAM,EAAE;EACZ;EACA,IAAIA,MAAM,GAAG,CAAC,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,+DAA+D,CAAC;EACpF;EACA,OAAOnB,eAAe,CAAC;EACnB;EACA,IAAIa,UAAU,CAAC,CAAC,CAAEK,MAAM,GAAG,CAAC,IAAK,CAAC,IAAI,IAAI,CAAC,CAAC,EAC5CD,GAAG,CAACG,QAAQ,CAAC,CAAC,EAAEF,MAAM,CAAC,CAC1B,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}