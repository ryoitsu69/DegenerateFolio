{"ast":null,"code":"import { combineLatest, map, of } from 'rxjs';\nimport { objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nfunction isSeatHolder(value) {\n  return !Array.isArray(value);\n}\nfunction isCandidateTuple(value) {\n  return Array.isArray(value);\n}\nfunction getAccountTuple(value) {\n  return isSeatHolder(value) ? [value.who, value.stake] : value;\n}\nfunction getCandidate(value) {\n  return isCandidateTuple(value) ? value[0] : value;\n}\nfunction sortAccounts([, balanceA], [, balanceB]) {\n  return balanceB.cmp(balanceA);\n}\nfunction getConstants(api, elections) {\n  return elections ? {\n    candidacyBond: api.consts[elections].candidacyBond,\n    desiredRunnersUp: api.consts[elections].desiredRunnersUp,\n    desiredSeats: api.consts[elections].desiredMembers,\n    termDuration: api.consts[elections].termDuration,\n    votingBond: api.consts[elections]['votingBond'],\n    votingBondBase: api.consts[elections].votingBondBase,\n    votingBondFactor: api.consts[elections].votingBondFactor\n  } : {};\n}\nfunction getModules(api) {\n  const [council] = api.registry.getModuleInstances(api.runtimeVersion.specName, 'council') || ['council'];\n  const elections = api.query['phragmenElection'] ? 'phragmenElection' : api.query['electionsPhragmen'] ? 'electionsPhragmen' : api.query.elections ? 'elections' : null;\n  // In some cases council here can refer to `generalCouncil` depending on what the chain specific override is.\n  // Therefore, we check to see if it exists in the query field. If it does not we default to `council`.\n  const resolvedCouncil = api.query[council] ? council : 'council';\n  return [resolvedCouncil, elections];\n}\nfunction queryAll(api, council, elections) {\n  return api.queryMulti([api.query[council].members, api.query[elections].candidates, api.query[elections].members, api.query[elections].runnersUp]);\n}\nfunction queryCouncil(api, council) {\n  return combineLatest([api.query[council].members(), of([]), of([]), of([])]);\n}\n/**\n * @name info\n * @returns An object containing the combined results of the storage queries for\n * all relevant election module properties.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.elections.info(({ members, candidates }) => {\n *   console.log(`There are currently ${members.length} council members and ${candidates.length} prospective council candidates.`);\n * });\n * ```\n */\nexport function info(instanceId, api) {\n  return memo(instanceId, () => {\n    const [council, elections] = getModules(api);\n    return (elections ? queryAll(api, council, elections) : queryCouncil(api, council)).pipe(map(([councilMembers, candidates, members, runnersUp]) => objectSpread({}, getConstants(api, elections), {\n      candidateCount: api.registry.createType('u32', candidates.length),\n      candidates: candidates.map(getCandidate),\n      members: members.length ? members.map(getAccountTuple).sort(sortAccounts) : councilMembers.map(a => [a, api.registry.createType('Balance')]),\n      runnersUp: runnersUp.map(getAccountTuple).sort(sortAccounts)\n    })));\n  });\n}","map":{"version":3,"names":["combineLatest","map","of","objectSpread","memo","isSeatHolder","value","Array","isArray","isCandidateTuple","getAccountTuple","who","stake","getCandidate","sortAccounts","balanceA","balanceB","cmp","getConstants","api","elections","candidacyBond","consts","desiredRunnersUp","desiredSeats","desiredMembers","termDuration","votingBond","votingBondBase","votingBondFactor","getModules","council","registry","getModuleInstances","runtimeVersion","specName","query","resolvedCouncil","queryAll","queryMulti","members","candidates","runnersUp","queryCouncil","info","instanceId","pipe","councilMembers","candidateCount","createType","length","sort","a"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/elections/info.js"],"sourcesContent":["import { combineLatest, map, of } from 'rxjs';\nimport { objectSpread } from '@polkadot/util';\nimport { memo } from '../util/index.js';\nfunction isSeatHolder(value) {\n    return !Array.isArray(value);\n}\nfunction isCandidateTuple(value) {\n    return Array.isArray(value);\n}\nfunction getAccountTuple(value) {\n    return isSeatHolder(value)\n        ? [value.who, value.stake]\n        : value;\n}\nfunction getCandidate(value) {\n    return isCandidateTuple(value)\n        ? value[0]\n        : value;\n}\nfunction sortAccounts([, balanceA], [, balanceB]) {\n    return balanceB.cmp(balanceA);\n}\nfunction getConstants(api, elections) {\n    return elections\n        ? {\n            candidacyBond: api.consts[elections].candidacyBond,\n            desiredRunnersUp: api.consts[elections].desiredRunnersUp,\n            desiredSeats: api.consts[elections].desiredMembers,\n            termDuration: api.consts[elections].termDuration,\n            votingBond: api.consts[elections]['votingBond'],\n            votingBondBase: api.consts[elections].votingBondBase,\n            votingBondFactor: api.consts[elections].votingBondFactor\n        }\n        : {};\n}\nfunction getModules(api) {\n    const [council] = api.registry.getModuleInstances(api.runtimeVersion.specName, 'council') || ['council'];\n    const elections = api.query['phragmenElection']\n        ? 'phragmenElection'\n        : api.query['electionsPhragmen']\n            ? 'electionsPhragmen'\n            : api.query.elections\n                ? 'elections'\n                : null;\n    // In some cases council here can refer to `generalCouncil` depending on what the chain specific override is.\n    // Therefore, we check to see if it exists in the query field. If it does not we default to `council`.\n    const resolvedCouncil = api.query[council] ? council : 'council';\n    return [resolvedCouncil, elections];\n}\nfunction queryAll(api, council, elections) {\n    return api.queryMulti([\n        api.query[council].members,\n        api.query[elections].candidates,\n        api.query[elections].members,\n        api.query[elections].runnersUp\n    ]);\n}\nfunction queryCouncil(api, council) {\n    return combineLatest([\n        api.query[council].members(),\n        of([]),\n        of([]),\n        of([])\n    ]);\n}\n/**\n * @name info\n * @returns An object containing the combined results of the storage queries for\n * all relevant election module properties.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.elections.info(({ members, candidates }) => {\n *   console.log(`There are currently ${members.length} council members and ${candidates.length} prospective council candidates.`);\n * });\n * ```\n */\nexport function info(instanceId, api) {\n    return memo(instanceId, () => {\n        const [council, elections] = getModules(api);\n        return (elections\n            ? queryAll(api, council, elections)\n            : queryCouncil(api, council)).pipe(map(([councilMembers, candidates, members, runnersUp]) => objectSpread({}, getConstants(api, elections), {\n            candidateCount: api.registry.createType('u32', candidates.length),\n            candidates: candidates.map(getCandidate),\n            members: members.length\n                ? members.map(getAccountTuple).sort(sortAccounts)\n                : councilMembers.map((a) => [a, api.registry.createType('Balance')]),\n            runnersUp: runnersUp.map(getAccountTuple).sort(sortAccounts)\n        })));\n    });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}