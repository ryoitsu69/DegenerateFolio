{"ast":null,"code":"import { isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from '../native/Raw.js';\n/** @internal */\nfunction decodeU8aFixed(value, bitLength) {\n  const u8a = u8aToU8a(value);\n  const byteLength = bitLength / 8;\n  if (!u8a.length) {\n    return [new Uint8Array(byteLength), 0];\n  }\n  if (isU8a(value) ? u8a.length < byteLength : u8a.length !== byteLength) {\n    throw new Error(`Expected input with ${byteLength} bytes (${bitLength} bits), found ${u8a.length} bytes`);\n  }\n  return [u8a.subarray(0, byteLength), byteLength];\n}\n/**\n * @name U8aFixed\n * @description\n * A U8a that manages a a sequence of bytes up to the specified bitLength. Not meant\n * to be used directly, rather is should be subclassed with the specific lengths.\n */\nexport class U8aFixed extends Raw {\n  constructor(registry, value = new Uint8Array(), bitLength = 256) {\n    const [u8a, decodedLength] = decodeU8aFixed(value, bitLength);\n    super(registry, u8a, decodedLength);\n  }\n  static with(bitLength, typeName) {\n    return class extends U8aFixed {\n      constructor(registry, value) {\n        super(registry, value, bitLength);\n      }\n      toRawType() {\n        return typeName || super.toRawType();\n      }\n    };\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n  toRawType() {\n    return `[u8;${this.length}]`;\n  }\n}","map":{"version":3,"names":["isU8a","u8aToU8a","Raw","decodeU8aFixed","value","bitLength","u8a","byteLength","length","Uint8Array","Error","subarray","U8aFixed","constructor","registry","decodedLength","with","typeName","toRawType"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types-codec/extended/U8aFixed.js"],"sourcesContent":["import { isU8a, u8aToU8a } from '@polkadot/util';\nimport { Raw } from '../native/Raw.js';\n/** @internal */\nfunction decodeU8aFixed(value, bitLength) {\n    const u8a = u8aToU8a(value);\n    const byteLength = bitLength / 8;\n    if (!u8a.length) {\n        return [new Uint8Array(byteLength), 0];\n    }\n    if (isU8a(value) ? u8a.length < byteLength : u8a.length !== byteLength) {\n        throw new Error(`Expected input with ${byteLength} bytes (${bitLength} bits), found ${u8a.length} bytes`);\n    }\n    return [u8a.subarray(0, byteLength), byteLength];\n}\n/**\n * @name U8aFixed\n * @description\n * A U8a that manages a a sequence of bytes up to the specified bitLength. Not meant\n * to be used directly, rather is should be subclassed with the specific lengths.\n */\nexport class U8aFixed extends Raw {\n    constructor(registry, value = new Uint8Array(), bitLength = 256) {\n        const [u8a, decodedLength] = decodeU8aFixed(value, bitLength);\n        super(registry, u8a, decodedLength);\n    }\n    static with(bitLength, typeName) {\n        return class extends U8aFixed {\n            constructor(registry, value) {\n                super(registry, value, bitLength);\n            }\n            toRawType() {\n                return typeName || super.toRawType();\n            }\n        };\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n    toRawType() {\n        return `[u8;${this.length}]`;\n    }\n}\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,gBAAgB;AAChD,SAASC,GAAG,QAAQ,kBAAkB;AACtC;AACA,SAASC,cAAcA,CAACC,KAAK,EAAEC,SAAS,EAAE;EACtC,MAAMC,GAAG,GAAGL,QAAQ,CAACG,KAAK,CAAC;EAC3B,MAAMG,UAAU,GAAGF,SAAS,GAAG,CAAC;EAChC,IAAI,CAACC,GAAG,CAACE,MAAM,EAAE;IACb,OAAO,CAAC,IAAIC,UAAU,CAACF,UAAU,CAAC,EAAE,CAAC,CAAC;EAC1C;EACA,IAAIP,KAAK,CAACI,KAAK,CAAC,GAAGE,GAAG,CAACE,MAAM,GAAGD,UAAU,GAAGD,GAAG,CAACE,MAAM,KAAKD,UAAU,EAAE;IACpE,MAAM,IAAIG,KAAK,CAAE,uBAAsBH,UAAW,WAAUF,SAAU,iBAAgBC,GAAG,CAACE,MAAO,QAAO,CAAC;EAC7G;EACA,OAAO,CAACF,GAAG,CAACK,QAAQ,CAAC,CAAC,EAAEJ,UAAU,CAAC,EAAEA,UAAU,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,QAAQ,SAASV,GAAG,CAAC;EAC9BW,WAAWA,CAACC,QAAQ,EAAEV,KAAK,GAAG,IAAIK,UAAU,CAAC,CAAC,EAAEJ,SAAS,GAAG,GAAG,EAAE;IAC7D,MAAM,CAACC,GAAG,EAAES,aAAa,CAAC,GAAGZ,cAAc,CAACC,KAAK,EAAEC,SAAS,CAAC;IAC7D,KAAK,CAACS,QAAQ,EAAER,GAAG,EAAES,aAAa,CAAC;EACvC;EACA,OAAOC,IAAIA,CAACX,SAAS,EAAEY,QAAQ,EAAE;IAC7B,OAAO,cAAcL,QAAQ,CAAC;MAC1BC,WAAWA,CAACC,QAAQ,EAAEV,KAAK,EAAE;QACzB,KAAK,CAACU,QAAQ,EAAEV,KAAK,EAAEC,SAAS,CAAC;MACrC;MACAa,SAASA,CAAA,EAAG;QACR,OAAOD,QAAQ,IAAI,KAAK,CAACC,SAAS,CAAC,CAAC;MACxC;IACJ,CAAC;EACL;EACA;AACJ;AACA;EACIA,SAASA,CAAA,EAAG;IACR,OAAQ,OAAM,IAAI,CAACV,MAAO,GAAE;EAChC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}