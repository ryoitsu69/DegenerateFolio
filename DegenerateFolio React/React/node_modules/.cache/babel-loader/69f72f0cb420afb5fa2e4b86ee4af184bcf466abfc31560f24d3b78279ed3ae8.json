{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict';\n\nconst {\n  Capabilities\n} = require('./capabilities');\n\n/**\n * Contains information about a single WebDriver session.\n */\nclass Session {\n  /**\n   * @param {string} id The session ID.\n   * @param {!./capabilities.Capabilities} capabilities\n   *     The session capabilities.\n   */\n  constructor(id, capabilities) {\n    /** @private {string} */\n    this.id_ = id;\n\n    /** @private {!Capabilities} */\n    this.caps_ = capabilities instanceof Capabilities ? ( /** @type {!Capabilities} */capabilities) : new Capabilities(capabilities);\n  }\n\n  /**\n   * @return {string} This session's ID.\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {!Capabilities} This session's capabilities.\n   */\n  getCapabilities() {\n    return this.caps_;\n  }\n\n  /**\n   * Retrieves the value of a specific capability.\n   * @param {string} key The capability to retrieve.\n   * @return {*} The capability value.\n   */\n  getCapability(key) {\n    return this.caps_.get(key);\n  }\n\n  /**\n   * Returns the JSON representation of this object, which is just the string\n   * session ID.\n   * @return {string} The JSON representation of this Session.\n   */\n  toJSON() {\n    return this.getId();\n  }\n}\n\n// PUBLIC API\n\nmodule.exports = {\n  Session\n};","map":{"version":3,"names":["Capabilities","require","Session","constructor","id","capabilities","id_","caps_","getId","getCapabilities","getCapability","key","get","toJSON","module","exports"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/selenium-webdriver/lib/session.js"],"sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n'use strict'\n\nconst { Capabilities } = require('./capabilities')\n\n/**\n * Contains information about a single WebDriver session.\n */\nclass Session {\n  /**\n   * @param {string} id The session ID.\n   * @param {!./capabilities.Capabilities} capabilities\n   *     The session capabilities.\n   */\n  constructor(id, capabilities) {\n    /** @private {string} */\n    this.id_ = id\n\n    /** @private {!Capabilities} */\n    this.caps_ =\n      capabilities instanceof Capabilities\n        ? /** @type {!Capabilities} */ (capabilities)\n        : new Capabilities(capabilities)\n  }\n\n  /**\n   * @return {string} This session's ID.\n   */\n  getId() {\n    return this.id_\n  }\n\n  /**\n   * @return {!Capabilities} This session's capabilities.\n   */\n  getCapabilities() {\n    return this.caps_\n  }\n\n  /**\n   * Retrieves the value of a specific capability.\n   * @param {string} key The capability to retrieve.\n   * @return {*} The capability value.\n   */\n  getCapability(key) {\n    return this.caps_.get(key)\n  }\n\n  /**\n   * Returns the JSON representation of this object, which is just the string\n   * session ID.\n   * @return {string} The JSON representation of this Session.\n   */\n  toJSON() {\n    return this.getId()\n  }\n}\n\n// PUBLIC API\n\nmodule.exports = { Session }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EAAEA;AAAa,CAAC,GAAGC,OAAO,CAAC,gBAAgB,CAAC;;AAElD;AACA;AACA;AACA,MAAMC,OAAO,CAAC;EACZ;AACF;AACA;AACA;AACA;EACEC,WAAWA,CAACC,EAAE,EAAEC,YAAY,EAAE;IAC5B;IACA,IAAI,CAACC,GAAG,GAAGF,EAAE;;IAEb;IACA,IAAI,CAACG,KAAK,GACRF,YAAY,YAAYL,YAAY,KAChC,4BAA8BK,YAAY,IAC1C,IAAIL,YAAY,CAACK,YAAY,CAAC;EACtC;;EAEA;AACF;AACA;EACEG,KAAKA,CAAA,EAAG;IACN,OAAO,IAAI,CAACF,GAAG;EACjB;;EAEA;AACF;AACA;EACEG,eAAeA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACF,KAAK;EACnB;;EAEA;AACF;AACA;AACA;AACA;EACEG,aAAaA,CAACC,GAAG,EAAE;IACjB,OAAO,IAAI,CAACJ,KAAK,CAACK,GAAG,CAACD,GAAG,CAAC;EAC5B;;EAEA;AACF;AACA;AACA;AACA;EACEE,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAACL,KAAK,CAAC,CAAC;EACrB;AACF;;AAEA;;AAEAM,MAAM,CAACC,OAAO,GAAG;EAAEb;AAAQ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}