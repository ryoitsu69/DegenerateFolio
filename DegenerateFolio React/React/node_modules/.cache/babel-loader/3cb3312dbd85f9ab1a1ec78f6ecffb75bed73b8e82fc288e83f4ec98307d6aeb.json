{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeSignBytes = exports.makeSignDoc = exports.makeAuthInfoBytes = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst utils_1 = require(\"@cosmjs/utils\");\nconst signing_1 = require(\"cosmjs-types/cosmos/tx/signing/v1beta1/signing\");\nconst tx_1 = require(\"cosmjs-types/cosmos/tx/v1beta1/tx\");\n/**\n * Create signer infos from the provided signers.\n *\n * This implementation does not support different signing modes for the different signers.\n */\nfunction makeSignerInfos(signers, signMode) {\n  return signers.map(({\n    pubkey,\n    sequence\n  }) => ({\n    publicKey: pubkey,\n    modeInfo: {\n      single: {\n        mode: signMode\n      }\n    },\n    sequence: BigInt(sequence)\n  }));\n}\n/**\n * Creates and serializes an AuthInfo document.\n *\n * This implementation does not support different signing modes for the different signers.\n */\nfunction makeAuthInfoBytes(signers, feeAmount, gasLimit, feeGranter, feePayer, signMode = signing_1.SignMode.SIGN_MODE_DIRECT) {\n  // Required arguments 4 and 5 were added in CosmJS 0.29. Use runtime checks to help our non-TS users.\n  (0, utils_1.assert)(feeGranter === undefined || typeof feeGranter === \"string\", \"feeGranter must be undefined or string\");\n  (0, utils_1.assert)(feePayer === undefined || typeof feePayer === \"string\", \"feePayer must be undefined or string\");\n  const authInfo = tx_1.AuthInfo.fromPartial({\n    signerInfos: makeSignerInfos(signers, signMode),\n    fee: {\n      amount: [...feeAmount],\n      gasLimit: BigInt(gasLimit),\n      granter: feeGranter,\n      payer: feePayer\n    }\n  });\n  return tx_1.AuthInfo.encode(authInfo).finish();\n}\nexports.makeAuthInfoBytes = makeAuthInfoBytes;\nfunction makeSignDoc(bodyBytes, authInfoBytes, chainId, accountNumber) {\n  return {\n    bodyBytes: bodyBytes,\n    authInfoBytes: authInfoBytes,\n    chainId: chainId,\n    accountNumber: BigInt(accountNumber)\n  };\n}\nexports.makeSignDoc = makeSignDoc;\nfunction makeSignBytes({\n  accountNumber,\n  authInfoBytes,\n  bodyBytes,\n  chainId\n}) {\n  const signDoc = tx_1.SignDoc.fromPartial({\n    accountNumber: accountNumber,\n    authInfoBytes: authInfoBytes,\n    bodyBytes: bodyBytes,\n    chainId: chainId\n  });\n  return tx_1.SignDoc.encode(signDoc).finish();\n}\nexports.makeSignBytes = makeSignBytes;","map":{"version":3,"names":["utils_1","require","signing_1","tx_1","makeSignerInfos","signers","signMode","map","pubkey","sequence","publicKey","modeInfo","single","mode","BigInt","makeAuthInfoBytes","feeAmount","gasLimit","feeGranter","feePayer","SignMode","SIGN_MODE_DIRECT","assert","undefined","authInfo","AuthInfo","fromPartial","signerInfos","fee","amount","granter","payer","encode","finish","exports","makeSignDoc","bodyBytes","authInfoBytes","chainId","accountNumber","makeSignBytes","signDoc","SignDoc"],"sources":["../src/signing.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA;AACA,MAAAA,OAAA,GAAAC,OAAA;AAEA,MAAAC,SAAA,GAAAD,OAAA;AACA,MAAAE,IAAA,GAAAF,OAAA;AAGA;;;;;AAKA,SAASG,eAAeA,CACtBC,OAAoF,EACpFC,QAAkB;EAElB,OAAOD,OAAO,CAACE,GAAG,CAChB,CAAC;IAAEC,MAAM;IAAEC;EAAQ,CAAE,MAAkB;IACrCC,SAAS,EAAEF,MAAM;IACjBG,QAAQ,EAAE;MACRC,MAAM,EAAE;QAAEC,IAAI,EAAEP;MAAQ;KACzB;IACDG,QAAQ,EAAEK,MAAM,CAACL,QAAQ;GAC1B,CAAC,CACH;AACH;AAEA;;;;;AAKA,SAAgBM,iBAAiBA,CAC/BV,OAAoF,EACpFW,SAA0B,EAC1BC,QAAgB,EAChBC,UAA8B,EAC9BC,QAA4B,EAC5Bb,QAAQ,GAAGJ,SAAA,CAAAkB,QAAQ,CAACC,gBAAgB;EAEpC;EACA,IAAArB,OAAA,CAAAsB,MAAM,EACJJ,UAAU,KAAKK,SAAS,IAAI,OAAOL,UAAU,KAAK,QAAQ,EAC1D,wCAAwC,CACzC;EACD,IAAAlB,OAAA,CAAAsB,MAAM,EAACH,QAAQ,KAAKI,SAAS,IAAI,OAAOJ,QAAQ,KAAK,QAAQ,EAAE,sCAAsC,CAAC;EAEtG,MAAMK,QAAQ,GAAGrB,IAAA,CAAAsB,QAAQ,CAACC,WAAW,CAAC;IACpCC,WAAW,EAAEvB,eAAe,CAACC,OAAO,EAAEC,QAAQ,CAAC;IAC/CsB,GAAG,EAAE;MACHC,MAAM,EAAE,CAAC,GAAGb,SAAS,CAAC;MACtBC,QAAQ,EAAEH,MAAM,CAACG,QAAQ,CAAC;MAC1Ba,OAAO,EAAEZ,UAAU;MACnBa,KAAK,EAAEZ;;GAEV,CAAC;EACF,OAAOhB,IAAA,CAAAsB,QAAQ,CAACO,MAAM,CAACR,QAAQ,CAAC,CAACS,MAAM,EAAE;AAC3C;AAzBAC,OAAA,CAAAnB,iBAAA,GAAAA,iBAAA;AA2BA,SAAgBoB,WAAWA,CACzBC,SAAqB,EACrBC,aAAyB,EACzBC,OAAe,EACfC,aAAqB;EAErB,OAAO;IACLH,SAAS,EAAEA,SAAS;IACpBC,aAAa,EAAEA,aAAa;IAC5BC,OAAO,EAAEA,OAAO;IAChBC,aAAa,EAAEzB,MAAM,CAACyB,aAAa;GACpC;AACH;AAZAL,OAAA,CAAAC,WAAA,GAAAA,WAAA;AAcA,SAAgBK,aAAaA,CAAC;EAAED,aAAa;EAAEF,aAAa;EAAED,SAAS;EAAEE;AAAO,CAAW;EACzF,MAAMG,OAAO,GAAGtC,IAAA,CAAAuC,OAAO,CAAChB,WAAW,CAAC;IAClCa,aAAa,EAAEA,aAAa;IAC5BF,aAAa,EAAEA,aAAa;IAC5BD,SAAS,EAAEA,SAAS;IACpBE,OAAO,EAAEA;GACV,CAAC;EACF,OAAOnC,IAAA,CAAAuC,OAAO,CAACV,MAAM,CAACS,OAAO,CAAC,CAACR,MAAM,EAAE;AACzC;AARAC,OAAA,CAAAM,aAAA,GAAAA,aAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}