{"ast":null,"code":"import { lazyMethod, lazyMethods, stringCamelCase } from '@polkadot/util';\nimport { objectNameToCamel } from '../util.js';\nimport { createFunction, createKeyRaw, NO_RAW_ARGS } from './createFunction.js';\nimport { getStorage } from './getStorage.js';\nimport { createRuntimeFunction } from './util.js';\nconst VERSION_NAME = 'palletVersion';\nconst VERSION_KEY = ':__STORAGE_VERSION__:';\nconst VERSION_DOCS = {\n  docs: 'Returns the current pallet version from storage',\n  type: 'u16'\n};\n/** @internal */\nexport function decorateStorage(registry, {\n  pallets\n}, _metaVersion) {\n  const result = getStorage(registry);\n  for (let i = 0, count = pallets.length; i < count; i++) {\n    const {\n      name,\n      storage\n    } = pallets[i];\n    if (storage.isSome) {\n      const section = stringCamelCase(name);\n      const {\n        items,\n        prefix: _prefix\n      } = storage.unwrap();\n      const prefix = _prefix.toString();\n      lazyMethod(result, section, () => lazyMethods({\n        palletVersion: createRuntimeFunction({\n          method: VERSION_NAME,\n          prefix,\n          section\n        }, createKeyRaw(registry, {\n          method: VERSION_KEY,\n          prefix: name.toString()\n        }, NO_RAW_ARGS), VERSION_DOCS)(registry)\n      }, items, meta => createFunction(registry, {\n        meta,\n        method: meta.name.toString(),\n        prefix,\n        section\n      }, {}), objectNameToCamel));\n    }\n  }\n  return result;\n}","map":{"version":3,"names":["lazyMethod","lazyMethods","stringCamelCase","objectNameToCamel","createFunction","createKeyRaw","NO_RAW_ARGS","getStorage","createRuntimeFunction","VERSION_NAME","VERSION_KEY","VERSION_DOCS","docs","type","decorateStorage","registry","pallets","_metaVersion","result","i","count","length","name","storage","isSome","section","items","prefix","_prefix","unwrap","toString","palletVersion","method","meta"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/metadata/decorate/storage/index.js"],"sourcesContent":["import { lazyMethod, lazyMethods, stringCamelCase } from '@polkadot/util';\nimport { objectNameToCamel } from '../util.js';\nimport { createFunction, createKeyRaw, NO_RAW_ARGS } from './createFunction.js';\nimport { getStorage } from './getStorage.js';\nimport { createRuntimeFunction } from './util.js';\nconst VERSION_NAME = 'palletVersion';\nconst VERSION_KEY = ':__STORAGE_VERSION__:';\nconst VERSION_DOCS = { docs: 'Returns the current pallet version from storage', type: 'u16' };\n/** @internal */\nexport function decorateStorage(registry, { pallets }, _metaVersion) {\n    const result = getStorage(registry);\n    for (let i = 0, count = pallets.length; i < count; i++) {\n        const { name, storage } = pallets[i];\n        if (storage.isSome) {\n            const section = stringCamelCase(name);\n            const { items, prefix: _prefix } = storage.unwrap();\n            const prefix = _prefix.toString();\n            lazyMethod(result, section, () => lazyMethods({\n                palletVersion: createRuntimeFunction({ method: VERSION_NAME, prefix, section }, createKeyRaw(registry, { method: VERSION_KEY, prefix: name.toString() }, NO_RAW_ARGS), VERSION_DOCS)(registry)\n            }, items, (meta) => createFunction(registry, { meta, method: meta.name.toString(), prefix, section }, {}), objectNameToCamel));\n        }\n    }\n    return result;\n}\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,WAAW,EAAEC,eAAe,QAAQ,gBAAgB;AACzE,SAASC,iBAAiB,QAAQ,YAAY;AAC9C,SAASC,cAAc,EAAEC,YAAY,EAAEC,WAAW,QAAQ,qBAAqB;AAC/E,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,qBAAqB,QAAQ,WAAW;AACjD,MAAMC,YAAY,GAAG,eAAe;AACpC,MAAMC,WAAW,GAAG,uBAAuB;AAC3C,MAAMC,YAAY,GAAG;EAAEC,IAAI,EAAE,iDAAiD;EAAEC,IAAI,EAAE;AAAM,CAAC;AAC7F;AACA,OAAO,SAASC,eAAeA,CAACC,QAAQ,EAAE;EAAEC;AAAQ,CAAC,EAAEC,YAAY,EAAE;EACjE,MAAMC,MAAM,GAAGX,UAAU,CAACQ,QAAQ,CAAC;EACnC,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEC,KAAK,GAAGJ,OAAO,CAACK,MAAM,EAAEF,CAAC,GAAGC,KAAK,EAAED,CAAC,EAAE,EAAE;IACpD,MAAM;MAAEG,IAAI;MAAEC;IAAQ,CAAC,GAAGP,OAAO,CAACG,CAAC,CAAC;IACpC,IAAII,OAAO,CAACC,MAAM,EAAE;MAChB,MAAMC,OAAO,GAAGvB,eAAe,CAACoB,IAAI,CAAC;MACrC,MAAM;QAAEI,KAAK;QAAEC,MAAM,EAAEC;MAAQ,CAAC,GAAGL,OAAO,CAACM,MAAM,CAAC,CAAC;MACnD,MAAMF,MAAM,GAAGC,OAAO,CAACE,QAAQ,CAAC,CAAC;MACjC9B,UAAU,CAACkB,MAAM,EAAEO,OAAO,EAAE,MAAMxB,WAAW,CAAC;QAC1C8B,aAAa,EAAEvB,qBAAqB,CAAC;UAAEwB,MAAM,EAAEvB,YAAY;UAAEkB,MAAM;UAAEF;QAAQ,CAAC,EAAEpB,YAAY,CAACU,QAAQ,EAAE;UAAEiB,MAAM,EAAEtB,WAAW;UAAEiB,MAAM,EAAEL,IAAI,CAACQ,QAAQ,CAAC;QAAE,CAAC,EAAExB,WAAW,CAAC,EAAEK,YAAY,CAAC,CAACI,QAAQ;MACjM,CAAC,EAAEW,KAAK,EAAGO,IAAI,IAAK7B,cAAc,CAACW,QAAQ,EAAE;QAAEkB,IAAI;QAAED,MAAM,EAAEC,IAAI,CAACX,IAAI,CAACQ,QAAQ,CAAC,CAAC;QAAEH,MAAM;QAAEF;MAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAEtB,iBAAiB,CAAC,CAAC;IAClI;EACJ;EACA,OAAOe,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}