{"ast":null,"code":"import { hexToU8a, lazyMethod, lazyMethods, stringCamelCase } from '@polkadot/util';\nimport { objectNameToCamel } from '../util.js';\n/** @internal */\nexport function decorateConstants(registry, {\n  pallets\n}, _version) {\n  const result = {};\n  for (let i = 0, count = pallets.length; i < count; i++) {\n    const {\n      constants,\n      name\n    } = pallets[i];\n    if (!constants.isEmpty) {\n      lazyMethod(result, stringCamelCase(name), () => lazyMethods({}, constants, constant => {\n        const codec = registry.createTypeUnsafe(registry.createLookupType(constant.type), [hexToU8a(constant.value.toHex())]);\n        // We are casting here since we are assigning to a read-only property\n        codec.meta = constant;\n        return codec;\n      }, objectNameToCamel));\n    }\n  }\n  return result;\n}","map":{"version":3,"names":["hexToU8a","lazyMethod","lazyMethods","stringCamelCase","objectNameToCamel","decorateConstants","registry","pallets","_version","result","i","count","length","constants","name","isEmpty","constant","codec","createTypeUnsafe","createLookupType","type","value","toHex","meta"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/metadata/decorate/constants/index.js"],"sourcesContent":["import { hexToU8a, lazyMethod, lazyMethods, stringCamelCase } from '@polkadot/util';\nimport { objectNameToCamel } from '../util.js';\n/** @internal */\nexport function decorateConstants(registry, { pallets }, _version) {\n    const result = {};\n    for (let i = 0, count = pallets.length; i < count; i++) {\n        const { constants, name } = pallets[i];\n        if (!constants.isEmpty) {\n            lazyMethod(result, stringCamelCase(name), () => lazyMethods({}, constants, (constant) => {\n                const codec = registry.createTypeUnsafe(registry.createLookupType(constant.type), [hexToU8a(constant.value.toHex())]);\n                // We are casting here since we are assigning to a read-only property\n                codec.meta = constant;\n                return codec;\n            }, objectNameToCamel));\n        }\n    }\n    return result;\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,WAAW,EAAEC,eAAe,QAAQ,gBAAgB;AACnF,SAASC,iBAAiB,QAAQ,YAAY;AAC9C;AACA,OAAO,SAASC,iBAAiBA,CAACC,QAAQ,EAAE;EAAEC;AAAQ,CAAC,EAAEC,QAAQ,EAAE;EAC/D,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,KAAK,GAAGJ,OAAO,CAACK,MAAM,EAAEF,CAAC,GAAGC,KAAK,EAAED,CAAC,EAAE,EAAE;IACpD,MAAM;MAAEG,SAAS;MAAEC;IAAK,CAAC,GAAGP,OAAO,CAACG,CAAC,CAAC;IACtC,IAAI,CAACG,SAAS,CAACE,OAAO,EAAE;MACpBd,UAAU,CAACQ,MAAM,EAAEN,eAAe,CAACW,IAAI,CAAC,EAAE,MAAMZ,WAAW,CAAC,CAAC,CAAC,EAAEW,SAAS,EAAGG,QAAQ,IAAK;QACrF,MAAMC,KAAK,GAAGX,QAAQ,CAACY,gBAAgB,CAACZ,QAAQ,CAACa,gBAAgB,CAACH,QAAQ,CAACI,IAAI,CAAC,EAAE,CAACpB,QAAQ,CAACgB,QAAQ,CAACK,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACrH;QACAL,KAAK,CAACM,IAAI,GAAGP,QAAQ;QACrB,OAAOC,KAAK;MAChB,CAAC,EAAEb,iBAAiB,CAAC,CAAC;IAC1B;EACJ;EACA,OAAOK,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}