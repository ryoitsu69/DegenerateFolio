{"ast":null,"code":"import { combineLatest, map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\n/**\n * @description Get the overall info for a society\n */\nexport function info(instanceId, api) {\n  return memo(instanceId, () => combineLatest([api.query.society.bids(), api.query.society['defender'] ? api.query.society['defender']() : of(undefined), api.query.society.founder(), api.query.society.head(), api.query.society['maxMembers'] ? api.query.society['maxMembers']() : of(undefined), api.query.society.pot()]).pipe(map(_ref => {\n    let [bids, defender, founder, head, maxMembers, pot] = _ref;\n    return {\n      bids,\n      defender: defender === null || defender === void 0 ? void 0 : defender.unwrapOr(undefined),\n      founder: founder.unwrapOr(undefined),\n      hasDefender: (defender === null || defender === void 0 ? void 0 : defender.isSome) && head.isSome && !head.eq(defender) || false,\n      head: head.unwrapOr(undefined),\n      maxMembers,\n      pot\n    };\n  })));\n}","map":{"version":3,"names":["combineLatest","map","of","memo","info","instanceId","api","query","society","bids","undefined","founder","head","pot","pipe","_ref","defender","maxMembers","unwrapOr","hasDefender","isSome","eq"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/api-derive/society/info.js"],"sourcesContent":["import { combineLatest, map, of } from 'rxjs';\nimport { memo } from '../util/index.js';\n/**\n * @description Get the overall info for a society\n */\nexport function info(instanceId, api) {\n    return memo(instanceId, () => combineLatest([\n        api.query.society.bids(),\n        api.query.society['defender']\n            ? api.query.society['defender']()\n            : of(undefined),\n        api.query.society.founder(),\n        api.query.society.head(),\n        api.query.society['maxMembers']\n            ? api.query.society['maxMembers']()\n            : of(undefined),\n        api.query.society.pot()\n    ]).pipe(map(([bids, defender, founder, head, maxMembers, pot]) => ({\n        bids,\n        defender: defender?.unwrapOr(undefined),\n        founder: founder.unwrapOr(undefined),\n        hasDefender: (defender?.isSome && head.isSome && !head.eq(defender)) || false,\n        head: head.unwrapOr(undefined),\n        maxMembers,\n        pot\n    }))));\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,GAAG,EAAEC,EAAE,QAAQ,MAAM;AAC7C,SAASC,IAAI,QAAQ,kBAAkB;AACvC;AACA;AACA;AACA,OAAO,SAASC,IAAIA,CAACC,UAAU,EAAEC,GAAG,EAAE;EAClC,OAAOH,IAAI,CAACE,UAAU,EAAE,MAAML,aAAa,CAAC,CACxCM,GAAG,CAACC,KAAK,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC,EACxBH,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC,UAAU,CAAC,GACvBF,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,GAC/BN,EAAE,CAACQ,SAAS,CAAC,EACnBJ,GAAG,CAACC,KAAK,CAACC,OAAO,CAACG,OAAO,CAAC,CAAC,EAC3BL,GAAG,CAACC,KAAK,CAACC,OAAO,CAACI,IAAI,CAAC,CAAC,EACxBN,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC,YAAY,CAAC,GACzBF,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,GACjCN,EAAE,CAACQ,SAAS,CAAC,EACnBJ,GAAG,CAACC,KAAK,CAACC,OAAO,CAACK,GAAG,CAAC,CAAC,CAC1B,CAAC,CAACC,IAAI,CAACb,GAAG,CAACc,IAAA;IAAA,IAAC,CAACN,IAAI,EAAEO,QAAQ,EAAEL,OAAO,EAAEC,IAAI,EAAEK,UAAU,EAAEJ,GAAG,CAAC,GAAAE,IAAA;IAAA,OAAM;MAC/DN,IAAI;MACJO,QAAQ,EAAEA,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,QAAQ,CAACR,SAAS,CAAC;MACvCC,OAAO,EAAEA,OAAO,CAACO,QAAQ,CAACR,SAAS,CAAC;MACpCS,WAAW,EAAG,CAAAH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEI,MAAM,KAAIR,IAAI,CAACQ,MAAM,IAAI,CAACR,IAAI,CAACS,EAAE,CAACL,QAAQ,CAAC,IAAK,KAAK;MAC7EJ,IAAI,EAAEA,IAAI,CAACM,QAAQ,CAACR,SAAS,CAAC;MAC9BO,UAAU;MACVJ;IACJ,CAAC;EAAA,CAAC,CAAC,CAAC,CAAC;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}