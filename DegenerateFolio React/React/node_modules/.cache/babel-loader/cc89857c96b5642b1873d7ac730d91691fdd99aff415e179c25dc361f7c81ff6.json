{"ast":null,"code":"\"use strict\";\n\n/* eslint-disable */\n/**\n * This file and any referenced files were automatically generated by @cosmology/telescope@1.0.7\n * DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain\n * and run the transpile command or yarn proto command to regenerate this bundle.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BinaryWriter = exports.BinaryReader = exports.WireType = void 0;\n// Copyright (c) 2016, Daniel Wirtz  All rights reserved.\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n// * Redistributions of source code must retain the above copyright\n//   notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above copyright\n//   notice, this list of conditions and the following disclaimer in the\n//   documentation and/or other materials provided with the distribution.\n// * Neither the name of its author, nor the names of its contributors\n//   may be used to endorse or promote products derived from this software\n//   without specific prior written permission.\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n// ---\n// Code generated by the command line utilities is owned by the owner\n// of the input file used when generating it. This code is not\n// standalone and requires a support library to be linked with it. This\n// support library is itself covered by the above license.\nconst utf8_1 = require(\"./utf8\");\nconst varint_1 = require(\"./varint\");\nvar WireType;\n(function (WireType) {\n  WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n  WireType[WireType[\"Fixed64\"] = 1] = \"Fixed64\";\n  WireType[WireType[\"Bytes\"] = 2] = \"Bytes\";\n  WireType[WireType[\"Fixed32\"] = 5] = \"Fixed32\";\n})(WireType || (exports.WireType = WireType = {}));\nclass BinaryReader {\n  assertBounds() {\n    if (this.pos > this.len) throw new RangeError(\"premature EOF\");\n  }\n  constructor(buf) {\n    this.buf = buf ? new Uint8Array(buf) : new Uint8Array(0);\n    this.pos = 0;\n    this.type = 0;\n    this.len = this.buf.length;\n  }\n  tag() {\n    const tag = this.uint32(),\n      fieldNo = tag >>> 3,\n      wireType = tag & 7;\n    if (fieldNo <= 0 || wireType < 0 || wireType > 5) throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n    return [fieldNo, wireType, tag];\n  }\n  skip(length) {\n    if (typeof length === \"number\") {\n      if (this.pos + length > this.len) throw indexOutOfRange(this, length);\n      this.pos += length;\n    } else {\n      do {\n        if (this.pos >= this.len) throw indexOutOfRange(this);\n      } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n  }\n  skipType(wireType) {\n    switch (wireType) {\n      case WireType.Varint:\n        this.skip();\n        break;\n      case WireType.Fixed64:\n        this.skip(8);\n        break;\n      case WireType.Bytes:\n        this.skip(this.uint32());\n        break;\n      case 3:\n        while ((wireType = this.uint32() & 7) !== 4) {\n          this.skipType(wireType);\n        }\n        break;\n      case WireType.Fixed32:\n        this.skip(4);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n  }\n  uint32() {\n    return varint_1.varint32read.bind(this)();\n  }\n  int32() {\n    return this.uint32() | 0;\n  }\n  sint32() {\n    const num = this.uint32();\n    return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n  }\n  fixed32() {\n    const val = (0, varint_1.readUInt32)(this.buf, this.pos);\n    this.pos += 4;\n    return val;\n  }\n  sfixed32() {\n    const val = (0, varint_1.readInt32)(this.buf, this.pos);\n    this.pos += 4;\n    return val;\n  }\n  int64() {\n    const [lo, hi] = varint_1.varint64read.bind(this)();\n    return BigInt((0, varint_1.int64ToString)(lo, hi));\n  }\n  uint64() {\n    const [lo, hi] = varint_1.varint64read.bind(this)();\n    return BigInt((0, varint_1.uInt64ToString)(lo, hi));\n  }\n  sint64() {\n    let [lo, hi] = varint_1.varint64read.bind(this)();\n    // zig zag\n    [lo, hi] = (0, varint_1.zzDecode)(lo, hi);\n    return BigInt((0, varint_1.int64ToString)(lo, hi));\n  }\n  fixed64() {\n    const lo = this.sfixed32();\n    const hi = this.sfixed32();\n    return BigInt((0, varint_1.uInt64ToString)(lo, hi));\n  }\n  sfixed64() {\n    const lo = this.sfixed32();\n    const hi = this.sfixed32();\n    return BigInt((0, varint_1.int64ToString)(lo, hi));\n  }\n  float() {\n    throw new Error(\"float not supported\");\n  }\n  double() {\n    throw new Error(\"double not supported\");\n  }\n  bool() {\n    const [lo, hi] = varint_1.varint64read.bind(this)();\n    return lo !== 0 || hi !== 0;\n  }\n  bytes() {\n    const len = this.uint32(),\n      start = this.pos;\n    this.pos += len;\n    this.assertBounds();\n    return this.buf.subarray(start, start + len);\n  }\n  string() {\n    const bytes = this.bytes();\n    return (0, utf8_1.utf8Read)(bytes, 0, bytes.length);\n  }\n}\nexports.BinaryReader = BinaryReader;\nclass Op {\n  constructor(fn, len, val) {\n    this.fn = fn;\n    this.len = len;\n    this.val = val;\n  }\n  proceed(buf, pos) {\n    if (this.fn) {\n      this.fn(this.val, buf, pos);\n    }\n  }\n}\nclass State {\n  constructor(writer) {\n    this.head = writer.head;\n    this.tail = writer.tail;\n    this.len = writer.len;\n    this.next = writer.states;\n  }\n}\nclass BinaryWriter {\n  constructor() {\n    this.len = 0;\n    // uint64 is the same with int64\n    this.uint64 = BinaryWriter.prototype.int64;\n    // sfixed64 is the same with fixed64\n    this.sfixed64 = BinaryWriter.prototype.fixed64;\n    // sfixed32 is the same with fixed32\n    this.sfixed32 = BinaryWriter.prototype.fixed32;\n    this.head = new Op(null, 0, 0);\n    this.tail = this.head;\n    this.states = null;\n  }\n  static create() {\n    return new BinaryWriter();\n  }\n  static alloc(size) {\n    if (typeof Uint8Array !== \"undefined\") {\n      return pool(size => new Uint8Array(size), Uint8Array.prototype.subarray)(size);\n    } else {\n      return new Array(size);\n    }\n  }\n  _push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n  }\n  finish() {\n    let head = this.head.next,\n      pos = 0;\n    const buf = BinaryWriter.alloc(this.len);\n    while (head) {\n      head.proceed(buf, pos);\n      pos += head.len;\n      head = head.next;\n    }\n    return buf;\n  }\n  fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(null, 0, 0);\n    this.len = 0;\n    return this;\n  }\n  reset() {\n    if (this.states) {\n      this.head = this.states.head;\n      this.tail = this.states.tail;\n      this.len = this.states.len;\n      this.states = this.states.next;\n    } else {\n      this.head = this.tail = new Op(null, 0, 0);\n      this.len = 0;\n    }\n    return this;\n  }\n  ldelim() {\n    const head = this.head,\n      tail = this.tail,\n      len = this.len;\n    this.reset().uint32(len);\n    if (len) {\n      this.tail.next = head.next; // skip noop\n      this.tail = tail;\n      this.len += len;\n    }\n    return this;\n  }\n  tag(fieldNo, type) {\n    return this.uint32((fieldNo << 3 | type) >>> 0);\n  }\n  uint32(value) {\n    this.len += (this.tail = this.tail.next = new Op(varint_1.writeVarint32, (value = value >>> 0) < 128 ? 1 : value < 16384 ? 2 : value < 2097152 ? 3 : value < 268435456 ? 4 : 5, value)).len;\n    return this;\n  }\n  int32(value) {\n    return value < 0 ? this._push(varint_1.writeVarint64, 10, (0, varint_1.int64FromString)(value.toString())) // 10 bytes per spec\n    : this.uint32(value);\n  }\n  sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n  }\n  int64(value) {\n    const {\n      lo,\n      hi\n    } = (0, varint_1.int64FromString)(value.toString());\n    return this._push(varint_1.writeVarint64, (0, varint_1.int64Length)(lo, hi), {\n      lo,\n      hi\n    });\n  }\n  sint64(value) {\n    let {\n      lo,\n      hi\n    } = (0, varint_1.int64FromString)(value.toString());\n    // zig zag\n    [lo, hi] = (0, varint_1.zzEncode)(lo, hi);\n    return this._push(varint_1.writeVarint64, (0, varint_1.int64Length)(lo, hi), {\n      lo,\n      hi\n    });\n  }\n  fixed64(value) {\n    const {\n      lo,\n      hi\n    } = (0, varint_1.int64FromString)(value.toString());\n    return this._push(varint_1.writeFixed32, 4, lo)._push(varint_1.writeFixed32, 4, hi);\n  }\n  bool(value) {\n    return this._push(varint_1.writeByte, 1, value ? 1 : 0);\n  }\n  fixed32(value) {\n    return this._push(varint_1.writeFixed32, 4, value >>> 0);\n  }\n  float(value) {\n    throw new Error(\"float not supported\" + value);\n  }\n  double(value) {\n    throw new Error(\"double not supported\" + value);\n  }\n  bytes(value) {\n    const len = value.length >>> 0;\n    if (!len) return this._push(varint_1.writeByte, 1, 0);\n    return this.uint32(len)._push(writeBytes, len, value);\n  }\n  string(value) {\n    const len = (0, utf8_1.utf8Length)(value);\n    return len ? this.uint32(len)._push(utf8_1.utf8Write, len, value) : this._push(varint_1.writeByte, 1, 0);\n  }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction writeBytes(val, buf, pos) {\n  if (typeof Uint8Array !== \"undefined\") {\n    buf.set(val, pos);\n  } else {\n    for (let i = 0; i < val.length; ++i) buf[pos + i] = val[i];\n  }\n}\nfunction pool(alloc, slice, size) {\n  const SIZE = size || 8192;\n  const MAX = SIZE >>> 1;\n  let slab = null;\n  let offset = SIZE;\n  return function pool_alloc(size) {\n    if (size < 1 || size > MAX) return alloc(size);\n    if (offset + size > SIZE) {\n      slab = alloc(SIZE);\n      offset = 0;\n    }\n    const buf = slice.call(slab, offset, offset += size);\n    if (offset & 7)\n      // align to 32 bit\n      offset = (offset | 7) + 1;\n    return buf;\n  };\n}\nfunction indexOutOfRange(reader, writeLength) {\n  return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}","map":{"version":3,"names":["utf8_1","require","varint_1","WireType","exports","BinaryReader","assertBounds","pos","len","RangeError","constructor","buf","Uint8Array","type","length","tag","uint32","fieldNo","wireType","Error","skip","indexOutOfRange","skipType","Varint","Fixed64","Bytes","Fixed32","varint32read","bind","int32","sint32","num","fixed32","val","readUInt32","sfixed32","readInt32","int64","lo","hi","varint64read","BigInt","int64ToString","uint64","uInt64ToString","sint64","zzDecode","fixed64","sfixed64","float","double","bool","bytes","start","subarray","string","utf8Read","Op","fn","proceed","State","writer","head","tail","next","states","BinaryWriter","prototype","create","alloc","size","pool","Array","_push","finish","fork","reset","ldelim","value","writeVarint32","writeVarint64","int64FromString","toString","int64Length","zzEncode","writeFixed32","writeByte","writeBytes","utf8Length","utf8Write","set","i","slice","SIZE","MAX","slab","offset","pool_alloc","call","reader","writeLength"],"sources":["../src/binary.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}