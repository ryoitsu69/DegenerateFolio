{"ast":null,"code":"export { GlBatchAdaptor } from './batcher/gl/GlBatchAdaptor.mjs';\nexport { BatchGeometry } from './batcher/gpu/BatchGeometry.mjs';\nexport { generateGPULayout } from './batcher/gpu/generateGPULayout.mjs';\nexport { generateLayout } from './batcher/gpu/generateLayout.mjs';\nexport { getTextureBatchBindGroup } from './batcher/gpu/getTextureBatchBindGroup.mjs';\nexport { GpuBatchAdaptor } from './batcher/gpu/GpuBatchAdaptor.mjs';\nexport { Batch, Batcher } from './batcher/shared/Batcher.mjs';\nexport { BatcherPipe } from './batcher/shared/BatcherPipe.mjs';\nexport { BatchTextureArray } from './batcher/shared/BatchTextureArray.mjs';\nexport { MAX_TEXTURES } from './batcher/shared/const.mjs';\nexport { compileHighShaderGlProgram, compileHighShaderGpuProgram } from './high-shader/compileHighShaderToProgram.mjs';\nexport { compileHighShader, compileHighShaderGl } from './high-shader/compiler/compileHighShader.mjs';\nimport './high-shader/compiler/types.mjs';\nexport { addBits } from './high-shader/compiler/utils/addBits.mjs';\nexport { compileHooks, findHooksRx } from './high-shader/compiler/utils/compileHooks.mjs';\nexport { compileInputs } from './high-shader/compiler/utils/compileInputs.mjs';\nexport { compileOutputs } from './high-shader/compiler/utils/compileOutputs.mjs';\nexport { formatShader } from './high-shader/compiler/utils/formatShader.mjs';\nexport { injectBits } from './high-shader/compiler/utils/injectBits.mjs';\nexport { fragmentGPUTemplate, fragmentGlTemplate, vertexGPUTemplate, vertexGlTemplate } from './high-shader/defaultProgramTemplate.mjs';\nexport { colorBit, colorBitGl } from './high-shader/shader-bits/colorBit.mjs';\nexport { generateTextureBatchBit, generateTextureBatchBitGl } from './high-shader/shader-bits/generateTextureBatchBit.mjs';\nexport { globalUniformsBit, globalUniformsBitGl, globalUniformsUBOBitGl } from './high-shader/shader-bits/globalUniformsBit.mjs';\nexport { localUniformBit, localUniformBitGl, localUniformBitGroup2 } from './high-shader/shader-bits/localUniformBit.mjs';\nexport { roundPixelsBit, roundPixelsBitGl } from './high-shader/shader-bits/roundPixelsBit.mjs';\nexport { textureBit, textureBitGl } from './high-shader/shader-bits/textureBit.mjs';\nexport { AlphaMask } from './mask/alpha/AlphaMask.mjs';\nexport { AlphaMaskPipe } from './mask/alpha/AlphaMaskPipe.mjs';\nexport { ColorMask } from './mask/color/ColorMask.mjs';\nexport { ColorMaskPipe } from './mask/color/ColorMaskPipe.mjs';\nexport { MaskEffectManager, MaskEffectManagerClass } from './mask/MaskEffectManager.mjs';\nexport { ScissorMask } from './mask/scissor/ScissorMask.mjs';\nexport { StencilMask } from './mask/stencil/StencilMask.mjs';\nexport { StencilMaskPipe } from './mask/stencil/StencilMaskPipe.mjs';\nexport { addMaskBounds } from './mask/utils/addMaskBounds.mjs';\nexport { addMaskLocalBounds, getMatrixRelativeToParent } from './mask/utils/addMaskLocalBounds.mjs';\nexport { autoDetectRenderer } from './renderers/autoDetectRenderer.mjs';\nexport { BUFFER_TYPE } from './renderers/gl/buffer/const.mjs';\nexport { GlBuffer } from './renderers/gl/buffer/GlBuffer.mjs';\nexport { GlBufferSystem } from './renderers/gl/buffer/GlBufferSystem.mjs';\nexport { CLEAR } from './renderers/gl/const.mjs';\nexport { GlContextSystem } from './renderers/gl/context/GlContextSystem.mjs';\nimport './renderers/gl/context/GlRenderingContext.mjs';\nimport './renderers/gl/context/WebGLExtensions.mjs';\nexport { GlGeometrySystem } from './renderers/gl/geometry/GlGeometrySystem.mjs';\nexport { getGlTypeFromFormat } from './renderers/gl/geometry/utils/getGlTypeFromFormat.mjs';\nexport { GlBackBufferSystem } from './renderers/gl/GlBackBufferSystem.mjs';\nexport { GlColorMaskSystem } from './renderers/gl/GlColorMaskSystem.mjs';\nexport { GlEncoderSystem } from './renderers/gl/GlEncoderSystem.mjs';\nexport { GlRenderTarget } from './renderers/gl/GlRenderTarget.mjs';\nexport { GlStencilSystem } from './renderers/gl/GlStencilSystem.mjs';\nexport { GlUboSystem } from './renderers/gl/GlUboSystem.mjs';\nexport { GlRenderTargetAdaptor } from './renderers/gl/renderTarget/GlRenderTargetAdaptor.mjs';\nexport { GlRenderTargetSystem } from './renderers/gl/renderTarget/GlRenderTargetSystem.mjs';\nexport { batchSamplersUniformGroup } from './renderers/gl/shader/batchSamplersUniformGroup.mjs';\nimport './renderers/gl/shader/const.mjs';\nexport { generateShaderSyncCode } from './renderers/gl/shader/GenerateShaderSyncCode.mjs';\nexport { GlProgram } from './renderers/gl/shader/GlProgram.mjs';\nexport { GlProgramData, IGLUniformData } from './renderers/gl/shader/GlProgramData.mjs';\nexport { GlShaderSystem } from './renderers/gl/shader/GlShaderSystem.mjs';\nexport { GlUniformGroupSystem } from './renderers/gl/shader/GlUniformGroupSystem.mjs';\nexport { migrateFragmentFromV7toV8 } from './renderers/gl/shader/migrateFragmentFromV7toV8.mjs';\nexport { compileShader } from './renderers/gl/shader/program/compileShader.mjs';\nexport { defaultValue } from './renderers/gl/shader/program/defaultValue.mjs';\nexport { ensureAttributes } from './renderers/gl/shader/program/ensureAttributes.mjs';\nexport { extractAttributesFromGlProgram } from './renderers/gl/shader/program/extractAttributesFromGlProgram.mjs';\nexport { generateProgram } from './renderers/gl/shader/program/generateProgram.mjs';\nexport { getMaxFragmentPrecision } from './renderers/gl/shader/program/getMaxFragmentPrecision.mjs';\nexport { getTestContext } from './renderers/gl/shader/program/getTestContext.mjs';\nexport { getUboData } from './renderers/gl/shader/program/getUboData.mjs';\nexport { getUniformData } from './renderers/gl/shader/program/getUniformData.mjs';\nexport { logProgramError } from './renderers/gl/shader/program/logProgramError.mjs';\nexport { mapSize } from './renderers/gl/shader/program/mapSize.mjs';\nexport { mapGlToVertexFormat, mapType } from './renderers/gl/shader/program/mapType.mjs';\nexport { addProgramDefines } from './renderers/gl/shader/program/preprocessors/addProgramDefines.mjs';\nexport { ensurePrecision } from './renderers/gl/shader/program/preprocessors/ensurePrecision.mjs';\nexport { insertVersion } from './renderers/gl/shader/program/preprocessors/insertVersion.mjs';\nexport { setProgramName } from './renderers/gl/shader/program/preprocessors/setProgramName.mjs';\nexport { stripVersion } from './renderers/gl/shader/program/preprocessors/stripVersion.mjs';\nexport { WGSL_TO_STD40_SIZE, createUboElementsSTD40 } from './renderers/gl/shader/utils/createUboElementsSTD40.mjs';\nexport { createUboSyncFunctionSTD40 } from './renderers/gl/shader/utils/createUboSyncSTD40.mjs';\nexport { generateArraySyncSTD40 } from './renderers/gl/shader/utils/generateArraySyncSTD40.mjs';\nexport { generateUniformsSync } from './renderers/gl/shader/utils/generateUniformsSync.mjs';\nexport { UNIFORM_TO_ARRAY_SETTERS, UNIFORM_TO_SINGLE_SETTERS } from './renderers/gl/shader/utils/generateUniformsSyncTypes.mjs';\nexport { GlStateSystem } from './renderers/gl/state/GlStateSystem.mjs';\nexport { mapWebGLBlendModesToPixi } from './renderers/gl/state/mapWebGLBlendModesToPixi.mjs';\nexport { GL_FORMATS, GL_TARGETS, GL_TYPES, GL_WRAP_MODES } from './renderers/gl/texture/const.mjs';\nexport { GlTexture } from './renderers/gl/texture/GlTexture.mjs';\nexport { GlTextureSystem } from './renderers/gl/texture/GlTextureSystem.mjs';\nimport './renderers/gl/texture/uploaders/GLTextureUploader.mjs';\nexport { glUploadBufferImageResource } from './renderers/gl/texture/uploaders/glUploadBufferImageResource.mjs';\nexport { glUploadCompressedTextureResource } from './renderers/gl/texture/uploaders/glUploadCompressedTextureResource.mjs';\nexport { glUploadImageResource } from './renderers/gl/texture/uploaders/glUploadImageResource.mjs';\nexport { glUploadVideoResource } from './renderers/gl/texture/uploaders/glUploadVideoResource.mjs';\nexport { applyStyleParams } from './renderers/gl/texture/utils/applyStyleParams.mjs';\nexport { getSupportedGlCompressedTextureFormats } from './renderers/gl/texture/utils/getSupportedGlCompressedTextureFormats.mjs';\nexport { mapFormatToGlFormat } from './renderers/gl/texture/utils/mapFormatToGlFormat.mjs';\nexport { mapFormatToGlInternalFormat } from './renderers/gl/texture/utils/mapFormatToGlInternalFormat.mjs';\nexport { mapFormatToGlType } from './renderers/gl/texture/utils/mapFormatToGlType.mjs';\nexport { compareModeToGlCompare, mipmapScaleModeToGlFilter, scaleModeToGlFilter, wrapModeToGlAddress } from './renderers/gl/texture/utils/pixiToGlMaps.mjs';\nexport { unpremultiplyAlpha } from './renderers/gl/texture/utils/unpremultiplyAlpha.mjs';\nexport { WebGLRenderer } from './renderers/gl/WebGLRenderer.mjs';\nexport { BindGroupSystem } from './renderers/gpu/BindGroupSystem.mjs';\nexport { GpuBufferSystem } from './renderers/gpu/buffer/GpuBufferSystem.mjs';\nexport { GpuReadBuffer } from './renderers/gpu/buffer/GpuReadBuffer.mjs';\nexport { UboBatch } from './renderers/gpu/buffer/UboBatch.mjs';\nexport { GpuColorMaskSystem } from './renderers/gpu/GpuColorMaskSystem.mjs';\nexport { GpuDeviceSystem } from './renderers/gpu/GpuDeviceSystem.mjs';\nexport { GpuEncoderSystem } from './renderers/gpu/GpuEncoderSystem.mjs';\nexport { GpuStencilSystem } from './renderers/gpu/GpuStencilSystem.mjs';\nexport { GpuUboSystem } from './renderers/gpu/GpuUboSystem.mjs';\nexport { GpuUniformBatchPipe } from './renderers/gpu/GpuUniformBatchPipe.mjs';\nexport { PipelineSystem } from './renderers/gpu/pipeline/PipelineSystem.mjs';\nexport { calculateProjection } from './renderers/gpu/renderTarget/calculateProjection.mjs';\nexport { GpuRenderTarget } from './renderers/gpu/renderTarget/GpuRenderTarget.mjs';\nexport { GpuRenderTargetAdaptor } from './renderers/gpu/renderTarget/GpuRenderTargetAdaptor.mjs';\nexport { GpuRenderTargetSystem } from './renderers/gpu/renderTarget/GpuRenderTargetSystem.mjs';\nexport { BindGroup } from './renderers/gpu/shader/BindGroup.mjs';\nimport './renderers/gpu/shader/BindResource.mjs';\nexport { GpuProgram } from './renderers/gpu/shader/GpuProgram.mjs';\nexport { GpuShaderSystem } from './renderers/gpu/shader/GpuShaderSystem.mjs';\nexport { WGSL_ALIGN_SIZE_DATA, createUboElementsWGSL } from './renderers/gpu/shader/utils/createUboElementsWGSL.mjs';\nexport { createUboSyncFunctionWGSL } from './renderers/gpu/shader/utils/createUboSyncFunctionWGSL.mjs';\nexport { extractAttributesFromGpuProgram } from './renderers/gpu/shader/utils/extractAttributesFromGpuProgram.mjs';\nexport { extractStructAndGroups } from './renderers/gpu/shader/utils/extractStructAndGroups.mjs';\nexport { generateArraySyncWGSL } from './renderers/gpu/shader/utils/generateArraySyncWGSL.mjs';\nexport { generateGpuLayoutGroups } from './renderers/gpu/shader/utils/generateGpuLayoutGroups.mjs';\nexport { generateLayoutHash } from './renderers/gpu/shader/utils/generateLayoutHash.mjs';\nexport { removeStructAndGroupDuplicates } from './renderers/gpu/shader/utils/removeStructAndGroupDuplicates.mjs';\nexport { GpuBlendModesToPixi } from './renderers/gpu/state/GpuBlendModesToPixi.mjs';\nexport { GpuStateSystem } from './renderers/gpu/state/GpuStateSystem.mjs';\nexport { GpuStencilModesToPixi } from './renderers/gpu/state/GpuStencilModesToPixi.mjs';\nexport { GpuTextureSystem } from './renderers/gpu/texture/GpuTextureSystem.mjs';\nimport './renderers/gpu/texture/uploaders/GpuTextureUploader.mjs';\nexport { gpuUploadBufferImageResource } from './renderers/gpu/texture/uploaders/gpuUploadBufferImageResource.mjs';\nexport { blockDataMap, gpuUploadCompressedTextureResource } from './renderers/gpu/texture/uploaders/gpuUploadCompressedTextureResource.mjs';\nexport { gpuUploadImageResource } from './renderers/gpu/texture/uploaders/gpuUploadImageSource.mjs';\nexport { gpuUploadVideoResource } from './renderers/gpu/texture/uploaders/gpuUploadVideoSource.mjs';\nexport { getSupportedGPUCompressedTextureFormats } from './renderers/gpu/texture/utils/getSupportedGPUCompressedTextureFormats.mjs';\nexport { GpuMipmapGenerator } from './renderers/gpu/texture/utils/GpuMipmapGenerator.mjs';\nexport { WebGPURenderer } from './renderers/gpu/WebGPURenderer.mjs';\nexport { BackgroundSystem } from './renderers/shared/background/BackgroundSystem.mjs';\nexport { BlendModePipe } from './renderers/shared/blendModes/BlendModePipe.mjs';\nexport { Buffer } from './renderers/shared/buffer/Buffer.mjs';\nexport { BufferResource } from './renderers/shared/buffer/BufferResource.mjs';\nexport { BufferUsage } from './renderers/shared/buffer/const.mjs';\nexport { fastCopy } from './renderers/shared/buffer/utils/fastCopy.mjs';\nexport { ExtractSystem } from './renderers/shared/extract/ExtractSystem.mjs';\nexport { GenerateTextureSystem } from './renderers/shared/extract/GenerateTextureSystem.mjs';\nexport { DRAW_MODES } from './renderers/shared/geometry/const.mjs';\nexport { Geometry } from './renderers/shared/geometry/Geometry.mjs';\nexport { buildSimpleUvs, buildUvs } from './renderers/shared/geometry/utils/buildUvs.mjs';\nexport { ensureIsBuffer } from './renderers/shared/geometry/utils/ensureIsBuffer.mjs';\nexport { getAttributeInfoFromFormat } from './renderers/shared/geometry/utils/getAttributeInfoFromFormat.mjs';\nexport { getGeometryBounds } from './renderers/shared/geometry/utils/getGeometryBounds.mjs';\nexport { transformVertices } from './renderers/shared/geometry/utils/transformVertices.mjs';\nimport './renderers/shared/instructions/Instruction.mjs';\nexport { InstructionSet } from './renderers/shared/instructions/InstructionSet.mjs';\nimport './renderers/shared/instructions/RenderPipe.mjs';\nimport './renderers/shared/Renderable.mjs';\nexport { GlobalUniformSystem } from './renderers/shared/renderTarget/GlobalUniformSystem.mjs';\nexport { isRenderingToScreen } from './renderers/shared/renderTarget/isRenderingToScreen.mjs';\nexport { RenderTarget } from './renderers/shared/renderTarget/RenderTarget.mjs';\nexport { RenderTargetSystem } from './renderers/shared/renderTarget/RenderTargetSystem.mjs';\nexport { viewportFromFrame } from './renderers/shared/renderTarget/viewportFromFrame.mjs';\nexport { ShaderStage } from './renderers/shared/shader/const.mjs';\nexport { Shader } from './renderers/shared/shader/Shader.mjs';\nimport './renderers/shared/shader/types.mjs';\nexport { UboSystem } from './renderers/shared/shader/UboSystem.mjs';\nexport { UniformGroup } from './renderers/shared/shader/UniformGroup.mjs';\nexport { createUboSyncFunction } from './renderers/shared/shader/utils/createUboSyncFunction.mjs';\nexport { getDefaultUniformValue } from './renderers/shared/shader/utils/getDefaultUniformValue.mjs';\nexport { uboSyncFunctionsSTD40, uboSyncFunctionsWGSL } from './renderers/shared/shader/utils/uboSyncFunctions.mjs';\nexport { uniformParsers } from './renderers/shared/shader/utils/uniformParsers.mjs';\nexport { HelloSystem } from './renderers/shared/startup/HelloSystem.mjs';\nexport { BLEND_TO_NPM, STENCIL_MODES } from './renderers/shared/state/const.mjs';\nexport { getAdjustedBlendModeBlend } from './renderers/shared/state/getAdjustedBlendModeBlend.mjs';\nexport { State } from './renderers/shared/state/State.mjs';\nexport { AbstractRenderer } from './renderers/shared/system/AbstractRenderer.mjs';\nexport { SharedRenderPipes, SharedSystems } from './renderers/shared/system/SharedSystems.mjs';\nimport './renderers/shared/system/System.mjs';\nexport { SystemRunner } from './renderers/shared/system/SystemRunner.mjs';\nimport './renderers/shared/system/utils/typeUtils.mjs';\nexport { CanvasPool, CanvasPoolClass } from './renderers/shared/texture/CanvasPool.mjs';\nexport { DEPRECATED_SCALE_MODES, DEPRECATED_WRAP_MODES, MSAA_QUALITY, SCALE_MODES, WRAP_MODES } from './renderers/shared/texture/const.mjs';\nimport './renderers/shared/texture/GenerateCanvas.mjs';\nexport { RenderTexture } from './renderers/shared/texture/RenderTexture.mjs';\nexport { BufferImageSource } from './renderers/shared/texture/sources/BufferSource.mjs';\nexport { CanvasSource } from './renderers/shared/texture/sources/CanvasSource.mjs';\nexport { CompressedSource } from './renderers/shared/texture/sources/CompressedSource.mjs';\nexport { ImageSource } from './renderers/shared/texture/sources/ImageSource.mjs';\nexport { TextureSource } from './renderers/shared/texture/sources/TextureSource.mjs';\nexport { VideoSource } from './renderers/shared/texture/sources/VideoSource.mjs';\nexport { Texture } from './renderers/shared/texture/Texture.mjs';\nexport { TextureGCSystem } from './renderers/shared/texture/TextureGCSystem.mjs';\nexport { TextureMatrix } from './renderers/shared/texture/TextureMatrix.mjs';\nexport { TexturePool, TexturePoolClass } from './renderers/shared/texture/TexturePool.mjs';\nexport { TextureStyle } from './renderers/shared/texture/TextureStyle.mjs';\nexport { TextureUvs } from './renderers/shared/texture/TextureUvs.mjs';\nexport { generateUID } from './renderers/shared/texture/utils/generateUID.mjs';\nexport { getCanvasTexture, hasCachedCanvasTexture } from './renderers/shared/texture/utils/getCanvasTexture.mjs';\nexport { getSupportedCompressedTextureFormats } from './renderers/shared/texture/utils/getSupportedCompressedTextureFormats.mjs';\nexport { getSupportedTextureFormats, nonCompressedFormats } from './renderers/shared/texture/utils/getSupportedTextureFormats.mjs';\nexport { autoDetectSource, resourceToTexture, textureFrom } from './renderers/shared/texture/utils/textureFrom.mjs';\nexport { createIdFromString } from './renderers/shared/utils/createIdFromString.mjs';\nexport { parseFunctionBody } from './renderers/shared/utils/parseFunctionBody.mjs';\nimport './renderers/shared/view/View.mjs';\nexport { ViewSystem } from './renderers/shared/view/ViewSystem.mjs';\nexport { RendererType } from './renderers/types.mjs';\n\"use strict\";","map":{"version":3,"names":[],"sources":[],"sourcesContent":["export { GlBatchAdaptor } from './batcher/gl/GlBatchAdaptor.mjs';\nexport { BatchGeometry } from './batcher/gpu/BatchGeometry.mjs';\nexport { generateGPULayout } from './batcher/gpu/generateGPULayout.mjs';\nexport { generateLayout } from './batcher/gpu/generateLayout.mjs';\nexport { getTextureBatchBindGroup } from './batcher/gpu/getTextureBatchBindGroup.mjs';\nexport { GpuBatchAdaptor } from './batcher/gpu/GpuBatchAdaptor.mjs';\nexport { Batch, Batcher } from './batcher/shared/Batcher.mjs';\nexport { BatcherPipe } from './batcher/shared/BatcherPipe.mjs';\nexport { BatchTextureArray } from './batcher/shared/BatchTextureArray.mjs';\nexport { MAX_TEXTURES } from './batcher/shared/const.mjs';\nexport { compileHighShaderGlProgram, compileHighShaderGpuProgram } from './high-shader/compileHighShaderToProgram.mjs';\nexport { compileHighShader, compileHighShaderGl } from './high-shader/compiler/compileHighShader.mjs';\nimport './high-shader/compiler/types.mjs';\nexport { addBits } from './high-shader/compiler/utils/addBits.mjs';\nexport { compileHooks, findHooksRx } from './high-shader/compiler/utils/compileHooks.mjs';\nexport { compileInputs } from './high-shader/compiler/utils/compileInputs.mjs';\nexport { compileOutputs } from './high-shader/compiler/utils/compileOutputs.mjs';\nexport { formatShader } from './high-shader/compiler/utils/formatShader.mjs';\nexport { injectBits } from './high-shader/compiler/utils/injectBits.mjs';\nexport { fragmentGPUTemplate, fragmentGlTemplate, vertexGPUTemplate, vertexGlTemplate } from './high-shader/defaultProgramTemplate.mjs';\nexport { colorBit, colorBitGl } from './high-shader/shader-bits/colorBit.mjs';\nexport { generateTextureBatchBit, generateTextureBatchBitGl } from './high-shader/shader-bits/generateTextureBatchBit.mjs';\nexport { globalUniformsBit, globalUniformsBitGl, globalUniformsUBOBitGl } from './high-shader/shader-bits/globalUniformsBit.mjs';\nexport { localUniformBit, localUniformBitGl, localUniformBitGroup2 } from './high-shader/shader-bits/localUniformBit.mjs';\nexport { roundPixelsBit, roundPixelsBitGl } from './high-shader/shader-bits/roundPixelsBit.mjs';\nexport { textureBit, textureBitGl } from './high-shader/shader-bits/textureBit.mjs';\nexport { AlphaMask } from './mask/alpha/AlphaMask.mjs';\nexport { AlphaMaskPipe } from './mask/alpha/AlphaMaskPipe.mjs';\nexport { ColorMask } from './mask/color/ColorMask.mjs';\nexport { ColorMaskPipe } from './mask/color/ColorMaskPipe.mjs';\nexport { MaskEffectManager, MaskEffectManagerClass } from './mask/MaskEffectManager.mjs';\nexport { ScissorMask } from './mask/scissor/ScissorMask.mjs';\nexport { StencilMask } from './mask/stencil/StencilMask.mjs';\nexport { StencilMaskPipe } from './mask/stencil/StencilMaskPipe.mjs';\nexport { addMaskBounds } from './mask/utils/addMaskBounds.mjs';\nexport { addMaskLocalBounds, getMatrixRelativeToParent } from './mask/utils/addMaskLocalBounds.mjs';\nexport { autoDetectRenderer } from './renderers/autoDetectRenderer.mjs';\nexport { BUFFER_TYPE } from './renderers/gl/buffer/const.mjs';\nexport { GlBuffer } from './renderers/gl/buffer/GlBuffer.mjs';\nexport { GlBufferSystem } from './renderers/gl/buffer/GlBufferSystem.mjs';\nexport { CLEAR } from './renderers/gl/const.mjs';\nexport { GlContextSystem } from './renderers/gl/context/GlContextSystem.mjs';\nimport './renderers/gl/context/GlRenderingContext.mjs';\nimport './renderers/gl/context/WebGLExtensions.mjs';\nexport { GlGeometrySystem } from './renderers/gl/geometry/GlGeometrySystem.mjs';\nexport { getGlTypeFromFormat } from './renderers/gl/geometry/utils/getGlTypeFromFormat.mjs';\nexport { GlBackBufferSystem } from './renderers/gl/GlBackBufferSystem.mjs';\nexport { GlColorMaskSystem } from './renderers/gl/GlColorMaskSystem.mjs';\nexport { GlEncoderSystem } from './renderers/gl/GlEncoderSystem.mjs';\nexport { GlRenderTarget } from './renderers/gl/GlRenderTarget.mjs';\nexport { GlStencilSystem } from './renderers/gl/GlStencilSystem.mjs';\nexport { GlUboSystem } from './renderers/gl/GlUboSystem.mjs';\nexport { GlRenderTargetAdaptor } from './renderers/gl/renderTarget/GlRenderTargetAdaptor.mjs';\nexport { GlRenderTargetSystem } from './renderers/gl/renderTarget/GlRenderTargetSystem.mjs';\nexport { batchSamplersUniformGroup } from './renderers/gl/shader/batchSamplersUniformGroup.mjs';\nimport './renderers/gl/shader/const.mjs';\nexport { generateShaderSyncCode } from './renderers/gl/shader/GenerateShaderSyncCode.mjs';\nexport { GlProgram } from './renderers/gl/shader/GlProgram.mjs';\nexport { GlProgramData, IGLUniformData } from './renderers/gl/shader/GlProgramData.mjs';\nexport { GlShaderSystem } from './renderers/gl/shader/GlShaderSystem.mjs';\nexport { GlUniformGroupSystem } from './renderers/gl/shader/GlUniformGroupSystem.mjs';\nexport { migrateFragmentFromV7toV8 } from './renderers/gl/shader/migrateFragmentFromV7toV8.mjs';\nexport { compileShader } from './renderers/gl/shader/program/compileShader.mjs';\nexport { defaultValue } from './renderers/gl/shader/program/defaultValue.mjs';\nexport { ensureAttributes } from './renderers/gl/shader/program/ensureAttributes.mjs';\nexport { extractAttributesFromGlProgram } from './renderers/gl/shader/program/extractAttributesFromGlProgram.mjs';\nexport { generateProgram } from './renderers/gl/shader/program/generateProgram.mjs';\nexport { getMaxFragmentPrecision } from './renderers/gl/shader/program/getMaxFragmentPrecision.mjs';\nexport { getTestContext } from './renderers/gl/shader/program/getTestContext.mjs';\nexport { getUboData } from './renderers/gl/shader/program/getUboData.mjs';\nexport { getUniformData } from './renderers/gl/shader/program/getUniformData.mjs';\nexport { logProgramError } from './renderers/gl/shader/program/logProgramError.mjs';\nexport { mapSize } from './renderers/gl/shader/program/mapSize.mjs';\nexport { mapGlToVertexFormat, mapType } from './renderers/gl/shader/program/mapType.mjs';\nexport { addProgramDefines } from './renderers/gl/shader/program/preprocessors/addProgramDefines.mjs';\nexport { ensurePrecision } from './renderers/gl/shader/program/preprocessors/ensurePrecision.mjs';\nexport { insertVersion } from './renderers/gl/shader/program/preprocessors/insertVersion.mjs';\nexport { setProgramName } from './renderers/gl/shader/program/preprocessors/setProgramName.mjs';\nexport { stripVersion } from './renderers/gl/shader/program/preprocessors/stripVersion.mjs';\nexport { WGSL_TO_STD40_SIZE, createUboElementsSTD40 } from './renderers/gl/shader/utils/createUboElementsSTD40.mjs';\nexport { createUboSyncFunctionSTD40 } from './renderers/gl/shader/utils/createUboSyncSTD40.mjs';\nexport { generateArraySyncSTD40 } from './renderers/gl/shader/utils/generateArraySyncSTD40.mjs';\nexport { generateUniformsSync } from './renderers/gl/shader/utils/generateUniformsSync.mjs';\nexport { UNIFORM_TO_ARRAY_SETTERS, UNIFORM_TO_SINGLE_SETTERS } from './renderers/gl/shader/utils/generateUniformsSyncTypes.mjs';\nexport { GlStateSystem } from './renderers/gl/state/GlStateSystem.mjs';\nexport { mapWebGLBlendModesToPixi } from './renderers/gl/state/mapWebGLBlendModesToPixi.mjs';\nexport { GL_FORMATS, GL_TARGETS, GL_TYPES, GL_WRAP_MODES } from './renderers/gl/texture/const.mjs';\nexport { GlTexture } from './renderers/gl/texture/GlTexture.mjs';\nexport { GlTextureSystem } from './renderers/gl/texture/GlTextureSystem.mjs';\nimport './renderers/gl/texture/uploaders/GLTextureUploader.mjs';\nexport { glUploadBufferImageResource } from './renderers/gl/texture/uploaders/glUploadBufferImageResource.mjs';\nexport { glUploadCompressedTextureResource } from './renderers/gl/texture/uploaders/glUploadCompressedTextureResource.mjs';\nexport { glUploadImageResource } from './renderers/gl/texture/uploaders/glUploadImageResource.mjs';\nexport { glUploadVideoResource } from './renderers/gl/texture/uploaders/glUploadVideoResource.mjs';\nexport { applyStyleParams } from './renderers/gl/texture/utils/applyStyleParams.mjs';\nexport { getSupportedGlCompressedTextureFormats } from './renderers/gl/texture/utils/getSupportedGlCompressedTextureFormats.mjs';\nexport { mapFormatToGlFormat } from './renderers/gl/texture/utils/mapFormatToGlFormat.mjs';\nexport { mapFormatToGlInternalFormat } from './renderers/gl/texture/utils/mapFormatToGlInternalFormat.mjs';\nexport { mapFormatToGlType } from './renderers/gl/texture/utils/mapFormatToGlType.mjs';\nexport { compareModeToGlCompare, mipmapScaleModeToGlFilter, scaleModeToGlFilter, wrapModeToGlAddress } from './renderers/gl/texture/utils/pixiToGlMaps.mjs';\nexport { unpremultiplyAlpha } from './renderers/gl/texture/utils/unpremultiplyAlpha.mjs';\nexport { WebGLRenderer } from './renderers/gl/WebGLRenderer.mjs';\nexport { BindGroupSystem } from './renderers/gpu/BindGroupSystem.mjs';\nexport { GpuBufferSystem } from './renderers/gpu/buffer/GpuBufferSystem.mjs';\nexport { GpuReadBuffer } from './renderers/gpu/buffer/GpuReadBuffer.mjs';\nexport { UboBatch } from './renderers/gpu/buffer/UboBatch.mjs';\nexport { GpuColorMaskSystem } from './renderers/gpu/GpuColorMaskSystem.mjs';\nexport { GpuDeviceSystem } from './renderers/gpu/GpuDeviceSystem.mjs';\nexport { GpuEncoderSystem } from './renderers/gpu/GpuEncoderSystem.mjs';\nexport { GpuStencilSystem } from './renderers/gpu/GpuStencilSystem.mjs';\nexport { GpuUboSystem } from './renderers/gpu/GpuUboSystem.mjs';\nexport { GpuUniformBatchPipe } from './renderers/gpu/GpuUniformBatchPipe.mjs';\nexport { PipelineSystem } from './renderers/gpu/pipeline/PipelineSystem.mjs';\nexport { calculateProjection } from './renderers/gpu/renderTarget/calculateProjection.mjs';\nexport { GpuRenderTarget } from './renderers/gpu/renderTarget/GpuRenderTarget.mjs';\nexport { GpuRenderTargetAdaptor } from './renderers/gpu/renderTarget/GpuRenderTargetAdaptor.mjs';\nexport { GpuRenderTargetSystem } from './renderers/gpu/renderTarget/GpuRenderTargetSystem.mjs';\nexport { BindGroup } from './renderers/gpu/shader/BindGroup.mjs';\nimport './renderers/gpu/shader/BindResource.mjs';\nexport { GpuProgram } from './renderers/gpu/shader/GpuProgram.mjs';\nexport { GpuShaderSystem } from './renderers/gpu/shader/GpuShaderSystem.mjs';\nexport { WGSL_ALIGN_SIZE_DATA, createUboElementsWGSL } from './renderers/gpu/shader/utils/createUboElementsWGSL.mjs';\nexport { createUboSyncFunctionWGSL } from './renderers/gpu/shader/utils/createUboSyncFunctionWGSL.mjs';\nexport { extractAttributesFromGpuProgram } from './renderers/gpu/shader/utils/extractAttributesFromGpuProgram.mjs';\nexport { extractStructAndGroups } from './renderers/gpu/shader/utils/extractStructAndGroups.mjs';\nexport { generateArraySyncWGSL } from './renderers/gpu/shader/utils/generateArraySyncWGSL.mjs';\nexport { generateGpuLayoutGroups } from './renderers/gpu/shader/utils/generateGpuLayoutGroups.mjs';\nexport { generateLayoutHash } from './renderers/gpu/shader/utils/generateLayoutHash.mjs';\nexport { removeStructAndGroupDuplicates } from './renderers/gpu/shader/utils/removeStructAndGroupDuplicates.mjs';\nexport { GpuBlendModesToPixi } from './renderers/gpu/state/GpuBlendModesToPixi.mjs';\nexport { GpuStateSystem } from './renderers/gpu/state/GpuStateSystem.mjs';\nexport { GpuStencilModesToPixi } from './renderers/gpu/state/GpuStencilModesToPixi.mjs';\nexport { GpuTextureSystem } from './renderers/gpu/texture/GpuTextureSystem.mjs';\nimport './renderers/gpu/texture/uploaders/GpuTextureUploader.mjs';\nexport { gpuUploadBufferImageResource } from './renderers/gpu/texture/uploaders/gpuUploadBufferImageResource.mjs';\nexport { blockDataMap, gpuUploadCompressedTextureResource } from './renderers/gpu/texture/uploaders/gpuUploadCompressedTextureResource.mjs';\nexport { gpuUploadImageResource } from './renderers/gpu/texture/uploaders/gpuUploadImageSource.mjs';\nexport { gpuUploadVideoResource } from './renderers/gpu/texture/uploaders/gpuUploadVideoSource.mjs';\nexport { getSupportedGPUCompressedTextureFormats } from './renderers/gpu/texture/utils/getSupportedGPUCompressedTextureFormats.mjs';\nexport { GpuMipmapGenerator } from './renderers/gpu/texture/utils/GpuMipmapGenerator.mjs';\nexport { WebGPURenderer } from './renderers/gpu/WebGPURenderer.mjs';\nexport { BackgroundSystem } from './renderers/shared/background/BackgroundSystem.mjs';\nexport { BlendModePipe } from './renderers/shared/blendModes/BlendModePipe.mjs';\nexport { Buffer } from './renderers/shared/buffer/Buffer.mjs';\nexport { BufferResource } from './renderers/shared/buffer/BufferResource.mjs';\nexport { BufferUsage } from './renderers/shared/buffer/const.mjs';\nexport { fastCopy } from './renderers/shared/buffer/utils/fastCopy.mjs';\nexport { ExtractSystem } from './renderers/shared/extract/ExtractSystem.mjs';\nexport { GenerateTextureSystem } from './renderers/shared/extract/GenerateTextureSystem.mjs';\nexport { DRAW_MODES } from './renderers/shared/geometry/const.mjs';\nexport { Geometry } from './renderers/shared/geometry/Geometry.mjs';\nexport { buildSimpleUvs, buildUvs } from './renderers/shared/geometry/utils/buildUvs.mjs';\nexport { ensureIsBuffer } from './renderers/shared/geometry/utils/ensureIsBuffer.mjs';\nexport { getAttributeInfoFromFormat } from './renderers/shared/geometry/utils/getAttributeInfoFromFormat.mjs';\nexport { getGeometryBounds } from './renderers/shared/geometry/utils/getGeometryBounds.mjs';\nexport { transformVertices } from './renderers/shared/geometry/utils/transformVertices.mjs';\nimport './renderers/shared/instructions/Instruction.mjs';\nexport { InstructionSet } from './renderers/shared/instructions/InstructionSet.mjs';\nimport './renderers/shared/instructions/RenderPipe.mjs';\nimport './renderers/shared/Renderable.mjs';\nexport { GlobalUniformSystem } from './renderers/shared/renderTarget/GlobalUniformSystem.mjs';\nexport { isRenderingToScreen } from './renderers/shared/renderTarget/isRenderingToScreen.mjs';\nexport { RenderTarget } from './renderers/shared/renderTarget/RenderTarget.mjs';\nexport { RenderTargetSystem } from './renderers/shared/renderTarget/RenderTargetSystem.mjs';\nexport { viewportFromFrame } from './renderers/shared/renderTarget/viewportFromFrame.mjs';\nexport { ShaderStage } from './renderers/shared/shader/const.mjs';\nexport { Shader } from './renderers/shared/shader/Shader.mjs';\nimport './renderers/shared/shader/types.mjs';\nexport { UboSystem } from './renderers/shared/shader/UboSystem.mjs';\nexport { UniformGroup } from './renderers/shared/shader/UniformGroup.mjs';\nexport { createUboSyncFunction } from './renderers/shared/shader/utils/createUboSyncFunction.mjs';\nexport { getDefaultUniformValue } from './renderers/shared/shader/utils/getDefaultUniformValue.mjs';\nexport { uboSyncFunctionsSTD40, uboSyncFunctionsWGSL } from './renderers/shared/shader/utils/uboSyncFunctions.mjs';\nexport { uniformParsers } from './renderers/shared/shader/utils/uniformParsers.mjs';\nexport { HelloSystem } from './renderers/shared/startup/HelloSystem.mjs';\nexport { BLEND_TO_NPM, STENCIL_MODES } from './renderers/shared/state/const.mjs';\nexport { getAdjustedBlendModeBlend } from './renderers/shared/state/getAdjustedBlendModeBlend.mjs';\nexport { State } from './renderers/shared/state/State.mjs';\nexport { AbstractRenderer } from './renderers/shared/system/AbstractRenderer.mjs';\nexport { SharedRenderPipes, SharedSystems } from './renderers/shared/system/SharedSystems.mjs';\nimport './renderers/shared/system/System.mjs';\nexport { SystemRunner } from './renderers/shared/system/SystemRunner.mjs';\nimport './renderers/shared/system/utils/typeUtils.mjs';\nexport { CanvasPool, CanvasPoolClass } from './renderers/shared/texture/CanvasPool.mjs';\nexport { DEPRECATED_SCALE_MODES, DEPRECATED_WRAP_MODES, MSAA_QUALITY, SCALE_MODES, WRAP_MODES } from './renderers/shared/texture/const.mjs';\nimport './renderers/shared/texture/GenerateCanvas.mjs';\nexport { RenderTexture } from './renderers/shared/texture/RenderTexture.mjs';\nexport { BufferImageSource } from './renderers/shared/texture/sources/BufferSource.mjs';\nexport { CanvasSource } from './renderers/shared/texture/sources/CanvasSource.mjs';\nexport { CompressedSource } from './renderers/shared/texture/sources/CompressedSource.mjs';\nexport { ImageSource } from './renderers/shared/texture/sources/ImageSource.mjs';\nexport { TextureSource } from './renderers/shared/texture/sources/TextureSource.mjs';\nexport { VideoSource } from './renderers/shared/texture/sources/VideoSource.mjs';\nexport { Texture } from './renderers/shared/texture/Texture.mjs';\nexport { TextureGCSystem } from './renderers/shared/texture/TextureGCSystem.mjs';\nexport { TextureMatrix } from './renderers/shared/texture/TextureMatrix.mjs';\nexport { TexturePool, TexturePoolClass } from './renderers/shared/texture/TexturePool.mjs';\nexport { TextureStyle } from './renderers/shared/texture/TextureStyle.mjs';\nexport { TextureUvs } from './renderers/shared/texture/TextureUvs.mjs';\nexport { generateUID } from './renderers/shared/texture/utils/generateUID.mjs';\nexport { getCanvasTexture, hasCachedCanvasTexture } from './renderers/shared/texture/utils/getCanvasTexture.mjs';\nexport { getSupportedCompressedTextureFormats } from './renderers/shared/texture/utils/getSupportedCompressedTextureFormats.mjs';\nexport { getSupportedTextureFormats, nonCompressedFormats } from './renderers/shared/texture/utils/getSupportedTextureFormats.mjs';\nexport { autoDetectSource, resourceToTexture, textureFrom } from './renderers/shared/texture/utils/textureFrom.mjs';\nexport { createIdFromString } from './renderers/shared/utils/createIdFromString.mjs';\nexport { parseFunctionBody } from './renderers/shared/utils/parseFunctionBody.mjs';\nimport './renderers/shared/view/View.mjs';\nexport { ViewSystem } from './renderers/shared/view/ViewSystem.mjs';\nexport { RendererType } from './renderers/types.mjs';\n\n\"use strict\";\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}