{"ast":null,"code":"import { Color } from '../../../../color/Color.mjs';\nimport { Matrix } from '../../../../maths/matrix/Matrix.mjs';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture.mjs';\nimport { warn } from '../../../../utils/logging/warn.mjs';\nimport { FillGradient } from '../../../graphics/shared/fill/FillGradient.mjs';\nimport { FillPattern } from '../../../graphics/shared/fill/FillPattern.mjs';\n\"use strict\";\nfunction getCanvasFillStyle(fillStyle, context) {\n  if (fillStyle.texture === Texture.WHITE && !fillStyle.fill) {\n    return Color.shared.setValue(fillStyle.color).toHex();\n  } else if (!fillStyle.fill) {\n    const pattern = context.createPattern(fillStyle.texture.source.resource, \"repeat\");\n    const tempMatrix = fillStyle.matrix.copyTo(Matrix.shared);\n    tempMatrix.scale(fillStyle.texture.frame.width, fillStyle.texture.frame.height);\n    pattern.setTransform(tempMatrix);\n    return pattern;\n  } else if (fillStyle.fill instanceof FillPattern) {\n    const fillPattern = fillStyle.fill;\n    const pattern = context.createPattern(fillPattern.texture.source.resource, \"repeat\");\n    const tempMatrix = fillPattern.transform.copyTo(Matrix.shared);\n    tempMatrix.scale(fillPattern.texture.frame.width, fillPattern.texture.frame.height);\n    pattern.setTransform(tempMatrix);\n    return pattern;\n  } else if (fillStyle.fill instanceof FillGradient) {\n    const fillGradient = fillStyle.fill;\n    if (fillGradient.type === \"linear\") {\n      const gradient = context.createLinearGradient(fillGradient.x0, fillGradient.y0, fillGradient.x1, fillGradient.y1);\n      fillGradient.gradientStops.forEach(stop => {\n        gradient.addColorStop(stop.offset, Color.shared.setValue(stop.color).toHex());\n      });\n      return gradient;\n    }\n  }\n  warn(\"FillStyle not recognised\", fillStyle);\n  return \"red\";\n}\nexport { getCanvasFillStyle };","map":{"version":3,"names":["getCanvasFillStyle","fillStyle","context","texture","Texture","WHITE","fill","Color","shared","setValue","color","toHex","pattern","createPattern","source","resource","tempMatrix","matrix","copyTo","Matrix","scale","frame","width","height","setTransform","FillPattern","fillPattern","transform","FillGradient","fillGradient","type","gradient","createLinearGradient","x0","y0","x1","y1","gradientStops","forEach","stop","addColorStop","offset","warn"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/scene/text/canvas/utils/getCanvasFillStyle.ts"],"sourcesContent":["import { Color } from '../../../../color/Color';\nimport { Matrix } from '../../../../maths/matrix/Matrix';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture';\nimport { warn } from '../../../../utils/logging/warn';\nimport { FillGradient } from '../../../graphics/shared/fill/FillGradient';\nimport { FillPattern } from '../../../graphics/shared/fill/FillPattern';\n\nimport type { ICanvasRenderingContext2D } from '../../../../environment/canvas/ICanvasRenderingContext2D';\nimport type { ConvertedFillStyle } from '../../../graphics/shared/GraphicsContext';\n\nexport function getCanvasFillStyle(\n    fillStyle: ConvertedFillStyle,\n    context: ICanvasRenderingContext2D): string | CanvasGradient | CanvasPattern\n{\n    if (fillStyle.texture === Texture.WHITE && !fillStyle.fill)\n    {\n        return Color.shared.setValue(fillStyle.color).toHex();\n    }\n    else if (!fillStyle.fill)\n    {\n        // fancy set up...\n        const pattern = context.createPattern(fillStyle.texture.source.resource, 'repeat');\n\n        // create an inverted scale matrix..\n        const tempMatrix = fillStyle.matrix.copyTo(Matrix.shared);\n\n        tempMatrix.scale(fillStyle.texture.frame.width, fillStyle.texture.frame.height);\n\n        pattern.setTransform(tempMatrix);\n\n        return pattern;\n    }\n    else if (fillStyle.fill instanceof FillPattern)\n    {\n        const fillPattern = fillStyle.fill as FillPattern;\n\n        const pattern = context.createPattern(fillPattern.texture.source.resource, 'repeat');\n\n        const tempMatrix = fillPattern.transform.copyTo(Matrix.shared);\n\n        tempMatrix.scale(\n            fillPattern.texture.frame.width,\n            fillPattern.texture.frame.height\n        );\n\n        pattern.setTransform(tempMatrix);\n\n        return pattern;\n    }\n    else if (fillStyle.fill instanceof FillGradient)\n    {\n        const fillGradient = fillStyle.fill as FillGradient;\n\n        if (fillGradient.type === 'linear')\n        {\n            const gradient = context.createLinearGradient(\n                fillGradient.x0,\n                fillGradient.y0,\n                fillGradient.x1,\n                fillGradient.y1\n            );\n\n            fillGradient.gradientStops.forEach((stop) =>\n            {\n                gradient.addColorStop(stop.offset, Color.shared.setValue(stop.color).toHex());\n            });\n\n            return gradient;\n        }\n    }\n\n    // #if _DEBUG\n    warn('FillStyle not recognised', fillStyle);\n    // #endif\n\n    return 'red';\n}\n"],"mappings":";;;;;;;AAUgB,SAAAA,mBACZC,SAAA,EACAC,OACJ;EACI,IAAID,SAAA,CAAUE,OAAY,KAAAC,OAAA,CAAQC,KAAS,KAACJ,SAAA,CAAUK,IACtD;IACI,OAAOC,KAAA,CAAMC,MAAO,CAAAC,QAAA,CAASR,SAAU,CAAAS,KAAK,EAAEC,KAAM;EAAA,CACxD,UACS,CAACV,SAAA,CAAUK,IACpB;IAEI,MAAMM,OAAA,GAAUV,OAAQ,CAAAW,aAAA,CAAcZ,SAAA,CAAUE,OAAQ,CAAAW,MAAA,CAAOC,QAAA,EAAU,QAAQ;IAGjF,MAAMC,UAAa,GAAAf,SAAA,CAAUgB,MAAO,CAAAC,MAAA,CAAOC,MAAA,CAAOX,MAAM;IAE7CQ,UAAA,CAAAI,KAAA,CAAMnB,SAAA,CAAUE,OAAQ,CAAAkB,KAAA,CAAMC,KAAA,EAAOrB,SAAU,CAAAE,OAAA,CAAQkB,KAAA,CAAME,MAAM;IAE9EX,OAAA,CAAQY,YAAA,CAAaR,UAAU;IAExB,OAAAJ,OAAA;EAAA,CACX,UACSX,SAAU,CAAAK,IAAA,YAAgBmB,WACnC;IACI,MAAMC,WAAA,GAAczB,SAAU,CAAAK,IAAA;IAE9B,MAAMM,OAAA,GAAUV,OAAQ,CAAAW,aAAA,CAAca,WAAA,CAAYvB,OAAQ,CAAAW,MAAA,CAAOC,QAAA,EAAU,QAAQ;IAEnF,MAAMC,UAAa,GAAAU,WAAA,CAAYC,SAAU,CAAAT,MAAA,CAAOC,MAAA,CAAOX,MAAM;IAElDQ,UAAA,CAAAI,KAAA,CACPM,WAAA,CAAYvB,OAAA,CAAQkB,KAAM,CAAAC,KAAA,EAC1BI,WAAA,CAAYvB,OAAA,CAAQkB,KAAM,CAAAE,MAAA,CAC9B;IAEAX,OAAA,CAAQY,YAAA,CAAaR,UAAU;IAExB,OAAAJ,OAAA;EAAA,CACX,UACSX,SAAU,CAAAK,IAAA,YAAgBsB,YACnC;IACI,MAAMC,YAAA,GAAe5B,SAAU,CAAAK,IAAA;IAE3B,IAAAuB,YAAA,CAAaC,IAAA,KAAS,QAC1B;MACI,MAAMC,QAAA,GAAW7B,OAAQ,CAAA8B,oBAAA,CACrBH,YAAa,CAAAI,EAAA,EACbJ,YAAa,CAAAK,EAAA,EACbL,YAAa,CAAAM,EAAA,EACbN,YAAa,CAAAO,EAAA,CACjB;MAEaP,YAAA,CAAAQ,aAAA,CAAcC,OAAQ,CAACC,IACpC;QACaR,QAAA,CAAAS,YAAA,CAAaD,IAAK,CAAAE,MAAA,EAAQlC,KAAM,CAAAC,MAAA,CAAOC,QAAA,CAAS8B,IAAK,CAAA7B,KAAK,CAAE,CAAAC,KAAA,EAAO;MAAA,CAC/E;MAEM,OAAAoB,QAAA;IAAA;EACX;EAIJW,IAAA,CAAK,4BAA4BzC,SAAS;EAGnC;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}