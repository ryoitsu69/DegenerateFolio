{"ast":null,"code":"const known = {\n  1000: 'Normal Closure',\n  1001: 'Going Away',\n  1002: 'Protocol Error',\n  1003: 'Unsupported Data',\n  1004: '(For future)',\n  1005: 'No Status Received',\n  1006: 'Abnormal Closure',\n  1007: 'Invalid frame payload data',\n  1008: 'Policy Violation',\n  1009: 'Message too big',\n  1010: 'Missing Extension',\n  1011: 'Internal Error',\n  1012: 'Service Restart',\n  1013: 'Try Again Later',\n  1014: 'Bad Gateway',\n  1015: 'TLS Handshake'\n};\nexport function getWSErrorString(code) {\n  if (code >= 0 && code <= 999) {\n    return '(Unused)';\n  } else if (code >= 1016) {\n    if (code <= 1999) {\n      return '(For WebSocket standard)';\n    } else if (code <= 2999) {\n      return '(For WebSocket extensions)';\n    } else if (code <= 3999) {\n      return '(For libraries and frameworks)';\n    } else if (code <= 4999) {\n      return '(For applications)';\n    }\n  }\n  return known[code] || '(Unknown)';\n}","map":{"version":3,"names":["known","getWSErrorString","code"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/rpc-provider/ws/errors.js"],"sourcesContent":["const known = {\n    1000: 'Normal Closure',\n    1001: 'Going Away',\n    1002: 'Protocol Error',\n    1003: 'Unsupported Data',\n    1004: '(For future)',\n    1005: 'No Status Received',\n    1006: 'Abnormal Closure',\n    1007: 'Invalid frame payload data',\n    1008: 'Policy Violation',\n    1009: 'Message too big',\n    1010: 'Missing Extension',\n    1011: 'Internal Error',\n    1012: 'Service Restart',\n    1013: 'Try Again Later',\n    1014: 'Bad Gateway',\n    1015: 'TLS Handshake'\n};\nexport function getWSErrorString(code) {\n    if (code >= 0 && code <= 999) {\n        return '(Unused)';\n    }\n    else if (code >= 1016) {\n        if (code <= 1999) {\n            return '(For WebSocket standard)';\n        }\n        else if (code <= 2999) {\n            return '(For WebSocket extensions)';\n        }\n        else if (code <= 3999) {\n            return '(For libraries and frameworks)';\n        }\n        else if (code <= 4999) {\n            return '(For applications)';\n        }\n    }\n    return known[code] || '(Unknown)';\n}\n"],"mappings":"AAAA,MAAMA,KAAK,GAAG;EACV,IAAI,EAAE,gBAAgB;EACtB,IAAI,EAAE,YAAY;EAClB,IAAI,EAAE,gBAAgB;EACtB,IAAI,EAAE,kBAAkB;EACxB,IAAI,EAAE,cAAc;EACpB,IAAI,EAAE,oBAAoB;EAC1B,IAAI,EAAE,kBAAkB;EACxB,IAAI,EAAE,4BAA4B;EAClC,IAAI,EAAE,kBAAkB;EACxB,IAAI,EAAE,iBAAiB;EACvB,IAAI,EAAE,mBAAmB;EACzB,IAAI,EAAE,gBAAgB;EACtB,IAAI,EAAE,iBAAiB;EACvB,IAAI,EAAE,iBAAiB;EACvB,IAAI,EAAE,aAAa;EACnB,IAAI,EAAE;AACV,CAAC;AACD,OAAO,SAASC,gBAAgBA,CAACC,IAAI,EAAE;EACnC,IAAIA,IAAI,IAAI,CAAC,IAAIA,IAAI,IAAI,GAAG,EAAE;IAC1B,OAAO,UAAU;EACrB,CAAC,MACI,IAAIA,IAAI,IAAI,IAAI,EAAE;IACnB,IAAIA,IAAI,IAAI,IAAI,EAAE;MACd,OAAO,0BAA0B;IACrC,CAAC,MACI,IAAIA,IAAI,IAAI,IAAI,EAAE;MACnB,OAAO,4BAA4B;IACvC,CAAC,MACI,IAAIA,IAAI,IAAI,IAAI,EAAE;MACnB,OAAO,gCAAgC;IAC3C,CAAC,MACI,IAAIA,IAAI,IAAI,IAAI,EAAE;MACnB,OAAO,oBAAoB;IAC/B;EACJ;EACA,OAAOF,KAAK,CAACE,IAAI,CAAC,IAAI,WAAW;AACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}