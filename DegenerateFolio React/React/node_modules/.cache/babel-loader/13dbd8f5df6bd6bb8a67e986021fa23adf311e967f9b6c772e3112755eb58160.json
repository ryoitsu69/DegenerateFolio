{"ast":null,"code":"/* eslint-disable brace-style,camelcase,comma-spacing,curly,one-var,padding-line-between-statements,space-infix-ops */\nfunction L32(x, c) {\n  return x << c | x >>> 32 - c;\n}\nfunction ld32(x, i) {\n  let u = x[i + 3] & 0xff;\n  u = u << 8 | x[i + 2] & 0xff;\n  u = u << 8 | x[i + 1] & 0xff;\n  return u << 8 | x[i + 0] & 0xff;\n}\nfunction st32(x, j, u) {\n  for (let i = 0; i < 4; i++) {\n    x[j + i] = u & 255;\n    u >>>= 8;\n  }\n}\nfunction vn(x, xi, y, yi, n) {\n  let d = 0;\n  for (let i = 0; i < n; i++) d |= x[xi + i] ^ y[yi + i];\n  return (1 & d - 1 >>> 8) - 1;\n}\nfunction core(out, inp, k, c, h) {\n  const w = new Uint32Array(16),\n    x = new Uint32Array(16),\n    y = new Uint32Array(16),\n    t = new Uint32Array(4);\n  let i, j, m;\n  for (i = 0; i < 4; i++) {\n    x[5 * i] = ld32(c, 4 * i);\n    x[1 + i] = ld32(k, 4 * i);\n    x[6 + i] = ld32(inp, 4 * i);\n    x[11 + i] = ld32(k, 16 + 4 * i);\n  }\n  for (i = 0; i < 16; i++) y[i] = x[i];\n  for (i = 0; i < 20; i++) {\n    for (j = 0; j < 4; j++) {\n      for (m = 0; m < 4; m++) t[m] = x[(5 * j + 4 * m) % 16];\n      t[1] ^= L32(t[0] + t[3] | 0, 7);\n      t[2] ^= L32(t[1] + t[0] | 0, 9);\n      t[3] ^= L32(t[2] + t[1] | 0, 13);\n      t[0] ^= L32(t[3] + t[2] | 0, 18);\n      for (m = 0; m < 4; m++) w[4 * j + (j + m) % 4] = t[m];\n    }\n    for (m = 0; m < 16; m++) x[m] = w[m];\n  }\n  if (h) {\n    for (i = 0; i < 16; i++) x[i] = x[i] + y[i] | 0;\n    for (i = 0; i < 4; i++) {\n      x[5 * i] = x[5 * i] - ld32(c, 4 * i) | 0;\n      x[6 + i] = x[6 + i] - ld32(inp, 4 * i) | 0;\n    }\n    for (i = 0; i < 4; i++) {\n      st32(out, 4 * i, x[5 * i]);\n      st32(out, 16 + 4 * i, x[6 + i]);\n    }\n  } else {\n    for (i = 0; i < 16; i++) st32(out, 4 * i, x[i] + y[i] | 0);\n  }\n}\nconst sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\nfunction crypto_stream_salsa20_xor(c, cpos, m, mpos, b, n, k) {\n  const z = new Uint8Array(16),\n    x = new Uint8Array(64);\n  let u, i;\n  if (!b) return 0;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    core(x, z, k, sigma, false);\n    for (i = 0; i < 64; i++) c[cpos + i] = (m ? m[mpos + i] : 0) ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    if (m) mpos += 64;\n  }\n  if (b > 0) {\n    core(x, z, k, sigma, false);\n    for (i = 0; i < b; i++) c[cpos + i] = (m ? m[mpos + i] : 0) ^ x[i];\n  }\n  return 0;\n}\nfunction crypto_stream_xor(c, cpos, m, mpos, d, n, k) {\n  const s = new Uint8Array(32);\n  core(s, n, k, sigma, true);\n  return crypto_stream_salsa20_xor(c, cpos, m, mpos, d, n.subarray(16), s);\n}\nfunction add1305(h, c) {\n  let u = 0;\n  for (let j = 0; j < 17; j++) {\n    u = u + (h[j] + c[j] | 0) | 0;\n    h[j] = u & 255;\n    u >>>= 8;\n  }\n}\nconst minusp = new Uint32Array([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252]);\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  let i, j, u;\n  const x = new Uint32Array(17),\n    r = new Uint32Array(17),\n    h = new Uint32Array(17),\n    c = new Uint32Array(17),\n    g = new Uint32Array(17);\n  for (j = 0; j < 17; j++) r[j] = h[j] = 0;\n  for (j = 0; j < 16; j++) r[j] = k[j];\n  r[3] &= 15;\n  r[4] &= 252;\n  r[7] &= 15;\n  r[8] &= 252;\n  r[11] &= 15;\n  r[12] &= 252;\n  r[15] &= 15;\n  while (n > 0) {\n    for (j = 0; j < 17; j++) c[j] = 0;\n    for (j = 0; j < 16 && j < n; ++j) c[j] = m[mpos + j];\n    c[j] = 1;\n    mpos += j;\n    n -= j;\n    add1305(h, c);\n    for (i = 0; i < 17; i++) {\n      x[i] = 0;\n      for (j = 0; j < 17; j++) x[i] = x[i] + h[j] * (j <= i ? r[i - j] : 320 * r[i + 17 - j] | 0) | 0 | 0;\n    }\n    for (i = 0; i < 17; i++) h[i] = x[i];\n    u = 0;\n    for (j = 0; j < 16; j++) {\n      u = u + h[j] | 0;\n      h[j] = u & 255;\n      u >>>= 8;\n    }\n    u = u + h[16] | 0;\n    h[16] = u & 3;\n    u = 5 * (u >>> 2) | 0;\n    for (j = 0; j < 16; j++) {\n      u = u + h[j] | 0;\n      h[j] = u & 255;\n      u >>>= 8;\n    }\n    u = u + h[16] | 0;\n    h[16] = u;\n  }\n  for (j = 0; j < 17; j++) g[j] = h[j];\n  add1305(h, minusp);\n  const s = -(h[16] >>> 7) | 0;\n  for (j = 0; j < 17; j++) h[j] ^= s & (g[j] ^ h[j]);\n  for (j = 0; j < 16; j++) c[j] = k[j + 16];\n  c[16] = 0;\n  add1305(h, c);\n  for (j = 0; j < 16; j++) out[outpos + j] = h[j];\n  return 0;\n}\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  const x = new Uint8Array(16);\n  crypto_onetimeauth(x, 0, m, mpos, n, k);\n  return vn(h, hpos, x, 0, 16);\n}\nfunction crypto_secretbox(c, m, d, n, k) {\n  if (d < 32) return -1;\n  crypto_stream_xor(c, 0, m, 0, d, n, k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (let i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\nfunction crypto_secretbox_open(m, c, d, n, k) {\n  const x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream_xor(x, 0, null, 0, 32, n, k);\n  if (crypto_onetimeauth_verify(c, 16, c, 32, d - 32, x) !== 0) return -1;\n  crypto_stream_xor(m, 0, c, 0, d, n, k);\n  for (let i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\nconst crypto_secretbox_KEYBYTES = 32;\nconst crypto_secretbox_NONCEBYTES = 24;\nconst crypto_secretbox_ZEROBYTES = 32;\nconst crypto_secretbox_BOXZEROBYTES = 16;\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\nfunction checkArrayTypes(...args) {\n  for (let i = 0, count = args.length; i < count; i++) {\n    if (!(args[i] instanceof Uint8Array)) throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\nexport function naclSecretbox(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  const m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  const c = new Uint8Array(m.length);\n  for (let i = 0; i < msg.length; i++) m[i + crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n}\nexport function naclSecretboxOpen(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  const c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  const m = new Uint8Array(c.length);\n  for (let i = 0; i < box.length; i++) c[i + crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n}","map":{"version":3,"names":["L32","x","c","ld32","i","u","st32","j","vn","xi","y","yi","n","d","core","out","inp","k","h","w","Uint32Array","t","m","sigma","Uint8Array","crypto_stream_salsa20_xor","cpos","mpos","b","z","crypto_stream_xor","s","subarray","add1305","minusp","crypto_onetimeauth","outpos","r","g","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","checkLengths","length","Error","checkArrayTypes","args","count","TypeError","naclSecretbox","msg","nonce","key","naclSecretboxOpen","box"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/util-crypto/nacl/tweetnacl.js"],"sourcesContent":["/* eslint-disable brace-style,camelcase,comma-spacing,curly,one-var,padding-line-between-statements,space-infix-ops */\nfunction L32(x, c) { return (x << c) | (x >>> (32 - c)); }\nfunction ld32(x, i) {\n    let u = x[i + 3] & 0xff;\n    u = (u << 8) | (x[i + 2] & 0xff);\n    u = (u << 8) | (x[i + 1] & 0xff);\n    return (u << 8) | (x[i + 0] & 0xff);\n}\nfunction st32(x, j, u) {\n    for (let i = 0; i < 4; i++) {\n        x[j + i] = u & 255;\n        u >>>= 8;\n    }\n}\nfunction vn(x, xi, y, yi, n) {\n    let d = 0;\n    for (let i = 0; i < n; i++)\n        d |= x[xi + i] ^ y[yi + i];\n    return (1 & ((d - 1) >>> 8)) - 1;\n}\nfunction core(out, inp, k, c, h) {\n    const w = new Uint32Array(16), x = new Uint32Array(16), y = new Uint32Array(16), t = new Uint32Array(4);\n    let i, j, m;\n    for (i = 0; i < 4; i++) {\n        x[5 * i] = ld32(c, 4 * i);\n        x[1 + i] = ld32(k, 4 * i);\n        x[6 + i] = ld32(inp, 4 * i);\n        x[11 + i] = ld32(k, 16 + 4 * i);\n    }\n    for (i = 0; i < 16; i++)\n        y[i] = x[i];\n    for (i = 0; i < 20; i++) {\n        for (j = 0; j < 4; j++) {\n            for (m = 0; m < 4; m++)\n                t[m] = x[(5 * j + 4 * m) % 16];\n            t[1] ^= L32((t[0] + t[3]) | 0, 7);\n            t[2] ^= L32((t[1] + t[0]) | 0, 9);\n            t[3] ^= L32((t[2] + t[1]) | 0, 13);\n            t[0] ^= L32((t[3] + t[2]) | 0, 18);\n            for (m = 0; m < 4; m++)\n                w[4 * j + (j + m) % 4] = t[m];\n        }\n        for (m = 0; m < 16; m++)\n            x[m] = w[m];\n    }\n    if (h) {\n        for (i = 0; i < 16; i++)\n            x[i] = (x[i] + y[i]) | 0;\n        for (i = 0; i < 4; i++) {\n            x[5 * i] = (x[5 * i] - ld32(c, 4 * i)) | 0;\n            x[6 + i] = (x[6 + i] - ld32(inp, 4 * i)) | 0;\n        }\n        for (i = 0; i < 4; i++) {\n            st32(out, 4 * i, x[5 * i]);\n            st32(out, 16 + 4 * i, x[6 + i]);\n        }\n    }\n    else {\n        for (i = 0; i < 16; i++)\n            st32(out, 4 * i, (x[i] + y[i]) | 0);\n    }\n}\nconst sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\nfunction crypto_stream_salsa20_xor(c, cpos, m, mpos, b, n, k) {\n    const z = new Uint8Array(16), x = new Uint8Array(64);\n    let u, i;\n    if (!b)\n        return 0;\n    for (i = 0; i < 16; i++)\n        z[i] = 0;\n    for (i = 0; i < 8; i++)\n        z[i] = n[i];\n    while (b >= 64) {\n        core(x, z, k, sigma, false);\n        for (i = 0; i < 64; i++)\n            c[cpos + i] = (m ? m[mpos + i] : 0) ^ x[i];\n        u = 1;\n        for (i = 8; i < 16; i++) {\n            u = u + (z[i] & 0xff) | 0;\n            z[i] = u & 0xff;\n            u >>>= 8;\n        }\n        b -= 64;\n        cpos += 64;\n        if (m)\n            mpos += 64;\n    }\n    if (b > 0) {\n        core(x, z, k, sigma, false);\n        for (i = 0; i < b; i++)\n            c[cpos + i] = (m ? m[mpos + i] : 0) ^ x[i];\n    }\n    return 0;\n}\nfunction crypto_stream_xor(c, cpos, m, mpos, d, n, k) {\n    const s = new Uint8Array(32);\n    core(s, n, k, sigma, true);\n    return crypto_stream_salsa20_xor(c, cpos, m, mpos, d, n.subarray(16), s);\n}\nfunction add1305(h, c) {\n    let u = 0;\n    for (let j = 0; j < 17; j++) {\n        u = (u + ((h[j] + c[j]) | 0)) | 0;\n        h[j] = u & 255;\n        u >>>= 8;\n    }\n}\nconst minusp = new Uint32Array([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252]);\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n    let i, j, u;\n    const x = new Uint32Array(17), r = new Uint32Array(17), h = new Uint32Array(17), c = new Uint32Array(17), g = new Uint32Array(17);\n    for (j = 0; j < 17; j++)\n        r[j] = h[j] = 0;\n    for (j = 0; j < 16; j++)\n        r[j] = k[j];\n    r[3] &= 15;\n    r[4] &= 252;\n    r[7] &= 15;\n    r[8] &= 252;\n    r[11] &= 15;\n    r[12] &= 252;\n    r[15] &= 15;\n    while (n > 0) {\n        for (j = 0; j < 17; j++)\n            c[j] = 0;\n        for (j = 0; (j < 16) && (j < n); ++j)\n            c[j] = m[mpos + j];\n        c[j] = 1;\n        mpos += j;\n        n -= j;\n        add1305(h, c);\n        for (i = 0; i < 17; i++) {\n            x[i] = 0;\n            for (j = 0; j < 17; j++)\n                x[i] = (x[i] + (h[j] * ((j <= i) ? r[i - j] : ((320 * r[i + 17 - j]) | 0))) | 0) | 0;\n        }\n        for (i = 0; i < 17; i++)\n            h[i] = x[i];\n        u = 0;\n        for (j = 0; j < 16; j++) {\n            u = (u + h[j]) | 0;\n            h[j] = u & 255;\n            u >>>= 8;\n        }\n        u = (u + h[16]) | 0;\n        h[16] = u & 3;\n        u = (5 * (u >>> 2)) | 0;\n        for (j = 0; j < 16; j++) {\n            u = (u + h[j]) | 0;\n            h[j] = u & 255;\n            u >>>= 8;\n        }\n        u = (u + h[16]) | 0;\n        h[16] = u;\n    }\n    for (j = 0; j < 17; j++)\n        g[j] = h[j];\n    add1305(h, minusp);\n    const s = (-(h[16] >>> 7) | 0);\n    for (j = 0; j < 17; j++)\n        h[j] ^= s & (g[j] ^ h[j]);\n    for (j = 0; j < 16; j++)\n        c[j] = k[j + 16];\n    c[16] = 0;\n    add1305(h, c);\n    for (j = 0; j < 16; j++)\n        out[outpos + j] = h[j];\n    return 0;\n}\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n    const x = new Uint8Array(16);\n    crypto_onetimeauth(x, 0, m, mpos, n, k);\n    return vn(h, hpos, x, 0, 16);\n}\nfunction crypto_secretbox(c, m, d, n, k) {\n    if (d < 32)\n        return -1;\n    crypto_stream_xor(c, 0, m, 0, d, n, k);\n    crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n    for (let i = 0; i < 16; i++)\n        c[i] = 0;\n    return 0;\n}\nfunction crypto_secretbox_open(m, c, d, n, k) {\n    const x = new Uint8Array(32);\n    if (d < 32)\n        return -1;\n    crypto_stream_xor(x, 0, null, 0, 32, n, k);\n    if (crypto_onetimeauth_verify(c, 16, c, 32, d - 32, x) !== 0)\n        return -1;\n    crypto_stream_xor(m, 0, c, 0, d, n, k);\n    for (let i = 0; i < 32; i++)\n        m[i] = 0;\n    return 0;\n}\nconst crypto_secretbox_KEYBYTES = 32;\nconst crypto_secretbox_NONCEBYTES = 24;\nconst crypto_secretbox_ZEROBYTES = 32;\nconst crypto_secretbox_BOXZEROBYTES = 16;\nfunction checkLengths(k, n) {\n    if (k.length !== crypto_secretbox_KEYBYTES)\n        throw new Error('bad key size');\n    if (n.length !== crypto_secretbox_NONCEBYTES)\n        throw new Error('bad nonce size');\n}\nfunction checkArrayTypes(...args) {\n    for (let i = 0, count = args.length; i < count; i++) {\n        if (!(args[i] instanceof Uint8Array))\n            throw new TypeError('unexpected type, use Uint8Array');\n    }\n}\nexport function naclSecretbox(msg, nonce, key) {\n    checkArrayTypes(msg, nonce, key);\n    checkLengths(key, nonce);\n    const m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n    const c = new Uint8Array(m.length);\n    for (let i = 0; i < msg.length; i++)\n        m[i + crypto_secretbox_ZEROBYTES] = msg[i];\n    crypto_secretbox(c, m, m.length, nonce, key);\n    return c.subarray(crypto_secretbox_BOXZEROBYTES);\n}\nexport function naclSecretboxOpen(box, nonce, key) {\n    checkArrayTypes(box, nonce, key);\n    checkLengths(key, nonce);\n    const c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n    const m = new Uint8Array(c.length);\n    for (let i = 0; i < box.length; i++)\n        c[i + crypto_secretbox_BOXZEROBYTES] = box[i];\n    if (c.length < 32)\n        return null;\n    if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0)\n        return null;\n    return m.subarray(crypto_secretbox_ZEROBYTES);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}