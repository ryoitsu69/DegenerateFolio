{"ast":null,"code":"export const rpc = {\n  call: {\n    deprecated: 'Use the runtime interface `api.call.contractsApi.call` instead',\n    description: 'Executes a call to a contract',\n    params: [{\n      name: 'callRequest',\n      type: 'ContractCallRequest'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'at',\n      type: 'BlockHash'\n    }],\n    type: 'ContractExecResult'\n  },\n  getStorage: {\n    deprecated: 'Use the runtime interface `api.call.contractsApi.getStorage` instead',\n    description: 'Returns the value under a specified storage key in a contract',\n    params: [{\n      name: 'address',\n      type: 'AccountId'\n    }, {\n      name: 'key',\n      type: 'H256'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'at',\n      type: 'BlockHash'\n    }],\n    type: 'Option<Bytes>'\n  },\n  instantiate: {\n    deprecated: 'Use the runtime interface `api.call.contractsApi.instantiate` instead',\n    description: 'Instantiate a new contract',\n    params: [{\n      name: 'request',\n      type: 'InstantiateRequestV1'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'at',\n      type: 'BlockHash'\n    }],\n    type: 'ContractInstantiateResult'\n  },\n  rentProjection: {\n    deprecated: 'Not available in newer versions of the contracts interfaces',\n    description: 'Returns the projected time a given contract will be able to sustain paying its rent',\n    params: [{\n      name: 'address',\n      type: 'AccountId'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'at',\n      type: 'BlockHash'\n    }],\n    type: 'Option<BlockNumber>'\n  },\n  uploadCode: {\n    deprecated: 'Use the runtime interface `api.call.contractsApi.uploadCode` instead',\n    description: 'Upload new code without instantiating a contract from it',\n    // The RPC here is terribly misnamed - somebody forgot how the RPCs\n    // are actually done, ie. <module>_<camelCasedMethod>\n    endpoint: 'contracts_upload_code',\n    params: [{\n      name: 'uploadRequest',\n      type: 'CodeUploadRequest'\n    }, {\n      isHistoric: true,\n      isOptional: true,\n      name: 'at',\n      type: 'BlockHash'\n    }],\n    type: 'CodeUploadResult'\n  }\n};","map":{"version":3,"names":["rpc","call","deprecated","description","params","name","type","isHistoric","isOptional","getStorage","instantiate","rentProjection","uploadCode","endpoint"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/interfaces/contracts/rpc.js"],"sourcesContent":["export const rpc = {\n    call: {\n        deprecated: 'Use the runtime interface `api.call.contractsApi.call` instead',\n        description: 'Executes a call to a contract',\n        params: [\n            {\n                name: 'callRequest',\n                type: 'ContractCallRequest'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'ContractExecResult'\n    },\n    getStorage: {\n        deprecated: 'Use the runtime interface `api.call.contractsApi.getStorage` instead',\n        description: 'Returns the value under a specified storage key in a contract',\n        params: [\n            {\n                name: 'address',\n                type: 'AccountId'\n            },\n            {\n                name: 'key',\n                type: 'H256'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Option<Bytes>'\n    },\n    instantiate: {\n        deprecated: 'Use the runtime interface `api.call.contractsApi.instantiate` instead',\n        description: 'Instantiate a new contract',\n        params: [\n            {\n                name: 'request',\n                type: 'InstantiateRequestV1'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'ContractInstantiateResult'\n    },\n    rentProjection: {\n        deprecated: 'Not available in newer versions of the contracts interfaces',\n        description: 'Returns the projected time a given contract will be able to sustain paying its rent',\n        params: [\n            {\n                name: 'address',\n                type: 'AccountId'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'Option<BlockNumber>'\n    },\n    uploadCode: {\n        deprecated: 'Use the runtime interface `api.call.contractsApi.uploadCode` instead',\n        description: 'Upload new code without instantiating a contract from it',\n        // The RPC here is terribly misnamed - somebody forgot how the RPCs\n        // are actually done, ie. <module>_<camelCasedMethod>\n        endpoint: 'contracts_upload_code',\n        params: [\n            {\n                name: 'uploadRequest',\n                type: 'CodeUploadRequest'\n            },\n            {\n                isHistoric: true,\n                isOptional: true,\n                name: 'at',\n                type: 'BlockHash'\n            }\n        ],\n        type: 'CodeUploadResult'\n    }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,GAAG,GAAG;EACfC,IAAI,EAAE;IACFC,UAAU,EAAE,gEAAgE;IAC5EC,WAAW,EAAE,+BAA+B;IAC5CC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,aAAa;MACnBC,IAAI,EAAE;IACV,CAAC,EACD;MACIC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBH,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDG,UAAU,EAAE;IACRP,UAAU,EAAE,sEAAsE;IAClFC,WAAW,EAAE,+DAA+D;IAC5EC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE;IACV,CAAC,EACD;MACID,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;IACV,CAAC,EACD;MACIC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBH,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDI,WAAW,EAAE;IACTR,UAAU,EAAE,uEAAuE;IACnFC,WAAW,EAAE,4BAA4B;IACzCC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE;IACV,CAAC,EACD;MACIC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBH,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDK,cAAc,EAAE;IACZT,UAAU,EAAE,6DAA6D;IACzEC,WAAW,EAAE,qFAAqF;IAClGC,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE;IACV,CAAC,EACD;MACIC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBH,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV,CAAC;EACDM,UAAU,EAAE;IACRV,UAAU,EAAE,sEAAsE;IAClFC,WAAW,EAAE,0DAA0D;IACvE;IACA;IACAU,QAAQ,EAAE,uBAAuB;IACjCT,MAAM,EAAE,CACJ;MACIC,IAAI,EAAE,eAAe;MACrBC,IAAI,EAAE;IACV,CAAC,EACD;MACIC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBH,IAAI,EAAE,IAAI;MACVC,IAAI,EAAE;IACV,CAAC,CACJ;IACDA,IAAI,EAAE;EACV;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}