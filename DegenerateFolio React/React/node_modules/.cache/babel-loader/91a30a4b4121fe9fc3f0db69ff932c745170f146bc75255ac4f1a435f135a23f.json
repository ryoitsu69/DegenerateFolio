{"ast":null,"code":"import { Result } from \"../../helpers/result.js\";\nimport { hex2str, str2hex } from \"../../helpers/hex-string.js\";\nimport { required } from \"../../helpers/required.js\";\nexport const TokenApi = {\n  /**\n   * Create collection\n   * @param {Account} signer\n   * @param {String} name\n   * @param {String} desc\n   * @param {String} uri\n   * @param {Number} max, if value greater than zero method will create limited collection\n   * @returns {Promise<Result|undefined>}\n   */\n  async createCollection(signer, name, desc, uri) {\n    let max = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    required(signer, 'signer', this.createCollection.name);\n    required(name, 'name', this.createCollection.name);\n    required(desc, 'desc', this.createCollection.name);\n    required(uri, 'uri', this.createCollection.name);\n    if (max <= 0) return new Result(false, 'The maximum value must be greater than zero!');\n    const payload = {\n      type: \"script_function_payload\",\n      function: \"0x3::token::create_collection_script\",\n      type_arguments: [],\n      arguments: [name, desc, uri, \"\" + max, [false, false, false] // Collection mutations\n      ]\n    };\n    return await this.submitTransaction(signer, payload);\n  },\n  /**\n   * Get collections for address\n   * @param address\n   * @returns {Promise<Result|*[]>}\n   */\n  async getCollections(address) {\n    required(address, 'address', this.getCollections.name);\n    const resource = await this.getEventsByHandle(this._0x(address), \"0x3::token::Collections\", \"create_collection_events\");\n    if (!resource.ok) {\n      return new Result(false, \"No collections found!\", resource.error);\n    }\n    const collections = [];\n    for (let col of resource.payload) {\n      collections.push({\n        version: col.version,\n        key: col.key,\n        type: col.type,\n        number: +col.sequence_number,\n        name: col.data.collection_name,\n        desc: col.data.description,\n        uri: col.data.uri,\n        creator: col.data.creator,\n        max: +col.data.maximum || 0\n      });\n    }\n\n    // console.log(collections)\n\n    return new Result(true, \"OK\", collections);\n  },\n  async getCollection(address, name) {\n    required(address, 'address', this.getCollections.name);\n    required(name, 'name', this.getCollections.name);\n    const resource = await this.getCollections(address);\n    if (!resource.ok) {\n      return new Result(false, \"No collections found!\", resource.error);\n    }\n    for (let col of resource.payload) {\n      if (name === col.name) {\n        const {\n          version,\n          key,\n          type,\n          number,\n          name,\n          desc,\n          uri,\n          creator,\n          max\n        } = col;\n        return new Result(true, \"OK\", {\n          version,\n          key,\n          type,\n          number,\n          name,\n          desc,\n          uri,\n          creator,\n          max\n        });\n      }\n    }\n    return new Result(false, \"Collection \".concat(name, \" not found!\"), {});\n  },\n  /**\n   *\n   * @param {Account} signer\n   * @param {String} collection\n   * @param {String} name\n   * @param {String} desc\n   * @param {Number} balance\n   * @param {String} uri\n   * @param {Number} max\n   * @param mutation\n   * @returns {Promise<Result|undefined>}\n   */\n  async createToken(signer, collection, name) {\n    let desc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n    let balance = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n    let uri = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '';\n    let max = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 1;\n    let mutation = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : {};\n    required(signer, 'signer', this.createToken.name);\n    required(collection, 'collection', this.createToken.name);\n    required(name, 'name', this.createToken.name);\n    const {\n      description: mutDesc = false,\n      maximum: mutMax = false,\n      properties: mutProps = false,\n      royalty: mutRoyalty = false,\n      uri: mutUri = false\n    } = mutation;\n    const payload = {\n      type: \"script_function_payload\",\n      function: \"0x3::token::create_token_script\",\n      type_arguments: [],\n      arguments: [collection,\n      // collection\n      name,\n      // token name\n      desc,\n      // token desc\n      balance.toString(),\n      // token balance\n      max.toString(),\n      // token maximum\n      uri,\n      // token uri\n      this._0x(signer.address()),\n      // royalty payee address\n      \"0\",\n      // royalty payee denominator\n      \"0\",\n      // royalty payee numerator\n      [mutDesc, mutMax, mutProps, mutRoyalty, mutUri],\n      // mutate setting\n      [\"\"],\n      // prop key ???\n      [\"\"],\n      // prop value ???\n      [\"\"] // prop type ???\n      ]\n    };\n    return await this.submitTransaction(signer, payload);\n  },\n  async getTokenBalance(owner, creator, collectionName, tokenName) {\n    let from = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '0x3::token::TokenStore';\n    required(owner, 'owner', this.getTokenBalance.name);\n    required(creator, 'creator', this.getTokenBalance.name);\n    required(collectionName, 'collectionName', this.getTokenBalance.name);\n    required(tokenName, 'tokenName', this.getTokenBalance.name);\n    const store = await this.getAccountResource(owner, from);\n    if (!store.ok) {\n      return new Result(false, \"Can't obtain token data from TokenStore\", store.error);\n    }\n    const token_data_id = {\n      creator: creator,\n      collection: collectionName,\n      name: tokenName\n    };\n    const token_id = {\n      token_data_id,\n      property_version: \"0\"\n    };\n    const handle = store.payload.data.tokens.handle;\n    const tokenBalance = await this.getTableItem(handle, '0x3::token::TokenId', '0x3::token::Token', token_id);\n    if (!tokenBalance.ok) {\n      return new Result(false, tokenBalance.message);\n    }\n    const {\n      id,\n      amount,\n      token_properties\n    } = tokenBalance.payload;\n    return new Result(true, \"OK\", {\n      creator: id.token_data_id.creator,\n      collection: id.token_data_id.collection,\n      name: id.token_data_id.name,\n      amount,\n      props: token_properties\n    });\n  },\n  async getTokenData(owner, creator, collectionName, tokenName) {\n    let from = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '0x3::token::Collections';\n    required(owner, 'owner', this.getTokenData.name);\n    required(creator, 'creator', this.getTokenData.name);\n    required(collectionName, 'collectionName', this.getTokenData.name);\n    required(tokenName, 'tokenName', this.getTokenData.name);\n    const store = await this.getAccountResource(owner, from);\n    if (!store.ok) {\n      return new Result(false, \"Can't obtain token data from TokenStore\", store.error);\n    }\n    const token_data_id = {\n      creator: creator,\n      collection: collectionName,\n      name: tokenName\n    };\n    const handle = store.payload.data.token_data.handle;\n    if (!handle) return new Result(false, \"Bad handle \".concat(handle, \"!\"));\n    const tokenData = await this.getTableItem(handle, '0x3::token::TokenDataId', '0x3::token::TokenData', token_data_id);\n    if (!tokenData.ok) {\n      return new Result(false, tokenData.message);\n    }\n    const {\n      default_properties,\n      name,\n      description,\n      largest_property_version,\n      maximum,\n      mutability_config,\n      royalty,\n      supply,\n      uri\n    } = tokenData.payload;\n    return new Result(true, \"OK\", {\n      name: name,\n      desc: description,\n      supply,\n      maximum,\n      royalty,\n      default_props: default_properties,\n      mutability_config\n    });\n  },\n  async tokenCreateOffer(signer, receiver, creator, collectionName, tokenName) {\n    let amount = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n    required(signer, 'signer', this.tokenCreateOffer.name);\n    required(receiver, 'receiver', this.tokenCreateOffer.name);\n    required(creator, 'creator', this.tokenCreateOffer.name);\n    required(collectionName, 'collectionName', this.tokenCreateOffer.name);\n    required(tokenName, 'tokenName', this.tokenCreateOffer.name);\n    const payload = {\n      type: \"script_function_payload\",\n      function: \"0x3::token_transfers::offer_script\",\n      type_arguments: [],\n      arguments: [receiver, creator, collectionName, tokenName, \"\" + 0, amount.toString()]\n    };\n    return await this.submitTransaction(signer, payload);\n  },\n  async tokenClaimOffer(signer, claimer, creator, collectionName, tokenName) {\n    required(signer, 'signer', this.tokenClaimOffer.name);\n    required(claimer, 'claimer', this.tokenClaimOffer.name);\n    required(creator, 'creator', this.tokenClaimOffer.name);\n    required(collectionName, 'collectionName', this.tokenClaimOffer.name);\n    required(tokenName, 'tokenName', this.tokenClaimOffer.name);\n    const payload = {\n      type: \"script_function_payload\",\n      function: \"0x3::token_transfers::claim_script\",\n      type_arguments: [],\n      arguments: [claimer, creator, collectionName, tokenName, \"\" + 0]\n    };\n    return await this.submitTransaction(signer, payload);\n  },\n  async tokenCancelOffer(signer, receiver, creator, collection, name) {\n    let prop_version = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n    required(signer, 'signer', this.tokenCancelOffer.name);\n    required(receiver, 'receiver', this.tokenCancelOffer.name);\n    required(creator, 'creator', this.tokenCancelOffer.name);\n    required(collection, 'collection', this.tokenCancelOffer.name);\n    required(name, 'name', this.tokenCancelOffer.name);\n    const payload = {\n      type: \"script_function_payload\",\n      function: \"0x3::token_transfers::cancel_offer_script\",\n      type_arguments: [],\n      arguments: [receiver, creator, collection, name, prop_version.toString()]\n    };\n    return await this.submitTransaction(signer, payload);\n  },\n  async getCollectionsWithTokens() {},\n  async getCollectionWithTokens() {}\n};","map":{"version":3,"names":["Result","hex2str","str2hex","required","TokenApi","createCollection","signer","name","desc","uri","max","arguments","length","undefined","payload","type","function","type_arguments","submitTransaction","getCollections","address","resource","getEventsByHandle","_0x","ok","error","collections","col","push","version","key","number","sequence_number","data","collection_name","description","creator","maximum","getCollection","concat","createToken","collection","balance","mutation","mutDesc","mutMax","properties","mutProps","royalty","mutRoyalty","mutUri","toString","getTokenBalance","owner","collectionName","tokenName","from","store","getAccountResource","token_data_id","token_id","property_version","handle","tokens","tokenBalance","getTableItem","message","id","amount","token_properties","props","getTokenData","token_data","tokenData","default_properties","largest_property_version","mutability_config","supply","default_props","tokenCreateOffer","receiver","tokenClaimOffer","claimer","tokenCancelOffer","prop_version","getCollectionsWithTokens","getCollectionWithTokens"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/aptos-api-master/src/api/ext/tokens.js"],"sourcesContent":["import {Result} from \"../../helpers/result.js\";\nimport {hex2str, str2hex} from \"../../helpers/hex-string.js\";\nimport {required} from \"../../helpers/required.js\";\n\nexport const TokenApi = {\n    /**\n     * Create collection\n     * @param {Account} signer\n     * @param {String} name\n     * @param {String} desc\n     * @param {String} uri\n     * @param {Number} max, if value greater than zero method will create limited collection\n     * @returns {Promise<Result|undefined>}\n     */\n    async createCollection(signer, name, desc, uri, max = 1){\n        required(signer, 'signer', this.createCollection.name)\n        required(name, 'name', this.createCollection.name)\n        required(desc, 'desc', this.createCollection.name)\n        required(uri, 'uri', this.createCollection.name)\n\n        if (max <= 0) return new Result(false, 'The maximum value must be greater than zero!')\n\n        const payload = {\n            type: \"script_function_payload\",\n            function: `0x3::token::create_collection_script`,\n            type_arguments: [],\n            arguments: [\n                name,\n                desc,\n                uri,\n                \"\"+max,\n                [false, false, false] // Collection mutations\n            ],\n        }\n\n        return await this.submitTransaction(signer, payload)\n    },\n\n    /**\n     * Get collections for address\n     * @param address\n     * @returns {Promise<Result|*[]>}\n     */\n    async getCollections(address){\n        required(address, 'address', this.getCollections.name)\n\n        const resource = await this.getEventsByHandle(this._0x(address), \"0x3::token::Collections\", \"create_collection_events\")\n        if (!resource.ok) {\n            return new Result(false, `No collections found!`, resource.error)\n        }\n        const collections = []\n\n        for(let col of resource.payload) {\n            collections.push({\n                version: col.version,\n                key: col.key,\n                type: col.type,\n                number: +col.sequence_number,\n                name: col.data.collection_name,\n                desc: col.data.description,\n                uri: col.data.uri,\n                creator:  col.data.creator,\n                max: +col.data.maximum || 0\n            })\n        }\n\n        // console.log(collections)\n\n        return new Result(true, \"OK\", collections)\n    },\n\n    async getCollection(address, name){\n        required(address, 'address', this.getCollections.name)\n        required(name, 'name', this.getCollections.name)\n\n        const resource = await this.getCollections(address)\n\n        if (!resource.ok) {\n            return new Result(false, `No collections found!`, resource.error)\n        }\n\n        for(let col of resource.payload) {\n            if (name === col.name) {\n                const {version, key, type, number, name, desc, uri, creator, max} = col\n                return new Result(true, \"OK\", {\n                    version,\n                    key,\n                    type,\n                    number,\n                    name,\n                    desc,\n                    uri,\n                    creator,\n                    max\n                })\n            }\n        }\n\n        return new Result(false, `Collection ${name} not found!`, {})\n    },\n\n\n    /**\n     *\n     * @param {Account} signer\n     * @param {String} collection\n     * @param {String} name\n     * @param {String} desc\n     * @param {Number} balance\n     * @param {String} uri\n     * @param {Number} max\n     * @param mutation\n     * @returns {Promise<Result|undefined>}\n     */\n    async createToken(\n        signer,\n        collection,\n        name,\n        desc = '',\n        balance = 1,\n        uri = '',\n        max = 1,\n        mutation = {}\n    ){\n        required(signer, 'signer', this.createToken.name)\n        required(collection, 'collection', this.createToken.name)\n        required(name, 'name', this.createToken.name)\n\n        const {description: mutDesc = false, maximum: mutMax = false, properties: mutProps = false, royalty: mutRoyalty = false, uri: mutUri = false} = mutation\n        const payload = {\n            type: \"script_function_payload\",\n            function: `0x3::token::create_token_script`,\n            type_arguments: [],\n            arguments: [\n                collection, // collection\n                name, // token name\n                desc, // token desc\n                balance.toString(), // token balance\n                max.toString(), // token maximum\n                uri, // token uri\n                this._0x(signer.address()), // royalty payee address\n                \"0\", // royalty payee denominator\n                \"0\", // royalty payee numerator\n                [mutDesc, mutMax, mutProps, mutRoyalty, mutUri], // mutate setting\n                [\"\"], // prop key ???\n                [\"\"], // prop value ???\n                [\"\"], // prop type ???\n            ],\n        }\n\n        return await this.submitTransaction(signer, payload)\n    },\n\n    async getTokenBalance(owner, creator, collectionName, tokenName, from = '0x3::token::TokenStore'){\n        required(owner, 'owner', this.getTokenBalance.name)\n        required(creator, 'creator', this.getTokenBalance.name)\n        required(collectionName, 'collectionName', this.getTokenBalance.name)\n        required(tokenName, 'tokenName', this.getTokenBalance.name)\n\n        const store = await this.getAccountResource(owner, from)\n\n        if (!store.ok) {\n            return new Result(false, \"Can't obtain token data from TokenStore\", store.error)\n        }\n\n        const token_data_id = {\n            creator: creator,\n            collection: collectionName,\n            name: tokenName,\n        }\n\n        const token_id = {\n            token_data_id,\n            property_version: \"0\",\n        }\n\n        const handle = store.payload.data.tokens.handle\n\n        const tokenBalance = await this.getTableItem(\n            handle,\n            '0x3::token::TokenId',\n            '0x3::token::Token',\n            token_id\n        )\n\n        if (!tokenBalance.ok) {\n            return new Result(false, tokenBalance.message)\n        }\n\n        const {id, amount, token_properties} = tokenBalance.payload\n\n        return new Result(true, \"OK\", {\n            creator: id.token_data_id.creator,\n            collection: id.token_data_id.collection,\n            name: id.token_data_id.name,\n            amount,\n            props: token_properties\n        })\n    },\n\n    async getTokenData(owner, creator, collectionName, tokenName, from = '0x3::token::Collections'){\n        required(owner, 'owner', this.getTokenData.name)\n        required(creator, 'creator', this.getTokenData.name)\n        required(collectionName, 'collectionName', this.getTokenData.name)\n        required(tokenName, 'tokenName', this.getTokenData.name)\n\n        const store = await this.getAccountResource(owner, from)\n\n        if (!store.ok) {\n            return new Result(false, \"Can't obtain token data from TokenStore\", store.error)\n        }\n\n        const token_data_id = {\n            creator: creator,\n            collection: collectionName,\n            name: tokenName,\n        }\n\n        const handle = store.payload.data.token_data.handle\n\n        if (!handle) return new Result(false, `Bad handle ${handle}!`)\n\n        const tokenData = await this.getTableItem(\n            handle,\n            '0x3::token::TokenDataId',\n            '0x3::token::TokenData',\n            token_data_id\n        )\n\n        if (!tokenData.ok) {\n            return new Result(false, tokenData.message)\n        }\n\n        const {default_properties, name, description, largest_property_version, maximum, mutability_config, royalty, supply, uri} = tokenData.payload\n\n        return new Result(true, \"OK\", {\n            name: name,\n            desc: description,\n            supply,\n            maximum,\n            royalty,\n            default_props: default_properties,\n            mutability_config,\n        })\n    },\n\n    async tokenCreateOffer(signer, receiver, creator,  collectionName, tokenName, amount = 1){\n        required(signer, 'signer', this.tokenCreateOffer.name)\n        required(receiver, 'receiver', this.tokenCreateOffer.name)\n        required(creator, 'creator', this.tokenCreateOffer.name)\n        required(collectionName, 'collectionName', this.tokenCreateOffer.name)\n        required(tokenName, 'tokenName', this.tokenCreateOffer.name)\n\n        const payload = {\n            type: \"script_function_payload\",\n            function: \"0x3::token_transfers::offer_script\",\n            type_arguments: [],\n            arguments: [\n                receiver,\n                creator,\n                collectionName,\n                tokenName,\n                \"\"+0,\n                amount.toString(),\n            ],\n        }\n\n        return await this.submitTransaction(signer, payload)\n    },\n\n    async tokenClaimOffer(signer, claimer, creator, collectionName, tokenName){\n        required(signer, 'signer', this.tokenClaimOffer.name)\n        required(claimer, 'claimer', this.tokenClaimOffer.name)\n        required(creator, 'creator', this.tokenClaimOffer.name)\n        required(collectionName, 'collectionName', this.tokenClaimOffer.name)\n        required(tokenName, 'tokenName', this.tokenClaimOffer.name)\n\n        const payload = {\n            type: \"script_function_payload\",\n            function: \"0x3::token_transfers::claim_script\",\n            type_arguments: [],\n            arguments: [\n                claimer,\n                creator,\n                collectionName,\n                tokenName,\n                \"\"+0\n            ],\n        }\n\n        return await this.submitTransaction(signer, payload)\n    },\n\n    async tokenCancelOffer(signer, receiver, creator, collection, name, prop_version = 0){\n        required(signer, 'signer', this.tokenCancelOffer.name)\n        required(receiver, 'receiver', this.tokenCancelOffer.name)\n        required(creator, 'creator', this.tokenCancelOffer.name)\n        required(collection, 'collection', this.tokenCancelOffer.name)\n        required(name, 'name', this.tokenCancelOffer.name)\n\n        const payload = {\n            type: \"script_function_payload\",\n            function: \"0x3::token_transfers::cancel_offer_script\",\n            type_arguments: [],\n            arguments: [\n                receiver,\n                creator,\n                collection,\n                name,\n                prop_version.toString()\n            ],\n        }\n\n        return await this.submitTransaction(signer, payload)\n    },\n\n    async getCollectionsWithTokens(){},\n    async getCollectionWithTokens(){}\n}"],"mappings":"AAAA,SAAQA,MAAM,QAAO,yBAAyB;AAC9C,SAAQC,OAAO,EAAEC,OAAO,QAAO,6BAA6B;AAC5D,SAAQC,QAAQ,QAAO,2BAA2B;AAElD,OAAO,MAAMC,QAAQ,GAAG;EACpB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMC,gBAAgBA,CAACC,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAU;IAAA,IAARC,GAAG,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IACnDR,QAAQ,CAACG,MAAM,EAAE,QAAQ,EAAE,IAAI,CAACD,gBAAgB,CAACE,IAAI,CAAC;IACtDJ,QAAQ,CAACI,IAAI,EAAE,MAAM,EAAE,IAAI,CAACF,gBAAgB,CAACE,IAAI,CAAC;IAClDJ,QAAQ,CAACK,IAAI,EAAE,MAAM,EAAE,IAAI,CAACH,gBAAgB,CAACE,IAAI,CAAC;IAClDJ,QAAQ,CAACM,GAAG,EAAE,KAAK,EAAE,IAAI,CAACJ,gBAAgB,CAACE,IAAI,CAAC;IAEhD,IAAIG,GAAG,IAAI,CAAC,EAAE,OAAO,IAAIV,MAAM,CAAC,KAAK,EAAE,8CAA8C,CAAC;IAEtF,MAAMc,OAAO,GAAG;MACZC,IAAI,EAAE,yBAAyB;MAC/BC,QAAQ,wCAAwC;MAChDC,cAAc,EAAE,EAAE;MAClBN,SAAS,EAAE,CACPJ,IAAI,EACJC,IAAI,EACJC,GAAG,EACH,EAAE,GAACC,GAAG,EACN,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;MAAA;IAE9B,CAAC;IAED,OAAO,MAAM,IAAI,CAACQ,iBAAiB,CAACZ,MAAM,EAAEQ,OAAO,CAAC;EACxD,CAAC;EAED;AACJ;AACA;AACA;AACA;EACI,MAAMK,cAAcA,CAACC,OAAO,EAAC;IACzBjB,QAAQ,CAACiB,OAAO,EAAE,SAAS,EAAE,IAAI,CAACD,cAAc,CAACZ,IAAI,CAAC;IAEtD,MAAMc,QAAQ,GAAG,MAAM,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACC,GAAG,CAACH,OAAO,CAAC,EAAE,yBAAyB,EAAE,0BAA0B,CAAC;IACvH,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;MACd,OAAO,IAAIxB,MAAM,CAAC,KAAK,2BAA2BqB,QAAQ,CAACI,KAAK,CAAC;IACrE;IACA,MAAMC,WAAW,GAAG,EAAE;IAEtB,KAAI,IAAIC,GAAG,IAAIN,QAAQ,CAACP,OAAO,EAAE;MAC7BY,WAAW,CAACE,IAAI,CAAC;QACbC,OAAO,EAAEF,GAAG,CAACE,OAAO;QACpBC,GAAG,EAAEH,GAAG,CAACG,GAAG;QACZf,IAAI,EAAEY,GAAG,CAACZ,IAAI;QACdgB,MAAM,EAAE,CAACJ,GAAG,CAACK,eAAe;QAC5BzB,IAAI,EAAEoB,GAAG,CAACM,IAAI,CAACC,eAAe;QAC9B1B,IAAI,EAAEmB,GAAG,CAACM,IAAI,CAACE,WAAW;QAC1B1B,GAAG,EAAEkB,GAAG,CAACM,IAAI,CAACxB,GAAG;QACjB2B,OAAO,EAAGT,GAAG,CAACM,IAAI,CAACG,OAAO;QAC1B1B,GAAG,EAAE,CAACiB,GAAG,CAACM,IAAI,CAACI,OAAO,IAAI;MAC9B,CAAC,CAAC;IACN;;IAEA;;IAEA,OAAO,IAAIrC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE0B,WAAW,CAAC;EAC9C,CAAC;EAED,MAAMY,aAAaA,CAAClB,OAAO,EAAEb,IAAI,EAAC;IAC9BJ,QAAQ,CAACiB,OAAO,EAAE,SAAS,EAAE,IAAI,CAACD,cAAc,CAACZ,IAAI,CAAC;IACtDJ,QAAQ,CAACI,IAAI,EAAE,MAAM,EAAE,IAAI,CAACY,cAAc,CAACZ,IAAI,CAAC;IAEhD,MAAMc,QAAQ,GAAG,MAAM,IAAI,CAACF,cAAc,CAACC,OAAO,CAAC;IAEnD,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;MACd,OAAO,IAAIxB,MAAM,CAAC,KAAK,2BAA2BqB,QAAQ,CAACI,KAAK,CAAC;IACrE;IAEA,KAAI,IAAIE,GAAG,IAAIN,QAAQ,CAACP,OAAO,EAAE;MAC7B,IAAIP,IAAI,KAAKoB,GAAG,CAACpB,IAAI,EAAE;QACnB,MAAM;UAACsB,OAAO;UAAEC,GAAG;UAAEf,IAAI;UAAEgB,MAAM;UAAExB,IAAI;UAAEC,IAAI;UAAEC,GAAG;UAAE2B,OAAO;UAAE1B;QAAG,CAAC,GAAGiB,GAAG;QACvE,OAAO,IAAI3B,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE;UAC1B6B,OAAO;UACPC,GAAG;UACHf,IAAI;UACJgB,MAAM;UACNxB,IAAI;UACJC,IAAI;UACJC,GAAG;UACH2B,OAAO;UACP1B;QACJ,CAAC,CAAC;MACN;IACJ;IAEA,OAAO,IAAIV,MAAM,CAAC,KAAK,gBAAAuC,MAAA,CAAgBhC,IAAI,kBAAe,CAAC,CAAC,CAAC;EACjE,CAAC;EAGD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMiC,WAAWA,CACblC,MAAM,EACNmC,UAAU,EACVlC,IAAI,EAMP;IAAA,IALGC,IAAI,GAAAG,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAAA,IACT+B,OAAO,GAAA/B,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IAAA,IACXF,GAAG,GAAAE,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAAA,IACRD,GAAG,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IAAA,IACPgC,QAAQ,GAAAhC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAEbR,QAAQ,CAACG,MAAM,EAAE,QAAQ,EAAE,IAAI,CAACkC,WAAW,CAACjC,IAAI,CAAC;IACjDJ,QAAQ,CAACsC,UAAU,EAAE,YAAY,EAAE,IAAI,CAACD,WAAW,CAACjC,IAAI,CAAC;IACzDJ,QAAQ,CAACI,IAAI,EAAE,MAAM,EAAE,IAAI,CAACiC,WAAW,CAACjC,IAAI,CAAC;IAE7C,MAAM;MAAC4B,WAAW,EAAES,OAAO,GAAG,KAAK;MAAEP,OAAO,EAAEQ,MAAM,GAAG,KAAK;MAAEC,UAAU,EAAEC,QAAQ,GAAG,KAAK;MAAEC,OAAO,EAAEC,UAAU,GAAG,KAAK;MAAExC,GAAG,EAAEyC,MAAM,GAAG;IAAK,CAAC,GAAGP,QAAQ;IACxJ,MAAM7B,OAAO,GAAG;MACZC,IAAI,EAAE,yBAAyB;MAC/BC,QAAQ,mCAAmC;MAC3CC,cAAc,EAAE,EAAE;MAClBN,SAAS,EAAE,CACP8B,UAAU;MAAE;MACZlC,IAAI;MAAE;MACNC,IAAI;MAAE;MACNkC,OAAO,CAACS,QAAQ,CAAC,CAAC;MAAE;MACpBzC,GAAG,CAACyC,QAAQ,CAAC,CAAC;MAAE;MAChB1C,GAAG;MAAE;MACL,IAAI,CAACc,GAAG,CAACjB,MAAM,CAACc,OAAO,CAAC,CAAC,CAAC;MAAE;MAC5B,GAAG;MAAE;MACL,GAAG;MAAE;MACL,CAACwB,OAAO,EAAEC,MAAM,EAAEE,QAAQ,EAAEE,UAAU,EAAEC,MAAM,CAAC;MAAE;MACjD,CAAC,EAAE,CAAC;MAAE;MACN,CAAC,EAAE,CAAC;MAAE;MACN,CAAC,EAAE,CAAC,CAAE;MAAA;IAEd,CAAC;IAED,OAAO,MAAM,IAAI,CAAChC,iBAAiB,CAACZ,MAAM,EAAEQ,OAAO,CAAC;EACxD,CAAC;EAED,MAAMsC,eAAeA,CAACC,KAAK,EAAEjB,OAAO,EAAEkB,cAAc,EAAEC,SAAS,EAAkC;IAAA,IAAhCC,IAAI,GAAA7C,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,wBAAwB;IAC5FR,QAAQ,CAACkD,KAAK,EAAE,OAAO,EAAE,IAAI,CAACD,eAAe,CAAC7C,IAAI,CAAC;IACnDJ,QAAQ,CAACiC,OAAO,EAAE,SAAS,EAAE,IAAI,CAACgB,eAAe,CAAC7C,IAAI,CAAC;IACvDJ,QAAQ,CAACmD,cAAc,EAAE,gBAAgB,EAAE,IAAI,CAACF,eAAe,CAAC7C,IAAI,CAAC;IACrEJ,QAAQ,CAACoD,SAAS,EAAE,WAAW,EAAE,IAAI,CAACH,eAAe,CAAC7C,IAAI,CAAC;IAE3D,MAAMkD,KAAK,GAAG,MAAM,IAAI,CAACC,kBAAkB,CAACL,KAAK,EAAEG,IAAI,CAAC;IAExD,IAAI,CAACC,KAAK,CAACjC,EAAE,EAAE;MACX,OAAO,IAAIxB,MAAM,CAAC,KAAK,EAAE,yCAAyC,EAAEyD,KAAK,CAAChC,KAAK,CAAC;IACpF;IAEA,MAAMkC,aAAa,GAAG;MAClBvB,OAAO,EAAEA,OAAO;MAChBK,UAAU,EAAEa,cAAc;MAC1B/C,IAAI,EAAEgD;IACV,CAAC;IAED,MAAMK,QAAQ,GAAG;MACbD,aAAa;MACbE,gBAAgB,EAAE;IACtB,CAAC;IAED,MAAMC,MAAM,GAAGL,KAAK,CAAC3C,OAAO,CAACmB,IAAI,CAAC8B,MAAM,CAACD,MAAM;IAE/C,MAAME,YAAY,GAAG,MAAM,IAAI,CAACC,YAAY,CACxCH,MAAM,EACN,qBAAqB,EACrB,mBAAmB,EACnBF,QACJ,CAAC;IAED,IAAI,CAACI,YAAY,CAACxC,EAAE,EAAE;MAClB,OAAO,IAAIxB,MAAM,CAAC,KAAK,EAAEgE,YAAY,CAACE,OAAO,CAAC;IAClD;IAEA,MAAM;MAACC,EAAE;MAAEC,MAAM;MAAEC;IAAgB,CAAC,GAAGL,YAAY,CAAClD,OAAO;IAE3D,OAAO,IAAId,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE;MAC1BoC,OAAO,EAAE+B,EAAE,CAACR,aAAa,CAACvB,OAAO;MACjCK,UAAU,EAAE0B,EAAE,CAACR,aAAa,CAAClB,UAAU;MACvClC,IAAI,EAAE4D,EAAE,CAACR,aAAa,CAACpD,IAAI;MAC3B6D,MAAM;MACNE,KAAK,EAAED;IACX,CAAC,CAAC;EACN,CAAC;EAED,MAAME,YAAYA,CAAClB,KAAK,EAAEjB,OAAO,EAAEkB,cAAc,EAAEC,SAAS,EAAmC;IAAA,IAAjCC,IAAI,GAAA7C,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,yBAAyB;IAC1FR,QAAQ,CAACkD,KAAK,EAAE,OAAO,EAAE,IAAI,CAACkB,YAAY,CAAChE,IAAI,CAAC;IAChDJ,QAAQ,CAACiC,OAAO,EAAE,SAAS,EAAE,IAAI,CAACmC,YAAY,CAAChE,IAAI,CAAC;IACpDJ,QAAQ,CAACmD,cAAc,EAAE,gBAAgB,EAAE,IAAI,CAACiB,YAAY,CAAChE,IAAI,CAAC;IAClEJ,QAAQ,CAACoD,SAAS,EAAE,WAAW,EAAE,IAAI,CAACgB,YAAY,CAAChE,IAAI,CAAC;IAExD,MAAMkD,KAAK,GAAG,MAAM,IAAI,CAACC,kBAAkB,CAACL,KAAK,EAAEG,IAAI,CAAC;IAExD,IAAI,CAACC,KAAK,CAACjC,EAAE,EAAE;MACX,OAAO,IAAIxB,MAAM,CAAC,KAAK,EAAE,yCAAyC,EAAEyD,KAAK,CAAChC,KAAK,CAAC;IACpF;IAEA,MAAMkC,aAAa,GAAG;MAClBvB,OAAO,EAAEA,OAAO;MAChBK,UAAU,EAAEa,cAAc;MAC1B/C,IAAI,EAAEgD;IACV,CAAC;IAED,MAAMO,MAAM,GAAGL,KAAK,CAAC3C,OAAO,CAACmB,IAAI,CAACuC,UAAU,CAACV,MAAM;IAEnD,IAAI,CAACA,MAAM,EAAE,OAAO,IAAI9D,MAAM,CAAC,KAAK,gBAAAuC,MAAA,CAAgBuB,MAAM,MAAG,CAAC;IAE9D,MAAMW,SAAS,GAAG,MAAM,IAAI,CAACR,YAAY,CACrCH,MAAM,EACN,yBAAyB,EACzB,uBAAuB,EACvBH,aACJ,CAAC;IAED,IAAI,CAACc,SAAS,CAACjD,EAAE,EAAE;MACf,OAAO,IAAIxB,MAAM,CAAC,KAAK,EAAEyE,SAAS,CAACP,OAAO,CAAC;IAC/C;IAEA,MAAM;MAACQ,kBAAkB;MAAEnE,IAAI;MAAE4B,WAAW;MAAEwC,wBAAwB;MAAEtC,OAAO;MAAEuC,iBAAiB;MAAE5B,OAAO;MAAE6B,MAAM;MAAEpE;IAAG,CAAC,GAAGgE,SAAS,CAAC3D,OAAO;IAE7I,OAAO,IAAId,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE;MAC1BO,IAAI,EAAEA,IAAI;MACVC,IAAI,EAAE2B,WAAW;MACjB0C,MAAM;MACNxC,OAAO;MACPW,OAAO;MACP8B,aAAa,EAAEJ,kBAAkB;MACjCE;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAMG,gBAAgBA,CAACzE,MAAM,EAAE0E,QAAQ,EAAE5C,OAAO,EAAGkB,cAAc,EAAEC,SAAS,EAAa;IAAA,IAAXa,MAAM,GAAAzD,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IACpFR,QAAQ,CAACG,MAAM,EAAE,QAAQ,EAAE,IAAI,CAACyE,gBAAgB,CAACxE,IAAI,CAAC;IACtDJ,QAAQ,CAAC6E,QAAQ,EAAE,UAAU,EAAE,IAAI,CAACD,gBAAgB,CAACxE,IAAI,CAAC;IAC1DJ,QAAQ,CAACiC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC2C,gBAAgB,CAACxE,IAAI,CAAC;IACxDJ,QAAQ,CAACmD,cAAc,EAAE,gBAAgB,EAAE,IAAI,CAACyB,gBAAgB,CAACxE,IAAI,CAAC;IACtEJ,QAAQ,CAACoD,SAAS,EAAE,WAAW,EAAE,IAAI,CAACwB,gBAAgB,CAACxE,IAAI,CAAC;IAE5D,MAAMO,OAAO,GAAG;MACZC,IAAI,EAAE,yBAAyB;MAC/BC,QAAQ,EAAE,oCAAoC;MAC9CC,cAAc,EAAE,EAAE;MAClBN,SAAS,EAAE,CACPqE,QAAQ,EACR5C,OAAO,EACPkB,cAAc,EACdC,SAAS,EACT,EAAE,GAAC,CAAC,EACJa,MAAM,CAACjB,QAAQ,CAAC,CAAC;IAEzB,CAAC;IAED,OAAO,MAAM,IAAI,CAACjC,iBAAiB,CAACZ,MAAM,EAAEQ,OAAO,CAAC;EACxD,CAAC;EAED,MAAMmE,eAAeA,CAAC3E,MAAM,EAAE4E,OAAO,EAAE9C,OAAO,EAAEkB,cAAc,EAAEC,SAAS,EAAC;IACtEpD,QAAQ,CAACG,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC2E,eAAe,CAAC1E,IAAI,CAAC;IACrDJ,QAAQ,CAAC+E,OAAO,EAAE,SAAS,EAAE,IAAI,CAACD,eAAe,CAAC1E,IAAI,CAAC;IACvDJ,QAAQ,CAACiC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC6C,eAAe,CAAC1E,IAAI,CAAC;IACvDJ,QAAQ,CAACmD,cAAc,EAAE,gBAAgB,EAAE,IAAI,CAAC2B,eAAe,CAAC1E,IAAI,CAAC;IACrEJ,QAAQ,CAACoD,SAAS,EAAE,WAAW,EAAE,IAAI,CAAC0B,eAAe,CAAC1E,IAAI,CAAC;IAE3D,MAAMO,OAAO,GAAG;MACZC,IAAI,EAAE,yBAAyB;MAC/BC,QAAQ,EAAE,oCAAoC;MAC9CC,cAAc,EAAE,EAAE;MAClBN,SAAS,EAAE,CACPuE,OAAO,EACP9C,OAAO,EACPkB,cAAc,EACdC,SAAS,EACT,EAAE,GAAC,CAAC;IAEZ,CAAC;IAED,OAAO,MAAM,IAAI,CAACrC,iBAAiB,CAACZ,MAAM,EAAEQ,OAAO,CAAC;EACxD,CAAC;EAED,MAAMqE,gBAAgBA,CAAC7E,MAAM,EAAE0E,QAAQ,EAAE5C,OAAO,EAAEK,UAAU,EAAElC,IAAI,EAAmB;IAAA,IAAjB6E,YAAY,GAAAzE,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IAChFR,QAAQ,CAACG,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC6E,gBAAgB,CAAC5E,IAAI,CAAC;IACtDJ,QAAQ,CAAC6E,QAAQ,EAAE,UAAU,EAAE,IAAI,CAACG,gBAAgB,CAAC5E,IAAI,CAAC;IAC1DJ,QAAQ,CAACiC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC+C,gBAAgB,CAAC5E,IAAI,CAAC;IACxDJ,QAAQ,CAACsC,UAAU,EAAE,YAAY,EAAE,IAAI,CAAC0C,gBAAgB,CAAC5E,IAAI,CAAC;IAC9DJ,QAAQ,CAACI,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC4E,gBAAgB,CAAC5E,IAAI,CAAC;IAElD,MAAMO,OAAO,GAAG;MACZC,IAAI,EAAE,yBAAyB;MAC/BC,QAAQ,EAAE,2CAA2C;MACrDC,cAAc,EAAE,EAAE;MAClBN,SAAS,EAAE,CACPqE,QAAQ,EACR5C,OAAO,EACPK,UAAU,EACVlC,IAAI,EACJ6E,YAAY,CAACjC,QAAQ,CAAC,CAAC;IAE/B,CAAC;IAED,OAAO,MAAM,IAAI,CAACjC,iBAAiB,CAACZ,MAAM,EAAEQ,OAAO,CAAC;EACxD,CAAC;EAED,MAAMuE,wBAAwBA,CAAA,EAAE,CAAC,CAAC;EAClC,MAAMC,uBAAuBA,CAAA,EAAE,CAAC;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}