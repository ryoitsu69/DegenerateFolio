{"ast":null,"code":"import { glFormatToGPUFormat } from './glFormatToGPUFormat.mjs';\nimport { vkFormatToGPUFormat } from './vkFormatToGPUFormat.mjs';\n\"use strict\";\nfunction getTextureFormatFromKTXTexture(ktxTexture) {\n  if (ktxTexture.classId === 2) {\n    return vkFormatToGPUFormat(ktxTexture.vkFormat);\n  }\n  return glFormatToGPUFormat(ktxTexture.glInternalformat);\n}\nexport { getTextureFormatFromKTXTexture };","map":{"version":3,"names":["getTextureFormatFromKTXTexture","ktxTexture","classId","vkFormatToGPUFormat","vkFormat","glFormatToGPUFormat","glInternalformat"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/compressed-textures/ktx2/utils/getTextureFormatFromKTXTexture.ts"],"sourcesContent":["import { glFormatToGPUFormat } from './glFormatToGPUFormat';\nimport { vkFormatToGPUFormat } from './vkFormatToGPUFormat';\n\nimport type { COMPRESSED_TEXTURE_FORMATS, KTXTexture } from '../types';\n\nexport function getTextureFormatFromKTXTexture(ktxTexture: KTXTexture): COMPRESSED_TEXTURE_FORMATS\n{\n    if (ktxTexture.classId === 2)\n    {\n        return vkFormatToGPUFormat(ktxTexture.vkFormat);\n    }\n\n    return glFormatToGPUFormat(ktxTexture.glInternalformat);\n}\n"],"mappings":";;;AAKO,SAASA,+BAA+BC,UAC/C;EACQ,IAAAA,UAAA,CAAWC,OAAA,KAAY,CAC3B;IACW,OAAAC,mBAAA,CAAoBF,UAAA,CAAWG,QAAQ;EAAA;EAG3C,OAAAC,mBAAA,CAAoBJ,UAAA,CAAWK,gBAAgB;AAC1D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}