{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeArray = exports.encodeArray = void 0;\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nconst web3_errors_1 = require(\"web3-errors\");\nconst web3_utils_1 = require(\"web3-utils\");\n// eslint-disable-next-line import/no-cycle\nconst index_js_1 = require(\"./index.js\");\nconst utils_js_1 = require(\"../utils.js\");\nconst number_js_1 = require(\"./number.js\");\nconst utils_js_2 = require(\"./utils.js\");\nfunction encodeArray(param, values) {\n  if (!Array.isArray(values)) {\n    throw new web3_errors_1.AbiError('Expected value to be array', {\n      abi: param,\n      values\n    });\n  }\n  const {\n    size,\n    param: arrayItemParam\n  } = (0, utils_js_1.extractArrayType)(param);\n  const encodedParams = values.map(v => (0, index_js_1.encodeParamFromAbiParameter)(arrayItemParam, v));\n  const dynamic = size === -1;\n  const dynamicItems = encodedParams.length > 0 && encodedParams[0].dynamic;\n  if (!dynamic && values.length !== size) {\n    throw new web3_errors_1.AbiError(\"Given arguments count doesn't match array length\", {\n      arrayLength: size,\n      argumentsLength: values.length\n    });\n  }\n  if (dynamic || dynamicItems) {\n    const encodingResult = (0, utils_js_2.encodeDynamicParams)(encodedParams);\n    if (dynamic) {\n      const encodedLength = (0, index_js_1.encodeNumber)({\n        type: 'uint256',\n        name: ''\n      }, encodedParams.length).encoded;\n      return {\n        dynamic: true,\n        encoded: encodedParams.length > 0 ? (0, web3_utils_1.uint8ArrayConcat)(encodedLength, encodingResult) : encodedLength\n      };\n    }\n    return {\n      dynamic: true,\n      encoded: encodingResult\n    };\n  }\n  return {\n    dynamic: false,\n    encoded: (0, web3_utils_1.uint8ArrayConcat)(...encodedParams.map(p => p.encoded))\n  };\n}\nexports.encodeArray = encodeArray;\nfunction decodeArray(param, bytes) {\n  // eslint-disable-next-line prefer-const\n  let {\n    size,\n    param: arrayItemParam\n  } = (0, utils_js_1.extractArrayType)(param);\n  const dynamic = size === -1;\n  let consumed = 0;\n  const result = [];\n  let remaining = bytes;\n  // dynamic array, we need to decode length\n  if (dynamic) {\n    const lengthResult = (0, number_js_1.decodeNumber)({\n      type: 'uint32',\n      name: ''\n    }, bytes);\n    size = Number(lengthResult.result);\n    consumed = lengthResult.consumed;\n    remaining = lengthResult.encoded;\n  }\n  const hasDynamicChild = (0, utils_js_1.isDynamic)(arrayItemParam);\n  if (hasDynamicChild) {\n    // known length but dynamic child, each child is actually head element with encoded offset\n    for (let i = 0; i < size; i += 1) {\n      const offsetResult = (0, number_js_1.decodeNumber)({\n        type: 'uint32',\n        name: ''\n      }, remaining.subarray(i * utils_js_1.WORD_SIZE));\n      consumed += offsetResult.consumed;\n      const decodedChildResult = (0, index_js_1.decodeParamFromAbiParameter)(arrayItemParam, remaining.subarray(Number(offsetResult.result)));\n      consumed += decodedChildResult.consumed;\n      result.push(decodedChildResult.result);\n    }\n    return {\n      result,\n      encoded: remaining.subarray(consumed),\n      consumed\n    };\n  }\n  for (let i = 0; i < size; i += 1) {\n    // decode static params\n    const decodedChildResult = (0, index_js_1.decodeParamFromAbiParameter)(arrayItemParam, bytes.subarray(consumed));\n    consumed += decodedChildResult.consumed;\n    result.push(decodedChildResult.result);\n  }\n  return {\n    result,\n    encoded: bytes.subarray(consumed),\n    consumed\n  };\n}\nexports.decodeArray = decodeArray;","map":{"version":3,"names":["web3_errors_1","require","web3_utils_1","index_js_1","utils_js_1","number_js_1","utils_js_2","encodeArray","param","values","Array","isArray","AbiError","abi","size","arrayItemParam","extractArrayType","encodedParams","map","v","encodeParamFromAbiParameter","dynamic","dynamicItems","length","arrayLength","argumentsLength","encodingResult","encodeDynamicParams","encodedLength","encodeNumber","type","name","encoded","uint8ArrayConcat","p","exports","decodeArray","bytes","consumed","result","remaining","lengthResult","decodeNumber","Number","hasDynamicChild","isDynamic","i","offsetResult","subarray","WORD_SIZE","decodedChildResult","decodeParamFromAbiParameter","push"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/web3-eth-abi/src/coders/base/array.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiParameter } from 'web3-types';\nimport { uint8ArrayConcat } from 'web3-utils';\n// eslint-disable-next-line import/no-cycle\nimport { decodeParamFromAbiParameter, encodeNumber, encodeParamFromAbiParameter } from './index.js';\nimport { DecoderResult, EncoderResult } from '../types.js';\nimport { extractArrayType, isDynamic, WORD_SIZE } from '../utils.js';\nimport { decodeNumber } from './number.js';\nimport { encodeDynamicParams } from './utils.js';\n\nexport function encodeArray(param: AbiParameter, values: unknown): EncoderResult {\n\tif (!Array.isArray(values)) {\n\t\tthrow new AbiError('Expected value to be array', { abi: param, values });\n\t}\n\tconst { size, param: arrayItemParam } = extractArrayType(param);\n\tconst encodedParams = values.map(v => encodeParamFromAbiParameter(arrayItemParam, v));\n\tconst dynamic = size === -1;\n\tconst dynamicItems = encodedParams.length > 0 && encodedParams[0].dynamic;\n\tif (!dynamic && values.length !== size) {\n\t\tthrow new AbiError(\"Given arguments count doesn't match array length\", {\n\t\t\tarrayLength: size,\n\t\t\targumentsLength: values.length,\n\t\t});\n\t}\n\tif (dynamic || dynamicItems) {\n\t\tconst encodingResult = encodeDynamicParams(encodedParams);\n\t\tif (dynamic) {\n\t\t\tconst encodedLength = encodeNumber(\n\t\t\t\t{ type: 'uint256', name: '' },\n\t\t\t\tencodedParams.length,\n\t\t\t).encoded;\n\t\t\treturn {\n\t\t\t\tdynamic: true,\n\t\t\t\tencoded:\n\t\t\t\t\tencodedParams.length > 0\n\t\t\t\t\t\t? uint8ArrayConcat(encodedLength, encodingResult)\n\t\t\t\t\t\t: encodedLength,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tdynamic: true,\n\t\t\tencoded: encodingResult,\n\t\t};\n\t}\n\n\treturn {\n\t\tdynamic: false,\n\t\tencoded: uint8ArrayConcat(...encodedParams.map(p => p.encoded)),\n\t};\n}\n\nexport function decodeArray(param: AbiParameter, bytes: Uint8Array): DecoderResult<unknown[]> {\n\t// eslint-disable-next-line prefer-const\n\tlet { size, param: arrayItemParam } = extractArrayType(param);\n\tconst dynamic = size === -1;\n\n\tlet consumed = 0;\n\tconst result: unknown[] = [];\n\tlet remaining = bytes;\n\t// dynamic array, we need to decode length\n\tif (dynamic) {\n\t\tconst lengthResult = decodeNumber({ type: 'uint32', name: '' }, bytes);\n\t\tsize = Number(lengthResult.result);\n\t\tconsumed = lengthResult.consumed;\n\t\tremaining = lengthResult.encoded;\n\t}\n\tconst hasDynamicChild = isDynamic(arrayItemParam);\n\tif (hasDynamicChild) {\n\t\t// known length but dynamic child, each child is actually head element with encoded offset\n\t\tfor (let i = 0; i < size; i += 1) {\n\t\t\tconst offsetResult = decodeNumber(\n\t\t\t\t{ type: 'uint32', name: '' },\n\t\t\t\tremaining.subarray(i * WORD_SIZE),\n\t\t\t);\n\t\t\tconsumed += offsetResult.consumed;\n\t\t\tconst decodedChildResult = decodeParamFromAbiParameter(\n\t\t\t\tarrayItemParam,\n\t\t\t\tremaining.subarray(Number(offsetResult.result)),\n\t\t\t);\n\t\t\tconsumed += decodedChildResult.consumed;\n\t\t\tresult.push(decodedChildResult.result);\n\t\t}\n\t\treturn {\n\t\t\tresult,\n\t\t\tencoded: remaining.subarray(consumed),\n\t\t\tconsumed,\n\t\t};\n\t}\n\n\tfor (let i = 0; i < size; i += 1) {\n\t\t// decode static params\n\t\tconst decodedChildResult = decodeParamFromAbiParameter(\n\t\t\tarrayItemParam,\n\t\t\tbytes.subarray(consumed),\n\t\t);\n\t\tconsumed += decodedChildResult.consumed;\n\t\tresult.push(decodedChildResult.result);\n\t}\n\treturn {\n\t\tresult,\n\t\tencoded: bytes.subarray(consumed),\n\t\tconsumed,\n\t};\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}