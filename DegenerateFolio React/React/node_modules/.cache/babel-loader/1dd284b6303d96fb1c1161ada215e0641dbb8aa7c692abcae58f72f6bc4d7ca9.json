{"ast":null,"code":"import { DOMAdapter } from '../../../environment/adapter.mjs';\nimport { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { checkDataUrl } from '../../utils/checkDataUrl.mjs';\nimport { checkExtension } from '../../utils/checkExtension.mjs';\nimport { LoaderParserPriority } from './LoaderParser.mjs';\n\"use strict\";\nconst validTXTExtension = \".txt\";\nconst validTXTMIME = \"text/plain\";\nconst loadTxt = {\n  name: \"loadTxt\",\n  extension: {\n    type: ExtensionType.LoadParser,\n    priority: LoaderParserPriority.Low\n  },\n  test(url) {\n    return checkDataUrl(url, validTXTMIME) || checkExtension(url, validTXTExtension);\n  },\n  async load(url) {\n    const response = await DOMAdapter.get().fetch(url);\n    const txt = await response.text();\n    return txt;\n  }\n};\nexport { loadTxt };","map":{"version":3,"names":["validTXTExtension","validTXTMIME","loadTxt","name","extension","type","ExtensionType","LoadParser","priority","LoaderParserPriority","Low","test","url","checkDataUrl","checkExtension","load","response","DOMAdapter","get","fetch","txt","text"],"sources":["/home/ryoitsu/node_modules/pixi.js/src/assets/loader/parsers/loadTxt.ts"],"sourcesContent":["import { DOMAdapter } from '../../../environment/adapter';\nimport { ExtensionType } from '../../../extensions/Extensions';\nimport { checkDataUrl } from '../../utils/checkDataUrl';\nimport { checkExtension } from '../../utils/checkExtension';\nimport { LoaderParserPriority } from './LoaderParser';\n\nimport type { LoaderParser } from './LoaderParser';\n\nconst validTXTExtension = '.txt';\nconst validTXTMIME = 'text/plain';\n\n/**\n * A simple loader plugin for loading text data\n * @memberof assets\n */\nexport const loadTxt = {\n\n    name: 'loadTxt',\n\n    extension: {\n        type: ExtensionType.LoadParser,\n        priority: LoaderParserPriority.Low,\n    },\n\n    test(url: string): boolean\n    {\n        return checkDataUrl(url, validTXTMIME) || checkExtension(url, validTXTExtension);\n    },\n\n    async load(url: string): Promise<string>\n    {\n        const response = await DOMAdapter.get().fetch(url);\n\n        const txt = await response.text();\n\n        return txt;\n    },\n} as LoaderParser;\n"],"mappings":";;;;;;AAQA,MAAMA,iBAAoB;AAC1B,MAAMC,YAAe;AAMd,MAAMC,OAAU;EAEnBC,IAAM;EAENC,SAAW;IACPC,IAAA,EAAMC,aAAc,CAAAC,UAAA;IACpBC,QAAA,EAAUC,oBAAqB,CAAAC;EAAA,CACnC;EAEAC,KAAKC,GACL;IACI,OAAOC,YAAA,CAAaD,GAAK,EAAAX,YAAY,CAAK,IAAAa,cAAA,CAAeF,GAAA,EAAKZ,iBAAiB;EAAA,CACnF;EAEA,MAAMe,KAAKH,GACX;IACI,MAAMI,QAAA,GAAW,MAAMC,UAAA,CAAWC,GAAI,GAAEC,KAAA,CAAMP,GAAG;IAE3C,MAAAQ,GAAA,GAAM,MAAMJ,QAAA,CAASK,IAAK;IAEzB,OAAAD,GAAA;EAAA;AAEf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}