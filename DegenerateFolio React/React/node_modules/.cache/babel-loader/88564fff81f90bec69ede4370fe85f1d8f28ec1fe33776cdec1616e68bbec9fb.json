{"ast":null,"code":"import { objectSpread } from '@polkadot/util';\nfunction trimDocs(docs) {\n  const strings = docs.map(d => d.toString().trim());\n  const firstEmpty = strings.findIndex(d => !d.length);\n  return firstEmpty === -1 ? strings : strings.slice(0, firstEmpty);\n}\n/** @internal */\nexport function toCallsOnly(registry, {\n  extrinsic,\n  lookup,\n  pallets\n}) {\n  return registry.createTypeUnsafe('MetadataLatest', [{\n    extrinsic,\n    lookup: {\n      types: lookup.types.map(({\n        id,\n        type\n      }) => registry.createTypeUnsafe('PortableType', [{\n        id,\n        type: objectSpread({}, type, {\n          docs: trimDocs(type.docs)\n        })\n      }]))\n    },\n    pallets: pallets.map(({\n      calls,\n      index,\n      name\n    }) => ({\n      calls: registry.createTypeUnsafe('Option<PalletCallMetadataLatest>', [calls.unwrapOr(null)]),\n      index,\n      name\n    }))\n  }]).toJSON();\n}","map":{"version":3,"names":["objectSpread","trimDocs","docs","strings","map","d","toString","trim","firstEmpty","findIndex","length","slice","toCallsOnly","registry","extrinsic","lookup","pallets","createTypeUnsafe","types","id","type","calls","index","name","unwrapOr","toJSON"],"sources":["/home/ryoitsu/Documents/test/react-todo-app/node_modules/@polkadot/types/metadata/util/toCallsOnly.js"],"sourcesContent":["import { objectSpread } from '@polkadot/util';\nfunction trimDocs(docs) {\n    const strings = docs.map((d) => d.toString().trim());\n    const firstEmpty = strings.findIndex((d) => !d.length);\n    return firstEmpty === -1\n        ? strings\n        : strings.slice(0, firstEmpty);\n}\n/** @internal */\nexport function toCallsOnly(registry, { extrinsic, lookup, pallets }) {\n    return registry.createTypeUnsafe('MetadataLatest', [{\n            extrinsic,\n            lookup: {\n                types: lookup.types.map(({ id, type }) => registry.createTypeUnsafe('PortableType', [{\n                        id,\n                        type: objectSpread({}, type, { docs: trimDocs(type.docs) })\n                    }]))\n            },\n            pallets: pallets.map(({ calls, index, name }) => ({\n                calls: registry.createTypeUnsafe('Option<PalletCallMetadataLatest>', [calls.unwrapOr(null)]),\n                index,\n                name\n            }))\n        }]).toJSON();\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,QAAQA,CAACC,IAAI,EAAE;EACpB,MAAMC,OAAO,GAAGD,IAAI,CAACE,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACpD,MAAMC,UAAU,GAAGL,OAAO,CAACM,SAAS,CAAEJ,CAAC,IAAK,CAACA,CAAC,CAACK,MAAM,CAAC;EACtD,OAAOF,UAAU,KAAK,CAAC,CAAC,GAClBL,OAAO,GACPA,OAAO,CAACQ,KAAK,CAAC,CAAC,EAAEH,UAAU,CAAC;AACtC;AACA;AACA,OAAO,SAASI,WAAWA,CAACC,QAAQ,EAAE;EAAEC,SAAS;EAAEC,MAAM;EAAEC;AAAQ,CAAC,EAAE;EAClE,OAAOH,QAAQ,CAACI,gBAAgB,CAAC,gBAAgB,EAAE,CAAC;IAC5CH,SAAS;IACTC,MAAM,EAAE;MACJG,KAAK,EAAEH,MAAM,CAACG,KAAK,CAACd,GAAG,CAAC,CAAC;QAAEe,EAAE;QAAEC;MAAK,CAAC,KAAKP,QAAQ,CAACI,gBAAgB,CAAC,cAAc,EAAE,CAAC;QAC7EE,EAAE;QACFC,IAAI,EAAEpB,YAAY,CAAC,CAAC,CAAC,EAAEoB,IAAI,EAAE;UAAElB,IAAI,EAAED,QAAQ,CAACmB,IAAI,CAAClB,IAAI;QAAE,CAAC;MAC9D,CAAC,CAAC,CAAC;IACX,CAAC;IACDc,OAAO,EAAEA,OAAO,CAACZ,GAAG,CAAC,CAAC;MAAEiB,KAAK;MAAEC,KAAK;MAAEC;IAAK,CAAC,MAAM;MAC9CF,KAAK,EAAER,QAAQ,CAACI,gBAAgB,CAAC,kCAAkC,EAAE,CAACI,KAAK,CAACG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MAC5FF,KAAK;MACLC;IACJ,CAAC,CAAC;EACN,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}