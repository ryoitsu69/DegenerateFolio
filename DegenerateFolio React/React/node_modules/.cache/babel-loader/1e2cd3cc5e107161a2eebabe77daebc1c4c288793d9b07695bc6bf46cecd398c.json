{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupBankExtension = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst utils_1 = require(\"@cosmjs/utils\");\nconst query_1 = require(\"cosmjs-types/cosmos/bank/v1beta1/query\");\nconst queryclient_1 = require(\"../../queryclient\");\nfunction setupBankExtension(base) {\n  const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n  // Use this service to get easy typed access to query methods\n  // This cannot be used for proof verification\n  const queryService = new query_1.QueryClientImpl(rpc);\n  return {\n    bank: {\n      balance: async (address, denom) => {\n        const {\n          balance\n        } = await queryService.Balance({\n          address: address,\n          denom: denom\n        });\n        (0, utils_1.assert)(balance);\n        return balance;\n      },\n      allBalances: async address => {\n        const {\n          balances\n        } = await queryService.AllBalances(query_1.QueryAllBalancesRequest.fromPartial({\n          address: address\n        }));\n        return balances;\n      },\n      totalSupply: async paginationKey => {\n        const response = await queryService.TotalSupply({\n          pagination: (0, queryclient_1.createPagination)(paginationKey)\n        });\n        return response;\n      },\n      supplyOf: async denom => {\n        const {\n          amount\n        } = await queryService.SupplyOf({\n          denom: denom\n        });\n        (0, utils_1.assert)(amount);\n        return amount;\n      },\n      denomMetadata: async denom => {\n        const {\n          metadata\n        } = await queryService.DenomMetadata({\n          denom\n        });\n        (0, utils_1.assert)(metadata);\n        return metadata;\n      },\n      denomsMetadata: async () => {\n        const {\n          metadatas\n        } = await queryService.DenomsMetadata(query_1.QueryDenomsMetadataRequest.fromPartial({\n          pagination: undefined // Not implemented\n        }));\n        return metadatas;\n      }\n    }\n  };\n}\nexports.setupBankExtension = setupBankExtension;","map":{"version":3,"names":["utils_1","require","query_1","queryclient_1","setupBankExtension","base","rpc","createProtobufRpcClient","queryService","QueryClientImpl","bank","balance","address","denom","Balance","assert","allBalances","balances","AllBalances","QueryAllBalancesRequest","fromPartial","totalSupply","paginationKey","response","TotalSupply","pagination","createPagination","supplyOf","amount","SupplyOf","denomMetadata","metadata","DenomMetadata","denomsMetadata","metadatas","DenomsMetadata","QueryDenomsMetadataRequest","undefined","exports"],"sources":["../../../src/modules/bank/queries.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA;AACA,MAAAA,OAAA,GAAAC,OAAA;AAEA,MAAAC,OAAA,GAAAD,OAAA;AAQA,MAAAE,aAAA,GAAAF,OAAA;AAaA,SAAgBG,kBAAkBA,CAACC,IAAiB;EAClD,MAAMC,GAAG,GAAG,IAAAH,aAAA,CAAAI,uBAAuB,EAACF,IAAI,CAAC;EACzC;EACA;EACA,MAAMG,YAAY,GAAG,IAAIN,OAAA,CAAAO,eAAe,CAACH,GAAG,CAAC;EAE7C,OAAO;IACLI,IAAI,EAAE;MACJC,OAAO,EAAE,MAAAA,CAAOC,OAAe,EAAEC,KAAa,KAAI;QAChD,MAAM;UAAEF;QAAO,CAAE,GAAG,MAAMH,YAAY,CAACM,OAAO,CAAC;UAAEF,OAAO,EAAEA,OAAO;UAAEC,KAAK,EAAEA;QAAK,CAAE,CAAC;QAClF,IAAAb,OAAA,CAAAe,MAAM,EAACJ,OAAO,CAAC;QACf,OAAOA,OAAO;MAChB,CAAC;MACDK,WAAW,EAAE,MAAOJ,OAAe,IAAI;QACrC,MAAM;UAAEK;QAAQ,CAAE,GAAG,MAAMT,YAAY,CAACU,WAAW,CACjDhB,OAAA,CAAAiB,uBAAuB,CAACC,WAAW,CAAC;UAAER,OAAO,EAAEA;QAAO,CAAE,CAAC,CAC1D;QACD,OAAOK,QAAQ;MACjB,CAAC;MACDI,WAAW,EAAE,MAAOC,aAA0B,IAAI;QAChD,MAAMC,QAAQ,GAAG,MAAMf,YAAY,CAACgB,WAAW,CAAC;UAC9CC,UAAU,EAAE,IAAAtB,aAAA,CAAAuB,gBAAgB,EAACJ,aAAa;SAC3C,CAAC;QACF,OAAOC,QAAQ;MACjB,CAAC;MACDI,QAAQ,EAAE,MAAOd,KAAa,IAAI;QAChC,MAAM;UAAEe;QAAM,CAAE,GAAG,MAAMpB,YAAY,CAACqB,QAAQ,CAAC;UAAEhB,KAAK,EAAEA;QAAK,CAAE,CAAC;QAChE,IAAAb,OAAA,CAAAe,MAAM,EAACa,MAAM,CAAC;QACd,OAAOA,MAAM;MACf,CAAC;MACDE,aAAa,EAAE,MAAOjB,KAAa,IAAI;QACrC,MAAM;UAAEkB;QAAQ,CAAE,GAAG,MAAMvB,YAAY,CAACwB,aAAa,CAAC;UAAEnB;QAAK,CAAE,CAAC;QAChE,IAAAb,OAAA,CAAAe,MAAM,EAACgB,QAAQ,CAAC;QAChB,OAAOA,QAAQ;MACjB,CAAC;MACDE,cAAc,EAAE,MAAAA,CAAA,KAAW;QACzB,MAAM;UAAEC;QAAS,CAAE,GAAG,MAAM1B,YAAY,CAAC2B,cAAc,CACrDjC,OAAA,CAAAkC,0BAA0B,CAAChB,WAAW,CAAC;UACrCK,UAAU,EAAEY,SAAS,CAAE;SACxB,CAAC,CACH;QACD,OAAOH,SAAS;MAClB;;GAEH;AACH;AA7CAI,OAAA,CAAAlC,kBAAA,GAAAA,kBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}